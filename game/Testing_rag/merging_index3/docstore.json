{"docstore/data": {"e1fc43c8-b5b7-4eb7-b896-fef63b0b152d": {"__data__": {"id_": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}, {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, {"node_id": "8b6e6fef-c16e-45b5-9065-29a29e35da32", "node_type": "1", "metadata": {}, "hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "class_name": "RelatedNodeInfo"}]}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "text": "This page is the first page of the book with an eye-catching image to catch peoples attention. The image contains the words \u201cToy.ai\u201d.\n\nThis page is the introduction page. It explains that the topics the book will be covering is \u201cModel Deployment\u201d and it has been written by \u201cAssociate Professor Dr. Sergio Hernandez Marin\u201d. Also shows how it is a topic that is being taught by the \u201cNational University of Singapore\u201d.\n\nThis page gives the reader a quick reminder of \u201cThe Data Science Lifecycle Process\u201d. To be clear the steps in order are, Business Understanding, Data Acquisition and Understanding, Deployment, and Modelling. Now we will go through this steps in more detail. The Data Science Lifecycle Process begins by first establishing a strong Business Understanding of the project. This can be done by engaging with Business Stakeholders. Then you move on to Data Acquisition and Understanding step. After this you move on to the Deployment step. Here insights become available to users, developers, or systems. Finally, you can move on to modelling step. In the modelling step, you can socialize results or first insights. At any point you can go back track or go to another step depending on your needs.\n\nThis page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case. Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation. Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.\n\nThe following explains the previous page: [This page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case. Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation. Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.] Now on the current page we go through the architecture with the example of a Recommender System. In this case offline data is user interactions (clickstream data, purchase history), user profiles (demographic data, behavioural data), item data and more. In the \u201cData Extraction and Analysis\u201d stage we can use APIs, web scrapping and Databases (DBs) to integrate relevant data. We can also conduct Explanatory Data Analysis and Data Segmentation. During Model Development, under data preparation we can first conduct feature engineering (eg: Number of interactions, item similarity, Click Through Rate (CTR)) and then we can split our data into Train, Validation, and Test. Under Model Training we can use collaborative filtering, content-based filtering as models, where we use mean square error (MSE), cross-entropy, Bayesian Personalized Ranking as Loss Functions. Finally, can use regularization to deal with over-fitting. Under Model Evaluation and Validation can use Evaluation Metrics such as Mean Average Precision (MAP), precision, recall, etc. Use cross-validation to better evaluate the models and finally can also incorporate user feedback for a human perspective.\n\nThe following explains a page from a few pages ago: [This page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case. Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation. Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.]. Now this current page discusses why the architecture discussed on that page won\u2019t be feasible in a Business Setting. The following reasons are given: 1) Testing and Deployment Process: Manual, script-driven, and interactive process where every step is manual. Data scientists execute each step, including data analysis, data preparation, model training, and validation. 2) Disconnection Between ML and Operations: Data scientists create the model, and engineers handle deployment. Trained models are handed over to engineers for deployment as a prediction service. 3) Infrequent Release Iterations: Assumes infrequent model changes, with new model versions deployed only a couple of times per year. 4) No Continuous Integration (CI): CI is not considered, as the process assumes few implementation changes. Testing is typically part of notebooks or script execution. 5) No Continuous Deployment (CD): CD is not considered, as frequent model version deployments are not part of the process. 6) Deployment Focus: The process is concerned only with deploying the trained model as a prediction service (e.g., a REST API microservice). 7) Lack of Active Performance Monitoring: The process does not track or log model predictions and actions, which are essential for detecting model performance degradation and other behavioral drifts.\n\nThis page discusses an example of a Architecture of a Recommender System from a Cloud Provider (Alibaba Cloud). This is to show how a more practical example of a Data Science Architecture that can be use in real life. In the realm of recommender systems, understanding the underlying architecture is pivotal. The following figure shows the underlying basic data layer.", "start_char_idx": 0, "end_char_idx": 10442, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "faffad4d-166c-4d95-869c-dd34dfaacc44": {"__data__": {"id_": "faffad4d-166c-4d95-869c-dd34dfaacc44", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}, {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, {"node_id": "a2088a27-5fe6-416f-9e99-830391aa20e6", "node_type": "1", "metadata": {}, "hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "class_name": "RelatedNodeInfo"}]}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "text": "The following figure shows the underlying basic data layer. This layer contains user profile data, item data, behavior data, and comment data. The user profile data may be users' heights and weights, items they purchased, their purchase preferences, or their education background. The item data is the prices, colors, and origins of items. If the item is a video, the item data is the information of the video such as the video content and tags. The behavior data refers to the interaction between users and items. For example, when a user watches a video, the user may add a like to the video, add the video to favorites, or pay for the video. These actions are all the user's behavior data. The comment data may involve third-party data and may not be available for every item on every platform. However, the user data, the item data, and the behavior data are essential. With the three types of data ready, we can move on to the data processing and storage layer. In this layer, we can perform data processing, using feature engineering to identify user features, material features, and event features. Going forward is modeling based on these features. The entire recommendation process contains two important modules: matching and ranking. Multiple algorithms can run in parallel in the matching module, which is why this matching module is called the Multi-Channel Matching Module. Some possible matching algorithms include: Collaborative Filtering, ALS Matrix Factorization, Vector Matching and Sample Generation. Matching is followed by ranking. Many ranking algorithms are also available. These include PS-SMART, PS-LR, DeepFM, Sample Generation and more. The details of the matching and ranking algorithms are not in scope of topic. Next, you need to develop a new strategy. You must filter and deduplicate the recommendation results, perform A/B tests on the results, and try the operational strategies before you push the recommendations online. The top layer is the recommendation service, which can recommend an advertisement, a product, or a user. For example, a social networking app can recommend users to let them follow each other. When you have such a recommendation architecture, some cloud services will be needed to make the architecture meet the four basic requirements on an enterprise-level recommender system. The most common practice is to build these modules based on cloud services and cloud ecosystems.\n\nThe following explains the previous page: [This page discusses an example of a Architecture of a Recommender System from a Cloud Provider (Alibaba Cloud). This is to show how a more practical example of a Data Science Architecture that can be use in real life. In the realm of recommender systems, understanding the underlying architecture is pivotal. The following figure shows the underlying basic data layer. This layer contains user profile data, item data, behavior data, and comment data. The user profile data may be users' heights and weights, items they purchased, their purchase preferences, or their education background. The item data is the prices, colors, and origins of items. If the item is a video, the item data is the information of the video such as the video content and tags. The behavior data refers to the interaction between users and items. For example, when a user watches a video, the user may add a like to the video, add the video to favorites, or pay for the video. These actions are all the user's behavior data. The comment data may involve third-party data and may not be available for every item on every platform. However, the user data, the item data, and the behavior data are essential. With the three types of data ready, we can move on to the data processing and storage layer. In this layer, we can perform data processing, using feature engineering to identify user features, material features, and event features. Going forward is modeling based on these features. The entire recommendation process contains two important modules: matching and ranking. Multiple algorithms can run in parallel in the matching module, which is why this matching module is called the Multi-Channel Matching Module. Some possible matching algorithms include: Collaborative Filtering, ALS Matrix Factorization, Vector Matching and Sample Generation. Matching is followed by ranking. Many ranking algorithms are also available. These include PS-SMART, PS-LR, DeepFM, Sample Generation and more. The details of the matching and ranking algorithms are not in scope of topic. Next, you need to develop a new strategy. You must filter and deduplicate the recommendation results, perform A/B tests on the results, and try the operational strategies before you push the recommendations online. The top layer is the recommendation service, which can recommend an advertisement, a product, or a user. For example, a social networking app can recommend users to let them follow each other. When you have such a recommendation architecture, some cloud services will be needed to make the architecture meet the four basic requirements on an enterprise-level recommender system. The most common practice is to build these modules based on cloud services and cloud ecosystems.] Now the current page looks at the actual implementation of these ideas. We can store underlying basic data (user data, item data, comment data) in a database such as RDS MySQL or DRDS. To process some online behaviour data in real time, such as some clicks or follows, we can use Apache Kafka. At the data processing and storage level, can use Flink Real-Time computing to process data and generate real-time behaviour data. Can use Max Compute for feature engineering processes. The model training layer can be implemented using matching and ranking algorithms from Alibaba\u2019s Platform for AI (PAI). In such implementations it may make sense to adopt a cloud-native solution for the top-layer application to ensure resource and service elasticity. In the final phase where the recommendation system actually starts recommending to users, you can perform matching and then deduplicate the matching results to generate the final sample for ranking. Then the ranking results are fed back to the user.\n\nThe following page discusses the topic of Memento Deployment, where developed models and solutions are put into practical use to derive value from data. This is discussed via the following things that are done for deployment. Model Integration: Integrate ML models into the target system, Scalability & Optimize: Ensure models can handle real-world loads, Monitor & Maintain: Continuously assess and maintain model performance, A/B Testing: Compare model performance through A/B tests, User Interface & Integrate: Integrate solutions with user interfaces, Security & Compliance: Ensure data security and regulatory compliance, Documentation: Provide comprehensive system documentation, User Training & Support: Train users and offer support for effective use, Feedback Loop: Establish a user feedback mechanism, Scale & Allocate: Monitor and scale resources as needed, Business Impact: Continuously assess the solution's impact on goals, Model Re-Training: Plan for periodic model updates.\n\nThis page discusses Model Serving Patterns. Essentially the page looks into Machine Learning (ML) Architecture Patterns for ML Model Operationalization. This is done via the use of a graph which shows that, if the Model Prediction is to be done on demand and the model learning is to be done offline then one should use Microservices and REST API. If the Model Prediction is to be done on demand and the model learning is to be done online then one should use Real-time streaming analysis and Online Learning. If the Model Prediction is to be done in Batches and the model learning is to be done online then one should use Automated ML. If the Model Prediction is to be done in Batches and the model learning is to be done offline then one should use Forecast and Batch Prediction. One thing to note is that services that need to be predicted on demand need to use Real-Time data whereas models that can be predicted in batches can use historical data. Finally, Models that can learn/trained offline are Static Learning whereas models that are to be trained online are said to be dynamic learning.\n\nThe following page discusses the topic of Machine Learning (ML) Model Serialization formats. This basically discusses how to create a format that can be distributed, the ML model must be both accessible and capable of running autonomously. There are two main formats that the page discusses, Language-Agnostic Exchange Formats and Vendor-Specific Exchange Formats. Language-Agnostic Exchange Formats: Amalgamation: Bundles model and code into one package for simple ML algorithms, PMML (Predictive Model Markup Language): Describes models in XML, but not all ML algorithms are supported, limited open-source usage due to licensing, PFA (Portable Format for Analytics): JSON format for executable scoring engines, needs a PFA-enabled environment and ONNX (Open Neural Network eXchange): Framework-independent format supported by tech giants, enables compatibility among various ML tools. Vendor-Specific Exchange Formats: Scikit-Learn: Saves models as pickled Python objects (.pkl), H2O: Converts models to POJO or MOJO, SparkML: Uses MLeap with runtime support for Spark, Scikit-learn, and Tensorflow, TensorFlow: Models saved as .pb (protocol buffer) files, PyTorch: Uses proprietary Torch Script as .pt files for C++, Keras: Saves models as .h5 files in HDF format and Apple Core ML: Proprietary .mlmodel format for iOS apps, requires conversion for models from other frameworks.\n\nThe following page discusses the topic of Machine Learning Model Serving Taxonomy, essentially meaning the ways to integrate the ML model in a software system. There are a few different ways to integrate ML models that we will be looking at: Model-as-Dependency, Model-as-Service, Hybrid Model Serving, Precompute and Model On Demand.", "start_char_idx": 10383, "end_char_idx": 20411, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4": {"__data__": {"id_": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}, {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, {"node_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "node_type": "1", "metadata": {}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "class_name": "RelatedNodeInfo"}, {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}]}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "text": "In the case of model-as-dependency, the model service and versioning are together with the consuming application In this case, user has the model and can input directly and get predictions directly. Thus, the build & runtime are immediately available to user. In the case of Model-as-Service, service & versioning is independent from the consuming application. The compile and runtime are available through the use of REST API. Therefore, as the name suggests when users web app gets an input they need to feed to model, they send the input to the model via REST API and get the prediction back via said API. In this case, the web interacts with a web app that sends inputs to the model which then sends the predictions back to the web app. Hybrid Model Serving also known as Federated Learning is the combination of the two former methods. Finally, for model on demand or precompute, service & versioning is also independent from the consuming application. In this case however, the model is only available at the runtime scope.\n\nThe following page discusses Machine Learning (ML) Deployment Strategies. The strategies discussed vary based on infrastructure. We can either deploy our ML Model to Cloud instances or we can deploy our ML Model as a serverless function. Let us first discuss deployment of our ML Model to Cloud Instances. In this scenario, containerization is the usual way to deliver models, in which case Docker is the popular technology to use. It does not matter whether you are using it on-premises, the cloud, or a mix of the two. The containers can be managed using either Kubernetes or AWS Fargate. ML model functions are made available through a REST API, often made using Flask. Now let us discuss the deployment of ML Model as serverless functions. Cloud vendors provide ML platforms for deploying model (example: AWS Sagemaker, Google Cloud AI Platform, Azure ML Studio, and IDM Watson ML). Commercial cloud services like AWS Lambda and Google App Engine containerize ML models. Deploying a model as a serverless function means putting code and dependencies into .zip files with a single-entry point. Then Azure Functions, AWS Lambda, and Google Cloud Functions manage these functions. The decision of which infrastructure to choose depends on cost, privacy of models and data and various other needs.\n\nThe following page discusses the importance of Optimizing ML Deployments with Machine Learning Operations (ML Ops). The page discusses how to establish best practices and tools to test, deploy, manage, and monitor ML models in real-world production. Only a small fraction of a real-world ML system is composed of the ML code. Technical Debt is real, there are shortcuts, suboptimal practices, or decisions made during the development and deployment of ML systems that can lead to long-term consequences, inefficiencies, and challenges. Here are a few reasons why it is ML Ops is important: [ML Ops is vital for adapting to changing factors in ML applications], [It speeds up model deployment, reducing wait times and delivering value], [ML systems face technical and compliance risks linked to data, code, and processes], [Lack of infrastructure, monitoring, or compliance can harm systems and reputation], [ML Ops enhances long-term performance and efficiency via automation], [ML Ops blends ModelOps, DataOps, and DevOps principles for stability and efficiency] and [DevOps manages software apps, while ML Ops excels in ML model and data management for peak performance].\n\nThe following page discusses the Distinctions Between Deployment in the Data Science Lifecycle Process and Machine Learning Operations (MLOPs). The page compares the two in a table format. Each row compares Deployment in the Data Science Lifecycle Process vs. Deployment in MLOps. First row: [Timing of Deployment: Data Science Lifecycle: Occurs in the later stages of the project, post-model development and evaluation. MLOps: Spans the entire lifecycle of an ML model, from initial development to continuous maintenance in production.]. Second row: [Focus of Deployment: Data Science Lifecycle: Focuses on transitioning a validated ML model from a research/development environment to production. MLOps: Emphasizes ongoing operationalization and management of ML models in production, ensuring reliability and scalability.]. Third row: [Tasks Involved: Data Science Lifecycle: Involves packaging the model, creating APIs, integration with data sources, and making it available for use. MLOps: Encompasses initial deployment, continuous monitoring, automated retraining, version control, integration with CI/CD pipelines, and addressing data or concept drift.] Fourth row: [Primary Goal: Data Science Lifecycle: Aims at making the model accessible for predictions or analysis in the production environment. MLOps: Focuses on ensuring effective and reliable functioning of the ML model in the real world, heavily relying on automation, monitoring, and maintenance.]. Fifth row: [Emphasis on Monitoring: Data Science Lifecycle: Limited to model evaluation and performance assessment before deployment. MLOps: Entails continuous monitoring throughout the model's operational life, tracking issues like data drift, concept drift, and model performance degradation.]. Sixth Row: [Performance Assessment: Data Science Lifecycle: Focuses on model evaluation metrics (accuracy, precision, recall, etc.) to determine if the model meets success criteria. MLOps: Extends beyond traditional metrics to include real-time monitoring of data quality, model latency, false positives/negatives, and alignment with business objectives.].\n\nThe following page discusses the stages in Model Development and Deployment to ensure a systematic and controlled process for creating, testing, and deploying Machine Learning (ML) models. This is shown in a table format. [Stage 1] Experimentation. Purpose: Model development, algorithm exploration, hyperparameter tuning. Scope: Research and model development environment. Environment: Controlled research environment. [Stage 2] Test. Purpose: Verify model functionality and performance pre-production. Scope: Testing for issues and bugs isolated from production. Environment: Isolated testing environment. [Stage 3] Staging. Purpose: Test final version in an environment resembling production. Scope: Ensuring model works in a similar setup. Environment: Environment closely mirroring production. [Stage 4] Pre-Production. Purpose: Limited-scale testing before full-scale production release. Scope: Identify potential issues with a limited audience. Environment: Closer to production but with restrictions. [Stage 5] Production. Purpose: Live environment where the model actively serves its purpose. Scope: Operational phase delivering value to users. Environment: Real-world, live production environment.\n\nThe following page discusses how MLOps Offers a Process with a Series of Iterative and Incremental Steps to Develop, Deploy, and Manage ML Models Effectively. It covers two different topics, Iterative-Incremental Development and Maturity of Automation: CI/CD Level of Automation. Iterative-Incremental Development has three broad phases, Design, Model Development and Operations. Design looks at requirements engineering, ML-use cases prioritization and Data availability check. Model Development looks at Data Engineering, ML Model Engineering and Model Testing & Validation.  Operations looks at ML Model Deployment, CI/CD Pipelines and Monitoring & Triggering. Maturity of Automation: CI/CD Level of Automation is described using a really detailed diagram. For a rapid and reliable update of the pipelines in production, you need a robust automated CI/CD system. This automated CI/CD system lets your data scientists rapidly explore new ideas around feature engineering, model architecture, and hyperparameters. They can implement these ideas and automatically build, test, and deploy the new pipeline components to the target environment. The following diagram shows the implementation of the ML pipeline using CI/CD, which has the characteristics of the automated ML pipelines setup plus the automated CI/CD routines. This MLOps setup includes the following components: Source control, Test and build services, Deployment services, Model registry, Feature store, ML metadata store & ML pipeline orchestrator.\n\n\n\nThe following page discusses The Complete Machine Learning (ML) Development Pipeline. This pipeline includes three levels where changes can occur: Data, ML Model, and Code. This means that in ML-based systems, the trigger for a build might be the combination of a code change, data change or model change. We will no go through ML Operations (MLOPs) Principles and see where how Data, ML Model, or Code can cause a change. Principle 1: Versioning, which is the tracking of ML models and data sets with version control systems. Data: Encompasses Data preparation pipelines, Features store, Datasets, and Metadata. ML Model: Includes ML model training pipeline, ML model (object), Hyperparameters, and Experiment tracking. Code: Encompasses Application code and Configurations. Principle 2: Testing, which is ensuring the quality, reliability, and robustness of ML models and the systems built around them. Data: Covers Data Validation for error detection and Feature creation unit testing. ML Model: Involves Unit testing for model specification, Integration testing for the ML model pipeline, Model validation before operationalization, ML model staleness testing in production, Testing model relevance and correctness, and testing non-functional requirements like security, fairness, and interpretability. Code: Encompasses Unit testing and Integration testing for the end-to-end pipeline. Principle 3: Automation, how to automate the complete ML-workflow steps. Data: Includes Data transformation, Feature creation and manipulation. ML Model: Comprises Data engineering pipeline, ML model training pipeline, and Hyperparameter/Parameter selection. Code: Involves ML model deployment with CI/CD and Application build.", "start_char_idx": 20412, "end_char_idx": 30482, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "351fd49c-870e-439b-83e0-89bad897f1a1": {"__data__": {"id_": "351fd49c-870e-439b-83e0-89bad897f1a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}, {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, {"node_id": "cd6114a1-4263-4f9d-a493-6307f278e827", "node_type": "1", "metadata": {}, "hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "class_name": "RelatedNodeInfo"}]}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "text": "Code: Involves ML model deployment with CI/CD and Application build. Principle 4: Reproducibility, how every phase produces identical results given the same input. Data: Incorporates Backup data, Data versioning, Extract metadata, and Versioning of feature engineering. ML Model: Encompasses identical Hyperparameter tuning between dev and prod, Maintaining the same feature order, ensuring consistency in ensemble learning of ML models, and Documenting model pseudo-code. Code: Involves matching versions of dependencies in dev and prod, Consistent technical stack across dev and production environments, and providing reproducible results via container images or virtual machines. Principle 5: Deployment, transitioning from development/testing to production. Data: Involves using Feature store in both dev and prod environments. ML Model: Encompasses Containerization of the ML stack, REST API implementation, and Deployment on-premise, cloud, or edge environments. Code: Involves deployment strategies for on-premise, cloud, or edge settings. Principle 6: Monitoring, assuring everything performs as expected. Data: Includes tracking changes in Data distribution between training and serving data, and Monitoring disparities in training vs. serving features. ML Model: Covers ML model decay, Numerical stability, and Computational performance. Code: Encompasses assessing the predictive quality of the application on serving data.\n\nThe following page discusses how Machine Learning (ML) Requires Extensive Testing. The behaviour of ML-based systems is challenging to predefine, as it relies on dynamic data characteristics and a multitude of model configuration choices. In general, when we have our code we first let it undergo ML Infrastructure Tests and Unit Tests. Then for our data, we conduct data tests and skew tests. After that we can proceed to model training where we conduct model tests and integration tests. Finally, when our system is running, we continue to run integration tests, and skew tests on our data. At the same time, we monitor the data, prediction and system. The following points are necessary to take note when it comes to testing ML models. Feature and Data Tests: Validate data and feature schema/domain, Measure feature importance and Ensure policy compliance (e.g., GDPR). Reliable Model Development: Correlate ML loss metrics with business impact, Test model staleness and retraining frequency, Compare ML model performance to baselines, use separate test sets for final evaluation, Address fairness, bias, and inclusion issues and implement conventional unit testing. ML Infrastructure Tests: ensure reproducibility in training, minimise non-determinism in training, test ML API usage and stress, check algorithmic correctness, integrate, and validate the full ML pipeline,  validate the model before serving and ensure consistency between training and serving environments.\n\nThe following page discusses the topic of Biased data using a scenario. Topic: Suspicious Loans and Biased Data in Loan Approvals. Scenario Description: In the realm of loan approvals, a concerning trend emerges where applicants from specific neighbourhoods consistently face rejection. This repetitive denial of loans is rooted in historical data riddled with biases against these very neighbourhoods. Issue: The loan approval model, guided by historical loan data, displays a clear prejudice against certain localities. The biases ingrained in this dataset unfairly disadvantage applicants from these neighbourhoods, leading to systematic and unjust loan denials. Impact: The consequence of such biased data is the perpetuation of financial disparities. It not only hampers the prospects of deserving individuals seeking financial assistance but also deepens the existing societal divides by withholding opportunities based on geographic factors rather than the individual's creditworthiness. Challenges: Addressing this issue demands a nuanced approach. Simply relying on historical data without considering and rectifying the inherent biases can reinforce and perpetuate discriminatory practices. Resolution: Efforts should focus on recalibrating the loan approval model to mitigate biases and ensure fair assessment criteria. Incorporating robust measures to counteract historical biases in the dataset is crucial to promote equitable lending practices. Implementing algorithms that actively identify and mitigate biases could significantly contribute to a more just and inclusive loan approval system.\n\nThe following page discusses the topic of Imbalanced data using a scenario. Topic: Challenges of Rare Disease Detection with Imbalanced Data. Scenario Overview: In the realm of healthcare, a predicament arises concerning a model designed for detecting a rare disease. Despite boasting an impressive accuracy score, this model encounters significant difficulty in identifying instances of the rare disease within a population where only a mere 1 percentage of individuals are affected. Identified Issue: The primary hurdle stems from the nature of the dataset, there is an imbalance in the representation of the rare disease. With such a minuscule percentage of the population affected by the condition, the model, while demonstrating high accuracy, struggles to effectively identify and classify instances of this rare ailment. Challenges Posed by Imbalanced Data: The imbalanced dataset poses a substantial challenge to the model's learning process. Its overwhelming focus on the majority class, representing the disease-free population, hampers its ability to grasp the intricate patterns and nuances associated with the rare disease. As a result, despite its overall high accuracy, the model fails to accurately pinpoint and classify instances of this critical condition. Impact and Implications: The repercussions of this limitation are significant. Failure to effectively detect the rare disease translates to delayed diagnosis and treatment for those afflicted. In turn, this can have severe consequences on their health outcomes, potentially leading to exacerbated health conditions or even mortality due to delayed intervention. Resolving the Imbalance: Addressing this challenge requires strategic intervention. Techniques such as oversampling the minority class, synthetic data generation, or leveraging specialized algorithms designed to handle imbalanced datasets could potentially recalibrate the model's learning process. By providing a more balanced representation of the rare disease within the dataset, the model can be trained to better recognize and accurately classify instances of this critical condition.\n\nThe following page discusses the topic of Data Drift using a scenario. Topic: Addressing Traffic Jams Caused by Data Drift in Traffic Light Optimization. Scenario Description: Within a city's intricate traffic management system, an ML model was meticulously trained to streamline traffic flow by optimizing the timings of traffic lights. Initially, this model operated seamlessly, efficiently navigating vehicular movement. However, an unexpected turn of events has occurred as traffic jams have started to emerge, contradicting the model's intended purpose. Identified Issue: The root cause behind this unforeseen disruption lies in what's known as 'data drift'. Over time, the environmental factors, traffic patterns, and behavioural dynamics of drivers have subtly shifted. These changes, unaccounted for in the model's initial training data, have led to a disparity between the model's predictions and the evolving real-time traffic conditions. Data Drift and Its Implications: Data drift, the gradual deviation of new data from the original training data, poses a significant challenge. The model, designed to optimize traffic flow based on historical patterns, struggles to adapt to the evolving traffic dynamics. Consequently, its recommendations for traffic light timings no longer align with the current traffic scenarios, inadvertently causing congestion and gridlocks instead of alleviating them. Impact and Mitigation: The ramifications of this mismatch between model predictions and actual traffic conditions are evident in the increasing traffic congestion, resulting in delays, frustration among commuters, and economic implications due to lost productivity. Resolving this issue necessitates recalibrating the model by incorporating mechanisms to detect and adapt to data drift. Techniques involving continuous model retraining using updated datasets reflecting current traffic dynamics or implementing adaptive learning algorithms capable of adjusting to evolving patterns in real-time could aid in restoring the model's effectiveness.\n\nThe following page discusses the topic of Lack of generalization using a scenario. Topic: Addressing Breed Misclassification in Dog Image Classification Models. Scenario Overview: Within the domain of image classification, a model trained specifically on dog images encounters persistent misclassification issues, particularly with certain breeds of dogs. This puzzling discrepancy raises the question: why are these misclassifications occurring? Identified Issue: The primary culprit behind these recurrent misclassifications lies in the model's limited generalization capabilities. While proficient in recognizing and categorizing several dog breeds accurately, its failure to generalize across all breeds leads to misclassifications for certain specific breeds. Lack of Generalization and its Ramifications: The model's inability to generalize effectively across diverse features and characteristics present in various dog breeds significantly impacts its accuracy. Traits unique to specific breeds, such as subtle variations in fur texture, facial structures, or colour patterns, pose challenges for the model's generalized learning, resulting in misclassifications. Implications and Addressing the Shortcoming: The implications of this limitation are apparent in the mislabelling of dog breeds, potentially causing confusion in applications relying on accurate breed identification, such as veterinary diagnostics or pet-related services. Addressing this issue warrants augmenting the model's training data with a more comprehensive and diverse set of images encompassing a wider spectrum of dog breeds. Additionally, implementing techniques to enhance the model's generalization abilities, such as transfer learning from pre-trained models or incorporating regularization methods to reduce overfitting to specific breed features, could significantly improve its breed classification accuracy.\n\nThis page just says the word bonus and then shows a set of images. The first group of images show images that can be mistaken to be either dogs or donuts. The second group of images show images that can be mistaken to be either mop or dogs. The final group of images show images that can be mistaken to be either chicken wings or dogs.\n\nThe following page discusses the topic of concept drift using a scenario. Topic: Addressing Concept Drift Impacting E-commerce Recommendation Systems.", "start_char_idx": 30414, "end_char_idx": 41507, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e38d77c-a8fa-4b45-938f-e480b94d213c": {"__data__": {"id_": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}, {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, {"node_id": "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25", "node_type": "1", "metadata": {}, "hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "class_name": "RelatedNodeInfo"}]}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "text": "Topic: Addressing Concept Drift Impacting E-commerce Recommendation Systems. Scenario Overview: Within the realm of e-commerce, a once-efficient recommendation system on a website tailored to suggest products to users is experiencing a sudden decline in performance. What used to be an excellent tool for suggesting relevant items to users has recently started recommending unrelated products, coinciding with a noticeable drop in sales. Identified Issue: The underlying challenge behind this unexpected shift in recommendation quality lies in what's termed 'concept drift'. The system, originally trained to comprehend user preferences and suggest relevant products, accordingly, is now grappling with changes in user behaviour or preferences that were not accounted for in its initial training data. Concept Drift and its Impact: The manifestation of concept drift presents a significant obstacle for the recommendation system. Shifts in user preferences, evolving trends, or changes in purchasing behaviour over time have led to a divergence between the system's understanding of user preferences and the current preferences of the user base. Consequently, the system's recommendations are no longer aligned with users' actual interests, resulting in a decline in sales. Implications and Mitigation Strategies: The implications of concept drift are evident in the decreased sales figures, indicating a mismatch between the system's recommendations and user preferences. Mitigating this issue requires strategies focused on adapting the recommendation system to changing user preferences. Incorporating real-time feedback mechanisms to capture and adapt to evolving user preferences, leveraging dynamic learning algorithms capable of adjusting to shifting trends, or periodically retraining the model with updated data reflecting current user behaviours could help mitigate the impact of concept drift and restore the system's efficacy in suggesting relevant products to users.\n\nThe following page discusses the topic of Insufficient training using a scenario. Topic: Addressing Misclassification of Rare Endangered Species in Wildlife Conservation Models. Scenario Overview: In the domain of wildlife conservation, a dedicated organization employs a machine learning model to classify endangered animal species captured in camera trap images. However, the model consistently grapples with misclassifying rare and endangered species, prompting the question: what is causing these recurring misclassifications? Identified Issue: The prevailing issue leading to the misclassification of rare species stems from insufficient training data. While the model has been trained to identify and categorize various animal species, the limited representation or scarcity of data related to rare and endangered species hinders the model's ability to accurately recognize and classify these specific animals. Insufficient Training Data and its Impact: The dearth of comprehensive training data pertaining to rare species significantly impacts the model's learning process. Unique characteristics, nuanced features, or infrequent sightings of these rare species are inadequately represented in the training dataset. Consequently, the model lacks the requisite exposure to adequately discern and categorize these rare animals, leading to misclassifications. Implications and Strategies for Improvement: The implications of this challenge are profound within the realm of wildlife conservation. Misclassifying rare and endangered species could result in a lack of accurate population assessments, potentially impacting conservation efforts and endangerment status assessments. To address this limitation, augmenting the training dataset with a more extensive and diverse collection of images featuring rare species is crucial. Additionally, employing techniques like transfer learning from related species or implementing specialized algorithms focusing on feature extraction from limited data could aid in enhancing the model's ability to accurately classify and identify these endangered animals within camera trap images.\n\nThe following page discusses the topic of Overfitting using a scenario. Topic: Addressing the Issue of Overfitting in Essay Grading Models. Scenario Overview: In the realm of educational technology, an essay grading model designed to evaluate student essays encounters an unexpected hurdle. The model consistently assigns high scores to essays employing sophisticated vocabulary, yet lacking coherence and logical structure, prompting an investigation into the model's failure. Identified Issue: The primary issue leading to this discrepancy lies in the phenomenon known as 'overfitting'. The model, while adept at recognizing complex vocabulary and language intricacies, has become excessively focused on these superficial aspects without effectively gauging the coherence and substance of the essay's content. Overfitting and its Ramifications: Overfitting, where the model excessively tailors its predictions to the training data, has led to a skewed emphasis on superficial elements such as sophisticated vocabulary. Consequently, the model erroneously equates the usage of advanced language with essay quality, disregarding the fundamental aspects of coherence, logical flow, and relevance of content. Implications and Strategies for Improvement: The implications of this limitation are evident in the inflated scores given to essays lacking substantive content, potentially misleading educators about students' actual writing proficiency. Addressing overfitting necessitates recalibrating the model's learning process. Strategies such as diversifying the training dataset to encompass a broader range of well-structured essays, implementing regularization techniques to prevent the model from overly focusing on specific language nuances, or introducing features that assess coherence and logical progression within essays could significantly mitigate the impact of overfitting and enhance the model's ability to evaluate essays holistically.\n\nThe following page discusses a scenario. Title: Calling out Sick. In 2008, Google attempted to use search data to predict the flu, which could provide early insights into flu prevalence. Google Flu Trends (GFT) claimed success but failed spectacularly during the 2013 flu season, missing by 140 percent. This was due Big Data hubris. The failure of GFT was due to opaque methods, vulnerability to overfitting, and not accounting for changes in search behaviour. The following are some of the mistakes. Noise Sensitivity: GFT's algorithm was sensitive to unrelated or noisy search terms. Failure to Filter Seasonal Terms: It didn't effectively filter out terms correlated due to seasonal trends. Inadaptability to Search Behaviour Changes: GFT didn't adjust to changes in search behaviour. Limited incorporation of ground truth data.\n\nThe following page just says the following: Few Days Ago, A Scottish Football Club ICFTC Announced Something New.\n\nThe following page discusses the topic of Feature Engineering Issues using a scenario. Scenario: An intriguing puzzle plagues a popular music recommendation ap. It often suggests tunes completely unrelated to a user's musical preferences. The baffling question looms: What lies at the root of this curious mismatch? Feature Engineering Issues: The heart of this discordance likely dwells within the intricacies of feature engineering. The algorithms powering the app might be stumbling upon a hurdle in accurately capturing the nuanced facets of a user's musical taste. It's conceivable that the extraction and representation of user preferences, perhaps in the form of latent features, fail to encapsulate the holistic essence of individual music inclinations. The app's algorithmic prowess could be inadvertently misled by inherent limitations in its ability to decipher the intricacies of user preferences. Unravelling this conundrum demands a deeper exploration into the structural aspects of feature engineering, potentially necessitating a recalibration of the algorithms to better encapsulate the diverse and evolving nature of musical tastes.\n\nThe following page shows a lemon decaying. This is to preface the next page that discusses Model Decay.\n\nThe following page discusses the topic of model decay. Title: Model Decay: The Inevitable Instability in ML in Production. This is a phenomenon where a ML model's performance degrades over time in a production environment. The following are the primary causes for this. Concept Drift: Changing data properties make model assumptions outdated. Data Staleness: Outdated training data mismatches current data distribution. Data Quality Issues: Deteriorating data quality or errors affect model performance. Environmental Changes: Changes in the production environment impact model behaviour. Overfitting: Overoptimization for training data hinders generalization. Sample Bias: Non-representative training data affects model performance. Algorithm Drift: Outdated techniques lead to performance loss over time. Class Imbalance: Dominant classes bias the model, affecting minority classes. Regulatory Changes: Laws and privacy policies impact data collection and usage. Data Shifts: Unforeseen data distribution changes affect predictions. Conclusion: Understanding the intricate web of factors contributing to Model Decay is paramount in crafting resilient ML systems. Addressing these causes requires a holistic approach encompassing adaptive algorithms, continual training with updated data, and a vigilant eye on evolving environmental and regulatory landscapes.\n\nThe following page discusses a case study: Dynamic Healthcare Demands Continuous Machine Learning (ML) Monitoring to Maintain Model Effectiveness. Focus: Predicting 30-day hospital readmissions \u2014 a critical problem in the U.S. healthcare landscape, driven by Medicare's Hospital Readmissions Reduction Program. Static Clinical Guidelines: Prevalent Stability: Clinical guidelines remain remarkably stable, Recommendations: Common practice is to review guidelines every two to three years, and Hospital Use: Hospitals often rely on older guidelines (e.g., LACE and HOSPITAL scores) for readmission predictions. Challenges for ML Models: Project Context: Developing predictive readmission models for hospitals, Model Degradation: Trained, optimized, and deployed models start degrading within two to three months, and Variation: Models change differently at various hospitals or even within hospital buildings. Consequences: Rapid Decline: Within three months of deploying new ML software, customer dissatisfaction arises due to declining prediction accuracy, and Scalability Challenge: Expanding to more hospitals exacerbates the problem. Root Causes: Real-World Interactions: ML models interact with real-world healthcare data, Impact of Data Changes: Changes in electronic health records, lab tests, and insurance types affect data fields and distributions, leading to prediction accuracy degradation, and Unnoticed Changes: These changes aren't traditional software updates or interface modifications, and often no one notifies the ML team.", "start_char_idx": 41431, "end_char_idx": 52604, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38f22fb1-4b4f-4961-808c-1caeba430163": {"__data__": {"id_": "38f22fb1-4b4f-4961-808c-1caeba430163", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}, {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, {"node_id": "979d8852-deef-4e32-b16e-e3edfd902ebf", "node_type": "1", "metadata": {}, "hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "class_name": "RelatedNodeInfo"}]}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "text": "Conclusion: The narrative of ML model decay within the healthcare sphere underscores the imperative need for vigilant monitoring, adaptive strategies, and a nuanced understanding of the intricate interactions between models and the ever-evolving healthcare landscape.\n\n\n\n\n\nThe following page discusses how Models Drifting Away from their Original Mission. The categories it discusses are sudden drifts, gradual drift, incremental drift, and reoccurring concepts. Sudden drift: A new concept occurs within a  short time. For example, In a financial fraud detection model, a sudden drift might occur when a new type of fraudulent transaction emerges that the model has never encountered before. Gradual drift: a new concept gradually replaces and old one over a period of time. For example, in a weather forecasting model, gradual drift can happen when climate patterns change slowly over time. Incremental drift: an old concept incrementally changes to a new concept over a period of time. For example, In a stock price prediction model, incremental drift might occur as new data arrives daily. Reoccurring concepts: an old concept may reoccur after some time. For example, In social media, recurring concepts can emerge with the changing interests of users.\n\nThe following page discusses Model Monitoring.  Title: Enters Model Monitoring. The idea is to continuously track the performance of Machine Learning (ML) models in a production environment to detect any potential issues that could have adverse business implications. This involves system health monitoring and model\u2019s performance monitoring. In system health monitoring, we monitor the following metrics specific to service requests: latency, throughput, error rates, etc. Also look at infrastructure utilization: CPU / GOU utilization, memory. For the model\u2019s performance monitoring, the behaviour of ML systems is determined not only by predefined rules in the code but also by the learned model behaviour derived from data. Look at shifts in data distribution, training-serving skew, data quality problems, environmental changes, or shifts in consumer behaviour.\n\nThe following page discusses how in a Machine Learning (ML) System, we need to account for two extra components: data dependencies and the model itself. The page uses the example of the pandemic and how people\u2019s weird behaviour during the pandemic messed with AI model. Therefore, the page explains how to monitor the model the following things should be tracked: Data Drift, Broken Pipelines, Schema Change, Data Outage, Underperformance Segments, Model Bias, Concept Drift and Model Accuracy.\n\nThe following page discusses the benefits of monitoring systems. The benefits can be categorized into Operational Excellence, Reliability, and Governance. Operational Excellence can be broken down into Early Issue Detection, Cost Savings, and Quick Alerts. Early Issue Detection: [Identify problems with ML models and data early in their operation, allowing for timely intervention and issue resolution. This prevents disruptions and downtime.]. Cost Savings: [Monitoring resource usage and model performance helps allocate resources efficiently, cutting operational costs in model deployment]. Quick Alerts: [Notify relevant stakeholders when issues or anomalies occur, enabling swift responses and problem resolution]. Reliability can be broken down into Improved Model Performance, Cleaner Data, and Continuous Improvement. Improved Model Performance: [Checks model performance metrics, such as accuracy, and provides insights to improve model accuracy, reliability, and predictive power]. Cleaner Data: [Identifies and addresses data quality issues, such as missing values or outliers, ensuring that data used for training and inference is of high quality and reliability]. Continuous Improvement: [Organizations can iteratively enhance models by retraining them with updated data, thus maintaining and improving their effectiveness over time]. Governance can be broken down into Business Success, Security & Compliance, and Model Interpretability. Business Success: [Connects model performance to key business metrics, allowing organizations to measure and optimize the real-world impact of their ML applications]. Security & Compliance: [Helps ensure that models follow regulatory rules and security standards, detecting and mitigating potential security threats, data breaches, and violations.]. Model Interpretability: [Often offer tools for interpreting and explaining predictions, boosting transparency, trust, and user understanding].\n\nThe following page discusses the Importance of Monitoring Key Performance Indicators (KPIs). The following points are given. Quantifiable Assessment: A numeric measure of model performance for easy comparisons. Performance Tracking: Track performance changes over time, enabling timely interventions. Early Issues Detection: Identify issues like overfitting early for corrective action. Objective Benchmarking: Compare models and assess improvements. Performance Target: Set expectations and standards for model performance. Model Iteration and Improvement: Guide improvements in model development. Resource Allocation: Allocate resources efficiently based on KPI assessments. Customer satisfaction and trust: Ensure customer trust and satisfaction with accurate predictions. Risk mitigation: Detect and mitigate risks associated with model failures. Ethical and Fairness considerations: Assess fairness and ethical considerations in model predictions. Regulatory Compliance: Ensure compliance with legal and regulatory requirements. Business Impact: Understand the model's impact on business objectives.\n\nThe following page just has one quote: \"If someone reports close to 100 percent accuracy, they are either lying to you, made a mistake, forecasting the future with the future, predicting something with the same thing, or rigged the problem\" \u2013 Matthew Schneider.\n\nThe following page discusses how the availability of Ground Truth impacts the ease of monitoring ML models. Ground truth refers to the accurate and reliable reference data or information that is used as a standard for evaluating the performance, accuracy, or quality of a system, model, or algorithm. Instant Ground Truth: Having access to accurate and reliable reference data as the same time as the algorithm's predictions. Makes monitoring and evaluating the performance of our model much easier. Examples: Face Recognition at Airport Security. Delayed Ground Truth: A situation where true and accurate outcomes or labels of a dataset are not available immediately or in real-time but are delayed in their availability. Examples: 1. Medical Diagnosis, 2. Stock Market Predictions. Absent Ground Truth: No or limited access to reference data for evaluating the performance of an algorithm. Examples: 1. Space Exploration, 2. Content moderation in emerging languages.\n\nThe following page discusses the challenges of delayed ground truth. Here are some reasons for delayed ground truth. Data Collection and Reporting Lag: Impedes timely issue identification, risk of drift detection delays, reduced responsiveness, and slower model iteration. Human Involvement: Impedes timely issue identification, risk of drift detection delays, and slower model iteration. Natural Processes: Risk of drift detection delays and slower model iteration. Logistical Challenges: Impedes timely issue identification and slower model iteration. Regulatory and Compliance Requirements: Impedes timely issue identification, risk of drift detection delays, and slower model iteration. Data Transmission and Storage: Impedes timely issue identification, risk of drift detection delays, reduced responsiveness, and slower model iteration. Privacy and Security Considerations: Risk of drift detection delays, reduced responsiveness, and slower model iteration. Infrastructure and Technology Constraints: Risk of drift detection delays and reduced responsiveness. Sampling Frequency: Risk of drift detection delays and reduced responsiveness. Change in Data Sources: Impedes timely issue identification, risk of drift detection delays, and slower model iteration.\n\n\n\n\n\n\n\nThe following page discusses Data Drift Detection using Kolmogorov-Smirnov Test. This test compares the maximum vertical distance between the CDFs of two datasets. The test statistic is the maximum absolute difference between the CDFs. For example, let us say that we want to evaluate the potential data drift in the distribution of \u2018Attack\u2019 attribute values within Pok\u00e9mon datasets originating from generation 1 and 2. To use this test we do the following steps. ECDF Construction: It constructs empirical cumulative distribution functions (ECDFs) from the data. Calculating the KS Statistic (D): measures the maximum vertical difference between the two ECDFs. Hypothesis Testing: It tests whether the observed differences are statistically significant by comparing D to a critical value for a given significance level (e.g., alpha = 0.05). Interpretation: If D exceeds the critical value, it suggests different distributions, indicating data drift; if not, the distributions are considered similar.\n\nThe following page discusses Data Drift Detection using Kullback-Leibler (KL) divergence. This method is Utilized to ensure that input or output data in production doesn\u2019t drastically change from a baseline. For example, let us say that we want to determine whether there has been a significant change in the distribution of Pok\u00e9mon types. This is how we use KL divergence, define two probability distributions, P and Q, that you want to compare. P represents the reference distribution, and Q is the distribution you want to measure against it. If the distributions are continuous, you might need to discretize them into bins. For each bin or unique value in the sample space, calculate the KL Divergence between the corresponding probabilities in P and Q: KL(P || Q) = P(x) * log(P(x) / Q(x)). Once the KL divergence for each bin is calculated sum the KL values calculated for each bin/value to obtain the overall KL Divergence. A higher KL Divergence indicates a larger difference between the two distributions, while a lower value suggests a smaller difference.\n\nThe following page discusses Data Drift Detection using Population Stability Index (PSI). Essentially try and identify how much a population has shifted over time or between two different samples of a population in a single number. For example, let us say that we want to evaluate the potential drift in the distribution of 'Defence' attribute values within Pok\u00e9mon datasets originating from generation 1 and 7. This is how we test data drift detection using PSI, first collect two datasets: the original training dataset (development) and a newer dataset (validation) for monitoring. Divide the data into bins or intervals based on a relevant variable. Typically, use the same binning strategy for both development and validation datasets. Calculate the number of observations (counts) in each bin for both datasets.", "start_char_idx": 52605, "end_char_idx": 63673, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50136611-2063-40f7-92d4-b79ed5bdfb9c": {"__data__": {"id_": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}, {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, {"node_id": "11d2fa45-8ced-449f-9b75-4adecdccd93a", "node_type": "1", "metadata": {}, "hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "class_name": "RelatedNodeInfo"}]}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "text": "Calculate the number of observations (counts) in each bin for both datasets. Calculate percentage of observations in each bin relative to the total number of observations in the respective dataset. For each bin, compute, P_valid = Percentage observations in the validation dataset in a specification bin, P_dev = Positive percentage observations in the development dataset in the same bin, and PSI = sum[ (P_valid \u2013 P_dev) * ln(P_valid / P_dev) ]. Once P_valid, P_dev, and PSI are computed for each bin, add the PSI values for all bins to obtain an overall PSI score for the model. A low PSI indicates stability, while a high PSI suggests a significant distributional shift. Thus, a low PSI means low data drift, whereas high PSI means high data drift.\n\nThe following page discusses different Detection Methods that can be used for either data drift detection or concept drift detection. I will now write down the different methods as such: \u2018Method: yes/yes\u2019 where the first yes or no is if the method can be used for data drift detection and the second yes or no is for if the method can be used for concept drift detection. First we look through statistical tests. Kolmogorov-Smirnov Test: yes/no, Chi-Square Test: yes/no, Two-Sample T-Test: yes/no, Mann-Whitney U Test: yes/no, and KS-Statistic: yes/no. Next we look at Density Estimation methods. Kernel Density Estimation: yes/no, and Histogram-Based Methods: yes/no. Next we look at Distance-Based Methods. Wasserstein Distance: yes/no, Jensen-Shannon Distance: yes/yes, Earth Mover's Distance: yes/no, Mahalanobis Distance: yes/no, and Kullback-Leibler Divergence: yes/yes. For Ensemble Methods: yes/yes. Next we will look at  Drift Detection Frameworks. Drift Detection with Apache Kafka: yes/yes, Scikit-Multiflow (Python library): no/yes, Drift-Detection Stream Plugins (MOA): no/yes. Next we will look at supervised learning methods. Supervised Learning: yes/yes, Use classification models to detect drift: no/no,  and Monitor model performance metrics: yes/yes. Next we look at unsupervised learning methods. Unsupervised Learning: yes/yes, Clustering-Based Methods: yes/yes, and Outlier Detection Methods: yes/yes. Next we will look at time series analysis methods. Time Series Analysis: yes/yes, CUSUM (Cumulative Sum): yes/yes, Exponential Smoothing: yes/yes, and Time Series Forecasting Models: yes/yes. Finally, we look at domain-specific tests. Domain-Specific Tests: yes/yes, and Custom rules or heuristics: yes/yes.\n\nThe following page has two comic strips. The first comic strip is titled DOGBERT CONSULTS. There are three characters in this comic. Two humans and a dog. In the first panel the dog says, \u201cCustomer data is an asset that you can sell\u201d. In the second panel the says, \u201cIt\u2019s totally ethical because our customers would do the same thing to us if they could.\u201d. In the final panel, the dog says, \u201cIn phase one, we\u2019ll dehumanize the enemy by calling them \u2018DATA.\u2019\u201d. In the same panel, one of the humans says, \u201cSounds fair\u201d. In the second comic strip there are two human characters, one who is an employer and one who is the employee. In the first panel, the employee says, \u201cWe had a massive data breach, hackers got into the private data of all of our customers\u201d. In the second panel, the employer says, \u201cNo problem we\u2019ll issue a press release that says we\u2019re sorry and it will never happen again\u201d. In the final panel, the employee says, \u201cThat\u2019s what we said the last time three times it happened.\u201d. In this same panel, the employer replies, \u201cOur strategy is to wear them down\u201d. These are supposed to preview the next page which discusses the data protection and privacy regulations around the world.\n\nThe following page discusses Global Data Protection and Privacy Regulation. This is done using an image that shows a world map with regulation and enforcement going from darker to lower shades of red for heavy, robust, moderate, and limited data regulations. A few countries are highlighted. Canada (Heavily Regulated): Digital Privacy Act reforming PIPEDA (Personal Information and Protection and Electronic Documents Act). California (Heavily Regulated): CCPA (California Consumer Privacy Act). Brazil (Moderately Regulated): LGPD (General Data Protection Law). European Union (Heavily Regulated): ePrivacy Regulated and GDPR. South Africa (Moderately Regulated): POPIA (Protection of Personal Information Act). China (Heavily Regulated): PIS Standard (Personal Informatic Security Specification). India (Limited Regulation): PDPB (Person Data Protection Bill). New Zealand (Heavily Regulated): Privacy Bill 34-2. Thailand (Limited Regulation): PDPA (Personal Data Protection Act). Australia (Heavily Regulated): Privacy Act and Amendments.\n\nThe following page just has one comic strip. There are two characters one of whom is the employer while the other is the employee. In the first panel the employer tells the employee \u201cWally, I need you to head up our Artificial Intelligence Project\u201d. The second panel the employer tells the employee \u201cYou will have no budget and no hope of success, I just like saying we\u2019re working on AI\u201d. In the final panel, the employer tells the employee \u201cAnd you\u2019re completely useless, so it\u2019s a good match\u201d. In the same panel, the employee replies \u201cI won\u2019t let you down\u201d.\n\nThe following page discusses \u201cThe problem is that a single metric, such as classification accuracy, is an incomplete description of most real-world tasks\u201d. Introduction: In the realm of real-world tasks, relying solely on a singular metric, such as classification accuracy, often falls short in capturing the complexity of these tasks (Doshi-Velez and Kim, 2017). Understanding the significance of interpretability in machine learning models is crucial for comprehending, ensuring fairness, establishing trust, and addressing biases inherent in these systems. When Do We Need Interpretability? Human Curiosity and Learning: Satisfying human inquisitiveness and fostering learning through model transparency. Finding Meaning: Uncovering deeper insights and comprehending the reasoning behind model decisions. Bias Detection: Identifying and rectifying biases that might be embedded within the model's predictions. Social Acceptance: Gaining societal trust and acceptance by providing explanations for model outputs. Managing Social Interactions: Facilitating better human-computer interactions by making model decisions understandable. Use Cases for Interpretability: Decisions with Significant Impact: Cases where model decisions hold considerable consequences. Fairness and Non-Discrimination: Ensuring fairness and mitigating discriminatory outcomes. Privacy Protection: Safeguarding sensitive information while maintaining model performance. Reliability and Robustness: Enhancing model dependability and resilience. Causality Examination: Investigating cause-and-effect relationships within the model's decisions. Building Trust: Fostering trust among users by making the model's decision-making process transparent. When Interpretability May Not Be Necessary: Minimal Impact: Situations where the model's decisions have minimal repercussions. In low-impact, low-risk scenarios: Environments where the stakes are low, and risks are minimal. Well-Studied Problems: Instances where ample historical data and knowledge exist about the problem domain. Where ample experience exists: Domains where expertise and experience offer substantial understanding. Potential for Manipulation: Cases where interpretability might lead to misuse or manipulation of the model's outcomes. Conclusion: Interpretability in machine learning models stands as a pillar for promoting comprehension, fairness, trust, and bias mitigation. Its necessity, however, is context-dependent, contingent upon the potential impact of the model's decisions. Understanding this balance is crucial in harnessing the power of interpretable machine learning models.\n\nThis is the final page. It says thanks to the reader for finishing the topic.\n\nThree Levels of ML Software\nML/AI is rapidly adopted by new applications and industries. As al\u2010\nready been mentioned, the goal of a machine learning project is to\nbuild a statistical model by using collected data and applying ma\u2010\nchine learning algorithms. Yet building successful ML-based soft\u2010\nware projects is still difficult because every ML-based software\nneeds to manage three main assets: Data, Model, and Code.\nMachine Learning Model Operationalization Management - MLOps,\nas a DevOps extension, establishes effective practices and processes\naround designing, building, and deploying ML models into production.\nWe describe here essential technical methodologies, which are in\u2010\nvolved in the development of the Machine Learning-based software,\nnamely Data Engineering, ML Model Engineering, and Software\nRelease Engineering.\nWe recommend documenting everything you have learned in each\nstep of the whole pipeline.\nData: Data Engineering Pipelines\nWe mentioned previously that the fundamental part of any machine\nlearning workflow is Data. Collecting good data sets has a huge im\u2010\npact on the quality and performance of the ML model. The famous\ncitation\n\u201cGarbage In, Garbage Out\u201d,\nin the machine learning context means that the ML model is only as\ngood as your data. Therefore, the data, which has been used for\ntraining of the ML model, indirectly influence the overall perfor\u2010\nmance of the production system.", "start_char_idx": 63597, "end_char_idx": 73007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14b15cf5-022e-4216-bf3f-b3974574f833": {"__data__": {"id_": "14b15cf5-022e-4216-bf3f-b3974574f833", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, {"node_id": "b384836f-88bc-4aa2-8535-0aba633151b1", "node_type": "1", "metadata": {}, "hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "class_name": "RelatedNodeInfo"}]}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "text": "The amount and quality of the\ndata set are usually problem-specific and can be empirically\ndiscovered.\nBeing an important step, data engineering is reported as heavily\ntime-consuming. We might spend the majority of time on a machine\nlearning project constructing data sets, cleaning, and transforming\ndata.\nThe data engineering pipeline includes a sequence of operations on\nthe available data. The final goal of these operations is to create\ntraining and testing datasets for the ML algorithms. In the following,\nwe describe each stage of the data engineering pipeline such as\nData Ingestion, Exploration and Validation, Data Wrangling\n(Cleaning), and Data Splitting.\nData Ingestion\nData Ingestion - Collecting data by using various systems, frame\u2010\nworks and formats, such as internal/external databases, data\nmarts, OLAP cubes, data warehouses, OLTP systems, Spark, HDFSBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\netc. This step might also include synthetic data generation or data\nenrichment The best practices for this step include the following ac\u2010\ntions that should be maximally automated:\nData Sources Identification: Find the data and document its ori\u2010\ngin (data provenance).\nSpace Estimation: Check how much storage space it will take.\nSpace Location: Create a workspace with enough storage space.\nObtaining Data: Get the data and convert them to a format that\ncan be easily manipulated without changing the data itself.\nBack up Data: Always work on a copy of the data and keep the\noriginal dataset untouched.\nPrivacy Compliance: Ensure sensitive information is deleted or\nprotected (e.g., anonymized) to ensure GDPR compliance.\nMetadata Catalog: Start documenting the metadata of the\ndataset by recording the basic information about the size, for\u2010\nmat, aliases, last modified time, and access control lists. (Further\nreading)\nTest Data: Sample a test set, put it aside, and never look at it to\navoid the \u201cdata snooping\u201d bias. You fell for this if you are select\u2010\ning a particular kind of ML model by using the test set. This will\nlead to an ML model selection that is too optimistic and will not\nperform well in production.\nExploration and Validation\nExploration and Validation - Includes data profiling to obtain infor\u2010\nmation about the content and structure of the data. The output of\nthis step is a set of metadata, such as max, min, avg of values. Data\nvalidation operations are user-defined error detection functions,\nwhich scan the dataset to spot some errors. The validation is a\nprocess of assessing the quality of the data by running dataset vali\u2010\ndation routines (error detection methods). For example, for \u201cad\u2010\ndress\u201d-attributes, are the address components consistent? Is the\ncorrect postal code associated with the address? Are there missing\nvalues in the relevant attributes? The best practices for this step in\u2010\nclude the following actions:\nUse RAD tools: Using Jupyter notebooks is a good way to keep\nrecords of data exploration and experimentation.\nAttribute Profiling: Obtain and document the metadata about\neach attribute, such as\nName\nNumber of Records\nData Type (categorical, numerical, int/float, text, structured,\netc.)\nNumerical Measures (min, max, avg, median, etc. for numeri\u2010\ncal data)\nAmount of missing values (or \u201cmissing value ratio\u201d = Number\nof absent values/ Number of records)\nType of distribution (Gaussian, uniform, logarithmic, etc.)Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nLabel Attribute Identification: For supervised learning tasks, iden\u2010\ntify the target attribute(s).\nData Visualization: Build a visual representation for value\ndistribution.\nAttributes Correlation: Compute and analyze the correlations be\u2010\ntween attributes.\nAdditional Data: Identify data that would be useful for building\nthe model (go back to \u201cData Ingestion\u201d).\nData Wrangling (Cleaning)\nData Wrangling (Cleaning) - Data preparation step where we pro\u2010\ngrammatically wrangle data, e.g., by re-formatting or re-structuring\nparticular attributes that might change the form of the data\u2019s\nschema. We recommend writing scripts or functions for all data\ntransformations in the data pipeline to re-use all these functionali\u2010\nties on future data.\nTransformations: Identify the promising transformations you\nmay want to apply.\nOutliers: Fix or remove outliers (optional).\nMissing Values: Fill in missing values (e.g., with zero, mean, me\u2010\ndian) or drop their rows or columns.\nNot relevant Data: Drop the attributes that provide no useful in\u2010\nformation for the task (relevant for feature engineering).\nRestructure Data: Might include the following operations (from\nthe book \u201cPrinciples of Data Wrangling\u201d)\nReordering record fields by moving columns\nCreating new record fields through extracting values\nCombining multiple record fields into a single record field\nFiltering datasets by removing sets of records\nShifting the granularity of the dataset and the fields associ\u2010\nated with records through aggregations and pivots.\nData Splitting\nData Splitting - Splitting the data into training (80 %), validation,\nand test datasets to be used during the core machine learning\nstages to produce the ML model.\nModel: Machine Learning Pipelines\nThe core of the ML workflow is the phase of writing and executing\nmachine learning algorithms to obtain an ML model. The model engi\u2010\nneering pipeline is usually utilized by a data science team and in\u2010\ncludes a number of operations that lead to a final model. These op\u2010\nerations include Model Training, Model Evaluation, Model Testing,\nand Model Packaging. We recommend automating these steps as\nmuch as possible.\nModel TrainingBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nModel Training - The process of applying the machine learning algo\u2010\nrithm on training data to train an ML model. It also includes feature\nengineering the hyperparameter tuning for the model training activ\u2010\nity. The following list is adopted from \u201cHands-On Machine Learning\nwith Scikit-Learn, Keras, and TensorFlow\u201d by Aur\u00e9lien G\u00e9ron\nFeature engineering might include:\nDiscretize continuous features\nDecompose features (e.g., categorical, date/time, etc.)\nAdd transformations of features (e.g., log(x), sqrt(x), x2, etc.)\nAggregate features into promising new features\nFeature scaling: Standardize or normalize features\nNew features should be added quickly to get fast from a fea\u2010\nture idea to the feature running in production. Further reading\n\u201cFeature Engineering for Machine Learning. Principles and\nTechniques for Data Scientists\u201d by Alice Zheng, Amanda\nCasari\nModel Engineering might be an iterative process and include the\nfollowing workflow:\nEvery ML model specification (code that creates an ML\nmodel) should go through a code review and be versioned.\nTrain many ML models from different categories (e.g., linear\nregression, logistic regression, k-means, naive Bayes, SVM,\nRandom Forest, etc.) using standard parameters.\nMeasure and compare their performance. For each model, use\nN-fold cross-validation and compute the mean and standard\ndeviation of the performance measure on the N folds.\nError Analysis: analyze the types of errors the ML models\nmake.\nConsider further feature selection and engineering.\nIdentify the top three to five most promising models, prefer\u2010\nring models that make different types of errors.\nHyperparameters tuning by using cross-validation. Please\nnote that data transformation choices are also hyperparame\u2010\nters. Random search for hyperparameters is preferred over\ngrid search.\nConsider Ensemble methods such as majority vote, bagging,\nboosting, or stacking. Combining ML models should produce\nbetter performance than running them individually. (Further\nreading \u201cEnsemble Methods: Foundations and Algorithms\u201d by\nZhi-Hua Zhou)\nModel Evaluation\nModel Evaluation - Validate the trained model to ensure it meets\noriginal business objectives before serving the ML model in produc\u2010\ntion to the end-user.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nModel Testing\nModel Testing - Once the final ML model is trained, its performance\nneeds to be measured by using the hold-back test dataset to esti\u2010\nmate the generalization error by performing the final \u201cModel\nAcceptance Test\u201d.\nModel Packaging\nModel Packaging - The process of exporting the final ML model into\na specific format (e.g. PMML , PFA, or ONNX), which describes the\nmodel to be consumed by the business application. We cover the ML\nmodel packaging in the part \u2018ML Model serialization formats\u2019 below.\nDifferent forms of ML workflows\nOperating an ML model might assume several architectural styles. In\nthe following, we discuss four architectural patterns which are clas\u2010\nsified along two dimensions:\n1. ML Model Training and\n2. ML Model Prediction\nPlease note that for the sake of simplicity, we disregard the third di\u2010\nmension 3. ML Model Type, which denotes the type of machine learn\u2010\ning algorithm such as supervised, unsupervised, semisupervised, and\nReinforcement Learning.\nThere are two ways how we perform ML Model Training:\n1Offline learning (aka batch or static learning): The model is\ntrained on a set of already collected data.", "start_char_idx": 73008, "end_char_idx": 82272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c": {"__data__": {"id_": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}, {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, {"node_id": "821dbc59-27a8-42a7-a88a-a52095ea2a16", "node_type": "1", "metadata": {}, "hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "class_name": "RelatedNodeInfo"}]}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "text": "After deploying to the\nproduction environment, the ML model remains constant until it\nre-trained because the model will see a lot of real-live data and\nbecomes stale. This phenomenon is called \u2018model decay\u2019 and\nshould be carefully monitored.\n2Online learning (aka dynamic learning): The model is regularly be\u2010\ning re-trained as new data arrives, e.g. as data streams. This is\nusually the case for ML systems that use time-series data, such as\nsensor, or stock trading data to accommodate the temporal ef\u2010\nfects in the ML model.\nThe second dimension is ML Model Prediction, which denotes the me\u2010\nchanics of the ML model to makes predictions. Here we also distin\u2010\nguish two modes:\n1Batch predictions: The deployed ML model makes a set of predic\u2010\ntions based on historical input data. This is often sufficient for\ndata that is not time-dependent, or when it is not critical to ob\u2010\ntain real-time predictions as output.\n2Real-time predictions (aka on-demand predictions): Predictions\nare generated in real-time using the input data that is available\nat the time of the request.\nAfter identifying these two dimensions, we can classify the opera\u2010\ntionalization of machine learning models into four ML architectureBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\npatterns:\nFigure source\nIn the following, we present a description of the model architectural\npatterns such as Forecast, Web-Service, Online Learning, and\nAutoML.\nForecast\nThis type of machine learning workflow is widely spread in academic\nresearch or data science education (e.g., Kaggle or DataCamp). This\nform is used to experiment with ML algorithms and data as it is the\neasiest way to create a machine learning system. Usually, we take an\navailable dataset, train the ML model, then run this model on an\u2010\nother (mostly historical) data, and the ML model makes predictions.\nThis way, we output a forecast. This ML workflow is not very useful\nand, therefore, not common in an industry setting for production\nsystems (e.g. mobile applications).\nWeb-Service\nThe most commonly described deployment architecture for ML mod\u2010\nels is a web service (microservise). The web service takes input data\nand outputs a prediction for the input data points. The model is\ntrained offline on historical data, but it uses real-live data to make\npredictions. The difference from a forecast (batch predictions) is\nthat the ML model runs near real-time and handles a single record at\na time instead of processing all the data at once. The web service\nuses real-time data to make predictions, but the model remains con\u2010\nstant until it is re-trained and re-deployed into the production\nsystem.\nThe figure below illustrates the architecture for wrapping trained\nmodels as deployable services. Please note, we discuss methods for\nwrapping trained ML models as deployable services in the\nDeployment Strategies Section.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nOnline Learning\nThe most dynamic way to embed machine learning into a production\nsystem is to implement online learning, which is also known as real-\ntime streaming analytics. Please note that online learning can be a\nconfusing name because the core learning or ML model training is\nusually not performed on the live system. We should call it incremen\u2010\ntal learning; however, the term online learning is already established\nwithin the ML community.\nIn this type of ML workflow, the ML learning algorithm is continu\u2010\nously receiving a data stream, either as single data points or in small\ngroups called mini-batches. The system learns about new data on\nthe fly as it arrives, so the ML model is incrementally being re-\ntrained with new data. This continually re-trained model is instantly\navailable as a web service.\nTechnically, this type of ML system works well with the lambda ar\u2010\nchitecture in big data systems. Usually, the input data is a stream of\nevents, and the ML model takes the data as it enters the system,\nprovides predictions and re-learns on these new data. The model\nwould typically run as a service on a Kubernetes cluster or similar.\nA big difficulty with the online learning system in production is that if\nbad data is entering the system, the ML model, as well as the whole\nsystem performance, will increasingly decline.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nFigure Source\nAutoML\nAn even more sophisticated version of online learning is automated\nmachine learning or AutoML.\nAutoML is getting a lot of attention and is considered the next ad\u2010\nvance for enterprise ML. AutoML promises training ML models with\nminimal effort and without machine learning expertise. The user\nneeds to provide data, and the AutoML system automatically selects\nan ML algorithm, such as neural network architecture, and config\u2010\nures the selected algorithm.\nInstead of updating the model, we execute an entire ML model train\u2010\ning pipeline in production that results in new models on the fly. For\nnow, this is a very experimental way to implement ML workflows.\nAutoML is usually provided by big cloud providers, such as Google or\nMS Azure. However, models build with AutoML need to reach the\nlevel of accuracy required for real-world success.\nFurther readi ng\nAutoML: Overview and Tools\nAutoML Benchmark\nML Model serialization formats\nThere are various formats to distribute ML models. In order to\nachieve a distributable format, the ML model should be present and\nshould be executable as an independent asset. For example, we\nmight want to use a Scikit-learn model in a Spark job. This means\nthat the ML models should work outside of the model-training envi\u2010\nronment. In the following, we describe Language-agnostic and\nVendor-specific exchange formats for ML models.\nLanguage-agnostic exchange formats\nAmalgamation is the simplest way to export an ML model. The\nmodel and all necessary code to run are bundled as one package.\nUsually, it is a single source code file that can be compiled on\nnearly any platform as a standalone program. For example, we\ncan create a standalone version of an ML model by using\nSKompiler. This python package provides a tool for transforming\ntrained Scikit-learn models into other forms, such as SQL queries,\nExcel formulas, Portable Format for Analytics (PFA) files, or\nSymPy expressions. The last can be translated to code in a variety\nof languages, such as C, Javascript, Rust, Julia, etc.\nAmalgamation is a straightforward concept, and the exported\nML models are portable. With some easy ML algorithms, such as\nlogistic regression or decision tree, this format is compact and\nmight have good performance, which is useful for constrained\nembedded environments. However, the ML model code and pa\u2010\nrameters need to be managed together.\nPMML is a format for model serving based on XML with the file\nextension .pmml. PMML has been standardized by the Data\nMining Group (DMG) . Basically, .ppml describes a model and\npipeline in XML . The PMML supports not all of the ML algorithms,Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nand its usage in open source-driven tools is limited due to licens\u2010\ning issues.\nPFA (Portable Format for Analytics) is designed as a replacement\nfor PMML. From DMG: \u201cA PFA document is a string of JSON-for\u2010\nmatted text that describes an executable called a scoring engine.\nEach engine has a well-defined input, a well-defined output, and\nfunctions for combining inputs to construct the output in an ex\u2010\npression-centric syntax tree\u201d. PFA capabilities include (1) control\nstructures, such as conditionals, loops, and user-defined func\u2010\ntions, (2) expressed within JSON, and can, therefore, be easily\ngenerated and manipulated by other programs, (3) fine-grained\nfunction library supporting extensibility callbacks. To run ML\nmodels as PFA files, we will need a PFA-enabled environment.\nONNX (Open Neural Network eXchange) is an ML framework in\u2010\ndependent file format. ONNX was created to allow any ML tool\nto share a single model format. This format is supported by many\nbig tech companies such as Microsoft, Facebook, and Amazon.\nOnce the ML model is serialized in the ONNX format, it can be\nconsumed by onnx-enabled runtime libraries (also called inference\nengines) and then make predictions. Here you will find the list of\ntools that can use ONNX format. Notably that most deep learn\u2010\ning tools have ONNX support.\nSource: Open Standard Models\nVendor-specific exchange formats\nScikit-Learn saves models as pickled python objects, with a .pkl\nfile extension.\nH2O allows you to convert the models you have built to either\nPOJO (Plain Old Java Object) or MOJO (Model Object,\nOptimized).\nSparkML models that can be saved in the MLeap file format and\nserved in real-time using an MLeap model server. The MLeap run\u2010\ntime is a JAR that can run in any Java application.MLeap sup\u2010\nports Spark, Scikit-learn, and Tensorflow for training pipelines\nand exporting them to an MLeap Bundle.", "start_char_idx": 82273, "end_char_idx": 91319, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cab6704e-6c89-45ad-91ab-ecb849ccd0aa": {"__data__": {"id_": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78", "node_type": "1", "metadata": {}, "hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "class_name": "RelatedNodeInfo"}, {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}]}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "text": "TensorFlow saves models as .pb files; which is the protocol buffer\nfiles extension.\nPyTorch serves models by using their proprietary Torch Script as\na .pt file. Their model format can be served from a C\u2013 application.\nKeras saves a model as a .h5 file, which is known in the scientific\ncommunity as a data file saved in the Hierarchical Data Format\n(HDF). This type of file contains multidimensional arrays of data.\nApple has its proprietary file format with the extension .mlmodel\nto store models embedded in iOS applications. The Core ML\nframework has native support for Objective-C and Swift pro\u2010\ngramming languages. Applications trained in other ML frame\u2010\nworks, such as TensorFlow, Scikit-Learn, and other frameworks\nneed to use tools like such as coremltools and Tensorflow con\u2010\nverter to translate their ML model files to the .mlmodel format\nfor use on iOS.\nThe following Table summarizes all ML model serialization formats:Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nOpen-\nFormat VendorFile\nExtension LicenseML Tools &\nPlatforms\nSupportHuman-\nread\u2010\nable Compress\n\"almagi\u2010\nnation\"\u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2713\nPMML\u2713DMG .pmml AGPL R, Python,\nSpark\u2713\n(XML)\u2718\nPFA\u2713DMG JSON PFA-en\u2010\nabled\nruntime\u2713\n(JSON)\u2718\nONNX\u2713SIG\nLFAI.onnx TF, CNTK,\nCore ML,\nMXNet,\nML.NET\u2212 \u2713\nTF\nServing\nFormat\u2713Google .pf Tensor\nFlow\u2718g-zip\nPickle\nFormat\u2713.pkl scikit-learn\u2718g-zip\nJAR/\nPOJO\u2713.jar H2O\u2718 \u2713\nHDF\u2713.h5 Keras\u2718 \u2713\nMLEAP\u2713.jar/ .zip Spark, TF,\nscikit-learn\u2718g-zip\nTorch\nScript\u2718.pt PyTorch\u2718 \u2713\nApple\n.mlmodel\u2718Apple .mlmodel TensorFlow,\nscikit-learn,\nCore ML\u2212 \u2713\nFurther reading:\nML Models training file formats\nOpen Standard Models\nCode: Deployment Pipelines\nThe final stage of delivering an ML project includes the following\nthree steps:\n1Model Serving - The process of deploying the ML model in a pro\u2010\nduction environment.\n2Model Performance Monitoring - The process of observing the ML\nmodel performance based on live and previously unseen data,\nsuch as prediction or recommendation. In particular, we are inter\u2010\nested in ML-specific signals, such as prediction deviation from\nprevious model performance. These signals might be used as trig\u2010\ngers for model re-training.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\n3Model Performance Logging - Every inference request results in a\nlog-record.\nIn the following, we discuss Model Serving Patterns and Model\nDeployment Strategies.\nModel Serving Patterns\nThree components should be considered when we serve an ML model\nin a production environment. The inference is the process of getting\ndata to be ingested by a model to compute predictions. This process\nrequires a model, an interpreter for the execution, and input data.\nDeploying an ML system to a production environment includes two\naspects, first deploying the pipeline for automated retraining and\nML model deployment. Second, providing the API for prediction on\nunseen data.\nModel serving is a way to integrate the ML model in a software sys\u2010\ntem. We distinguish between five patterns to put the ML model in\nproduction: Model-as-Service, Model-as-Dependency, Precompute,\nModel-on-Demand, and Hyb rid-Serving. Please note that the above-\ndescribed model serialization formats might be used for any of the\nmodel serving patterns.\nThe following taxonomy shows these approaches:\nMachine Learning Model Serving Taxonomy\n\u00a0 ML Model\nService &\nVersioningTogether with the\nconsuming\napplicationIndependent from the consuming\napplication\nCompile/\nRuntime\nAvailabiltyBuild & runtime\navailableAvailable re\u2010\nmotely through\nREST API/RPCAvailable at the\nruntime scope\nServing\nPatterns\"Model-as-\nDependency\"\"Model-as-\nService\"\"Precompute\" and\n\"Model on\nDemand\"\nHybrid Model Serving (Federated\nLearning)\u00a0\nNow, we present the serving patterns to productionize the ML model\nsuch as Model-as-Service, Model-as-Dependency, Precompute,\nModel-on-Demand, and Hyb rid-Serving.\nModel-as-Service\nModel-as-Service is a common pattern for wrapping an ML model as\nan independent service. We can wrap the ML model and the inter\u2010\npreter within a dedicated web service that applications can request\nthrough a REST API or consume as a gRPC service.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nThis pattern can be used for various ML workflows, such as Forecast,\nWeb Service, Online Learning.\nFigure Source\nModel-as-Dependency\nModel-as-Dependency is probably the most straightforward way to\npackage an ML model. A packaged ML model is considered as a de\u2010\npendency within the software application. For example, the applica\u2010\ntion consumes the ML model like a conventional jar dependency by\ninvoking the prediction method and passing the values. The return\nvalue of such method execution is some prediction that is performed\nby the previously trained ML model. The Model-as-Dependency ap\u2010\nproach is mostly used for implementing the Forecast pattern.\nPrecompute Serving Pattern\nThis type of ML model serving is tightly related to the Forecast ML\nworkflow. With the Precompute serving pattern, we use an already\ntrained ML model and precompute the predictions for the incoming\nbatch of data. The resulting predictions are persisted in the data\u2010\nbase. Therefore, for any input request, we query the database to get\nthe prediction result.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nFurther reading: Bringing ML to Production (Slides)\nModel-on-Demand\nThe Model-on-Demand pattern also treats the ML model as a de\u2010\npendency that is available at runtime. This ML model, contrary to the\nModel-as-Dependency pattern, has its own release cycle and is pub\u2010\nlished independently.\nThe message-broker architecture is typically used for such on-de\u2010\nmand model serving. The message-broker topology architecture pat\u2010\ntern contains two main types of architecture components: a broker\ncomponent and an event processor component. The broker compo\u2010\nnent is the central part that contains the event channels that are\nutilised within the event flow. The event channels, which are enclosed\nin the broker component, are message queues. We can imagine such\narchitecture containing input- and output-queues. A message broker\nallows one process to write prediction-requests in an input queue.\nThe event processor contains the model serving runtime and the ML\nmodel. This process connects to the broker, reads these requests in\nbatch from the queue and sends them to the model to make the pre\u2010\ndictions. The model serving process runs the prediction generation on\nthe input data and writes the resulted predictions to the output\nqueue. Afterwards, the queued prediction results are pushed to the\nprediction service that initiated the prediction request.\nFurther reading:\nEvent-driven architecture\nWeb services vs. streaming for real-time machine learning\nendpoints\nHyb rid-Serving (Feder ated Learning)\nFederated Learning, also known as hybrid-serving, is another way of\nserving a model to the users. It is unique in the way it does, there is\nnot only one model that predicts the outcome, but there are also lots\nof it. Exactly spoken there are as many models as users exist, in ad\u2010\ndition to the one that\u2019s held on a server. Let us start with the unique\nmodel, the one on the server. The model on the server-side is trainedBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nonly once with the real-world data. It sets the initial model for each\nuser. Also, it is a relatively general trained model so it fits for the\nmajority of users. On the other side, there are the user-side models,\nwhich are the real unique models. Due to the raising hardware stan\u2010\ndards on mobile devices, it is possible for the devices to train their\nown models. Like that the devices will train their own highly special\u2010\nized model for their own user. Once in a while, the devices send their\nalready trained model data (not the personal data) to the server.\nThere the server model will be adjusted, so the actual trends of the\nwhole user community will be covered by the model. This model is set\nto be the new initial model that all devices are using. For not having\nany downsides for the users, while the server model gets updated,\nthis happens only when the device is idle, connected to WiFi and\ncharging. Also, the testing is done on the devices, therefore the newly\nadopted model from the server is sent to the devices and tested for\nfunctionality.\nThe big benefit of this is that the data used for training and testing,\nwhich is highly personal, never leaves the devices while still capturing\nall data that is available.", "start_char_idx": 91320, "end_char_idx": 99980, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5c55660-67f1-419a-b4fc-77672300517c": {"__data__": {"id_": "e5c55660-67f1-419a-b4fc-77672300517c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}, {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, {"node_id": "387374e2-778f-472b-a73f-092761fffd50", "node_type": "1", "metadata": {}, "hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "class_name": "RelatedNodeInfo"}]}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "text": "This way it is possible to train highly accu\u2010\nrate models while not having to store tons of (probably personal)\ndata in the cloud. But there is no such thing as a free lunch, normal\nmachine learning algorithms are built with homogeneously and large\ndatasets on powerful hardware which is always available for train\u2010\ning. With Federated Learning there are other circumstances, the mo\u2010\nbile devices are less powerful, the training data is distributed across\nmillions of devices and these are not always available for training.\nExactly for this TensorFlow Federated (TFF) has been created. TFF\nis a lightweight form of TensorFlow created for Federated Learning.\nFigure Source\nDeployment Strategies\nIn the following, we discuss common ways for wrapping trained\nmodels as deployable services, namely deploying ML models as\nDocker Containers to Cloud Instances and as Serverless Functions.\nDeploying ML Models as Docker ContainersBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nAs of now, there is no standard, open solution to ML model deploy\u2010\nment. As ML model inference being considered stateless, lightweight,\nand idempotent, containerization becomes the de-facto standard\nfor delivery. This means we deploy a container that wraps an ML\nmodel inference code. For on-premise, cloud, or hybrid deployments,\nDocker is considered to be de-facto standard containerization\ntechnology.\nOne ubiquitous way is to package the whole ML tech stack (depen\u2010\ndencies) and the code for ML model prediction into a Docker con\u2010\ntainer. Then Kubernetes or an alternative (e.g. AWS Fargate) does\nthe orchestration. The ML model functionality, such as prediction, is\nthen available through a REST API (e.g. implemented as Flask\napplication)\nDeploying ML Models as Serverless Functions\nVarious cloud vendors already provide machine-learning platforms,\nand you can deploy your model with their services. Examples are\nAmazon AWS Sagemaker, Google Cloud AI Platform, Azure Machine\nLearning Studio, and IBM Watson Machine Learning, to name a few.\nCommercial cloud services also provide containerization of ML mod\u2010\nels such as AWS Lambda and Google App Engine servlet host.\nIn order to deploy an ML model as a serverless function, the applica\u2010\ntion code and dependencies are packaged into .zip files, with a single\nentry point function. This function then could be managed by major\ncloud providers such as Azure Functions, AWS Lambda, or Google\nCloud Functions. However, attention should be paid to possible con\u2010\nstraints of the deployed artifacts such as the size of the artifact.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nThe content of this site was created by Dr. Larysa\nVisengeriyeva, Anja Kammer, Isabel B\u00e4r, Alexander\nKniesz, and Michael Pl\u00f6d (DDD Advisor). Design\nmade by Sebastian Eberstaller.\nIt is published under Creative Commons Attribution\n4.0 International Public License and can therefore\nbe shared and adapted with attribution\n(\"INNOQ\").\nMade and maintained by\nPrivacy | Site noticeBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nMLOps Principles\nAs machine learning and AI propagate in software\nproducts and services, we need to establish best prac\u2010\ntices and tools to test, deploy, manage, and monitor\nML models in real-world production. In short, with\nMLOps we strive to avoid \u201ctechnical debt\u201d in machine\nlearning applications.\nSIG MLOps defines \u201can optimal MLOps experience [as]\none where Machine Learning assets are treated con\u2010\nsistently with all other software assets within a CI/CD\nenvironment. Machine Learning models can be de\u2010\nployed alongside the services that wrap them and the\nservices that consume them as part of a unified re\u2010\nlease process.\u201d By codifying these practices, we hope\nto accelerate the adoption of ML/AI in software sys\u2010\ntems and fast delivery of intelligent software. In the\nfollowing, we describe a set of important concepts in\nMLOps such as Iterative-Incremental Development,\nAutomation, Continuous Deployment, Versioning,\nTesting, Reproducibility, and Monitoring.\nIterative-Incremental Process in\nMLOps\nThe complete MLOps process includes three broad\nphases of \u201cDesigning the ML-powered application\u201d,Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\n\u201cML Experimentation and Development\u201d, and \u201cML\nOperations\u201d.\nThe first phase is devoted to business understanding,\ndata understanding and designing the ML-powered\nsoftware. In this stage, we identify our potential user,\ndesign the machine learning solution to solve its prob\u2010\nlem, and assess the further development of the\nproject. Mostly, we would act within two categories of\nproblems - either increasing the productivity of the\nuser or increasing the interactivity of our application.\nInitially, we define ML use-cases and prioritize them.\nThe best practice for ML projects is to work on one ML\nuse case at a time. Furthermore, the design phase\naims to inspect the available data that will be needed\nto train our model and to specify the functional and\nnon-functional requirements of our ML model. We\nshould use these requirements to design the architec\u2010\nture of the ML-application, establish the serving strat\u2010\negy, and create a test suite for the future ML model.\nThe follow-up phase \u201cML Experimentation and\nDevelopment\u201d is devoted to verifying the applicability\nof ML for our problem by implementing Proof-of-\nConcept for ML Model. Here, we run iteratively differ\u2010\nent steps, such as identifying or polishing the suitable\nML algorithm for our problem, data engineering, and\nmodel engineering. The primary goal in this phase is to\ndeliver a stable quality ML model that we will run in\nproduction.\nThe main focus of the \u201cML Operations\u201d phase is to de\u2010\nliver the previously developed ML model in production\nby using established DevOps practices such as testing,\nversioning, continuous delivery, and monitoring.\nAll three phases are interconnected and influence each\nother. For example, the design decision during the de\u2010\nsign stage will propagate into the experimentation\nphase and finally influence the deployment options\nduring the final operations phase.\nAutomation\nThe level of automation of the Data, ML Model, and\nCode pipelines determines the maturity of the ML\nprocess. With increased maturity, the velocity for the\ntraining of new models is also increased. The objectiveBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nof an MLOps team is to automate the deployment of\nML models into the core software system or as a ser\u2010\nvice component. This means, to automate the com\u2010\nplete ML-workflow steps without any manual inter\u2010\nvention. Triggers for automated model training and\ndeployment can be calendar events, messaging, moni\u2010\ntoring events, as well as changes on data, model train\u2010\ning code, and application code.\nAutomated testing helps discovering problems quickly\nand in early stages. This enables fast fixing of errors\nand learning from mistakes.\nTo adopt MLOps, we see three levels of automation,\nstarting from the initial level with manual model train\u2010\ning and deployment, up to running both ML and CI/CD\npipelines automatically.\n1Manual process. This is a typical data science\nprocess, which is performed at the beginning of im\u2010\nplementing ML. This level has an experimental and\niterative nature. Every step in each pipeline, such as\ndata preparation and validation, model training and\ntesting, are executed manually. The common way to\nprocess is to use Rapid Application Development\n(RAD) tools, such as Jupyter Notebooks.\n2ML pipeline automation. The next level includes the\nexecution of model training automatically. We in\u2010\ntroduce here the continuous training of the model.\nWhenever new data is available, the process of\nmodel retraining is triggered. This level of automa\u2010\ntion also includes data and model validation steps.\n3CI/CD pipeline automation. In the final stage, we in\u2010\ntroduce a CI/CD system to perform fast and reli\u2010\nable ML model deployments in production. The core\ndifference from the previous step is that we now\nautomatically build, test, and deploy the Data, ML\nModel, and the ML training pipeline components.", "start_char_idx": 99981, "end_char_idx": 108686, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29cf881f-fb52-48da-9752-b54df95c18c2": {"__data__": {"id_": "29cf881f-fb52-48da-9752-b54df95c18c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}, {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, {"node_id": "338c170b-8eca-4a12-bf0d-5a6a78a6439c", "node_type": "1", "metadata": {}, "hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "class_name": "RelatedNodeInfo"}]}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "text": "The following picture shows the automated ML pipe\u2010\nline with CI/CD routines:Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nFigure adopted from \u201cMLOps: Continuous delivery and\nautomation pipelines in machine learning\u201d\nThe MLOps stages that reflect the process of ML pipe\u2010\nline automation are explained in the following table:\nMLOps StageOutput of the Stage\nExecution\nDevelopment &\nExperimentation (ML algo\u2010\nrithms, new ML models)Source code for pipelines:\nData extraction, validation,\npreparation, model training,\nmodel evaluation, model\ntesting\nPipeline Continuous Integration\n(Build source code and run\ntests)Pipeline components to be\ndeployed: packages and\nexecutables.\nPipeline Continuous Delivery\n(Deploy pipelines to the target\nenvironment)Deployed pipeline with new\nimplementation of the\nmodel.\nAutomated Triggering (Pipeline\nis automatically executed in\nproduction. Schedule or trigger\nare used)Trained model that is stored\nin the model registry.\nModel Continuous Delivery\n(Model serving for prediction)Deployed model prediction\nservice (e.g. model exposed\nas REST API)\nMonitoring (Collecting data\nabout the model performance\non live data)Trigger to execute the pipe\u2010\nline or to start a new experi\u2010\nment cycle.\nAfter analyzing the MLOps Stages, we might notice\nthat the MLOps setup requires several components toBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nbe installed or prepared. The following table lists those\ncomponents:\nMLOps Setup\nComponents Description\nSource Control Versioning the Code, Data, and ML Model\nartifacts.\nTest & Build\nServicesUsing CI tools for (1) Quality assurance\u00a0\u00a0for\nall ML artifacts, and (2) Building packages\nand executables for pipelines.\nDeployment\nServicesUsing CD tools for deploying pipelines to\nthe target environment.\nModel Registry A registry for storing already trained ML\nmodels.\nFeature Store Preprocessing input data as features to be\nconsumed in the model training pipeline\nand during the model serving.\nML Metadata\nStoreTracking metadata of model training, for\nexample model name, parameters, training\ndata, test data, and metric results.\nML Pipeline\nOrchestratorAutomating the steps of the ML\nexperiments.\nFurther reading: \u201cMLOps: Continuous delivery and au\u2010\ntomation pipelines in machine learning\u201d\nContinuous X\nTo understand Model deployment, we first specify the\n\u201cML assets\u201d as ML model, its parameters and hyperpa\u2010\nrameters, training scripts, training and testing data.\nWe are interested in the identity, components, version\u2010\ning, and dependencies of these ML artifacts. The tar\u2010\nget destination for an ML artifact may be a (micro-)\nservice or some infrastructure components. A deploy\u2010\nment service provides orchestration, logging, monitor\u2010\ning, and notification to ensure that the ML models,\ncode and data artifacts are stable.\nMLOps is an ML engineering culture that includes the\nfollowing practices:\nContinuous Integration (CI) extends the testing and\nvalidating code and components by adding testingBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nand validating data and models.\nContinuous Delivery (CD) concerns with delivery of\nan ML training pipeline that automatically deploys\nanother the ML model prediction service.\nContinuous Training (CT) is unique to ML systems\nproperty, which automatically retrains ML models\nfor re-deployment.\nContinuous Monitoring (CM) concerns with moni\u2010\ntoring production data and model performance\nmetrics, which are bound to business metrics.\nVersioning\nThe goal of the versioning is to treat ML training\nscrips, ML models and data sets for model training as\nfirst-class citizens in DevOps processes by tracking ML\nmodels and data sets with version control systems.\nThe common reasons when ML model and data\nchanges (according to SIG MLOps) are the following:\nML models can be retrained based upon new train\u2010\ning data.\nModels may be retrained based upon new training\napproaches.\nModels may be self-learning.\nModels may degrade over time.\nModels may be deployed in new applications.\nModels may be subject to attack and require\nrevision.\nModels can be quickly rolled back to a previous\nserving version.\nCorporate or government compliance may require\naudit or investigation on both ML model or data,\nhence we need access to all versions of the produc\u2010\ntionized ML model.\nData may reside across multiple systems.\nData may only be able to reside in restricted\njurisdictions.\nData storage may not be immutable.\nData ownership may be a factor.\nAnalogously to the best practices for developing reli\u2010\nable software systems, every ML model specification\n(ML training code that creates an ML model) shouldBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\ngo through a code review phase. Furthermore, every\nML model specification should be versioned in a VCS\nto make the training of ML models auditable and\nreproducible.\nFurther readi ng: How do we manage ML models?\nModel Management Frameworks\nExperiments Tracking\nMachine Learning development is a highly iterative and\nresearch-centric process. In contrast to the traditional\nsoftware development process, in ML development,\nmultiple experiments on model training can be exe\u2010\ncuted in parallel before making the decision what\nmodel will be promoted to production.\nThe experimentation during ML development might\nhave the following scenario: One way to track multiple\nexperiments is to use different (Git-) branches, each\ndedicated to the separate experiment. The output of\neach branch is a trained model. Depending on the se\u2010\nlected metric, the trained ML models are compared\nwith each other and the appropriate model is selected.\nSuch low friction branching is fully supported by the\ntool DVC, which is an extension of Git and an open-\nsource version control system for machine learning\nprojects. Another popular tool for ML experiments\ntracking is the Weights and Biases (wandb) library,\nwhich automatically tracks the hyperparameters and\nmetrics of the experiments.\nTesting\nFigure source: \u201cThe ML Test Score: A Rubric for ML\nProduction Readiness and Technical Debt Reduction\u201d\nby E.Breck et al. 2017\nThe complete development pipeline includes three es\u2010\nsential components, data pipeline, ML model pipeline,\nand application pipeline. In accordance with this sepa\u2010\nration we distinguish three scopes for testing in MLBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nsystems: tests for features and data, tests for model\ndevelopment, and tests for ML infrastructure.\nFeatures and Data Tests\nData validation: Automatic check for data and fea\u2010\ntures schema/domain.\nAction: In order to build a schema (domain val\u2010\nues), calculate statistics from the training data.\nThis schema can be used as expectation defini\u2010\ntion or semantic role for input data during train\u2010\ning and serving stages.\nFeatures importance test to understand whether\nnew features add a predictive power.\nAction: Compute correlation coefficient on fea\u2010\ntures columns.\nAction: Train model with one or two features.\nAction: Use the subset of features \u201cOne of k left\nout and train a set of different models.\nMeasure data dependencies, inference latency,\nand RAM usage for each new feature. Compare\nit with the predictive power of the newly added\nfeatures.\nDrop out unused/deprecated features from your\ninfrastructure and document it.\nFeatures and data pipelines should be policy-com\u2010\npliant (e.g. GDPR). These requirements should be\nprogrammatically checked in both development\nand production environments.\nFeature creation code should be tested by unit\ntests (to capture bugs in features).\nTests for Reliable Model Development\nWe need to provide specific testing support for detect\u2010\ning ML-specific errors.\nTesting ML training should include routines, which\nverify that algorithms make decisions aligned to\nbusiness objective. This means that ML algorithm\nloss metrics (MSE, log-loss, etc.) should correlate\nwith business impact metrics (revenue, user en\u2010\ngagement, etc.", "start_char_idx": 108687, "end_char_idx": 117876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2208170a-da2e-4eee-9bd0-9c79fdc7e26b": {"__data__": {"id_": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}, {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}, {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}, {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}, {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}]}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "text": "should correlate\nwith business impact metrics (revenue, user en\u2010\ngagement, etc.)Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAction: The loss metrics - impact metrics rela\u2010\ntionship, can be measured in small scale A/B\ntesting using an intentionally degraded model.\nFurther reading: Selecting the Right Metric for\nevaluating Machine Learning Models. here 1,\nhere 2\nModel staleness test. The model is defined as stale\nif the trained model does not include up-to-date\ndata and/or does not satisfy the business impact\nrequirements. Stale models can affect the quality\nof prediction in intelligent software.\nAction: A/B experiment with older models.\nIncluding the range of ages to produce an Age\nvs. Prediction Quality curve to facilitate the un\u2010\nderstanding of how often the ML model should\nbe trained.\nAssessing the cost of more sophisticated ML\nmodels.\nAction: ML model performance should be com\u2010\npared to the simple baseline ML model (e.g. lin\u2010\near model vs neural network).\nValidating performance of a model.\nIt is recommended to separate the teams and\nprocedures collecting the training and test data\nto remove the dependencies and avoid false\nmethodology propagating from the training set\nto the test set (source).\nAction: Use an additional test set, which is dis\u2010\njoint from the training and validation sets. Use\nthis test set only for a final evaluation.\nFairness/Bias/Inclusion testing for the ML model\nperformance.\nAction: Collect more data that includes poten\u2010\ntially under-represented categories.\nAction: Examine input features if they correlate\nwith protected user categories.\nFurther reading: \u201cTour of Data Sampling\nMethods for Imbalanced Classification\u201d\nConventional unit testing for any feature creation,Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nML model specification code (training) and testing.\nModel governance testing (coming soon)\nML infrastructure test\nTraining the ML models should be reproducible,\nwhich means that training the ML model on the\nsame data should produce identical ML models.\nDiff-testing of ML models relies on deterministic\ntraining, which is hard to achieve due to non-\nconvexity of the ML algorithms, random seed\ngeneration, or distributed ML model training.\nAction: determine the non-deterministic parts in\nthe model training code base and try to mini\u2010\nmize non-determinism.\nTest ML API usage. Stress testing.\nAction: Unit tests to randomly generate input\ndata and training the model for a single opti\u2010\nmization step (e.g gradient descent).\nAction: Crash tests for model training. The ML\nmodel should restore from a checkpoint after a\nmid-training crash.\nTest the algorithmic correctness.\nAction: Unit test that it is not intended to com\u2010\npleting the ML model training but to train for a\nfew iterations and ensure that loss decreases\nwhile training.\nAvoid: Diff-testing with previously build ML\nmodels because such tests are hard to maintain.\nIntegration testing: The full ML pipeline should be\nintegration tested.\nAction: Create a fully automated test that regu\u2010\nlarly triggers the entire ML pipeline. The test\nshould validate that the data and code success\u2010\nfully finish each stage of training and the result\u2010\ning ML model performs as expected.\nAll integration tests should be run before the ML\nmodel reaches the production environment.\nValidating the ML model before serving it.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAction: Setting a threshold and testing for slow\ndegradation in model quality over many versions\non a validation set.\nAction: Setting a threshold and testing for sud\u2010\nden performance drops in a new version of the\nML model.\nML models are canaried before serving.\nAction: Testing that an ML model successfully\nloads into production serving and the prediction\non real-life data is generated as expected.\nTesting that the model in the training environment\ngives the same score as the model in the serving\nenvironment.\nAction: The difference between the performance\non the holdout data and the \u201cnext day\u201d data.\nSome difference will always exist. Pay attention\nto large differences in performance between\nholdout and \u201cnext day\u201d data because it may indi\u2010\ncate that some time-sensitive features cause\nML model degradation.\nAction: Avoid result differences between train\u2010\ning and serving environments. Applying a model\nto an example in the training data and the same\nexample at serving should result in the same\nprediction. A difference here indicates an engi\u2010\nneering error.\nMonitoring\nOnce the ML model has been deployed, it need to be\nmonitored to assure that the ML model performs as\nexpected. The following check list for model monitoring\nactivities in production is adopted from \u201cThe ML Test\nScore: A Rubric for ML Production Readiness and\nTechnical Debt Reduction\u201d by E.Breck et al. 2017:\nMonitor dependency changes throughout the com\u2010\nplete pipeline result in notification.\nData version change.\nChanges in source system.\nDependencies upgrade.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMonitor data invariants in training and serving in\u2010\nputs: Alert if data does not match the schema,\nwhich has been specified in the training step.\nAction: tuning of alerting threshold to ensure\nthat alerts remain useful and not misleading.\nMonitor whether training and serving features\ncompute the same value.\nSince the generation of training and serving fea\u2010\ntures might take place on physically separated\nlocations, we must carefully test that these dif\u2010\nferent code paths are logically identical.\nAction: (1) Log a sample of the serving traffic.\n(2) Compute distribution statistics (min, max,\navg, values, % of missing values, etc.) on the\ntraining features and the sampled serving fea\u2010\ntures and ensure that they match.\nMonitor the numerical stability of the ML model.\nAction: trigger alerts for the occurrence of any\nNaNs or infinities.\nMonitor computational performance of an ML sys\u2010\ntem. Both dramatic and slow-leak regression in\ncomputational performance should be notified.\nAction: measure the performance of versions\nand components of code, data, and model by\npre-setting the alerting threshold.\nAction: collect system usage metrics like GPU\nmemory allocation, network traffic, and disk us\u2010\nage. These metrics are useful for cloud costs\nestimations.\nMonitor how stale the system in production is.\nMeasure the age of the model. Older ML models\ntend to decay in performance.\nAction: Model monitoring is a continuous\nprocess, therefore it is important to identify the\nelements for monitoring and create a strategy\nfor the model monitoring before reaching\nproduction.\nMonitor the processes of feature generation as\nthey have impact on the model.\nAction: re-run feature generation on a frequentBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nbasis.\nMonitor degradation of the predictive quality of the\nML model on served data. Both dramatic and slow-\nleak regression in prediction quality should be\nnotified.\nDegradation might happened due to changes in\ndata or differing code paths, etc.\nAction: Measure statistical bias in predictions\n(avg in predictions in a slice of data). Models\nshould have nearly zero bias.\nAction: If a label is available immediately after\nthe prediction is made, we can measure the\nquality of prediction in real-time and identify\nproblems.\nThe picture below shows that the model monitoring\ncan be implemented by tracking the precision, recall,\nand F1-score of the model prediction along with the\ntime. The decrease of the precision, recall, and F1-score\ntriggers the model retraining, which leads to model\nrecovery.\n\u201cML Test Score\u201d System\nThe \u201cML Test Score\u201d measures the overall readiness of\nthe ML system for production.", "start_char_idx": 117797, "end_char_idx": 126741, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57328f93-818f-4727-8222-c596382ef989": {"__data__": {"id_": "57328f93-818f-4727-8222-c596382ef989", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}, {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}]}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "text": "The final ML Test Score\nis computed as follows:\nFor each test, half a point is awarded for executing\nthe test manually, with the results documented and\ndistributed.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nA full point is awarded if the there is a system in\nplace to run that test automatically on a repeated\nbasis.\nSum the score of each of the four sections individu\u2010\nally: Data Tests, Model Tests, ML Infrastructure\nTests, and Monitoring.\nThe final ML Test Score is computed by taking the\nminimum of the scores aggregated for each of the\nsections: Data Tests, Model Tests, ML\nInfrastructure Tests, and Monitoring.\nAfter computing the ML Test Score, we can reason\nabout the readiness of the ML system for production.\nThe following table provides the interpretation ranges:\nPoints Description\n0 More of the research project than a productionized\nsystem.\n(0,1] Not totally untested, but it is worth considering the\npossibility of serious holes in reliability.\n(1,2] There has been first pass at basic productionization,\nbut additional investment may be needed.\n(2,3] Reasonably tested, but it is possible that more of\nthose tests and procedures may be automated.\n(3,5] Strong level of automated testing and monitoring.\n>5 Exceptional level of automated testing and\nmonitoring.\nSource: \u201cThe ML Test Score: A Rubric for ML\nProduction Readiness and Technical Debt Reduction\u201d\nby E.Breck et al. 2017\nReproducibility\nReproducibility in a machine learning workflow means\nthat every phase of either data processing, ML model\ntraining, and ML model deployment should produce\nidentical results given the same input.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nPhase ChallengesHow to Ensure\nReproducibility\nCollecting\nDataGeneration of the\ntraining data can't\nbe reproduced (e.g\ndue to constant\ndatabase changes\nor data loading is\nrandom)1) Always backup your\ndata.\n2) Saving a snapshot\nof the data set (e.g.\non the cloud storage).\n3) Data sources\nshould be designed\nwith timestamps so\nthat a view of the\ndata at any point can\nbe retrieved.\n4) Data versioning.\nFeature\nEngineeringScenarios:\n1) Missing values\nare imputed with\nrandom or mean\nvalues.\n2) Removing labels\nbased on the per\u2010\ncentage of observa\u2010\ntion.\n3) Non-determinis\u2010\ntic feature extrac\u2010\ntion methods.1) Feature generation\ncode should be taken\nunder version control.\n2) Require repro\u2010\nducibility of the previ\u2010\nous step \"Collecting\nData\"\nModel\nTraining /\nModel BuildNon-determinism 1) Ensure the order of\nfeatures is always the\nsame.\n2) Document and au\u2010\ntomate feature trans\u2010\nformation, such as\nnormalization.\n3) Document and au\u2010\ntomate hyperparame\u2010\nter selection.\n4) For ensemble learn\u2010\ning: document and au\u2010\ntomate the combina\u2010\ntion of ML models.\nModel\nDeployment1) Training the ML\nmodel has been\nperformed with a\nsoftware version\nthat is different to\nthe production envi\u2010\nronment.\n2) The input data,\nwhich is required by\nthe ML model is\nmissing in the pro\u2010\nduction\nenvironment.1) Software versions\nand dependencies\nshould match the pro\u2010\nduction environment.\n2) Use a container\n(Docker) and docu\u2010\nment its specification,\nsuch as image version.\n3) Ideally, the same\nprogramming lan\u2010\nguage is used for\ntraining and\ndeployment.\nLoosely Coupled Architecture\n(Modularity)Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAccording to Gene Kim et al., in their book\n\u201cAccelerate\u201d, \u201chigh performance [in software delivery]\nis possible with all kinds of systems, provided that sys\u2010\ntems\u2014and the teams that build and maintain them \u2014\nare loosely coupled. This key architectural property en\u2010\nables teams to easily test and deploy individual com\u2010\nponents or services even as the organization and the\nnumber of systems it operates grow\u2014that is, it allows\norganizations to increase their productivity as they\nscale.\u201d\nAdditionally, Gene Kim et al., recommend to \u201cuse a\nloosely coupled architecture. This affects the extent to\nwhich a team can test and deploy their applications on\ndemand, without requiring orchestration with other\nservices. Having a loosely coupled architecture allows\nyour teams to work independently, without relying on\nother teams for support and services, which in turn en\u2010\nables them to work quickly and deliver value to the\norganization.\u201d\nRegarding ML-based software systems, it can be more\ndifficult to achieve loose coupling between machine\nlearning components than for traditional software\ncomponents. ML systems have weak component\nboundaries in several ways. For example, the outputs\nof ML models can be used as the inputs to another ML\nmodel and such interleaved dependencies might affect\none another during training and testing.\nBasic modularity can be achieved by structuring the\nmachine learning project. To set up a standard project\nstructure, we recommend using dedicated templates\nsuch as\nCookiecutter Data Science Project Template\nThe Data Science Lifecycle Process Template\nPyScaffold\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nIn the most resent study on the state of DevOps, the\nauthors emphasized four key metrics that capture the\neffectivenes of the software development and delivery\nof elite/high performing organisations: Deployment\nFrequency, Lead Time for Changes, Mean Time ToBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nRestore, and Change Fail Percentage. These metrics\nhave been found useful to measure and improve ones\nML-based software delivery. In the following table, we\ngive the definition of each of the metricts and make\nthe connection to MLOps.\nMetric DevOps MLOps\nDeployment\nFrequencyHow often\ndoes your or\u2010\nganization\ndeploy code\nto production\nor release it\nto end-users?ML Model Deployment\nFrequency depends on\n1) Model retraining require\u2010\nments (ranging from less\nfrequent to online training).\nTwo aspects are crucial for\nmodel retraining\n1.1) Model decay metric.\n1.2) New data availability.\n2) The level of automation of\nthe deployment process,\nwhich might range between\n*manual deployment* and\n*fully automated CI/CD\npipeline*.\nLead Time\nfor ChangesHow long\ndoes it take\nto go from\ncode commit\u2010\nted to code\nsuccessfully\nrunning in\nproduction?ML Model Lead Time for\nChanges depends on\n1) Duration of the explorative\nphase in Data Science in or\u2010\nder to finalize the ML model\nfor deployment/serving.\n2) Duration of the ML model\ntraining.\n3) The number and duration\nof manual steps during the\ndeployment process.\nMean Time\nTo Restore\n(MTTR)How long\ndoes it gener\u2010\nally take to\nrestore ser\u2010\nvice when a\nservice inci\u2010\ndent or a de\u2010\nfect that im\u2010\npacts users\noccurs (e.g.,\nunplanned\noutage or ser\u2010\nvice\nimpairment)?ML Model MTTR depends on\nthe number and duration of\nmanually performed model\ndebugging, and model de\u2010\nployment steps. In case,\nwhen the ML model should\nbe retrained, then MTTR also\ndepends on the duration of\nthe ML model training.\nAlternatively, MTTR refers to\nthe duration of the rollback\nof the ML model to the previ\u2010\nous version.\nChange\nFailure RateWhat per\u2010\ncentage of\nchanges to\nproduction or\nreleased to\nusers result in\ndegraded ser\u2010\nvice (e.g., lead\nto service im\u2010\npairment or\nservice out\u2010\nage) and sub\u2010\nsequently re\u2010ML Model Change Failure\nRate can be expressed in the\ndifference of the currently\ndeployed ML model perfor\u2010\nmance metrics to the previ\u2010\nous model's metrics, such as\nPrecision, Recall, F-1, accu\u2010\nracy, AUC, ROC, false posi\u2010\ntives, etc.", "start_char_idx": 126742, "end_char_idx": 135099, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d55eb44-a404-484a-a3b1-8b17efc1039a": {"__data__": {"id_": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}, {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}, {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, {"node_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701", "node_type": "1", "metadata": {}, "hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "class_name": "RelatedNodeInfo"}]}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "text": "ML Model Change\nFailure Rate is also related to\nA/B testing.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMetric DevOps MLOps\nquire remedi\u2010\nation (e.g., re\u2010\nquire a hotfix,\nrollback, fix\nforward,\npatch)?\nTo improve the effectiveness of the ML development\nand delivery process one should measure the above\nfour key metrics. A practical way to achieve such ef\u2010\nfectiveness is to implement the CI/CD pipeline first\nand adopt test-driven development for Data, ML\nModel, and Software Code pipelines.\nSummary of MLOps Principles and\nBest Practices\nThe complete ML development pipeline includes three\nlevels where changes can occur: Data, ML Model, and\nCode. This means that in machine learning-based sys\u2010\ntems, the trigger for a build might be the combination\nof a code change, data change or model change. The\nfollowing table summarizes the MLOps principles for\nbuilding ML-based software:\nMLOps\nPrinciples Data ML Model Code\nVersioning 1) Data\nprepara\u2010\ntion pipe\u2010\nlines\n2)\nFeatures\nstore\n3)\nDatasets\n4)\nMetadata1) ML model training pipe\u2010\nline\n2) ML model (object)\n3) Hyperparameters\n4) Experiment tracking1) Application\ncode\n2)\nConfigurations\nTesting 1) Data\nValidation\n(error de\u2010\ntection)\n2) Feature\ncreation\nunit\ntesting1) Model specification is unit\ntested\n2) ML model training pipe\u2010\nline is integration tested\n3) ML model is validated be\u2010\nfore being operationalized\n4) ML model staleness test\n(in production)\n5) Testing ML model rele\u2010\nvance and correctness\n6) Testing non-functional\nrequirements (security, fair\u2010\nness, interpretability)1) Unit testing\n2) Integration\ntesting for the\nend-to-end\npipeline\nAutomation 1) Data\ntransfor\u2010\nmation1) Data engineering pipeline\n2) ML model training pipe\u2010\nline1) ML model\ndeployment\nwith CI/CDBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMLOps\nPrinciples Data ML Model Code\n2) Feature\ncreation\nand\nmanipula\u2010\ntion3)\nHyperparameter/Parameter\nselection2) Application\nbuild\nReproducibility 1) Backup\ndata\n2) Data\nversioning\n3) Extract\nmetadata\n4)\nVersioning\nof feature\nengineer\u2010\ning1) Hyperparameter tuning is\nidentical between dev and\nprod\n2) The order of features is\nthe same\n3) Ensemble learning: the\ncombination of ML models\nis same\n4)The model pseudo-code is\ndocumented1) Versions of\nall dependen\u2010\ncies in dev and\nprod are iden\u2010\ntical\n2) Same tech\u2010\nnical stack for\ndev and pro\u2010\nduction envi\u2010\nronments\n3)\nReproducing\nresults by pro\u2010\nviding con\u2010\ntainer images\nor virtual\nmachines\nDeployment 1) Feature\nstore is\nused in\ndev and\nprod\nenviron\u2010\nments1) Containerization of the\nML stack\n2) REST API\n3) On-premise, cloud, or\nedge1) On-premise\ncloud, or edge\nMonitoring 1) Data\ndistribu\u2010\ntion\nchanges\n(training\nvs. serving\ndata)\n2)\nTraining\nvs serving\nfeatures1) ML model decay\n2) Numerical stability\n3) Computational perfor\u2010\nmance of the ML model1) Predictive\nquality of the\napplication on\nserving data\nAlong with the MLOps principles, following the set of\nbest practices should help reducing the \u201ctechnical\ndebt\u201d of the ML project:\nMLOps Best\nPractices DataML\nModel Code\nDocumentation 1) Data\nsources\n2) Decisions,\nhow/where\nto get data\n3) Labelling\nmethods1) Model\nselection\ncriteria\n2) Design\nof experi\u2010\nments\n3) Model\npseudo-\ncode1)\nDeployment\nprocess\n2) How to run\nlocallyBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMLOps Best\nPractices DataML\nModel Code\nProject\nStructure1) Data\nfolder for\nraw and\nprocessed\ndata\n2) A folder\nfor data en\u2010\ngineering\npipeline\n3) Test\nfolder for\ndata engi\u2010\nneering\nmethods1) A\nfolder\nthat con\u2010\ntains the\ntrained\nmodel\n2) A\nfolder for\nnote\u2010\nbooks\n3) A\nfolder for\nfeature\nengineer\u2010\ning\n4)A\nfolder for\nML\nmodel\nengineer\u2010\ning1) A folder for\nbash/shell\nscripts\n2) A folder\nfor tests\n3) A folder\nfor deploy\u2010\nment files\n(e.g Docker\nfiles)\nThe content of this site was created by\nDr. Larysa Visengeriyeva, Anja Kammer,\nIsabel B\u00e4r, Alexander Kniesz, and Michael\nPl\u00f6d (DDD Advisor). Design made by\nSebastian Eberstaller.\nIt is published under Creative Commons\nAttribution 4.0 International Public\nLicense and can therefore be shared and\nadapted with attribution (\"INNOQ\").\nMade and maintained by\nPrivacy | Site noticeBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMachine Learning Operations (MLOps):  Overview, Definition, and Architecture Dominik Kreuzberger  KIT  Germany dominik.kreuzberger@alumni.kit.edu Niklas K\u00fchl  KIT  Germany  kuehl@kit.edu  Sebastian Hirschl   IBM\u2020   Germany   sebastian.hirschl@de.ibm.comABSTRACT The final goal of all industrial machine learning (ML) projects is to develop ML products and rapidly bring them into production. However, it is highly challenging to automate and operationalize ML products and thus many ML endeavors fail to deliver on their expectations. The paradigm of Machine Learning Operations (MLOps) addresses this issue. MLOps includes several aspects, such as best practices, sets of concepts, and development culture. However, MLOps is still a vague term and its consequences for researchers and professionals are ambiguous. To address this gap, we conduct mixed-method research, including a literature review, a tool review, and expert interviews. As a result of these investigations, we provide an aggregated overview of the necessary principles, components, and roles, as well as the associated architecture and workflows. Furthermore, we furnish a definition of MLOps and highlight open challenges in the field. Finally, this work provides guidance for ML researchers and practitioners who want to automate and operate their ML products with a designated set of technologies. KEYWORDS CI/CD, DevOps, Machine Learning, MLOps, Operations, Workflow Orchestration 1 Introduction  Machine Learning (ML) has become an important technique to leverage the potential of data and allows businesses to be more innovative [1], efficient [13], and sustainable [22]. However, the success of many productive ML applications in real-world settings falls short of expectations [21]. A large number of ML projects fail\u2014with many ML proofs of concept never progressing as far as production [30]. From a research perspective, this does not come as a surprise as the ML community has focused extensively on the building of ML models, but not on (a) building production-ready ML products and (b) providing the necessary coordination of the resulting, often complex ML system components and infrastructure, including the roles required to automate and operate an ML system in a real-world setting [35]. For instance, in many industrial applications, data scientists still manage ML workflows manually  \u2020 This paper does not represent an official IBM statement to a great extent, resulting in many issues during the operations of the respective ML solution [26].  To address these issues, the goal of this work is to examine how manual ML processes can be automated and operationalized so that more ML proofs of concept can be brought into production. In this work, we explore the emerging ML engineering practice \u201cMachine Learning Operations\u201d\u2014MLOps for short\u2014precisely addressing the issue of designing and maintaining productive ML.", "start_char_idx": 135100, "end_char_idx": 143195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4086eb38-25e6-4618-bcab-2f85a3d32d00": {"__data__": {"id_": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}, {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, {"node_id": "5e42b7ba-699f-4007-b796-b1828f7088eb", "node_type": "1", "metadata": {}, "hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "class_name": "RelatedNodeInfo"}]}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "text": "We take a holistic perspective to gain a common understanding of the involved components, principles, roles, and architectures. While existing research sheds some light on various specific aspects of MLOps, a holistic conceptualization, generalization, and clarification of ML systems design are still missing. Different perspectives and conceptions of the term \u201cMLOps\u201d might lead to misunderstandings and miscommunication, which, in turn, can lead to errors in the overall setup of the entire ML system. Thus, we ask the research question: RQ: What is MLOps? To answer that question, we conduct a mixed-method research endeavor to (a) identify important principles of MLOps, (b) carve out functional core components, (c) highlight the roles necessary to successfully implement MLOps, and (d) derive a general architecture for ML systems design. In combination, these insights result in a definition of MLOps, which contributes to a common understanding of the term and related concepts.  In so doing, we hope to positively impact academic and practical discussions by providing clear guidelines for professionals and researchers alike with precise responsibilities. These insights can assist in allowing more proofs of concept to make it into production by having fewer errors in the system\u2019s design and, finally, enabling more robust predictions in real-world environments. The remainder of this work is structured as follows. We will first elaborate on the necessary foundations and related work in the field. Next, we will give an overview of the utilized methodology, consisting of a literature review, a tool review, and an interview study. We then present the insights derived from the application of the methodology and conceptualize these by providing a unifying definition. We conclude the paper with a short summary, limitations, and outlook. \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  2 Foundations of DevOps In the past, different software process models and development methodologies surfaced in the field of software engineering. Prominent examples include waterfall [37] and the agile manifesto [5]. Those methodologies have similar aims, namely to deliver production-ready software products. A concept called \u201cDevOps\u201d emerged in the years 2008/2009 and aims to reduce issues in software development [9,31]. DevOps is more than a pure methodology and rather represents a paradigm addressing social and technical issues in organizations engaged in software development. It has the goal of eliminating the gap between development and operations and emphasizes collaboration, communication, and knowledge sharing. It ensures automation with continuous integration, continuous delivery, and continuous deployment (CI/CD), thus allowing for fast, frequent, and reliable releases. Moreover, it is designed to ensure continuous testing, quality assurance, continuous monitoring, logging, and feedback loops. Due to the commercialization of DevOps, many DevOps tools are emerging, which can be differentiated into six groups [23,28]: collaboration and knowledge sharing (e.g., Slack, Trello, GitLab wiki), source code management (e.g., GitHub, GitLab), build process (e.g., Maven), continuous integration (e.g., Jenkins, GitLab CI), deployment automation (e.g., Kubernetes, Docker), monitoring and logging (e.g., Prometheus, Logstash). Cloud environments are increasingly equipped with ready-to-use DevOps tooling that is designed for cloud use, facilitating the efficient generation of value [38]. With this novel shift towards DevOps, developers need to care about what they develop, as they need to operate it as well. As empirical results demonstrate, DevOps ensures better software quality [34]. People in the industry, as well as academics, have gained a wealth of experience in software engineering using DevOps. This experience is now being used to automate and operationalize ML. 3 Methodology To derive insights from the academic knowledge base while also drawing upon the expertise of practitioners from the field, we apply a mixed-method approach, as depicted in Figure 1. As a first step, we conduct a structured literature review [20,43] to obtain an overview of relevant research. Furthermore, we review relevant tooling support in the field of MLOps to gain a better understanding of the technical components involved. Finally, we conduct semi-structured interviews [33,39] with experts from different domains. On that basis, we conceptualize the term \u201cMLOps\u201d and elaborate on our findings by synthesizing literature and interviews in the next chapter (\u201cResults\u201d). 3.1 Literature Review To ensure that our results are based on scientific knowledge, we conduct a systematic literature review according to the method of Webster and Watson [43] and Kitchenham et al. [20]. After an initial exploratory search, we define our search query as follows: (((\"DevOps\" OR \"CICD\" OR \"Continuous Integration\" OR \"Continuous Delivery\" OR \"Continuous Deployment\") AND \"Machine Learning\") OR \"MLOps\" OR \"CD4ML\"). We query the \nscientific databases of Google Scholar, Web of Science, Science Direct, Scopus, and the Association for Information Systems eLibrary. It should be mentioned that the use of DevOps for ML, MLOps, and continuous practices in combination with ML is a relatively new field in academic literature. Thus, only a few peer-reviewed studies are available at the time of this research. Nevertheless, to gain experience in this area, the search included non-peer-reviewed literature as well. The search was performed in May 2021 and resulted in 1,864 retrieved articles. Of those, we screened 194 papers in detail. From that group, 27 articles were selected based on our inclusion and exclusion criteria (e.g., the term MLOps or DevOps and CI/CD in combination with ML was described in detail, the article was written in English, etc.). All 27 of these articles were peer-reviewed. 3.2 Tool Review After going through 27 articles and eight interviews, various open-source tools, frameworks, and commercial cloud ML services were identified. These tools, frameworks, and ML services were reviewed to gain an understanding of the technical components of which they consist. An overview of the identified tools is depicted in Table 1 of the Appendix. 3.3 Interview Study To answer the research questions with insights from practice, we conduct semi-structured expert interviews according to Myers and Newman [33]. One major aspect in the research design of expert interviews is choosing an appropriate sample size [8]. We apply a theoretical sampling approach [12], which allows us to choose experienced interview partners to obtain high-quality data. Such data can provide meaningful insights with a limited number of interviews. To get an adequate sample group and reliable insights, we use LinkedIn\u2014a social network for professionals\u2014to identify experienced ML professionals with profound MLOps knowledge on a global level. To gain insights from various perspectives, we choose interview partners from different organizations and industries, different countries and nationalities, as well as different genders. Interviews are conducted until no new categories and concepts emerge in the analysis of the data. In total, we conduct eight interviews with experts (\u03b1 - \u03b8), whose details are depicted in Table 2 of the Appendix. According to Glaser and MethodologyResultsMLOpsPrinciplesComponentsRolesArchitectureLiterature Review(27 articles)Tool Review(11 tools)Interview Study(8 interviewees)\nFigure 1. Overview of the methodology \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n Strauss [5, p.61], this stage is called \u201ctheoretical saturation.\u201d All interviews are conducted between June and August 2021.  With regard to the interview design, we prepare a semi-structured guide with several questions, documented as an interview script [33]. During the interviews, \u201csoft laddering\u201d is used with \u201chow\u201d and \u201cwhy\u201d questions to probe the interviewees\u2019 means-end chain [39]. This methodical approach allowed us to gain additional insight into the experiences of the interviewees when required. All interviews are recorded and then transcribed. To evaluate the interview transcripts, we use an open coding scheme [8]. 4 Results We apply the described methodology and structure our resulting insights into a presentation of important principles, their resulting instantiation as components, the description of necessary roles, as well as a suggestion for the architecture and workflow resulting from the combination of these aspects. Finally, we derive the conceptualization of the term and provide a definition of MLOps. 4.1 Principles A principle is viewed as a general or basic truth, a value, or a guide for behavior. In the context of MLOps, a principle is a guide to how things should be realized in MLOps and is closely related to the term \u201cbest practices\u201d from the professional sector. Based on the outlined methodology, we identified nine principles required to realize MLOps. Figure 2 provides an illustration of these principles and links them to the components with which they are associated.  \nP1 CI/CD automation. CI/CD automation provides continuous integration, continuous delivery, and continuous deployment. It carries out the build, test, delivery, and deploy steps. It provides fast feedback to developers regarding the success or failure of certain steps, thus increasing the overall productivity [15,17,26,27,35,42,46] [\u03b1, \u03b2, \u03b8].  P2 Workflow orchestration. Workflow orchestration coordinates the tasks of an ML workflow pipeline according to directed acyclic graphs (DAGs). DAGs define the task execution order by considering relationships and dependencies [14,17,26,32,40,41] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b6, \u03b7]. P3 Reproducibility.", "start_char_idx": 143196, "end_char_idx": 152983, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dee02cb-3702-43aa-ab89-7908a515b978": {"__data__": {"id_": "5dee02cb-3702-43aa-ab89-7908a515b978", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}, {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, {"node_id": "30da43e3-e957-4749-833b-2a3da21bfd1a", "node_type": "1", "metadata": {}, "hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "class_name": "RelatedNodeInfo"}]}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "text": "P3 Reproducibility. Reproducibility is the ability to reproduce an ML experiment and obtain the exact same results [14,32,40,46] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b7]. P4 Versioning. Versioning ensures the versioning of data, model, and code to enable not only reproducibility, but also traceability (for compliance and auditing reasons) [14,32,40,46] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b7]. P5 Collaboration. Collaboration ensures the possibility to work collaboratively on data, model, and code. Besides the technical aspect, this principle emphasizes a collaborative and communicative work culture aiming to reduce domain silos between different roles [14,26,40] [\u03b1, \u03b4, \u03b8].  P6 Continuous ML training & evaluation. Continuous training means periodic retraining of the ML model based on new feature data. Continuous training is enabled through the support of a monitoring component, a feedback loop, and an automated ML workflow pipeline. Continuous training always includes an evaluation run to assess the change in model quality [10,17,19,46] [\u03b2, \u03b4, \u03b7, \u03b8].  P7 ML metadata tracking/logging. Metadata is tracked and logged for each orchestrated ML workflow task. Metadata tracking and logging is required for each training job iteration (e.g., training date and time, duration, etc.), including the model specific metadata\u2014e.g., used parameters and the resulting performance metrics, model lineage: data and code used\u2014to ensure the full traceability of experiment runs [26,27,29,32,35] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8]. P8 Continuous monitoring. Continuous monitoring implies the periodic assessment of data, model, code, infrastructure resources, and model serving performance (e.g., prediction accuracy) to detect potential errors or changes that influence the product quality [4,7,10,27,29,42,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7].  P9 Feedback loops. Multiple feedback loops are required to integrate insights from the quality assessment step into the development or engineering process (e.g., a feedback loop from the experimental model engineering stage to the previous feature engineering stage). Another feedback loop is required from the monitoring component (e.g., observing the model serving performance) to the scheduler to enable the retraining [4,6,7,17,27,46] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b7, \u03b8]. 4.2 Technical Components After identifying the principles that need to be incorporated into MLOps, we now elaborate on the precise components and implement them in the ML systems design. In the following, the components are listed and described in a generic way with their essential functionalities. The references in brackets refer to the respective principles that the technical components are implementing. C1 CI/CD Component (P1, P6, P9). The CI/CD component ensures continuous integration, continuous delivery, and continuous deployment. It takes care of the build, test, delivery, and deploy steps. It provides rapid feedback to developers regarding the success or failure of certain steps, thus increasing the overall productivity [10,15,17,26,35,46] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7]. Examples are Jenkins [17,26] and GitHub actions (\u03b7). Source Code Repository CI/CD ComponentWorkflow Orchestration ComponentFeatureStoresModel Training InfrastructureModel Registry\nML Metadata StoresMonitoring ComponentModel Serving ComponentPRINCIPLESP1CI/CD automationP2Workflow orchestrationP3ReproducibilityP4Versioning of data, code, modelP5CollaborationP6Continuous ML training & evaluationP7ML metadata trackingP8Continuous monitoringP9Feedback loopsP1P6P9P4P5P2P3P6P6P3P4P3P4P8P9P4P7P1\nCOMPONENTFigure 2. Implementation of principles within technical components \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  C2 Source Code Repository (P4, P5). The source code repository ensures code storing and versioning. It allows multiple developers to commit and merge their code [17,25,42,44,46] [\u03b1, \u03b2, \u03b3, \u03b6, \u03b8]. Examples include Bitbucket [11] [\u03b6], GitLab [11,17] [\u03b6], GitHub [25] [\u03b6 ,\u03b7], and Gitea [46]. C3 Workflow Orchestration Component (P2, P3, P6). The workflow orchestration component offers task orchestration of an ML workflow via directed acyclic graphs (DAGs). These graphs represent execution order and artifact usage of single steps of the workflow [26,32,35,40,41,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7]. Examples include Apache Airflow [\u03b1, \u03b6], Kubeflow Pipelines [\u03b6], Luigi [\u03b6], AWS SageMaker Pipelines [\u03b2], and Azure Pipelines [\u03b5]. C4 Feature Store System (P3, P4). A feature store system ensures central storage of commonly used features. It has two databases configured: One database as an offline feature store to serve features with normal latency for experimentation, and one database as an online store to serve features with low latency for predictions in production [10,14] [\u03b1, \u03b2, \u03b6, \u03b5, \u03b8]. Examples include Google Feast [\u03b6], Amazon AWS Feature Store [\u03b2, \u03b6], Tecton.ai and Hopswork.ai [\u03b6]. This is where most of the data for training ML models will come from. Moreover, data can also come directly from any kind of data store. C5 Model Training Infrastructure (P6). The model training infrastructure provides the foundational computation resources, e.g., CPUs, RAM, and GPUs. The provided infrastructure can be either distributed or non-distributed. In general, a scalable and distributed infrastructure is recommended [7,10,24\u201326,29,40,45,46] [\u03b4, \u03b6, \u03b7, \u03b8]. Examples include local machines (not scalable) or cloud computation [7] [\u03b7, \u03b8], as well as non-distributed or distributed computation (several worker nodes) [25,27]. Frameworks supporting computation are Kubernetes [\u03b7, \u03b8] and Red Hat OpenShift [\u03b3]. C6 Model Registry (P3, P4). The model registry stores centrally the trained ML models together with their metadata. It has two main functionalities: storing the ML artifact and storing the ML metadata (see C7) [4,6,14,17,26,27] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8]. Advanced storage examples include MLflow [\u03b1, \u03b7, \u03b6], AWS SageMaker Model Registry [\u03b6], Microsoft Azure ML Model Registry [\u03b6], and Neptune.ai [\u03b1]. Simple storage examples include Microsoft Azure Storage, Google Cloud Storage, and Amazon AWS S3 [17]. C7 ML Metadata Stores (P4, P7). ML metadata stores allow for the tracking of various kinds of metadata, e.g., for each orchestrated ML workflow pipeline task. Another metadata store can be configured within the model registry for tracking and logging the metadata of each training job (e.g., training date and time, duration, etc.), including the model specific metadata\u2014e.g., used parameters and the resulting performance metrics, model lineage: data and code used [14,25\u201327,32] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b8]. Examples include orchestrators with built-in metadata stores tracking each step of experiment pipelines [\u03b1] such as Kubeflow Pipelines [\u03b1,\u03b6], AWS SageMaker Pipelines [\u03b1,\u03b6], Azure ML, and IBM Watson Studio [\u03b3]. MLflow provides an advanced metadata store in combination with the model registry [32,35].  C8 Model Serving Component (P1). The model serving component can be configured for different purposes. Examples are online inference for real-time predictions or batch inference for predictions using large volumes of input data. The serving can be provided, e.g., via a REST API. As a foundational infrastructure layer, a scalable and distributed model serving infrastructure is recommended [7,11,25,40,45,46] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b7, \u03b8]. One example of a model serving component configuration is the use of Kubernetes and Docker technology to containerize the ML model, and leveraging a Python web application framework like Flask [17] with an API for serving [\u03b1]. Other Kubernetes supported frameworks are KServing of Kubeflow [\u03b1], TensorFlow Serving, and Seldion.io serving [40]. Inferencing could also be realized with Apache Spark for batch predictions [\u03b8]. Examples of cloud services include Microsoft Azure ML REST API [\u03b5], AWS SageMaker Endpoints [\u03b1, \u03b2], IBM Watson Studio [\u03b3], and Google Vertex AI prediction service [\u03b4]. C9 Monitoring Component (P8, P9). The monitoring component takes care of the continuous monitoring of the model serving performance (e.g., prediction accuracy).", "start_char_idx": 152964, "end_char_idx": 161004, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4144ce9-75c8-46ed-a669-17acb338e2a3": {"__data__": {"id_": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}, {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}]}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "text": "Additionally, monitoring of the ML infrastructure, CI/CD, and orchestration are required [7,10,17,26,29,36,46] [\u03b1, \u03b6, \u03b7, \u03b8]. Examples include Prometheus with Grafana [\u03b7, \u03b6], ELK stack (Elasticsearch, Logstash, and Kibana) [\u03b1, \u03b7, \u03b6], and simply TensorBoard [\u03b8]. Examples with built-in monitoring capabilities are Kubeflow [\u03b8], MLflow [\u03b7], and AWS SageMaker model monitor or cloud watch [\u03b6]. 4.3 Roles After describing the principles and their resulting instantiation of components, we identify necessary roles in order to realize MLOps in the following. MLOps is an interdisciplinary group process, and the interplay of different roles is crucial to design, manage, automate, and operate an ML system in production. In the following, every role, its purpose, and related tasks are briefly described: R1 Business Stakeholder (similar roles: Product Owner, Project Manager). The business stakeholder defines the business goal to be achieved with ML and takes care of the communication side of the business, e.g., presenting the return on investment (ROI) generated with an ML product [17,24,26] [\u03b1, \u03b2, \u03b4, \u03b8].  R2D2Solution Architect (similar role: IT Architect). The solution architect designs the architecture and defines the technologies to be used, following a thorough evaluation [17,27] [\u03b1, \u03b6].  R3 Data Scientist (similar roles: ML Specialist, ML Developer). The data scientist translates the business problem into an ML problem and takes care of the model engineering, including the selection of the best-performing algorithm and hyperparameters [7,14,26,29] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8].  R4 Data Engineer (similar role: DataOps Engineer). The data engineer builds up and manages data and feature engineering pipelines. Moreover, this role ensures proper data ingestion to the databases of the feature store system [14,29,41] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8]. \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n  R5 Software Engineer. The software engineer applies software design patterns, widely accepted coding guidelines, and best practices to turn the raw ML problem into a well-engineered product [29] [\u03b1, \u03b3]. R6 DevOps Engineer. The DevOps engineer bridges the gap between development and operations and ensures proper CI/CD automation, ML workflow orchestration, model deployment to production, and monitoring [14\u201316,26] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8]. R7 ML Engineer/MLOps Engineer. The ML engineer or MLOps engineer combines aspects of several roles and thus has cross-domain knowledge. This role incorporates skills from data scientists, data engineers, software engineers, DevOps engineers, and backend engineers (see Figure 3). This cross-domain role builds up and operates the ML infrastructure, manages the automated ML workflow pipelines and model deployment to production, and monitors both the model and the ML infrastructure [14,17,26,29] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8].  \n  5 Architecture and Workflow On the basis of the identified principles, components, and roles, we derive a generalized MLOps end-to-end architecture to give ML researchers and practitioners proper guidance. It is depicted in Figure 4. Additionally, we depict the workflows, i.e., the sequence in which the different tasks are executed in the different stages. The artifact was designed to be technology-agnostic. Therefore, ML researchers and practitioners can choose the best-fitting technologies and frameworks for their needs.  As depicted in Figure 4, we illustrate an end-to-end process, from MLOps project initiation to the model serving. It includes (A) the MLOps project initiation steps; (B) the feature engineering pipeline, including the data ingestion to the feature store; (C) the experimentation; and (D) the automated ML workflow pipeline up to the model serving.  (A) MLOps project initiation. (1) The business stakeholder (R1) analyzes the business and identifies a potential business problem that can be solved using ML. (2) The solution architect (R2) defines the architecture design for the overall ML system and, decides on the technologies to be used after a thorough evaluation. (3) The data scientist (R3) derives an ML problem\u2014such as whether regression or classification should be used\u2014from the business goal. (4) The data engineer (R4) and the data scientist (R3) work together in an effort to understand which data is required to solve the problem. (5) Once the answers are clarified, the data engineer (R4) and data scientist (R3) collaborate to locate the raw data sources for the initial data analysis. They check the distribution, and quality of the data, as well as performing validation checks. Furthermore, they ensure that the incoming data from the data sources is labeled, meaning that a target attribute is known, as this is a mandatory requirement for supervised ML. In this example, the data sources already had labeled data available as the labeling step was covered during an upstream process. (B1) Requirements for feature engineering pipeline. The features are the relevant attributes required for model training. After the initial understanding of the raw data and the initial data analysis, the fundamental requirements for the feature engineering pipeline are defined, as follows: (6) The data engineer (R4) defines the data transformation rules (normalization, aggregations) and cleaning rules to bring the data into a usable format. (7) The data scientist (R3) and data engineer (R4) together define the feature engineering rules, such as the calculation of new and more advanced features based on other features. These initially defined rules must be iteratively adjusted by the data scientist (R3) either based on the feedback coming from the experimental model engineering stage or from the monitoring component observing the model performance. (B2) Feature engineering pipeline. The initially defined requirements for the feature engineering pipeline are taken by the data engineer (R4) and software engineer (R5) as a starting point to build up the prototype of the feature engineering pipeline. The initially defined requirements and rules are updated according to the iterative feedback coming either from the experimental model engineering stage or from the monitoring component observing the model\u2019s performance in production. As a foundational requirement, the data engineer (R4) defines the code required for the CI/CD (C1) and orchestration component (C3) to ensure the task orchestration of the feature engineering pipeline. This role also defines the underlying infrastructure resource configuration. (8) First, the feature engineering pipeline connects to the raw data, which can be (for instance) streaming data, static batch data, or data from any cloud storage. (9) The data will be extracted from the data sources. (10) The data preprocessing begins with data transformation and cleaning tasks. The transformation rule artifact defined in the requirement gathering stage serves as input for this task, and the main aim of this task is to bring the data into a usable format. These transformation rules are continuously improved based on the feedback.  Data Scientist(ML model development)Data Engineer(data management, data pipeline management) Backend Engineer(ML infrastructure management)DevOps Engineer(Software engineer with DevOps skills,ML workflow pipeline orchestration,CI/CD pipeline management,monitoring) ML Engineer /MLOps Engineer(cross-functional managementof ML environment and assets:ML infrastructure,ML models,ML workflow pipelines,data Ingestion,monitoring)\nDS\nDE\nDO\nML\nBE\nSE{\u2026}Software Engineer(applies design patterns andcoding guidelines)Figure 3. Roles and their intersections contributing to the MLOps paradigm \n\n  Figure 4. End-to-end MLOps architecture and workflow with functional components and roles  (11) The feature engineering task calculates new and more advanced features based on other features. The predefined feature engineering rules serve as input for this task. These feature engineering rules are continuously improved based on the feedback. (12) Lastly, a data ingestion job loads batch or streaming data into the feature store system (C4). The target can either be the offline or online database (or any kind of data store). (C) Experimentation. Most tasks in the experimentation stage are led by the data scientist (R3). The data scientist is supported by the software engineer (R5). (13) The data scientist (R3) connects to the feature store system (C4) for the data analysis. (Alternatively, the data scientist (R3) can also connect to the raw data for an initial analysis.) In case of any required data adjustments, the data \nScheduler(trigger when new data available,event-based orperiodical)\nMonitoring componentcontinuous monitoring of model serving performanceML metadata storemodel status (staging or prod)parameter & perf.", "start_char_idx": 161005, "end_char_idx": 169811, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a215e7c-9ec7-4443-993c-7d022cab1064": {"__data__": {"id_": "6a215e7c-9ec7-4443-993c-7d022cab1064", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}, {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, {"node_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402", "node_type": "1", "metadata": {}, "hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "class_name": "RelatedNodeInfo"}]}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "text": "metricsmodel training computation infrastructureML metadata storeML model\nmodelvalidation\ndataextractiondatapreparation & validationmodel training/ refinementmodelvalidationexportmodelpush to model registryWorkflow orchestration component\nmodel training computation infrastructureExperimentation\nAutomated ML Workflow Pipeline ML Experimentation ZoneML Production Zoneprod ready ML model\nModel serving component(prediction on new batch or streaming data)ML metadata store(metadata logging of each ML workflow task)\nFeedback Loop \u2013enables continuous training / retraining & continuous improvementnew versioned feature data (batch or streaming data)model serving computation infrastructureML workflow pipeline codeversioned artifacts: model + ML training & workflow codemodel engineering (best algorithm selection, hyperparameter tuning)\nversioned feature dataRepositoryexportmodeldata analysisdatapreparation & validationmodeltrainingdata preprocessingFeature Engineering Pipelinedefine transformation& cleaning rulestransformation rulesdefine feature engineering rulesfeature engineering rules\nstreaming data\nbatchdatacloud storage\nBusinessStakeholderData ScientistDataEngineerDevOpsEngineerML EngineerDO\nDS\nML\nDE\nBS\nML\nDO\nML\nOR\nDS\nDE\nML\nDO\nML\nOR\nDE\nDS\nDE\nAND\nLEGENDBusiness problemanalysis(define goal)deriveML problem from business goal(e.g., classification, regression)MLOps Project InitiationUnderstand required data to solve problem(data available?, where is it?, how to get it?)BS\nDS\nConnect to raw data for initial data analysis(distribution analysis, data quality checks, validation checks)\nDE\nDS\nAND\nfeature engineering(e.g., calc. of new features)Connect toraw datadata extractiondata transformation & cleaningdata Ingestion job(batch or streaming)Data Sources\ndata processing computation infrastructure\nDE\nDS\nAND\ndata pipeline codeA\nC\nDB2Requirements for feature engineering pipeline\nDO\nML\nORModel RegistryFeedback Loopfeature requirements (iterative)\nCI / CD componentartifact store(e.g., Image Registry)continuous integration / continuous delivery (build, test and push)CI/CD componentartifact storeData Engineering Zone\ncontinuous deployment(build, test and deploy model)modelservingcodeorchestration component\nDO\nML\nORB1MLOps Project Initiation Zone\nversioned feature dataFeature storesystemonline DB(low-latency)\noffline DB(normallatency)\nVersioned Feature FlowFeedback loop flowData Engineering flowModel / Code flow\nDE\nGeneral process flowIT SolutionArchitectSASAdesigns architecture and technologies to be used\n(labeleddata)model training codeAND\nSE{\u2026}SoftwareEngineerSE{\u2026}SE{\u2026}\nSE{\u2026}SE{\u2026}\n(best algorithm selection, parameter & perf. metric logging)\n\n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  scientist (R3) reports the required changes back to the data engineering zone (feedback loop).  (14) Then the preparation and validation of the data coming from the feature store system is required. This task also includes the train and test split dataset creation. (15) The data scientist (R3) estimates the best-performing algorithm and hyperparameters, and the model training is then triggered with the training data (C5). The software engineer (R5) supports the data scientist (R3) in the creation of well-engineered model training code. (16) Different model parameters are tested and validated interactively during several rounds of model training. Once the performance metrics indicate good results, the iterative training stops. The best-performing model parameters are identified via parameter tuning. The model training task and model validation task are then iteratively repeated; together, these tasks can be called \u201cmodel engineering.\u201d The model engineering aims to identify the best-performing algorithm and hyperparameters for the model. (17) The data scientist (R3) exports the model and commits the code to the repository. As a foundational requirement, either the DevOps engineer (R6) or the ML engineer (R7) defines the code for the (C2) automated ML workflow pipeline and commits it to the repository. Once either the data scientist (R3) commits a new ML model or the DevOps engineer (R6) and the ML engineer (R7) commits new ML workflow pipeline code to the repository, the CI/CD component (C1) detects the updated code and triggers automatically the CI/CD pipeline carrying out the build, test, and delivery steps. The build step creates artifacts containing the ML model and tasks of the ML workflow pipeline. The test step validates the ML model and ML workflow pipeline code. The delivery step pushes the versioned artifact(s)\u2014such as images\u2014to the artifact store (e.g., image registry). (D) Automated ML workflow pipeline. The DevOps engineer (R6) and the ML engineer (R7) take care of the management of the automated ML workflow pipeline. They also manage the underlying model training infrastructure in the form of hardware resources and frameworks supporting computation such as Kubernetes (C5). The workflow orchestration component (C3) orchestrates the tasks of the automated ML workflow pipeline. For each task, the required artifacts (e.g., images) are pulled from the artifact store (e.g., image registry). Each task can be executed via an isolated environment (e.g., containers). Finally, the workflow orchestration component (C3) gathers metadata for each task in the form of logs, completion time, and so on. Once the automated ML workflow pipeline is triggered, each of the following tasks is managed automatically: (18) automated pulling of the versioned features from the feature store systems (data extraction). Depending on the use case, features are extracted from either the offline or online database (or any kind of data store). (19) Automated data preparation and validation; in addition, the train and test split is defined automatically. (20) Automated final model training on new unseen data (versioned features). The algorithm and hyperparameters are already predefined based on the settings of the previous experimentation stage. The model is retrained and refined. (21) Automated model evaluation and iterative adjustments of hyperparameters are executed, if required. Once the performance metrics indicate good results, the automated iterative training stops. The automated model training task and the automated model validation task can be iteratively repeated until a good result has been achieved. (22) The trained model is then exported and (23) pushed to the model registry (C6), where it is stored e.g., as code or containerized together with its associated configuration and environment files. For all training job iterations, the ML metadata store (C7) records metadata such as parameters to train the model and the resulting performance metrics. This also includes the tracking and logging of the training job ID, training date and time, duration, and sources of artifacts. Additionally, the model specific metadata called \u201cmodel lineage\u201d combining the lineage of data and code is tracked for each newly registered model. This includes the source and version of the feature data and model training code used to train the model. Also, the model version and status (e.g., staging or production-ready) is recorded. Once the status of a well-performing model is switched from staging to production, it is automatically handed over to the DevOps engineer or ML engineer for model deployment. From there, the (24) CI/CD component (C1) triggers the continuous deployment pipeline. The production-ready ML model and the model serving code are pulled (initially prepared by the software engineer (R5)). The continuous deployment pipeline carries out the build and test step of the ML model and serving code and deploys the model for production serving. The (25) model serving component (C8) makes predictions on new, unseen data coming from the feature store system (C4). This component can be designed by the software engineer (R5) as online inference for real-time predictions or as batch inference for predictions concerning large volumes of input data. For real-time predictions, features must come from the online database (low latency), whereas for batch predictions, features can be served from the offline database (normal latency). Model-serving applications are often configured within a container and prediction requests are handled via a REST API. As a foundational requirement, the ML engineer (R7) manages the model-serving computation infrastructure. The (26) monitoring component (C9) observes continuously the model-serving performance and infrastructure in real-time. Once a certain threshold is reached, such as detection of low prediction accuracy, the information is forwarded via the feedback loop. The (27) feedback loop is connected to the monitoring component (C9) and ensures fast and direct feedback allowing for more robust and improved predictions. It enables continuous training, retraining, and improvement. With the support of the feedback loop, information is transferred from the model monitoring component to several upstream receiver points, such as the experimental stage, data engineering zone, and the scheduler (trigger). The feedback to the experimental stage is taken forward by the data scientist for further model improvements. The feedback to the data engineering zone allows for the adjustment of the features prepared for the feature store system. Additionally, the detection of concept drifts as a feedback mechanism can enable (28) continuous training. For instance, once the model-monitoring component (C9) detects a drift \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n in the data [3], the information is forwarded to the scheduler, which then triggers the automated ML workflow pipeline for retraining (continuous training). A change in adequacy of the deployed model can be detected using distribution comparisons to identify drift.", "start_char_idx": 169812, "end_char_idx": 179698, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a862d80-27c2-44d1-b5e1-c046d6d97794": {"__data__": {"id_": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}, {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, {"node_id": "6182115c-f574-4e4a-a6a3-e3380a7b3e7e", "node_type": "1", "metadata": {}, "hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "class_name": "RelatedNodeInfo"}]}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "text": "A change in adequacy of the deployed model can be detected using distribution comparisons to identify drift. Retraining is not only triggered automatically when a statistical threshold is reached; it can also be triggered when new feature data is available, or it can be scheduled periodically. 6 Conceptualization With the findings at hand, we conceptualize the literature and interviews. It becomes obvious that the term MLOps is positioned at the intersection of machine learning, software engineering, DevOps, and data engineering (see Figure 5 in the Appendix). We define MLOps as follows: MLOps (Machine Learning Operations) is a paradigm, including aspects like best practices, sets of concepts, as well as a development culture when it comes to the end-to-end conceptualization, implementation, monitoring, deployment, and scalability of machine learning products. Most of all, it is an engineering practice that leverages three contributing disciplines: machine learning, software engineering (especially DevOps), and data engineering. MLOps is aimed at productionizing machine learning systems by bridging the gap between development (Dev) and operations (Ops). Essentially, MLOps aims to facilitate the creation of machine learning products by leveraging these principles: CI/CD automation, workflow orchestration, reproducibility; versioning of data, model, and code; collaboration; continuous ML training and evaluation; ML metadata tracking and logging; continuous monitoring; and feedback loops. 7 Open Challenges Several challenges for adopting MLOps have been identified after conducting the literature review, tool review, and interview study. These open challenges have been organized into the categories of organizational, ML system, and operational challenges. Organizational challenges. The mindset and culture of data science practice is a typical challenge in organizational settings [2]. As our insights from literature and interviews show, to successfully develop and run ML products, there needs to be a culture shift away from model-driven machine learning toward a product-oriented discipline [\u03b3]. The recent trend of data-centric AI also addresses this aspect by putting more focus on the data-related aspects taking place prior to the ML model building. Especially the roles associated with these activities should have a product-focused perspective when designing ML products [\u03b3]. A great number of skills and individual roles are required for MLOps (\u03b2). As our identified sources point out, there is a lack of highly skilled experts for these roles\u2014especially with regard to architects, data engineers, ML engineers, and DevOps engineers [29,41,44] [\u03b1, \u03b5]. This is related to the necessary education of future professionals\u2014as MLOps is typically not part of data science education [7] [\u03b3]. Posoldova (2020) [35] further stresses this aspect by remarking that students should not only learn about model creation, but must also learn about technologies and components necessary to build functional ML products.  Data scientists alone cannot achieve the goals of MLOps. A multi-disciplinary team is required [14], thus MLOps needs to be a group process [\u03b1]. This is often hindered because teams work in silos rather than in cooperative setups [\u03b1]. Additionally, different knowledge levels and specialized terminologies make communication difficult. To lay the foundations for more fruitful setups, the respective decision-makers need to be convinced that an increased MLOps maturity and a product-focused mindset will yield clear business improvements [\u03b3]. ML system challenges. A major challenge with regard to MLOps systems is designing for fluctuating demand, especially in relation to the process of ML training [7]. This stems from potentially voluminous and varying data [10], which makes it difficult to precisely estimate the necessary infrastructure resources (CPU, RAM, and GPU) and requires a high level of flexibility in terms of scalability of the infrastructure [7,26] [\u03b4]. Operational challenges. In productive settings, it is challenging to operate ML manually due to different stacks of software and hardware components and their interplay. Therefore, robust automation is required [7,17]. Also, a constant incoming stream of new data forces retraining capabilities. This is a repetitive task which, again, requires a high level of automation [18] [\u03b8]. These repetitive tasks yield a large number of artifacts that require a strong governance [24,29,40] as well as versioning of data, model, and code to ensure robustness and reproducibility [11,27,29]. Lastly, it is challenging to resolve a potential support request (e.g., by finding the root cause), as many parties and components are involved. Failures can be a combination of ML infrastructure and software [26]. 8 Conclusion With the increase of data availability and analytical capabilities, coupled with the constant pressure to innovate, more machine learning products than ever are being developed. However, only a small number of these proofs of concept progress into deployment and production. Furthermore, the academic space has focused intensively on machine learning model building and benchmarking, but too little on operating complex machine learning systems in real-world scenarios. In the real world, we observe data scientists still managing ML workflows manually to a great extent. The paradigm of Machine Learning Operations (MLOps) addresses these challenges. In this work, we shed more light on MLOps. By conducting a mixed-method study analyzing existing literature and tools, as well as interviewing eight experts from the field, we uncover four main aspects of MLOps: its principles, components, roles, and architecture. From these aspects, we infer a holistic definition. The results support a common understanding of the term MLOps and its associated concepts, and will hopefully assist researchers and professionals in setting up successful ML projects in the future.   \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  REFERENCES  [1] Muratahan Aykol, Patrick Herring, and Abraham Anapolsky. 2020. Machine learning for continuous innovation in battery technologies. Nat. Rev. Mater. 5, 10 (2020), 725\u2013727. [2] Lucas Baier, Fabian J\u00f6hren, and Stefan Seebacher. 2020. Challenges in the deployment and operation of machine learning in practice. 27th Eur. Conf. Inf. Syst. - Inf. Syst. a Shar. Soc. ECIS 2019 (2020), 0\u201315. [3] Lucas Baier, Niklas K\u00fchl, and Gerhard Satzger. 2019. How to Cope with Change? Preserving Validity of Predictive Services over Time. In Hawaii International Conference on System Sciences (HICSS-52), Grand Wailea, Maui, Hawaii, USA. [4] Amitabha Banerjee, Chien Chia Chen, Chien Chun Hung, Xiaobo Huang, Yifan Wang, and Razvan Chevesaran. 2020. Challenges and experiences with MLOps for performance diagnostics in hybrid-cloud enterprise software deployments. OpML 2020 - 2020 USENIX Conf. Oper. Mach. Learn. (2020), 7\u20139. [5] Kent Beck, Mike Beedle, Arie van Bennekum, Alistair Cockburn, Ward Cunningham, Martin Fowler, James Grenning, Jim Highsmith, Andrew Hunt, Ron Jeffries, Jon Kern, Brian Marick, Robert C. Martin, Steve Mellor, Ken Schwaber, Jeff Sutherland, and Dave Thomas. 2001. Manifesto for Agile Software Development. (2001). [6] Benjamin Benni, Blay Fornarino Mireille, Mosser Sebastien, Precisio Frederic, and Jungbluth Gunther. 2019. When DevOps meets meta-learning: A portfolio to rule them all. Proc. - 2019 ACM/IEEE 22nd Int. Conf. Model Driven Eng. Lang. Syst. Companion, Model. 2019 (2019), 605\u2013612. DOI:https://doi.org/10.1109/MODELS-C.2019.00092 [7] Lucas Cardoso Silva, Fernando Rezende Zagatti, Bruno Silva Sette, Lucas Nildaimon Dos Santos Silva, Daniel Lucredio, Diego Furtado Silva, and Helena De Medeiros Caseli. 2020. Benchmarking Machine Learning Solutions in Production. Proc. - 19th IEEE Int. Conf. Mach. Learn. Appl. ICMLA 2020 (2020), 626\u2013633. DOI:https://doi.org/10.1109/ICMLA51294.2020.00104 [8] Juliet M. Corbin and Anselm Strauss. 1990. Grounded theory research: Procedures, canons, and evaluative criteria. Qual. Sociol. 13, 1 (1990), 3\u201321. DOI:https://doi.org/10.1007/BF00988593 [9] Patrick Debois. 2009. Patrick Debois - devopsdays Ghent. Retrieved March 25, 2021 from https://devopsdays.org/events/2019-ghent/speakers/patrick-debois/ [10] Behrouz Derakhshan, Alireza Rezaei Mahdiraji, Tilmann Rabl, and Volker Markl. 2019. Continuous deployment of machine learning pipelines. Adv.", "start_char_idx": 179590, "end_char_idx": 188095, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2": {"__data__": {"id_": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}, {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, {"node_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131", "node_type": "1", "metadata": {}, "hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "class_name": "RelatedNodeInfo"}]}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "text": "2019. Continuous deployment of machine learning pipelines. Adv. Database Technol. - EDBT 2019-March, (2019), 397\u2013408. DOI:https://doi.org/10.5441/002/edbt.2019.35 [11] Grigori Fursin. 2021. Collective knowledge: organizing research projects as a database of reusable components and portable workflows with common interfaces. Philos. Trans. A. Math. Phys. Eng. Sci. 379, 2197 (2021), 20200211. DOI:https://doi.org/10.1098/rsta.2020.0211 [12] Barney Glaser and Anselm Strauss. 1967. The discovery of grounded theory: strategies for qualitative research.  [13] Mahendra Kumar Gourisaria, Rakshit Agrawal, G M Harshvardhan, Manjusha Pandey, and Siddharth Swarup Rautaray. 2021. Application of Machine Learning in Industry 4.0. In Machine Learning: Theoretical Foundations and Practical Applications. Springer, 57\u201387. [14] Akshita Goyal. 2020. MLOps - Machine Learning Operations. Int. J. Inf. Technol. Insights Transform. (2020). Retrieved April 15, 2021 from http://technology.eurekajournals.com/index.php/IJITIT/article/view/655/769 [15] Tuomas Granlund, Aleksi Kopponen, Vlad Stirbu, Lalli Myllyaho, and Tommi Mikkonen. 2021. MLOps Challenges in Multi-Organization Setup: Experiences from Two Real-World Cases. (2021). Retrieved from http://arxiv.org/abs/2103.08937 [16] Willem Jan van den Heuvel and Damian A. Tamburri. 2020. Model-driven ml-ops for intelligent enterprise applications: vision, approaches and challenges. Springer International Publishing. DOI:https://doi.org/10.1007/978-3-030-52306-0_11 [17] Ioannis Karamitsos, Saeed Albarhami, and Charalampos Apostolopoulos. 2020. Applying devops practices of continuous automation for machine learning. Inf. 11, 7 (2020), 1\u201315. DOI:https://doi.org/10.3390/info11070363 [18] Bojan Karla\u0161, Matteo Interlandi, Cedric Renggli, Wentao Wu, Ce Zhang, Deepak Mukunthu Iyappan Babu, Jordan Edwards, Chris Lauren, Andy Xu, and Markus Weimer. 2020. Building Continuous Integration Services for Machine Learning. Proc. ACM SIGKDD Int. Conf. Knowl. Discov. Data Min. (2020), 2407\u20132415. DOI:https://doi.org/10.1145/3394486.3403290 [19] Rupesh Raj Karn, Prabhakar Kudva, and Ibrahim Abe M. Elfadel. 2019. Dynamic autoselection and autotuning of machine learning models for cloud network analytics. IEEE Trans. Parallel Distrib. Syst. 30, 5 (2019), 1052\u20131064. DOI:https://doi.org/10.1109/TPDS.2018.2876844 [20] Barbara Kitchenham, O. Pearl Brereton, David Budgen, Mark Turner, John Bailey, and Stephen Linkman. 2009. Systematic literature reviews in software engineering - A systematic literature review. Inf. Softw. Technol. 51, 1 (2009), 7\u201315. DOI:https://doi.org/10.1016/j.infsof.2008.09.009 [21] Rafal Kocielnik, Saleema Amershi, and Paul N Bennett. 2019. Will you accept an imperfect ai? exploring designs for adjusting end-user expectations of ai systems. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, 1\u201314. [22] Ana De Las Heras, Amalia Luque-Sendra, and Francisco Zamora-Polo. 2020. Machine learning technologies for sustainability in smart cities in the post-covid era. Sustainability 12, 22 (2020), 9320. [23] Leonardo Leite, Carla Rocha, Fabio Kon, Dejan Milojicic, and Paulo Meirelles. 2019. A survey of DevOps concepts and challenges. ACM Comput. Surv. 52, 6 (2019). DOI:https://doi.org/10.1145/3359981 [24] Yan Liu, Zhijing Ling, Boyu Huo, Boqian Wang, Tianen Chen, and Esma Mouine. 2020. Building A Platform for Machine Learning Operations from Open Source Frameworks. IFAC-PapersOnLine 53, 5 (2020), 704\u2013709. DOI:https://doi.org/10.1016/j.ifacol.2021.04.161 [25] Alvaro Lopez Garcia, Viet Tran, Andy S. Alic, Miguel Caballer, Isabel Campos Plasencia, Alessandro Costantini, Stefan Dlugolinsky, Doina Cristina Duma, Giacinto Donvito, Jorge Gomes, Ignacio Heredia Cacha, Jesus Marco De Lucas, Keiichi Ito, Valentin Y. Kozlov, Giang Nguyen, Pablo Orviz Fernandez, Zdenek Sustr, Pawel Wolniewicz, Marica Antonacci, Wolfgang Zu Castell, Mario David, Marcus Hardt, Lara Lloret Iglesias, Germen Molto, and Marcin Plociennik. 2020. A cloud-based framework for machine learning workloads and applications. IEEE Access 8, (2020), 18681\u201318692. DOI:https://doi.org/10.1109/ACCESS.2020.2964386 [26] Lwakatare. 2020. From a Data Science Driven Process to a Continuous Delivery Process for Machine Learning Systems. Lect. Notes Comput. Sci. (including Subser. Lect. Notes Artif. Intell. Lect. Notes Bioinformatics) 12562 LNCS, (2020), 185\u2013201. DOI:https://doi.org/10.1007/978-3-030-64148-1_12 [27] Lwakatare. 2020. DevOps for AI - Challenges in Development of AI-enabled Applications. (2020). DOI:https://doi.org/10.23919/SoftCOM50211.2020.9238323 [28] Ruth W. Macarthy and Julian M. Bass. 2020. An Empirical Taxonomy of DevOps in Practice. In 2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), IEEE, 221\u2013228. DOI:https://doi.org/10.1109/SEAA51224.2020.00046 [29] Sasu M\u00e4kinen, Henrik Skogstr\u00f6m, Eero Laaksonen, and Tommi Mikkonen. 2021. Who Needs MLOps: What Data Scientists Seek to Accomplish and How Can MLOps Help? Ml (2021). Retrieved from http://arxiv.org/abs/2103.08942 [30] Rob van der Meulen and Thomas McCall. 2018. Gartner Says Nearly Half of CIOs Are Planning to Deploy Artificial Intelligence. Retrieved December 4, 2021 from https://www.gartner.com/en/newsroom/press-releases/2018-02-13-gartner-says-nearly-half-of-cios-are-planning-to-deploy-artificial-intelligence [31] Steve Mezak. 2018. The Origins of DevOps: What\u2019s in a Name? - DevOps.com. Retrieved March 25, 2021 from https://devops.com/the-origins-of-devops-whats-in-a-name/ [32] Antonio Molner Domenech and Alberto Guill\u00e9n. 2020. Ml-experiment: A Python framework for reproducible data science. J. Phys. Conf. Ser. 1603, 1 (2020). DOI:https://doi.org/10.1088/1742-6596/1603/1/012025 [33] Michael D. Myers and Michael Newman. 2007. The qualitative interview in IS research: Examining the craft. Inf. Organ. 17, 1 (2007), 2\u201326. DOI:https://doi.org/10.1016/j.infoandorg.2006.11.001 [34] Pulasthi Perera, Roshali Silva, and Indika Perera. 2017. Improve software quality through practicing DevOps.", "start_char_idx": 188032, "end_char_idx": 194112, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcb0e4d3-f61e-45c0-9687-540682761c8f": {"__data__": {"id_": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}, {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, {"node_id": "9570f67f-24c1-4375-8cef-3d21e8424125", "node_type": "1", "metadata": {}, "hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "class_name": "RelatedNodeInfo"}]}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "text": "2017. Improve software quality through practicing DevOps. In 2017 Seventeenth International Conference on Advances in ICT for Emerging Regions (ICTer), 1\u20136. [35] Alexandra Posoldova. 2020. Machine Learning Pipelines: From Research to Production. IEEE POTENTIALS (2020). [36] Cedric Renggli, Luka Rimanic, Nezihe Merve G\u00fcrel, Bojan Karla\u0161, Wentao Wu, and Ce Zhang. 2021. A Data Quality-Driven View of MLOps. 1 (2021), 1\u201312. Retrieved from http://arxiv.org/abs/2102.07750 [37] Winston W. Royce. 1970. Managing the Development of Large Software Systems. (1970). [38] Martin R\u00fctz. 2019. DEVOPS: A SYSTEMATIC LITERATURE REVIEW. Inf. Softw. Technol. (2019). [39] Ulrike Schultze and Michel Avital. 2011. Designing interviews to generate rich data for information systems research. Inf. Organ. 21, 1 (2011), 1\u201316. DOI:https://doi.org/10.1016/j.infoandorg.2010.11.001 [40] Ola Spjuth, Jens Frid, and Andreas Hellander. 2021. The machine learning life cycle and the cloud: implications for drug discovery. Expert Opin. Drug Discov. 00, 00 (2021), 1\u20139. DOI:https://doi.org/10.1080/17460441.2021.1932812 \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n [41] Damian A. Tamburri. 2020. Sustainable MLOps: Trends and Challenges. Proc. - 2020 22nd Int. Symp. Symb. Numer. Algorithms Sci. Comput. SYNASC 2020 (2020), 17\u201323. DOI:https://doi.org/10.1109/SYNASC51798.2020.00015 [42] Chandrasekar Vuppalapati, Anitha Ilapakurti, Karthik Chillara, Sharat Kedari, and Vanaja Mamidi. 2020. Automating Tiny ML Intelligent Sensors DevOPS Using Microsoft Azure. Proc. - 2020 IEEE Int. Conf. Big Data, Big Data 2020 (2020), 2375\u20132384. DOI:https://doi.org/10.1109/BigData50022.2020.9377755 [43] Jane Webster and Richard Watson. 2002. Analyzing the Past to Prepare for the Future: Writing a Literature Review. MIS Q. 26, 2 (2002), xiii\u2013xxiii. DOI:https://doi.org/10.1.1.104.6570 [44] Chaoyu Wu, E. Haihong, and Meina Song. 2020. An Automatic Artificial Intelligence Training Platform Based on Kubernetes. ACM Int. Conf. Proceeding Ser. (2020), 58\u201362. DOI:https://doi.org/10.1145/3378904.3378921 [45] Geum Seong Yoon, Jungsu Han, Seunghyung Lee, and Jong Won Kim. 2020. DevOps Portal Design for SmartX AI Cluster Employing Cloud-Native Machine Learning Workflows. Springer International Publishing. DOI:https://doi.org/10.1007/978-3-030-39746-3_54 [46] Yue Zhou, Yue Yu, and Bo Ding. 2020. Towards MLOps: A Case Study of ML Pipeline Platform. Proc. - 2020 Int. Conf. Artif. Intell. Comput. Eng. ICAICE 2020 (2020), 494\u2013500. DOI:https://doi.org/10.1109/ICAICE51518.2020.00102    \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  Appendix Table 1. List of evaluated technologies  Technology Name Description Sources Open-source examples TensorFlow Extended TensorFlow Extended (TFX) is a configuration framework providing libraries for each of the tasks of an end-to-end ML pipeline. Examples are data validation, data distribution checks, model training, and model serving. [7,10,26,46] [\u03b4, \u03b8]  Airflow Airflow is a task and workflow orchestration tool, which can also be used for ML workflow orchestration. It is also used for orchestrating data engineering jobs. Tasks are executed according to directed acyclic graphs (DAGs). [26,40,41] [\u03b1, \u03b2, \u03b6, \u03b7] Kubeflow Kubeflow is a Kubernetes-based end-to-end ML platform. Each Kubeflow component is wrapped into a container and orchestrated by Kubernetes. Also, each task of an ML workflow pipeline is handled with one container. [26,35,40,41,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b6, \u03b7, \u03b8]   MLflow MLflow is an ML platform that allows for the management of the ML lifecycle end-to-end. It provides an advanced experiment tracking functionality, a model registry, and model serving component. [11,32,35] [\u03b1, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8]   Commercial examples Databricks managed MLflow The Databricks platform offers managed services based on other cloud providers\u2019 infrastructure, e.g., managed MLflow. [26,32,35,40] [\u03b1, \u03b6] Amazon CodePipeline Amazon CodePipeline is a CI/CD automation tool to facilitate the build, test, and delivery steps. It also allows one to schedule and manage the different stages of an ML pipeline. [18] [\u03b3] Amazon SageMaker With SageMaker, Amazon AWS offers an end-to-end ML platform. It provides, out-of-the-box, a feature store, orchestration with SageMaker Pipelines, and model serving with SageMaker endpoints. [7,11,18,24,35] [\u03b1, \u03b2, \u03b3, \u03b6, \u03b8]  Azure DevOps Pipelines Azure DevOps Pipelines is a CI/CD automation tool to facilitate the build, test, and delivery steps. It also allows one to schedule and manage the different stages of an ML pipeline. [18,42] [\u03b3, \u03b5] Azure ML Microsoft Azure offers, in combination with Azure DevOps Pipelines and Azure ML, an end-to-end ML platform. [6,24,25,35,42] [\u03b1, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8] \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n GCP - Vertex AI GCP offers, along with Vertex AI, a fully managed end-to-end platform. In addition, they offer a managed Kubernetes cluster with Kubeflow as a service. [25,35,40,41] [\u03b1, \u03b3, \u03b4, \u03b6, \u03b8] IBM Cloud Pak for Data (IBM Watson Studio) IBM Cloud Pak for Data combines a list of software in a package that offers data and ML capabilities. [41] [\u03b3]  Table 2. List of interview partners Interviewee pseudonym Job Title Years of experience with DevOps Years of experience with ML Industry Company Size (number of employees) Alpha (\u03b1) Senior Data Platform Engineer  3 4 Sporting Goods / Retail 60,000 Beta (\u03b2) Solution architect / Specialist for ML and AI 6 10 IT Services / Cloud Provider / Cloud Computing 25,000 Gamma (\u03b3) AI Architect / Consultant  5 7 Cloud Provider 350,000 Delta (\u03b4) Technical Marketing & Manager in ML / AI 10 5 Cloud Provider 139,995 Epsilon (\u03b5) Technical Architect - Data & AI 1 2 Cloud Provider 160,000 Zeta (\u03b6) ML engineering Consultant 5 6 Consulting Company 569,000 Eta (\u03b7) Engineering Manager in AI / Senior Deep Learning Engineer  10 10 Conglomerate (multi-industry) 400,000 Theta (\u03b8) ML Platform Product Lead 8 10 Music / audio streaming 6,500  \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n   Figure 5. Intersection of disciplines of the MLOps paradigm \n22/04/22MachineLearningSoftwareEngineering\nData EngineeringMLOpsCD4MLML Model\nData\n1CI/CDPipeline CodeDevOps\n\n1\nLearning under Concept Drift: A Review\nJie Lu, Fellow, IEEE, Anjin Liu, Member, IEEE, Fan Dong, Feng Gu, Jo \u02dcao Gama, and Guangquan Zhang\nAbstract \u2014Concept drift describes unforeseeable changes in the underlying distribution of streaming data over time. Concept drift\nresearch involves the development of methodologies and techniques for drift detection, understanding and adaptation. Data analysis\nhas revealed that machine learning in a concept drift environment will result in poor learning results if the drift is not addressed.", "start_char_idx": 194055, "end_char_idx": 200815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44195252-acf9-4acb-9103-1128599dba42": {"__data__": {"id_": "44195252-acf9-4acb-9103-1128599dba42", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}, {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, {"node_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06", "node_type": "1", "metadata": {}, "hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "class_name": "RelatedNodeInfo"}]}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "text": "To help\nresearchers identify which research topics are signi\ufb01cant and how to apply related techniques in data analysis tasks, it is necessary\nthat a high quality, instructive review of current research developments and trends in the concept drift \ufb01eld is conducted. In addition,\ndue to the rapid development of concept drift in recent years, the methodologies of learning under concept drift have become\nnoticeably systematic, unveiling a framework which has not been mentioned in literature. This paper reviews over 130 high quality\npublications in concept drift related research areas, analyzes up-to-date developments in methodologies and techniques, and\nestablishes a framework of learning under concept drift including three main components: concept drift detection, concept drift\nunderstanding, and concept drift adaptation. This paper lists and discusses 10 popular synthetic datasets and 14 publicly available\nbenchmark datasets used for evaluating the performance of learning algorithms aiming at handling concept drift. Also, concept drift\nrelated research directions are covered and discussed. By providing state-of-the-art knowledge, this survey will directly support\nresearchers in their understanding of research developments in the \ufb01eld of learning under concept drift.\nIndex Terms \u2014concept drift, change detection, adaptive learning, data streams\n!\n1 I NTRODUCTION\nGOVERNMENTS and companies are generating huge\namounts of streaming data and urgently need ef\ufb01cient\ndata analytics and machine learning techniques to sup-\nport them making predictions and decisions. However, the\nrapidly changing environment of new products, new mar-\nkets and new customer behaviors inevitably results in the\nappearance of concept drift problem. Concept drift means\nthat the statistical properties of the target variable, which the\nmodel is trying to predict, change over time in unforeseen\nways [1]. If the concept drift occurs, the induced pattern of\npast data may not be relevant to the new data, leading to\npoor predictions and decision outcomes. The phenomenon\nof concept drift has been recognized as the root cause of\ndecreased effectiveness in many data-driven information\nsystems such as data-driven early warning systems and\ndata-driven decision support systems. In an ever-changing\nand big data environment, how to provide more reliable\ndata-driven predictions and decision facilities has become a\ncrucial issue.\nConcept drift prob lem existsinmany real-world situa-\ntions. Anexamplecanbeseen inthechanges ofbehaviorin\nmobilephone usage, asshown inFig.1.From thebars inthis\n\ufb01gure, thetime percentagedistribution ofthemobile phone\nusagepattern haschanged from \u201cAu dioCall\u201d to\u201cCam era\u201d\nand then to\u201cMo bile Internet\u201d over thepast two decades.\nRecent attractive research in the \ufb01eld of concept drift\ntargets more challenging problems, i.e., how to accurately\ndetect concept drift in unstructured and noisy datasets [2],\n[3], how to quantitatively understand concept drift in a\nexplainable way [4], [5], and how to effectively react to drift\nby adapting related knowledge [6], [7].\nSolving these challenges endows prediction and\ndecision-making with the adaptability in an uncertain envi-\nronment. Conventional research related to machine learning\nhas been signi\ufb01cantly improved by introducing concept\ndrift techniques in data science and arti\ufb01cial intelligence in\n0.00%20.00%40.00%60.00%80.00%100.00%\n2000 - 20052005 - 20102010 - 20152015 - NowAudio CallText MessageMultimediaCameraMobile InternetFig. 1. Concept drift in mobile phone usage (data used in \ufb01gure are for\ndemonstration only)\ngeneral, and in pattern recognition and data stream mining\nin particular. These new studies enhance the effectiveness of\nanalogical and knowledge reasoning in an ever-changing\nenvironment. A new topic is formed during this devel-\nopment: adaptive data-driven prediction/decision systems.\nIn particular, concept drift is a highly prominent and sig-\nni\ufb01cant issue in the context of the big data era because\nthe uncertainty of data types and data distribution is an\ninherent nature of big data.\nConventional machine learning has two main compo-\nnents: training/learning and prediction. Research on learn-\ning under concept drift presents three new components:\ndrift detection (whether or not drift occurs), drift under-\nstanding (when, how, where it occurs) and drift adaptation\n(reaction to the existence of drift) as shown in Fig. 2. These\nwill be discussed in Section 3-5.\nIn literature, a detailed concept drift survey paper [8]\nwas published in 2014 but intentionally left certain sub-\nproblems of concept drift to other publications, such as the\ndetails ofthedata distribution change (P(X)) as mentioned\nin their Section 2.1. In 2015, another comprehensive survey\npaper [9] was published, which surveys and gives tutorial\nof both the established and the state-of-the-art approaches.\nIt provides a hybrid-view about concept drift from twoarXiv:2004.05785v1  [cs.LG]  13 Apr 2020\n\n2\nTraining and LearningPredictionConceptDriftAdaptationConceptDrift UnderstandingUpdateStreamDataConceptDrift DetectionAdriftdetectedNodriftdetected\nFig. 2. Framework for handling concept drift in machine learning. Please\nnote thatsome meth odscandoconcept driftdetectionandconcept drift\nunderstand ingsimultaneously.\nprimary perspectives, active and passive. Both survey pa-\npers are comprehensive and can be a good introduction\nto concept drift researching. How ever, many new publica-\ntions have become avail able inthelast three years, even a\nnew category ofdrift detection meth ods hasarisen, named\nmultiplehypoth esistests drift detection. It is necessary to\nreview the past research focuses and give the most recent\nresearch trends about concept drift, which is one of the main\ncontribution of this survey paper.\nBesides these two publications, four related survey pa-\npers [6], [7], [10], [11] have also provided valuable insights\ninto how to address concept drift, but their speci\ufb01c research\nfocus is only on data stream learning, rather than analyz-\ning concept drift adaptation algorithms and understand-\ning concept drift. Speci\ufb01cally, paper [7] focuses on data\nreduction for stream learning incorporating concept drift,\nwhile [6] only focuses on investigating the development in\nlearning ensembles for data stream learning in a dynamic\nenvironment. [11] concerns the evolution of data stream\nclustering, and [10] focuses on investigating the current and\nfuture trends of data stream learning. There is therefore a\ngap in the current literature that requires a fuller picture\nof established and the new emerged research on concept\ndrift; a comprehensive review of the three major aspects\nof concept drift: concept drift detection, understanding and\nadaptation, as shown in Fig. 2; and a discussion about the\nnew trend of concept drift research.\nThe selection of references in this survey paper was\nperformed according to the following steps:\nStep 1. Publication database: Science Direct, ACM Digital\nLibrary, IEEE Xplore and SpringerLink.\nStep 2. Preliminary screening of articles: The \ufb01rst search\nwas based on keywords. The articles were then selected\nas references if they 1) present new theory, algorithm or\nmethodology in the area of concept drift, or 2) report a\nconcept drift application.\nStep 3. Result \ufb01ltering for articles: The articles selected\nin Step 2 were divided into three groups: concept drift\ndetection, understanding, and adaptation. The references in\neach group were \ufb01ltered again, based on 1) Time: published\nmainly within the last 10 years, or 2) Impact: published in\nhigh quality journals/conferences or having high citations.\nStep 4. Dataset selection: To help readers test their re-\nsearch results, this paper lists popular datasets and their\ncharacteristics, the dataset providers, and how each dataset\ncan be used.\nOn completion of this process, 137 research articles, 10\nwidely used synthetic datasets for evaluating the perfor-\nmance of learning algorithms dealing with concept drift,\nand 14 publicly available and widely used real-world\ndatasets were listed for discussion.\nThe main contributions of this paper are:1) It perceptively summarizes concept drift research\nachievements and clusters the research into three cat-\negories: concept drift detection, understanding and\nadaptation, providing a clear framework for concept\ndrift research development (Fig. 2);\n2) It proposes a new component, concept drift under-\nstanding, for retrieving information about the status of\nconcept drift in aspects of when, how, and where. This\nalso creates a connection between drift detection and\ndrift adaptation;\n3) It uncovers several very new concept drift techniques,\nsuch as active learning under concept drift and fuzzy\ncompetence model-based drift detection, and identi\ufb01es\nrelated research involving concept drift;\n4) It systematically examines two sets of concept drift\ndatasets, Synthetic datasets and Real-world datasets,\nthrough multiple dimensions: dataset description,\navailability, suitability for type of drift, and existing\napplications;\n5) It suggests several emerging research topics and poten-\ntial research directions in this area.\nThe remainder of this paper is structured as follows.\nIn Section 2, the de\ufb01nitions of concept drift are given\nand discussed.", "start_char_idx": 200816, "end_char_idx": 210094, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e779dfc7-39f8-4c86-ad71-b630bec93c1a": {"__data__": {"id_": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}, {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}, {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, {"node_id": "2b074dca-a7b5-44e5-a3df-e0f548a256ca", "node_type": "1", "metadata": {}, "hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "class_name": "RelatedNodeInfo"}]}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "text": "Section 3 presents research methods and\nalgorithms in concept drift detection. Section 4 discusses\nresearch developments in concept drift understanding. Re-\nsearch results on drift adaptation (concept drift reaction) are\nreported in Section 5. Section 6 presents evaluation systems\nand related datasets used to test concept drift algorithms.\nSection 7 summaries related research concerning the concept\ndrift problem. Section 8 presents a comprehensive analysis\nof main \ufb01ndings and future research directions.\n2 P ROBLEM DESCRIPTION\nThis section \ufb01rst gives the formal de\ufb01nition and the sources\nof concept drift in Section 2.1. Then, in Section 2.2, the\ncommonly de\ufb01ned types of concept drift are introduced.\n2.1 Concept drift de\ufb01nition and the sources\nConcept drift is a phenomenon in which the statistical prop-\nerties of a target domain change over time in an arbitrary\nway [3]. It was \ufb01rst proposed by [12] who aimed to point\nout that noise data may turn to non-noise information at\ndifferent time. These changes might be caused by changes\nin hidden variables which cannot be measured directly [4].\nFormally, concept drift is de\ufb01ned as follows:\nGiven a time period [0,t], a set of samples, de-\nnoted asS0,t={d0,...,dt}, wheredi= (Xi,yi)is\none observation (or a data instance), Xiis the fea-\nture vector, yiis the label, and S0,tfollows a certain\ndistribution F0,t(X,y).Concept drift occurs attimes -\ntampt+ 1,ifF0,t(X,y)\u0338=Ft+1,\u221e(X,y),denoted as\n\u2203t:Pt(X,y)\u0338=Pt+1(X,y)[2], [8], [13], [14].\nConcept drift has also been de\ufb01ned by various authors\nusing alternative names, such as dataset shift [15] or concept\nshift [1]. Other related terminologies were introduced in\n[16]\u2019s work, the authors proposed that concept drift or shift\nis only one subcategory of dataset shift and the dataset\nshift is consists of covariate shift, prior probability shift and\n\n3\nx1x1x2x2\nx1x1x2x2 Pt(X) drift\nPt(y|X)  remains\ndata distribution at time t data distribution at time t+1\nx1x1x2x2\nx1x1x2x2Pt(X)\nPt(y|X)  drift\ndata distribution at time t data distribution at time t+1x1x1x2x2\nx1x1x2x2 Pt(y|X)  drift\nPt(X) remains\ndata distribution at time t data distribution at time t+1\nTwo dimensional \ndata X={x1, x2} \nwith two class label \ny={y0, y1} label y0 at time t\nlabel y1 at time t\nlabel y0 at time t\nlabel y1 at time tlabel y0 at time t\nlabel y1 at time t\nlabel y0 at time t\nlabel y1 at time t(a) Source  I (b) Source  II\n(c) Source III\nFig. 3. Three sources of concept drift\nconcept shift. These de\ufb01nitions clearly stated the research\nscope of each research topics. However, since concept drift is\nusually associated with covariate shift and prior probability\nshift, and an increasing number of publications [2], [8], [13],\n[14] refer to the term \u201dconcept drift\u201d as the problem in\nwhich\u2203t:Pt(X,y)\u0338=Pt+1(X,y). Therefore, we apply the\nsame de\ufb01nition of concept drift in this survey. Accordingly,\nconcept drift at time tcan be de\ufb01ned as the change of\njoint probability of Xandyat timet. Since the joint\nprobability Pt(X,y)can be decomposed into two parts as\nPt(X,y) =Pt(X)\u00d7Pt(y|X), concept drift can be triggered\nby three sources:\n\u2022Source I :Pt(X)\u0338=Pt+1(X)whilePt(y|X) =\nPt+1(y|X), that is, the research focus is the drift in\nPt(X)whilePt(y|X)remains unchanged. Since Pt(X)\ndrift does not affect the decision boundary, it has also\nbeen considered as virtual drift [7], Fig. 3(a).\n\u2022Source II :Pt(y|X)\u0338=Pt+1(y|X)whilePt(X) =\nPt+1(X)whilePt(X)remains unchanged. This drift\nwill cause decision boundary change and lead to learn-\ning accuracy decreasing, which is also called actual drift,\nFig. 3(b).\n\u2022Source III : mixture of Source I and Source II, namely\nPt(X)\u0338=Pt+1(X)andPt(y|X)\u0338=Pt+1(y|X). Concept\ndrift focus on the drift of both Pt(y|X)andPt(X),\nsince both changes convey important information about\nlearning environment Fig. 3(c).\nFig. 3 demonstrates how these sources differ from each\nother in a two-dimensional feature space. Source I is feature\nspace drift, and Source II is decision boundary drift. In\nmany real-world applications, Source I and Source II occur\ntogether, which creates Source III.\n2.2 The types of concept drift\nCommonly, concept drift can be distinguished as four types\n[8] as shown in Fig. 4:\nResearch into concept drift adaptation in Types 1-3 fo-\ncuses on how to minimize the drop in accuracy and achieve\nthe fastest recovery rate during the concept transformation\nprocess. In contrast, the study of Type 4 drift emphasizes\nthe use of historical concepts, that is, how to \ufb01nd the best\nmatched historical concepts with the shortest time. The new\nconcept may suddenly, incrementally, or gradually reoccur.\nTo better demonstrate the differences between these\ntypes, the term \u201cintermediate concept\u201d was introduced by\n[8] to describe the transformation between concepts. As\nmentioned by [4], a concept drift may not only take place\nSuddenDrift:Anewconceptoccurswithinashorttime.\nDatadistributionTimeGradualDrift:Anewconceptgraduallyreplacesanoldoneoveraperiodoftime.\nDatadistributionTimeIncrementalDrift:Anoldconceptincrementallychangestoanewconceptoveraperiodoftime.\nDatadistributionTimeReoccurringConcepts:Anoldconceptmayreoccuraftersometime.\nDatadistributionTimeFig. 4. An example of concept drift types.\nat an exact timestamp, but may also last for a long period.\nAs a result, intermediate concepts may appear during the\ntransformation as one concept (starting concept) changes to\nanother (ending concept). An intermediate concept can be\na mixture of the starting concept and the ending concept,\nlike the incremental drift, or one of the starting or ending\nconcept, such as the gradual drift.\n3 C ONCEPT DRIFT DETECTION\nThis section focuses on summarizing concept drift detection\nalgorithms. Section 3.1 introduces a typical drift detection\nframework. Then, Section 3.2 systematically reviews and\ncategorizes drift detection algorithms according to their im-\nplementation details for each component in the framework.\nAt last, Section 3.3 lists the state-of-the-art drift detection al-\ngorithms with comparisons of their implementation details.\n3.1 A general framework for drift detection\nDrift detection refers to the techniques and mechanisms\nthat characterize and quantify concept drift via identifying\nchange points or change time intervals [17]. A general\nframework for drift detection contains four stages, as shown\nin Fig. 5.\nStage 1 (Data Retrieval) aims to retrieve data chunks\nfrom data streams. Since a single data instance cannot carry\nenough information to infer the overall distribution [2],\nknowing how to organize data chunks to form a meaningful\npattern or knowledge is important in data stream analysis\ntasks [7].\nStage 2 (Data Modeling) aims to abstract the retrieved\ndata and extract the key features containing sensitive infor-\nmation, that is, the features of the data that most impact\na system if they drift. This stage is optional, because it\nmainly concerns dimensionality reduction, or sample size\nreduction, to meet storage and online speed requirements\n[4].\nStage 3 (Test Statistics Calculation) is the measurement of\ndissimilarity, or distance estimation. It quanti\ufb01es the sever-\nity of the drift and forms test statistics for the hypothesis\ntest. It is considered to be the most challenging aspect of\nconcept drift detection. The problem of how to de\ufb01ne an\naccurate and robust dissimilarity measurement is still an\nopen question.", "start_char_idx": 210095, "end_char_idx": 217458, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21e34eb2-95ff-437e-bc07-d20bae38aee2": {"__data__": {"id_": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}, {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}, {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, {"node_id": "ab1258f7-6968-4bc2-aa6f-2be71e1b0781", "node_type": "1", "metadata": {}, "hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "class_name": "RelatedNodeInfo"}]}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "text": "A dissimilarity measurement can also be\n\n4\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......Historical DataNew DataStage 1: Data Retrieval data stream time line \nAbstracted Data Model (New)Abstracted DataModel (Historical)Stage 2 (optional): Data ModelingHistorical DataNew DataDissimilarity MeasurementStage 3: Test Statistics CalculationDissimilarity Significance TestStage 4: Hypothesis Test (Statistical Bounds)\nFig. 5. An overall framework for concept drift detection\nused in clustering evaluation [11], and to determine the\ndissimilarity between sample sets [18].\nStage 4 (Hypothesis Test) uses a speci\ufb01c hypothesis test\nto evaluate the statistical signi\ufb01cance of the change observed\nin Stage 3, or the p-value. They are used to determine\ndrift detection accuracy by proving the statistical bounds\nof the test statistics proposed in Stage 3. Without Stage\n4, the test statistics acquired in Stage 3 are meaningless\nfor drift detection, because they cannot determine the drift\ncon\ufb01dence interval, that is, how likely it is that the change\nis caused by concept drift and not noise or random sample\nselection bias [3]. The most commonly used hypothesis tests\nare: estimating the distribution of the test statistics [19],\n[20], bootstrapping [21], [22], the permutation test [3], and\nHoeffding\u2019s inequality-based bound identi\ufb01cation [23].\nIt is also worth to mention that, without Stage 1, the\nconcept drift detection problem can be considered as a two-\nsample test problem which examines whether the popula-\ntion of two given sample sets are from the same distribution\n[18]. In other words, any multivariate two-sample test is an\noption that can be adopted in Stages 2-4 to detect concept\ndrift [18]. However, in some cases, the distribution drift may\nnot be included in the target features, therefore the selection\nof the target feature will affect the overall performance of\na learning system and is a critical problem in concept drift\ndetection [24].\n3.2 Concept drift detection algorithms\nThis section surveys drift detection methods and algo-\nrithms, which are classi\ufb01ed into three categories in terms\nof the test statistics they apply.\n3.2.1 Error rate-based drift detection\nPLearner error rate-based drift detection algorithms form\nthe largest category of algorithms. These algorithms focus\non tracking changes in the online error rate of base classi-\n\ufb01ers. If an increase or decrease of the error rate is proven to\nbe statistically signi\ufb01cant, an upgrade process (drift alarm)\nwill be triggered.\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......Historical DataNew DataFig. 6. Landmark time window for drift detection. The starting point of\nthe window is \ufb01xed, while the end point of the window will be extended\nafter a new data instance has been received.\nOne of the most-referenced concept drift detection algo-\nrithms is the Drift Detection Method (DDM) [20]. It was\nthe \ufb01rst algorithm to de\ufb01ne the warning level and drift\nlevel for concept drift detection. In this algorithm, Stage\n1 is implemented by a landmark time window, as shown\nin Fig. 6. When a new data instance become available for\nevaluation, DDM detects whether the overall online error\nrate within the time window has increased signi\ufb01cantly.\nIf the con\ufb01dence level of the observed error rate change\nreaches the warning level, DDM starts to build a new learner\nwhile using the old learner for predictions. If the change\nreached the drift level, the old learner will be replaced\nby the new learner for further prediction tasks. To acquire\nthe online error rate, DDM needs a classi\ufb01er to make the\npredictions. This process converts training data to a learning\nmodel, which is considered as the Stage 2 (Data Modeling).\nThe test statistics in Stage 3 constitute the online error rate.\nThe hypothesis test, Stage 4, is conducted by estimating\nthe distribution of the online error rate and calculating the\nwarning level and drift threshold.\nSimilar implementations have been adopted and applied\nin the Learning with Local Drift Detection (LLDD) [25],\nEarly Drift Detection Method (EDDM) [26], Heoffding\u2019s\ninequality based Drift Detection Method (HDDM) [23],\nFuzzy Windowing Drift Detection Method (FW-DDM) [5],\nDynamic Extreme Learning Machine (DELM) [27]. LLDD\nmodi\ufb01es Stages 3 and 4, dividing the overall drift detection\nproblem into a set of decision tree node-based drift detection\nproblems; EDDM improves Stage 3 of DDM using the\ndistance between two correct classi\ufb01cations to improve the\nsensitivity of drift detection; HDDM modi\ufb01es Stage 4 using\nHoeffding\u2019s inequality to identify the critical region of a\ndrift; FW-DDM improves Stage 1 of DDM using a fuzzy\ntime window instead of a conventional time window to\naddress the gradual drift problem; DEML does not change\nthe DDM detection algorithm but uses a novel base learner,\nwhich is a single hidden layer feedback neural network\ncalled Extreme Learning Machine (ELM) [28] to improve\nthe adaptation process after a drift has been con\ufb01rmed.\nEWMA for Concept Drift Detection (ECDD) [29] takes ad-\nvantage of the error rate to detect concept drift. ECDD\nemploys the EWMA chart to track changes in the error rate.\nThe implementation of Stages 1-3 of ECDD is the same\nas for DDM, while Stage 4 is different. ECDD modi\ufb01es\nthe conventional EWMA chart using a dynamic mean \u02c6p0,t\ninstead of the conventional static mean p0, where \u02c6p0,tis the\nestimated online error rate within time [0,t], andp0implies\nthe theoretical error rate when the learner was initially built.\nAccordingly, the dynamic variance can be calculated by\n\u03c32\nZt= \u02c6p0,t(1\u2212\u02c6p0,t)\u221a\n\u03bb\n2\u2212\u03bb(1\u2212(1\u2212\u03bb)2t)where\u03bbcontrols\nhow much weight is given to more recent data as opposed\nto older data, and \u03bb= 0.2is recommended by the authors.\n\n5\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......New DataHistorical Data\nFig. 7. Two time windows for concept drift detection. The New Data\nwindow has to be de\ufb01ned by the user.\nAlso, when the test statistic of the conventional EWMA\nchart isZt>\u02c6p0,t+ 0.5L\u03c3Zt, ECDD will report a concept\ndrift warning; when Zt>\u02c6p0,t+L\u03c3Zt, ECDD will report a\nconcept drift. The control limits Lis given by the authors\nthrough experimental evaluation.\nIn contrast to DDM and other similar algorithms, Sta-\ntistical Test of Equal Proportions Detection (STEPD) [30]\ndetects error rate change by comparing the most recent\ntime window with the overall time window, and for each\ntimestamp, there are two time windows in the system, as\nshown in Fig. 7. The size of the new window must be\nde\ufb01ned by the user. According to [30], the test statistic\n\u03b8STEPD conforms to standard normal distribution, denoted\nas\u03b8STEPD\u223cN (0,1). The signi\ufb01cance level of the warning\nlevel and the drift level were suggested as \u03b1w= 0.05and\n\u03b1d= 0.003 respectively. As a result, the warning threshold\nand drift threshold can be easily calculated.\nAnother popular two-time window-based drift detection\nalgorithm is ADaptive WIN dowing (ADWIN) [31]. Unlike\nSTEPD, ADWIN does not require users to de\ufb01ne the size\nof the compared windows in advance; it only needs to\nspecify the total size nof a \u201csuf\ufb01ciently large\u201d window\nW. It then examines all possible cuts of Wand computes\noptimal sub-window sizes nhistandnnewaccording to the\nrate of change between the two sub-windows whistandwnew.\nThe test statistic is the difference of the two sample means\n\u03b8ADWIN =|\u02c6\u00b5hist\u2212\u02c6\u00b5new|. An optimal cut is found when the\ndifference exceeds a threshold with a prede\ufb01ned con\ufb01dence\ninterval\u03b4. The author proved that both the false positive rate\nand false negative rate are bounded by \u03b4. It is worth noting\nthat many concept drift adaptation methods/algorithms in\nthe literature are derived from or combined with ADWIN,\nsuch as [32]\u2013[35]. Since their drift detection methods are\nimplemented with almost the same strategy, we will not\ndiscuss them in detail.", "start_char_idx": 217459, "end_char_idx": 225250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f84f7d8-5367-4d2a-b67b-6a19ecca4396": {"__data__": {"id_": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}, {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}, {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}, {"node_id": "247961f8-fee5-4ba0-9112-6fd68356d38c", "node_type": "1", "metadata": {}, "hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "class_name": "RelatedNodeInfo"}]}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "text": "3.2.2 Data Distribution-based Drift Detection\nThe second largest category of drift detection algorithms is\ndata distribution-based drift detection. Algorithms of this\ncategory use a distance function/metric to quantify the\ndissimilarity between the distribution of historical data and\nthe new data. If the dissimilarity is proven to be statistically\nsigni\ufb01cantly different, the system will trigger a learning\nmodel upgradation process. These algorithms address con-\ncept drift from the root sources, which is the distribution\ndrift. Not only can they accurately identify the time of drift,\nthey can also provide location information about the drift.\nHowever, these algorithms are usually reported as incurring\nhigher computational cost than the algorithms mentioned\nin Section 3.2.1 [2]. In addition, these algorithms usually\nrequire users to prede\ufb01ne the historical time window and\nnew data window. The commonly used strategy is two\nsliding windows with the historical time window \ufb01xed\nTwo windows at timestamp: t+6Dt+11......Historical DataNew Data...Dt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Dt+11...Historical DataNew DataTwo windows at timestamp: t+7DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Fig. 8. Two sliding time windows, of \ufb01xed size. The Historical Data\nwindow will be \ufb01xed while the New Data window will keep moving.\nwhile sliding the new data window [3], [22], [36], as shown\nin Fig. 8.\nAccording to the literature, the \ufb01rst formal treatment\nof change detection in data streams was proposed by [37].\nIn their study, the authors point out that the most natural\nnotion of distance between distributions is total variation,\nas de\ufb01ned by: TV(P1,P2) = 2supE\u2208\u03b5|P1(E)\u2212P2(E)|or\nequivalently, when the distribution has the density func-\ntionsf1andf2,distL1=\u222b|f1(x)\u2212f2(x)|dx. This provides\npractical guidance on the design of a distance function\nfor distribution discrepancy analysis. Accordingly, [37] pro-\nposed a family of distances, called Relativized Discrepancy\n(RD). The authors also present the signi\ufb01cance level of the\ndistance according to the number of data instances. The\nbounds on the probabilities of missed detections and false\nalarms are theoretically proven, using Chernoff bounds and\nthe Vapnik-Chervonenkis dimension. The authors of [37] do\nnot propose novel high-dimensional friendly data models\nfor Stage 2 (data modeling); instead, they stress that a\nsuitable model choice is an open question.\nAnother typical density-based drift detection algorithm\nis the Information-Theoretic Approach (ITA) [22]. The in-\ntuitive idea underlying this algorithm is to use kdqTree to\npartition the historical and new data (multi-dimensional)\ninto a set of bins, denoted as A,and then use Kullback-\nLeibler divergence to quantify the difference of the density\n\u03b8ITAin each bin. The hypothesis test applied by ITA is\nbootstrapping by merging Whist,WnewasWalland resam-\npling asW\u2032hist,W\u2032new to recompute the \u03b8\u2217\nITA. Once the\nestimated probability P(\u03b8\u2217\nITA\u2265\u03b8ITA)<1\u2212\u03b1, concept drift\nis con\ufb01rmed, where \u03b1is the signi\ufb01cant level controlling the\nsensitivity of drift detection.\nSimilar distribution-based drift detection meth-\nods/algorithms are: Statistical Change Detection for multi-\ndimensional data (SCD) [38], Competence Model-based\ndrift detection (CM) [2], a prototype-based classi\ufb01cation\nmodel for evolving data streams called SyncStream [36],\nPCA -based change detection frame work (PCA -CD) [39],\nEqual Density Estimation (EDE) [40], Least Squares Density\nDifference-based Change Detection Test (LSDD-CDT)\n[21], Incremental version of LSDD-CDT (LSDD-INC) [41]\nand Local Drift Degree-based Density Synchronized Drift\nAdaptation (LDD-DSDA) [4].\n3.2.3 Multiple Hypothesis Test Drift Detection\nMultiple hypothesis test drift detection algorithms apply\nsimilar techniques to those mentioned in the previous two\ncategories. The novelty of these algorithms is that they use\nmultiple hypothesis tests to detect concept drift in different\n\n6\nTest Statistic \u03b81Hypothesis Test H1Test Statistic \u03b82Hypothesis Test H2Test Statistic \u03b8zHypothesis Test Hz......Stage 3Stage 4Detection ResultsWhist and Wnewdetect drift based on z hypothesis test \nFig. 9. Parallel multiple hypothesis test drift detection.\nways. These algorithms can be divided into two groups:\n1) parallel multiple hypothesis tests; and 2) hierarchical\nmultiple hypothesis tests.\nThe idea of parallel multiple hypothesis drift detection\nalgorithm is demonstrated in Fig. 9. According to the liter-\nature, Just-In-Time adaptive classi\ufb01ers (JIT) [19] is the \ufb01rst\nalgorithm that set multiple drift detection hypothesis in this\nway. The core idea of JIT is to extend the CUSUM chart,\nknown as the Computational Intelligence-based CUSUM\ntest (CI-CUSUM), to detect the mean change in the features\ninterested by learning systems. The authors of [19], gave the\nfollowing four con\ufb01gurations for the drift detection target.\nCon\ufb01g1: the features extracted by Principal Component\nAnalysis (PCA), which removes eigenvalues whose sum\nis below a threshold, e.g. 0.001. Con\ufb01g2: PCA extracted\nfeatures plus one generic component of the original features\nxi; Con\ufb01g3: detects the drift in each xiindividually. Con\ufb01g4:\ndetects drift in all possible combinations of the feature space\nxi. The authors stated that Con\ufb01g2 is the preferred setting\nfor most situations, according to their experimentation, and\nalso mentioned that Con\ufb01g1 may have a high missing rate,\nCon\ufb01g3 suffers from a high false alarm rate, and Con\ufb01g4\nhas exponential computational complexity. The same drift\ndetection strategy has also been applied in [42]\u2013[45] for\nconcept drift adaptation.\nSimilar implementations have been applied in Linear\nFour Rate drift detection (LFR) [46], which maintains and\ntracks the changes in True Positive rate (TP), True Negative\nrate (TN), False Positive rate (FP) and False Negative rate\n(FN) in an online manner. The drift detection process also\nincludes warning and drift levels.\nAnother parallel multiple hypothesis drift detection al-\ngorithm is three-layer drift detection, based on Information\nValue and Jaccard similarity (IV-Jac) [47]. IV-Jac aims to\nindividually address the label drift Pt(y)Layer I, feature\nspace drift Pt(X)Layer II, and decision boundary drift\nPt(y|X)Layer III. It extracts the Weight of Evidence (WoE)\nand Information Value (IV) from the available data and\nthen detects whether a signi\ufb01cant change exists between\nthe WoE and IV extracted from WhistandWnewby mea-\nsuring the contribution to the label for a feature value.\nThe hypothesis test thresholds are prede\ufb01ned parameters\n\u03b8Pt(y)=\u03b8Pt(X)=\u03b8Pt(X|y)= 0.5by default, which are\nchosen empirically.\nEnsembleofDetectors (e-Detector) [48] proposed tode-\ntect concept drift viaensembleofheterogeneous drift de-\ntector.The authors consider two drift detectors arehomo-\ngeneous asifthey areequiv alent in\ufb01ndingconcept drifts,\notherwise they areheterogeneous. e-Detectorgroups homo-\ngeneous drift detectors viaadiversitymeasure ment, named\nDetection Layer: Standard Drift Detection Algorithms that have low drift delay rate and low computational costValidation Layer: Depend on the detection layerStage 3Stage 4Detection ResultsWhist and WnewTest Statistic \u03b8detectHypothesis Test HdetectTest Statistic \u03b8validHypothesis Test HvalidFig. 10. Hierarchical multiple hypothesis test drift detection.\ndiversity vector.Foreach group, itselect theone with the\nsmall estcoef\ufb01cient offailureasthebase detectortoform\ntheensemble.e-Detectorreports concept drift followingthe\nearly -\ufb01nd-early -report rule, which means nomatterwhich\nbase detectordetect adrift, thee-Detectorreports adrift.\nSimilarstrat egyhasbeen applied indrift detection ensemble\n(DDE) [49].\nHierarchical drift detection is an emerging drift detec-\ntion category that has a multiple veri\ufb01cation schema.", "start_char_idx": 225251, "end_char_idx": 233065, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffee4c09-1050-4acf-b72a-55be7a5da663": {"__data__": {"id_": "ffee4c09-1050-4acf-b72a-55be7a5da663", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}, {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}, {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, {"node_id": "86ef810a-d22d-4f17-befc-4f97dd8d22d2", "node_type": "1", "metadata": {}, "hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "class_name": "RelatedNodeInfo"}]}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "text": "The\nalgorithms in this category usually detect drift using an\nexisting method, called the detection layer, and then apply\nan extra hypothesis test, called the validation layer, to obtain\na second validation of the detected drift in a hierarchical\nway. The overall work\ufb02ow is shown in Fig. 10.\nAccording to the claim made by [50], Hierarchical\nChange-Detection Tests (HCDTs) is the \ufb01rst attempt to\naddress concept drift using a hierarchical architecture. The\ndetection layer can be any existing drift detection method\nthat has a low drift delay rate and low computational\nburden. The validation layer will be activated and deacti-\nvated based on the results returned by the detection layer.\nThe authors recommend two strategies for designing the\nvalidation layer: 1) estimating the distribution of the test\nstatistics by maximizing the likelihood; 2) adapting an ex-\nisting hypothesis test, such as the Kolmogorov-Smirnov test\nor the Cramer-Von Mises test.\nHierarchical Linear Four Rate (HLFR) [51] is another\nrecently proposed hierarchical drift detection algorithm. It\napplies the drift detection algorithm LFR as the detection\nlayer. Once a drift is con\ufb01rmed by the detection layer,\nthe validation layer will be triggered. The validation layer\nof HLFR is simply a zero-one loss, denoted as E, over\nthe ordered train-test split. If the estimated zero-one loss\nexceeds a prede\ufb01ned threshold, \u03b7= 0.01, the validation\nlayer will con\ufb01rm the drift and report to the learning system\nto trigger a model upgradation process.\nTwo-Stage Multivariate Shift-Detection based on EWMA\n(TSMSD-EWMA) [52] has a very similar implementation,\nhowever, the authors do not claim that their method is a\nhierarchy-based algorithm.\nHierarchicalHypoth esisTestingwith Clas si\ufb01cation Un-\ncertainty (HHT -CU) and HierarchicalHypoth esisTesting\nwith Attribute -wise \u201dGood ness -of-\ufb01t\u201d (HHT -AG) aretwo\ndrift detection algorithms based onrequest and rever ify\nstrat egy [53].ForHHT -CU, thedetection layer isahypothe -\nsestest based onHeoffding\u2019s inequal itythat mon itoring\nthechange oftheclassi\ufb01cation uncertainty measure ment.\nThe validation layer isapermutation testthat evaluates the\nchange ofthezero -one loss ofthelearner. ForHHT -AG, the\n\n7\ndetection layer isconducted based onKolmogorov -Smirnov\n(KS) test foreach feature distribution. Then HHT -AG vali-\ndate thepotentialdrift points byrequiringtrue labels ofdata\nthat come fromwnew,and perform ingdindependent two-\ndimen sional (2D) KStest with each feature-labelbivariate\ndistribution. Com pare toother drift detection algorithms,\nHHT -AG can handle concept drift with less true labels,\nwhich makes itmore pow erfulwhen deal ing with high\nveri\ufb01cation latency.\n3.3 Summary of concept drift detection meth-\nods/algorithms\nTABLE 1 lists the most popular concept drift detection meth-\nods/algorithms against the general framework summarized\nin Section 3.1 (Fig. 5). Acomparative study oneight popular\ndrift detection meth odscanbefound in[54].\n4 C ONCEPT DRIFT UNDERSTANDING\nDrift understanding refers to retrieving concept drift infor-\nmation about \u201cWhen\u201d (the time at which the concept drift\noccurs and how long the drift lasts), \u201cHow\u201d (the severity\n/degree of concept drift), and \u201cWhere\u201d (the drift regions\nof concept drift). This status information is the output of\nthe drift detection algorithms, and is used as input for drift\nadaptation.\n4.1 The time of concept drift occurs (When)\nThe most basic function of drift detection is to identify\nthe timestamp when a drift occurs. Recalling the de\ufb01nition\nof concept drift\u2203t:Pt(X,y)\u0338=Pt+1(X,y), the variable t\nrepresents the time at which a concept drift occurs. In drift\ndetection methods/algorithms, an alarm signal is used to\nindicate whether the concept drift has or has not occurred or\nnot at the current timestamp. It is also a signal for a learning\nsystem to adapt to a new concept. Accurately identifying\nthe time a drift occurs is critical to the adaptation process\nof a learning system; a delay or a false alarm will lead to\nfailure of the learning system to track new concepts.\nA drift alarm usually has a statistical guarantee with a\nprede\ufb01ned false alarm rate. Error rate-based drift detection\nalgorithms monitor the performance of the learning system,\nbased on statistical process control. For example, DDM\n[20] sends a drift signal when the learning accuracy of\nthe learner drops below a prede\ufb01ned threshold, which is\nchosen by the three-sigma rule [55]. ECCD [29] reports a\ndrift when the online error rate exceeds the control limit\nof EWMA. Most data distribution-based drift detection\nalgorithms report a drift alarm when two data samples\nhave a statistically signi\ufb01cant difference. PCA-based drift\ndetection [36] outputs a drift signal when the p-value of\nthe generalized Wilcoxon test statistic Wl\nBFis signi\ufb01cantly\nlarge. The method in [3] con\ufb01rms that a drift has occurred by\nverifying whether the empirical competence-based distance\nis signi\ufb01cantly large through permuataion test.\nTaking into account the various drift types, concept drift\nunderstanding needs to explore the start time point, the\nchange period, and the end time point of concept drift.\nAnd these time information could be useful input for the\nadaptation process of the learning system. However the\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Dt+12Dt+11...DatadistributionTimeStart time of  concept driftTime the drift alarm is triggeredEnd time of  concept driftPeriod of  concept drift changeSeverity of  concept driftFig. 11. An example of the occurrence time and the severity of concept\ndrift. One incremental drift starts to change at t+ 1and ends at t+ 5.\nThe other sudden drift occurs between t+ 9andt+ 10 . The severity of\nthese two concept drifts ( Dt+1-Dt+5andDt+9-Dt+10) is marked with\nbrackets.\ndrift timestamp alert in existing drift detection algorithms\nis delayed compared to the actual drifting timestamp, since\nmost drift detectors require a minimum number of new data\nto evaluate the status of the drift, as shown in Fig. 11. The\nemergence time of the new concept is therefore still vague.\nSome concept drift detection algorithms such as DDM [20],\nEDDM [26], STEPD [30], and HDDM [23], trigger a warning\nlevel to indicate a drift may have occurred. The threshold\nused to trigger warning level is a relaxed condition of the\nthreshold used for the drift level; for example, the warning\nlevel is set p-value to 95% or 2\u03c3, and the drift level is set\np-value to 99% or 3\u03c3. The data accumulated between the\nwarning level and the drift level are used as the training set\nfor updating a learning model.\n4.2 The severity of concept drift (How)\nThe severity of concept drift refers to using a quanti\ufb01ed\nvalue to measure the similarity between the new concept\nand the previous concept, as shown in Fig. 11. Formally,\nthe severity of concept drift can be represented as \u2206 =\n\u03b4(Pt(X,y),Pt+1(X,y)), where\u03b4is a function to measure the\ndiscrepancy of two data distributions, and tis the timestamp\nwhen the concept drift occurred. \u2206usuallyisanon-negative\nvalue indicatingthesever ityofconcept drift. The greater the\nvalue of\u2206,thelarger thesever ityoftheconcept drift is.\nIn general, error rate-based drift detection cannot di-\nrectly measure the severity of concept drift, because it\nmainly focuses on monitoring the performance of the learn-\ning system, not the changes in the concept itself. However,\nthe degree of decrease in learning accuracy can be used as\nan indirect measurement to indicate the severity of concept\ndrift. If learning accuracy has dropped signi\ufb01cantly when\ndrift is observed, this indicates that the new concept is\ndifferent from the previous one.", "start_char_idx": 233066, "end_char_idx": 240706, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b5f988a-f343-4fb7-83a9-848a220f6fcb": {"__data__": {"id_": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}, {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}, {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, {"node_id": "d0292a66-da79-4af5-aef1-d6c1049174ee", "node_type": "1", "metadata": {}, "hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "class_name": "RelatedNodeInfo"}]}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "text": "For example, the severity\nof concept drift could be re\ufb02ected by the difference be-\ntweenpiandpminin [20], [27] ,denoted as\u2206\u223cpi\u2212pmin;\nthe difference between overall accuracy \u02c6phistand recent\naccuracy \u02c6pnew in [30] ,expressed as\u2206\u223c\u02c6pnew\u2212\u02c6phist; and\nthe difference between test statistics in the former window\nE[\u02c6Xcut]and test statistics in the later window E[\u02c6Yi\u2212cut][23],\ndenoted as\u2206\u223cE[\u02c6Yi\u2212cut]\u2212E[\u02c6Xcut]. However, the meaning\nof these differences is not discussed in existing publications.\nThe ability of error rate-based drift detection to output the\nseverity of concept drift is still vague.\nData distribution-based drift detection methods can di-\nrectly quantify the severity of concept drift since the mea-\nsurement used to compare two data samples already re\ufb02ects\nthe difference. For example, [37] employed arelaxation ofthe\ntotalvariation distancedA(S1,S2)to measure the difference\n\n8\nTABLE 1\nSummary of drift detection algorithms\nCategory Algorithms Stage 1 Stage 2 Stage 3 Stage 4\nError\nrate-basedDDM [20] Landmark Learner Online error rate Distribution estimation\nEDDM [26] Landmark Learner Online error rate Distribution estimation\nFW-DDM [5] Landmark Learner Online error rate Distribution estimation\nDEML [27] Landmark Learner Online error rate Distribution estimation\nSTEPD [30] Prede\ufb01nedwhist,wnew Learner Error rate difference Distribution estimation\nADWIN [31] Auto cutwhist,wnew Learner Error rate difference Hoeffding\u2019s Bound\nECDD [29] Landmark Learner Online error rate EWMA Chart\nHDDM [23] Landmark Learner Online error rate Hoeffding\u2019s Bound\nLLDD [25] Landmark, or sliding whist,\nwnewDecision trees Tree node error rate Hoeffding\u2019s Bound\nData\ndistribution-\nbasedkdqTree [22] Fixedwhist, Slidingwnew kdqTree KL divergence Bootstrapping\nCM [2], [3] Fixedwhist, Slidingwnew Competence model Competence distance Permutation test\nRD [37] Fixedwhist, Slidingwnew KS structure Relativized Discrepancy VC-Dimension\nSCD [38] Fixedwhist, Slidingwnew kernel density estima-\ntorlog-likelihood Distribution estimation\nEDE [40] Fixedwhist, Slidingwnew Nearest neighbor Density scale Permutation test\nSyncStream [36] Fixedwhist, Slidingwnew PCA P-Tree Wilcoxon test\nPCA -CD [39] Fixedwhist,Slidingwnew PCA Change -Score Page -Hink leytest\nLSDD-CDT [21] Fixedwhist, Slidingwnew Learner Relative difference Distribution estimation\nLSDD-INC [41] Fixedwhist, Slidingwnew Learner Relative difference Distribution estimation\nLDD-DSDA [4] Fixedwhist, Slidingwnew k-nearest neighbor Local drift degree Distribution estimation\nMultiple\nHypothesis\nTestsJIT [19] Landmark Selected features 4 con\ufb01gurations Distribution estimation\nLFR [46] Landmark Learner TP , TN, FP , FN Distribution estimation\nThree-layer [47] Sliding both whist,wnew Learner P(y),P(X),P(X|y) Distribution estimation\ne-Detector[48] depends onbase detector depends depends depends\nDDE [49] depends onbase detector depends depends depends\nTSMSD-EWMA [52] Landmark Learner Online error rate EWMA Chart\nHCDTs [50] Landmark Depending on layers Depending on layers Depending on layer\nHLFR [51] Landmark Learner TP , TN, FP , FN Distribution estimation\nHHT -CU[53] Land mark Learner Clas si\ufb01cation uncertainty Layer -IHoeffding\u2019s Bound,\nLayer -IIPermutation Test\nHHT -AG[53] Fixedwhist,Slidingwnew N/A KS statis ticon each at-\ntributeLayer -IKStest, Layer -II2D\nKStest\nbetween two data distributions. [3] proposed acompetence -\nbased empiricaldistancedCB(S1,S2)to show the difference\nbetween two data samples. Other drift detection meth-\nods have used information-theoretic distance; for example,\nKullback-Leibler divergenceD(W1||W2), also called relative\nentropy, was used in the study reported in [22]. The range of\nthese distances is [0,1]. The greater the distance, the larger\nthe severity of the concept drift is. The distance \u201c1\u201d means\nthat a new concept is different from the pervious one, while\nthe distance \u201c0\u201d means that two data concepts are identical.\nThe test statis tic\u03b4used in [38] gives an extremely small\nnegative value if the new concept is quite different from\nthe previous concept. The degree of concept drift in [36] is\nmeasured by the resulting p-value of thetest statis ticWl\nBF\nand thede\ufb01nedAngle (Dt,Dt+1)oftwo datasetsDtand\nDt+1.\nThe severity of concept drift can be used as a guideline\nfor choosing drift adaptation strategies. For example, if the\nseverity of drift in a classi\ufb01cation task is low, the decision\nboundary may not move much in the new concept. Thus,\nadjusting the current learner by incremental learning will\nbe adequate. In contrast, if the severity of the concept drift\nis high, the decision boundary could change signi\ufb01cantly,\ntherefore discarding the old learner and retraining a new\none could be better than incrementally updating the old\nlearner. We would like to mention that, even though some\nresearches have promoted the ability to describe and quan-\ntify the severity of the detected drift, this information is not\nyet widely utilized in drift adaptation.\n012345678910\n012345678910012345678910\n012345678910(a) Data at time t\n012345678910\n012345678910012345678910\n012345678910(b) Data at time t+1\n012345678910\n012345678910012345678910\n012345678910(c) Data in drift re-\ngions\nFig. 12. An example of the drift regions of concept drift.\n4.3 The drift regions of concept drift (Where)\nThe drift regions of concept drift are the regions of con\ufb02ict\nbetween a new concept and the previous concept. Drift re-\ngions are located by \ufb01nding regions in data feature spaceX\nwherePt(X,y)andPt+1(X,y)have signi\ufb01cant difference.\nTo illustrate this, we give an example of a classi\ufb01cation task\nin Fig. 12. The data used in this task are uniformly sampled\nin the range of [0,10]2. The left sub-\ufb01gure is the data sample\naccumulated at time t, where the decision boundary is\nx1+x2= 8. The middle sub-\ufb01gure is the data accumulated\nat timet+ 1, where the decision boundary is x1+x2= 9.\nIntuitively, data located in regions 8\u2264x1+x2<9have\ndifferent classes in time tand timet+ 1, since the decision\nboundary has changed. The right sub-\ufb01gure shows the data\nlocated in the drift regions.\nThe techniques to identify drift regions are highly de-\npendent on the data model used in the drift detection\n\n9\nmethods/algorithms. Paper [25] detected drift data in lo-\ncal regions of the instance space by using online error-\nrate inside the inner-nodes of a decision tree. The whole\ndata feature space is partitioned by decision tree. Each\nleaf of this decision tree corresponds to a hyper-rectangle\nin the data feature space. All leaf nodes contain a drift\ndetector. When the leaf nodes are alerted to a drift, the\ncorresponding hyper-rectangles indicate the regions of drift\nin the data feature space. Similar to [25], [22] utilized the\nnodes of the kdq-tree with Kulldorff\u2019s spatial scan statistic\nto identify the regions in which data had changed the\nmost. Once a drift has been reported, Kulldorff\u2019s statistic\nmeasures how the two datasets differ only with respect\nto the region associated with the leaf node of the kdq-tree .\nThe leaf nodes with the greater statistical value of show\nthe drift regions. [2] highlighted the most severe regions\nof concept drift through top- p-competence areas. Utilizing\ntheRelatedSets of the competence model, the data feature\nspace is partitioned by a set of overlapping hyperspheres.\nThe RelatedSet -based empirical distance de\ufb01nes the distance\nbetween two datasets on a particular hypersphere. The drift\nregions are identi\ufb01ed by the corresponding hyperspheres\nwith large empirical distance at top p% level. [4] identi\ufb01ed\ndrift regions by monitoring the discrepancy in the regional\ndensity of data, which is called the local drift degree.", "start_char_idx": 240707, "end_char_idx": 248355, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73a0a295-85e3-4391-a64a-c3a9f3cdd569": {"__data__": {"id_": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}, {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}]}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "text": "A local\nregion with a corresponding increase or decrease in density\nwill be highlighted as a critical drift region.\nLocating concept drift regions bene\ufb01ts drift adaptation.\nPaper [56] pointed out that even if the concept of the entire\ndataset drifts, there are regions of the feature space that\nwill remain stable signi\ufb01cantly longer than other regions.\nIn an ensemble scenario, the old learning models of stable\nregions could still be useful for predicting data instances\nlocated within stable regions, or data instances located in\ndrift regions could be used to build a more updated current\nmodel. The authors of [3] also pointed out that identifying\ndrift regions can help in recognizing obsolete data that\ncon\ufb02ict with current concepts and distinguish noise data\nfrom novel data. In their later research [2], they utilized top-\np-competence areas to edit cases in a case-based reasoning\nsystem for fast new concept switching. One step in their\ndrift adaptation is to remove con\ufb02ict instances. To preserve\nas many instances of a new concept as possible, they only\nremove obsolete con\ufb02ict instances which are outside the\ndrift regions. LDD-DSDA [4] utilized drift regions as an\ninstance selection strategy to construct a training set that\ncontinually tracked a new concept.\n4.4 Summary of drift understanding\nWe summarize concept drift detection algorithms according\nto their ability to identify when, how, and where concept\ndrift occurs, as shown in TABLE 2. All drift detection al-\ngorithms can identify the occurrence time of concept drift\n(when), and most data distribution-based drift detection\nalgorithms can also measure the severity of concept drift\n(how) through the test statistics, but only a few algorithms\nhave the ability to locate drift regions (where).TABLE 2\nSummary of drift understanding for drift detection algorithms\nCategory Algorithms When How Where\nError rate-based DDM [20]\u221a\nEDDM [26]\u221a\nFW-DDM [5]\u221a\nDEML [27]\u221a\nSTEPD [30]\u221a\nADWIN [31]\u221a\nECDD [29]\u221a\nHDDM [23]\u221a\nLLDD [25]\u221a\u221a\nData distribution-\nbasedkdqTree [22]\u221a\u221a\u221a\nCM [2], [3]\u221a\u221a\u221a\nRD [37]\u221a\u221a\nSCD [38]\u221a\u221a\nEDE [40]\u221a\nSyncStream [36]\u221a\u221a\nPCA -CD [39]\u221a\u221a\nLSDD-CDT [21]\u221a\nLSDD-INC [41]\u221a\nLDD-DSDA [4]\u221a\u221a\u221a\nMultiple\nhypothesis testsJIT [19]\u221a\nLFR [46]\u221a\nThree-layer drift detection [47]\u221a\ne-Detector[48]\u221a\nDDE [49]\u221a\nEWMA [52]\u221a\nHCDTs [50]\u221a\nHLFR [51]\u221a\nHHT -CU[53]\u221a\nHHT -AG[53]\u221a\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptOld modelDrift detected and retrainNew model\nFig. 13. A new model is trained with latest data to replace the old model\nwhen a concept drift is detected.\n5 D RIFT ADAPTATION\nThis section focuses on strategies for updating existing\nlearning models according to the drift, which is known as\ndrift adaptation or reaction. There are three main groups\nof drift adaptation methods, namely simple retraining, en-\nsemble retraining and model adjusting, that aim to handle\ndifferent types of drift.\n5.1 Training new models for global drift\nPerhaps the most straightforward way of reacting to concept\ndrift is to retrain a new model with the latest data to replace\nthe obsolete model, as shown in Fig. 13. An explicit concept\ndrift detector is required to decide when to retrain the model\n(see Section 3 on drift detection). A window strategy is\noften adopted in this method to preserve the most recent\ndata for retraining and/or old data for distribution change\ntest. Paired Learners [57] follows this strategy and uses two\nlearners: the stable learner and the reactive learner . If the stable\nlearner frequently misclassi\ufb01es instances that the reactive\nlearner correctly classi\ufb01es, a new concept is detected and\nthe stable learner will be replaced with the reactive learner.\nThis method is simple to understand and easy to implement,\nand can be applied at any point in the data stream.\n\n10\nWhen adopting a window-based strategy, a trade-off\nmust be made in order to decide an appropriate window\nsize. A small window can better re\ufb02ect the latest data\ndistribution, but a large window provides more data for\ntraining a new model. A popular window scheme algorithm\nthat aims to mitigate this problem is ADWIN [31]. Unlike\nmost earlier works, it does not require the user to guess\na \ufb01xed size of the windows being compared in advance;\ninstead, it examines all possible cuts of the window and\ncomputes optimal sub-window sizes according to the rate\nof change between the two sub-windows. After the optimal\nwindow cut has been found, the window containing old\ndata is dropped and a new model can be trained with the\nlatest window data.\nInstead of directly retraining the model, researchers\nhave also attempted to integrate the drift detection process\nwith the retraining process for speci\ufb01c machine learning\nalgorithms. DELM [27] extends the traditional ELM algo-\nrithm with the ability to handle concept drift by adaptively\nadjusting the number of hidden layer nodes. When the\nclassi\ufb01cation error rate increases \u2014 which could indicate\nthe emergence of a concept drift \u2014 more nodes are added to\nthe network layers to improve its approximation capability.\nSimilarly, FP-ELM [58] is an ELM-extended method that\nadapts to drift by introducing a forgetting parameter to the\nELM model. A parallel version of ELM-based method [59]\nhas also been developed for high-speed classi\ufb01cation tasks\nunder concept drift. OS-ELM [60] is another online learning\nensemble of repressor models that integrates ELM using an\nordered aggregation (OA) technique, which overcomes the\nproblem of de\ufb01ning the optimal ensemble size.\nInstance-based lazy learners for handling concept drift\nhave also been studied intensively. The Just-in-Time adaptive\nclassi\ufb01er [19], [42] is such a method which follows the\n\u201ddetect and update model\u201d strategy. For drift detection,\nit extends the traditional CUSUM test [61] to a pdf-free\nform. This detection method is then integrated with a kNN\nclassi\ufb01er [42]. When a concept drift is detected, old instances\n(more than the last Tsamples) are removed from the case\nbase. In later work, the authors of [11], [45] extended this\nalgorithm to handle recurrent concepts by computing and\ncomparing current concept to previously stored concepts.\nNEFCS [2] is another kNN-based adaptive model. A compe-\ntence model-based drift detection algorithm [3] was used to\nlocate drift instances in the case base and distinguish them\nfrom noise instances and a redundancy removal algorithm,\nStepwise Redundancy Removal (SRR), was developed to\nremove redundant instances in a uniform way, guaranteeing\nthat the reduced case base would still preserve enough\ninformation for future drift detection.\n5.2 Model ensemble for recurring drift\nIn the case of recurring concept drift, preserving and reusing\nold models can save signi\ufb01cant effort to retrain a new\nmodel for recurring concepts. This is the core idea of using\nensemble methods to handle concept drift. Ensemble meth-\nods have received much attention in stream data mining\nresearch community in recent years. Ensemble methods\ncomprise a set of base classi\ufb01ers that may have different\ntypes or different parameters. The output of each base\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptEnsembleAdd new model to ensemble...Fig. 14. A new base classi\ufb01er is added to the ensemble when a concept\ndrift occurs.\nclassi\ufb01er is combined using certain voting rules to predict\nthe newly arrived data. Many adaptive ensemble methods\nhave been developed that aim to handle concept drift by\nextending classical ensemble methods or by creating speci\ufb01c\nadaptive voting rules. An example is shown in Fig. 14,\nwhere new base classi\ufb01er is added to the ensemble when\nconcept drift occurs.\nBagging, Boosting and Random Forests are classical\nensemble methods used to improve the performance of\nsingle classi\ufb01ers. They have all been extended for handling\nstreaming data with concept drift. An online version of the\nbagging method was \ufb01rst proposed in [62] which uses each\ninstance only once to simulate the batch mode bagging.", "start_char_idx": 248356, "end_char_idx": 256333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c62c6e18-cf27-4921-8752-3833e7f12467": {"__data__": {"id_": "c62c6e18-cf27-4921-8752-3833e7f12467", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}, {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, {"node_id": "b038c328-0caa-4be1-99bd-e9e4bceb30b5", "node_type": "1", "metadata": {}, "hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "class_name": "RelatedNodeInfo"}]}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "text": "In a later study [63], this method was combined with the\nADWIN drift detection algorithm [31] to handle concept\ndrift. When a concept drift is reported, the newly proposed\nmethod, called Leveraging Bagging, trains a new classi\ufb01er\non the latest data to replace the existing classi\ufb01er with the\nworst performance. Similarly, an adaptive boosting method\nwas developed in [64] which handles concept drift by moni-\ntoring prediction accuracy using a hypothesis test, assuming\nthat classi\ufb01cation errors on non-drifting data should follow\nGaussian distribution. In a recent work [35], the Adaptive\nRandom Forest (ARF) algorithm was proposed, which ex-\ntends the random forest tree algorithm with a concept drift\ndetection method, such as ADWIN [31], to decide when to\nreplace an obsolete tree with a new one. A similar work can\nbe found in [65], which uses Hoeffding bound to distinguish\nconcept drift from noise within decision trees.\nBesides extending classical methods, many new ensem-\nble methods have been developed to handle concept drift\nusing novel voting techniques. Dynamic Weighted Majority\n(DWM) [66] is such an ensemble method that is capable of\nadapting to drifts with a simple set of weighted voting rules.\nIt manages base classi\ufb01ers according to the performance\nof both the individual classi\ufb01ers and the global ensemble.\nIf the ensemble misclassi\ufb01es an instance, DWM will train\na new base classi\ufb01er and add it to ensemble. If a base\nclassi\ufb01er misclassi\ufb01es an instance, DWM reduces its weight\nby a factor. When the weight of a base classi\ufb01er drops\nbelow a user de\ufb01ned threshold, DWM removes it from\nthe ensemble. The drawback of this method is that the\nadding classi\ufb01er process may be triggered too frequently,\nintroducing performance issues on some occasions, such as\nwhen gradual drift occurs. A well-known ensemble method,\nLearn++NSE [67], mitigates this issue by weighting base\nclassi\ufb01ers according to their prediction error rate on the\nlatest batch of data. If the error rate of the youngest classi\ufb01er\nexceeds 50%, a new classi\ufb01er will be trained based on\nthe latest data. This method has several other bene\ufb01ts: it\n\n11\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptDrift detected in subregionPartially update model\nFig. 15. A decision tree node is replaced with a new one as its perfor-\nmance deteriorates when a concept drift occurs in a subregion.\ncan easily adopt almost any base classi\ufb01er algorithm; it\ndoes not store history data, only the latest batch of data,\nwhich it only uses once to train a new classi\ufb01er; and it\ncan handle sudden drift, gradual drift, and recurrent drift\nbecause underperforming classi\ufb01ers can be reactivated or\ndeactivated as needed by adjusting their weights. Other\nvoting strategies than standard weighted voting have also\nbeen applied to handle concept drift. Examples include\nhierarchical ensemble structure [68], [69], short term and\nlong term memory [13], [70] and dynamic ensemble sizes\n[71], [72].\nA number of research efforts have been made that focus\non developing ensemble methods for handling concept drift\nof certain types. Accuracy Update Ensemble (AUE2) [73]\nwas proposed with an emphasis on handling both sudden\ndrift and gradual drift equally well. It is a batch mode\nweighted voting ensemble method based on incremental\nbase classi\ufb01ers. By doing re-weighting, the ensemble is\nable react quickly to sudden drift. All classi\ufb01ers are also\nincrementally trained with the latest data, which ensures\nthat the ensemble evolves with gradual drift. The Optimal\nWeights Adjustment (OWA) method [74] achieves the same\ngoal by building ensembles using both weighted instances\nand weighted classi\ufb01ers for different concept drift types.\nThe authors of [75] considered a special case of concept drift\n\u2014 class evolution \u2014 the phenomenon of class emergence\nand disappearance. Recurring concepts are handled in [76],\n[77], which monitor concept information to decide when to\nreactivate previously stored obsolete models. [78] is another\nmethod that handles recurring concepts by re\ufb01ning the\nconcept pool to avoid redundancy.\n5.3 Adjusting existing models for regional drift\nAn alternative to retraining an entire model is to develop\na model that adaptively learns from the changing data.\nSuch models have the ability to partially update themselves\nwhen the underlying data distribution changes, as shown\nin Fig. 15. This approach is arguably more ef\ufb01cient than\nretraining when the drift only occurs in local regions. Many\nmethods in this category are based on the decision tree\nalgorithm because trees have the ability to examine and\nadapt to each sub-region separately.\nIn a foundational work [79], an online decision tree\nalgorithm, called VeryFastDecision Tree classi\ufb01er (VFDT)\nwas proposed, which is especially tailored for high speed\ndata streams. It uses Hoeffding bound to limit the num-\nber of instances required for node splitting. This method\nhas become very popular because of its several distinct\nadvantages: 1) it only needs to process each instance once\nand does not store instances in memory or disk; 2) thetree itself only consumes a small amount of space and\ndoes not grow with the number of instances it processes\nunless there is new information in the data; 3) the cost of\ntree maintenance is very low. An extended version, called\nCVFDT [80], was later proposed to handle concept drift. In\nCVFDT, a sliding window is maintained to hold the latest\ndata. An alternative sub-tree is trained based on the window\nand its performance is monitored. If the alternative sub-\ntree outperforms its original counterpart, it will be used for\nfuture prediction and the original obsolete sub-tree will be\npruned. VFDTc [81] is another attempt to make improve-\nments to VFDT with several enhancements: the ability to\nhandle numerical attributes; the application of naive Bayes\nclassi\ufb01ers in tree leaves and the ability to detect and adapt to\nconcept drift. Two node-level drift detection methods were\nproposed based on monitoring differences between a node\nand its sub-nodes. The \ufb01rst method uses classi\ufb01cation error\nrate and the second directly checks distribution difference.\nWhen a drift is detected on a node, the node becomes a leaf\nand its descending sub-tree is removed. Later work [82],\n[83] further extended VFDTc using an adaptive leaf strategy\nthat chooses the best classi\ufb01er from three options: majority\nvoting, Naive Bayes and Weighted Naive Bayes.\nDespite the success of VFDT, recent studies [84], [85]\nhave shown that its foundation, the Hoeffding bound, may\nnot be appropriate for the node splitting calculation because\nthe variables it computes, the information gain, are not\nindependent. A new online decision tree model [86] was\ndeveloped based on an alternative impurity measure. The\npaper shows that this measure also re\ufb02ects concept drift\nand can be used as a replacement measure in CVFDT. In the\nsame spirit, another decision tree algorithm (IADEM-3) [87]\naims to rectify the use of Hoeffding bound by computing\nthe sum of independent random variables, called relative\nfrequencies . The error rate of sub-trees are monitored to\ndetect drift and are used for tree pruning.\n6 E VALUATION , DATASETS AND BENCHMARKS\nSection 6.1 discusses the evaluation systems used for learn-\ning algorithms handling concept drift. Section 6.2 introduces\nsynthetic datasets, which used to simulate speci\ufb01c and\ncontrollable types of concept drift. Section 6.3 describes real-\nworld datasets, which used to test the overall performance\nin a real-life scenario.\n6.1 Evaluation Systems\nThe evaluation systems is an important part for learning\nalgorithms. Some evaluation methodologies used in learn-\ning under concept drift have been mentioned in [8]. We\nenrich this previous research by reviewing the evaluation\nsystems from three aspects: 1) validation methodology, 2)\nevaluation metrics, and 3) statistical signi\ufb01cance, and each\nevaluation is followed by its computation equation and\nusage introduction.\nValidation methodology refers to the procedure for a\nlearning algorithm to determine which data instances are\nused as the training set and which are used as the testing\nset. There are three procedures peculiar to the evaluation\nfor learning algorithms capable of handling concept drift:\n\n12\n1)holdout , 2)prequential , and 3) controlled permutation . In the\nscenario of a dataset involving concept drift, holdout should\nfollow the rule: when testing a learning algorithm at time\nt, the holdout set represents exactly the same concept at\nthat timet. Unfortunately, it is only applied on synthetic\ndatasets with prede\ufb01ned concept drift times. Prequential is\na popular evaluation scheme used in streaming data.", "start_char_idx": 256334, "end_char_idx": 265032, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a08aca1d-a78e-404c-9945-b1ef2db43bf9": {"__data__": {"id_": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}, {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}]}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "text": "Prequential is\na popular evaluation scheme used in streaming data. Each\ndata instance is \ufb01rst used to test the learning algorithm, and\nthen to train the learning algorithm. This scheme has the\nadvantage that there is no need to know the drift time of\nconcepts, and it makes maximum use of the available data.\nThe prequential error is computed based on an accumulated\nsum of a loss function between the prediction and observed\nlabel:S=\u2211n\nt=1f(\u02c6yt,yt). There are three prequential error\nrate estimates: a landmark window (interleaved-test-then-\ntrain), a sliding window, and a forgetting mechanism [88].\nControlled permutation [89] runs multiple test datasets in\nwhich the data order has been permutated in a controlled\nway to preserve the local distribution, which means that\ndata instances that were originally close to one another in\ntime need to remain close after a permutation. Controlled\npermutation reduces the risk that their prequential evalua-\ntion may produce biased results for the \ufb01xed order of data\nin a sequence.\nEvaluation metrics for datasets involving concept drift\ncould be selected from traditional accuracy measures, such\nas precision/recall in retrieval tasks, mean absolute scaled\nerror in regression, or root mean square error in recom-\nmender systems. In addition to that, the following measures\nshould be examined: 1) RAM-hours [90] for the computation\ncost of the mining process; 2) Kappa statistic \u03ba=p\u2212pran\n1\u2212pran[91] for classi\ufb01cation taking into account class imbalance,\nwherepis the accuracy of the classi\ufb01er under consideration\n(reference classi\ufb01er) and pranis the accuracy of the random\nclassi\ufb01er; 3) Kappa-Temporal statistic \u03baper=p\u2212pper\n1\u2212pper[92] for the\nclassi\ufb01cation of streaming data with temporal dependence,\nwherepperis the accuracy of the persistent classi\ufb01er (a clas-\nsi\ufb01er that predicts the same label as previously observed);\n4)Combined Kappa statistic \u03ba+=\u221a\nmax(0,\u03ba) max(0,\u03baper)\n[92], which combines the \u03baand\u03baperby taking the geometric\naverage; 5) Prequential AUC [93]; and 6)theAveraged Nor-\nmalized Area Under theCurve (NAUC) values forPreci-\nsion-Range curve and Recall-Range curve [53], for the clas-\nsi\ufb01cation of streaming data involving concept drift. Apart\nfrom evaluating the performance of learning algorithms, the\naccuracy of the concept drift detection method/algorithm\ncan be accessed according to the following criteria: 1) true\ndetection rate , 2)false detection rate , 3)miss detection rate , and\n4) delay of detection [22].\nStatistical signi\ufb01cance is used to compare learning algo-\nrithms on achieved error rates. The three most frequently\nused statistical tests for comparing two learning algorithms\n[94], [95] are: 1) McNemar test [96]: denote the number\nof data instances misclassi\ufb01ed by the \ufb01rst classi\ufb01er and\ncorrectly classi\ufb01ed by the second classi\ufb01er by a, and denote\nbin the opposite way. The McNemar statistic is computed\nasM=sign(a\u2212b)\u00d7(a\u2212b)2/(a+b)to test whether\ntwo classi\ufb01ers perform equally well. The test follows the\n\u03c72distribution; 2) Sign test: for Ndata instances, denote\nthe number of data instances misclassi\ufb01ed by the \ufb01rstclassi\ufb01er and correctly classi\ufb01ed by the second classi\ufb01er by\nBand the number of ties by T. Conduct one-sided sign\ntest by computing p=\u2211N\u2212T\nk=B(N\u2212T\nk)0.5k\u00d70.5N\u2212T\u2212k. If\npless than a signi\ufb01cant level, then the second classi\ufb01er\nis better than the \ufb01rst classi\ufb01er. and 3) Wilcoxon\u2019s sign-\nrank test: For testing two classi\ufb01ers on Ndatasets, let xi,1\nandxi,2(i= 1,...,N )denote the measurements. The\nnumber of ties is TandNr=N\u2212T. The test statistic\nW=\u2211Nr\ni=1(sign(xi,1\u2212xi,2)\u00d7Ri)whereRiis the rank\nordered by|xi,1\u2212xi,2|increasingly. Two classi\ufb01ers perform\nequally is rejected if |W|> W critical,Nr(two-sided), where\nWcritical,Nrcan be acquired from the statistical table. All\nthree tests are non-parametric. The Nemenyi test [97] is\nused to compare more than two learning algorithms. It is\nan appropriate test for comparing all learning algorithms\nwith multiple datasets, based on the average rank of algo-\nrithms over all datasets. The Nemenyi test consists of the\nfollowing: two classi\ufb01ers are performing differently if the\ncorresponding average ranks differ by at least the critical\ndifference CD =q\u03b1\u221a\nk(k+ 1)/6N, wherekis the number\nof learners, Nis the number of datasets, and critical values\nq\u03b1are based on the Studentized range statistic divided by\u221a\n2. Other tests can be used to compare learning algorithms\nwith a control algorithm [97].\n6.2 Synthetic datasets\nWe list several widely used synthetic datasets for evaluat-\ning the performance of learning algorithms dealing with\nconcept drift. Since data instances are generated by prede-\n\ufb01ned rules and speci\ufb01c parameters, a synthetic dataset is\na good option for evaluating the performance of learning\nalgorithms in different concept drift scenarios. The dataset\nprovider, the number of instances (#Insts.), the number\nof attributes (#Attrs.), the number of classes (#Cls.), types\nof drift (Types), sources of drift (Sources), and used by\nreferences, are listed in TABLE 3.\n6.3 Real-world datasets\nIn this section, we collect several publicly available real-\nworld datasets, including real-world datasets with syn-\nthetic drifts. The dataset provider, the number of instances\n(#Insts.), the number of attributes (#Attrs.), the number\nof classes (#Cls.), and used by references, are shown in\nTABLE 4.\nMost ofthese datasets contain temporalconcept drift\nspan ning over differentperiod range -e.g. daily (Sen sor\n[108]), seasonally (Elec tricity [109] )oryearly (Airlines\n[104], NOAA weather [67]).Othersinclude geograph ical\n(Cover type [106] )orcategorical(Poker -Hand [106] )concept\ndrift. Certain date sets, mainly text based, aretargetingat\nspeci\ufb01c drift types, such assudden drift (Email data [110] ),\ngradu raldrift (Spam assassincorpus [111] ),recurrent drift\n(Usenet [112]) ornovel class (KDDCup\u201999 [106] ,ECUE drift\ndataset 2[113] )\nThese datasets provide realisticbench mark forevaluat-\ningdiffernent concept drift handling meth ods. There are,\nhow ever, two limitations ofreal world data sets: 1)the\ngroud truth ofprecise start and end time ofdrifts isun-\nknown; 2)some real datasets may include mixed drift types.\nThese limitations make itdif\ufb01cult toevaluatemeth ods for\n\n13\nTABLE 3\nList of synthetic datasets for performance evaluation of learning under concept drift.\nDataset #Insts. #Attrs. #Cls.", "start_char_idx": 264966, "end_char_idx": 271326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0313355c-dc51-46e5-9bdc-70efa141106f": {"__data__": {"id_": "0313355c-dc51-46e5-9bdc-70efa141106f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2f2c2788-719b-4bf1-aed2-830e6802d26f", "node_type": "1", "metadata": {}, "hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "class_name": "RelatedNodeInfo"}, {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, {"node_id": "06fa7e6d-3d91-4114-8381-86e8e6a7b958", "node_type": "1", "metadata": {}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "class_name": "RelatedNodeInfo"}, {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}]}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "text": "Dataset #Insts. #Attrs. #Cls. Types Sources Used by references\n1 STAGGER [1] Custom 3 2 Sudden II [20], [23], [27], [30], [41], [57], [65], [72], [87], [98],\n[99]\n2 SEA [100] Custom 3 2 Sudden II [2], [5], [13], [20], [27], [32], [35], [51], [57], [58],\n[63], [65], [67], [73], [76], [99]\u2013[102]\n3 Rotating hyperplane [80],\n[103]Custom 10 2 Gradual; Incremental II [2], [13], [21], [27], [30], [32], [35], [36], [41], [51],\n[58], [59], [63], [71]\u2013[73], [78], [80], [83], [87], [102]\n4 Random RBF [104] Custom Custom Custom Sudden; Gradual; Incre-\nmentalIII [13], [20], [21], [26], [27], [29], [30], [35], [41], [50],\n[63], [67], [72]\u2013[74], [87], [102], [105]\n5 Random Tree [79], [104] Custom Custom Custom Sudden; Reoccurring II [27], [35], [73], [82], [84]\u2013[87]\n6 LED [106] Custom 24 10 Sudden II [23], [27], [35], [63], [73], [81], [82], [87], [99], [102]\n7 Waveform [106] Custom 40 3 Sudden II [18], [27], [78], [81]\u2013[83], [87], [102]\n8 Sine [20] Custom 2 2 Sudden II [20], [21], [26], [29], [72], [107]\n9 Circle [20] Custom 2 2 Gradual III [20], [21], [26], [30], [41], [72], [101], [107]\n10 Rotating chessboard [67] Custom 2 2 Gradual II [13], [45], [51], [67], [107]\nunderstand ing the drift, and could introduce bias when\ncomparingdifferentmachine learn ingmod els.\n7 T HECONCEPT DRIFT PROBLEM IN OTHER RE-\nSEARCH AREAS\nWe have observed that handling the concept drift problem is\nnot a standalone research subject but has a large number of\nindirect usage scenarios. In this section, we adopt this new\nperspective to review recent developments in other research\nareas that bene\ufb01t from handling the concept drift problem.\n7.1 Class imbalance\nClass imbalance is a common problem in stream data min-\ning in addition to concept drift. Research effort has been\nmade to develop effective learning algorithms to tackle\nboth problems at same time. [117] presented two ensemble\nmethods for learning under concept drift with imbalanced\nclass. The \ufb01rst method, Learn++.CDS, is extended from\nLearn++.NSE and combined with the Synthetic Minority\nclass Oversampling Technique (SMOTE). The second al-\ngorithm, Learn++.NIE, improves on the previous method\nby employing a different penalty constraint to prevent\nprediction accuracy bias and replacing SMOTE with bag-\nging to avoid oversampling. ESOS-ELM [118] is another\nensemble method which uses Online Sequential Extreme\nLearning Machine (OS-ELM) as a basic classi\ufb01er to improve\nperformance with class imbalanced data. A concept drift\ndetector is integrated to retrain the classi\ufb01er when drift\noccurs. The author then developed another algorithm [119],\nwhich is able to tackle multi-class imbalanced data with\nconcept drift. [120] proposed two learning algorithms OOB\nand UOB, which build an ensemble model to overcome\nthe class imbalance in real time through resampling and\ntime-decayed metrics. [121] developed an ensemble method\nwhich handles concept drift and class imbalance with addi-\ntional true label data limitation.\n7.2 Big data mining\nData mining in big data environments faces similar chal-\nlenges to stream data mining [122]: data is generated at\na fast rate (Velocity) and distribution uncertainty always\nexists in the data, which means that handling concept drift is\nalso crucial in big data applications. Additionally, scalabilityis an important consideration because in big data environ-\nments, a data stream may come in very large and potentially\nunpredictable quantities (Volume) and cannot be processed\nin a single computer server. An attempt to handle concept\ndrift in a distributed computing environment was made\nby [123] in which an Online Map-Reduce Drift Detection\nMethod (OMR-DDM) was proposed, using the combined\nonline error rate of the parallel classi\ufb01cation algorithms to\nidentify the changes in a big data stream. A recent study\n[124] proposed another scalable stream data mining algo-\nrithm, called Micro-Cluster Nearest Neighbor (MC-NN),\nbased on nearest neighbor classi\ufb01er. This method extends\nthe original Micro-Cluster algorithm [125] to adapt to con-\ncept drift by monitoring classi\ufb01cation error. This micro-\ncluster algorithm was further extended to a parallel version\nusing the map-reduce technique in [126] and applied to\nsolve the label-drift classi\ufb01cation problem where class labels\nare not known in advance [127].\n7.3 Active learning and semi-supervised learning\nActive learning is based on the assumption that there is a\nlarge amount of unlabeled data but only a fraction of them\ncan be labeled by human effort. This is a common situation\nin stream data applications, which are often also subject to\nthe concept drift problem. [115] presented a general frame-\nwork that combines active learning and concept drift adap-\ntation. It \ufb01rst compares different instance-sampling strate-\ngies for labeling to guarantee that the labeling cost will be\nunder budget, and that distribution bias will be prevented.\nA drift adaptation mechanism is then adopted, based on the\nDDM detection method [20]. In [128], the authors proposed\na new active learning algorithm that primarily aims to\navoid bias in the sampling process of choosing instances\nfor labeling. They also introduced a memory loss factor to\nthe model, enabling it to adapt to concept drift.\nSemi-supervised learning concerns how to use limited\ntrue label data more ef\ufb01ciently by leveraging unsupervised\ntechniques. In this scenario, additional design effort is re-\nquired to handle concept drift. For example, in [129], the au-\nthors applied a Gaussian Mixture model to both labeled and\nunlabeled data, and assigned labels, which has the ability\nto adapt to gradual drift. Similarly, [99], [130], [131] are all\ncluster-based semi-supervised ensemble methods that aim\nto adapt to drift with limited true label data. The latter\n\n14\nTABLE 4\nList of real-world datasets for performance evaluation of learning under concept drift.\nDataset #Insts. #Attrs. #Cls. Used by references\n1 Airlines [104] 539384 7 2 [4], [5], [35], [73], [102], [114], [115]\n2 Covertype [106] 581012 54 7 [13], [23], [35], [36], [59], [63], [73], [81]\u2013[83], [86], [87], [102], [115]\n3 Electricity [109] 45312 8 2 [4], [5], [13], [20], [23], [26], [29], [31], [35], [36], [57], [63], [72], [73], [78], [86], [87], [101],\n[102], [115]\n4 Poker-Hand [106] 1025010 10 10 [13], [32], [63], [73], [102]\n5 NOAA weather [67] 18159 8 2 [2], [4], [13], [67], [68], [78], [105]\n6 Sensor [108] 2219803 5 54 [36], [78]\n7 KDDCup\u201999 [106] 494021 41 23 [35], [47], [65], [69], [74], [84], [86], [99], [102]\n8 Usenet1 [112] 1500 99 2 [23], [51], [87]\n9 Usenet2 [112] 1500 99 2 [23], [87]\n10 Email data [110] 1500 913 2 [45], [76], [77]\n11 Spam data [110] 9324 499 2 [4], [5], [23], [36], [102], [116]\n12 Spam assassin corpus [111] 9324 39916 2 [4], [35], [76], [87]\n13 ECUE drift dataset 1 [113] 10983 287034 2 [2], [3]\n14 ECUE drift dataset 2 [113] 11905 166047 2 [2], [3]\nare also able to recognize recurring concepts.", "start_char_idx": 271297, "end_char_idx": 278203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5add9bd3-150d-43c9-a561-6111b47ce200": {"__data__": {"id_": "5add9bd3-150d-43c9-a561-6111b47ce200", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}, {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, {"node_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657", "node_type": "1", "metadata": {}, "hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "class_name": "RelatedNodeInfo"}]}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "text": "In [132], the\nauthor adopted a new perspective on the true label scarcity\nproblem by considering the true labeled data and unlabeled\ndata as two independent non-stationary data generating\nprocesses. Concept drift is handled asynchronously on these\ntwo streams. The SAND algorithm [133], [134] is another\nsemi-supervised adaptive method which detects concept\ndrift on cluster boundaries. There are also studies [90, 91]\nthat focus on adapting to concept drift in circumstances\nwhere true label data is completely unavailable.\n7.4 Decision Rules\nData-driven decision support systems need to be able to\nadapt to concept drift in order to make accurate decisions\nand decision rules is the main technique for this purpose.\n[102] proposed a decision rule induction algorithm, Very\nFast Decision Rules (VFDR), to effectively process stream\ndata. An extended version, Adaptive VFDR, was developed\nto handle concept drift by dynamically adding and remov-\ning decision rules according to their error rate which is mon-\nitored by drift detector. Instead of inducing rules from de-\ncision trees, [135] proposed another decision rule algorithm\nbased on PRISM [136] to directly induce rules from data.\nThis algorithm is also able to adapt to drift by monitoring\nthe performance of each rule on a sliding window of latest\ndata. [137] also developed an adaptive decision making\nalgorithm based on fuzzy rules. The algorithm includes a\nrule pruning procedure, which removes obsolete rules to\nadapt to changes, and a rule recal procedure to adapt to\nrecurring concepts.\nThis section by no means attempts to cover every re-\nsearch \ufb01eld in which concept drift handling is used. There\nare many other studies that also consider concept drift as a\ndual problem. For example, [138] is a dimension reduction\nalgorithm to separate classes based on least squares linear\ndiscovery analysis (LSLDA), which is then extended to\nadapt to drift; [139] considered the concept drift problem in\ntime series and developed an online explicit drift detection\nmethod by monitoring time series features; and [140] devel-\noped an incremental scaffolding classi\ufb01cation algorithm for\ncomplex tasks that also involve concept drift.8 C ONCLUSIONS :FINDINGS AND FUTURE DIREC -\nTIONS\nWe summarize the recent developments of concept drift\nresearch, and the following important \ufb01ndings can be ex-\ntracted:\n1) Error rate-based and data distribution-based drift de-\ntection methods are still playing a dominant role in con-\ncept drift detection research, while multiple hypothesis\ntest methods emerge in recent years;\n2) Regarding to concept drift understanding, all drift\ndetection methods can answer \u201cWhen\u201d, but very\nfew methods have the ability to answer \u201cHow\u201d and\n\u201cWhere\u201d;\n3) Adaptive models and ensemble techniques have played\nan increasingly important role in recent concept drift\nadaptation developments. In contrast, research of re-\ntraining models with explicit drift detection has slowed;\n4) Most existingdrift detection and adap tation algorithms\nassume theground true labelisavail able afterclassi\ufb01-\ncation/prediction, orextreme veri\ufb01cation latency. Very\nfew research has been conducted toaddress unsuper-\nvised orsemi -supervised drift detection and adap ta-\ntion.\n5) Some computational intelligence techniques, such as\nfuzzy logic, competence model, have been applied in\nconcept drift;\n6) There is no comprehensive analysis on real-world data\nstreams from the concept drift aspect, such as the drift\noccurrence time, the severity of drift, and the drift\nregions.\n7) An increasing number of other research areas have\nrecognized the importance of handling concept drift,\nespecially in big data community.\nBased on these \ufb01ndings, we suggest four new directions\nin future concept drift research:\n1) Drift detection research should not only focus on identi-\nfying drift occurrence time accurately, but also need to\nprovide the information of drift severity and regions.\nThese information could be utilized for better concept\ndrift adaptation.\n2) Inthereal-world scenario, thecost toacquire true label\ncould beexpensive, that is,unsupervised orsemi -su-\n\n15\npervised drift detection and adap tation could still be\npromis inginthefuture.\n3) A framework for selecting real-world data streams\nshould be established for evaluating learning algo-\nrithms handling concept drift.\n4) Research on effectively integrating concept drift han-\ndling techniques with machine learning methodologies\nfor data-driven applications is highly desired.\nWe hope this paper can provide researchers with state-\nof-the-art knowledge on concept drift research develop-\nments and provide guidelines about how to apply concept\ndrift techniques in different domains to support users in\nvarious prediction and decision activities.\nACKNOWLEDGMENTS\nThe work presented in this paper was supported by the\nAustralian Research Council (ARC) under discovery grant\nDP150101645. We signi\ufb01cantly thank Yiliao Song for her\nhelp in preparation of datasets and applications shown in\nSections 6.\nREFERENCES\n[1] G. Widmer and M. Kubat, \u201cLearning in the presence of concept\ndrift and hidden contexts,\u201d Machine Learning , vol. 23, no. 1, pp.\n69\u2013101, 1996.\n[2] N. Lu, J. Lu, G. Zhang, and R. Lopez de Mantaras, \u201cA concept\ndrift-tolerant case-base editing technique,\u201d Artif. Intell. , vol. 230,\npp. 108\u2013133, 2016.\n[3] N. Lu, G. Zhang, and J. Lu, \u201cConcept drift detection via compe-\ntence models,\u201d Artif. Intell. , vol. 209, pp. 11\u201328, 2014.\n[4] A. Liu, Y. Song, G. Zhang, and J. Lu, \u201cRegional concept drift\ndetection and density synchronized drift adaptation,\u201d in Proc.\n26th Int. Joint Conf. Arti\ufb01cial Intelligence . Accept, 2017, Conference\nProceedings.\n[5] A. Liu, G. Zhang, and J. Lu, \u201cFuzzy time windowing for gradual\nconcept drift adaptation,\u201d in Proc. 26th IEEE Int. Conf. Fuzzy\nSystems . IEEE, 2017, Conference Proceedings.\n[6] B. Krawczyk, L. L. Minku, J. Gama, J. Stefanowski, and M. Wo-\nniak, \u201cEnsemble learning for data stream analysis: A survey,\u201d\nInformation Fusion , vol. 37, pp. 132\u2013156, 2017.\n[7] S. Ram \u00b4\u0131rez-Gallego, B. Krawczyk, S. Garc \u00b4\u0131a, M. Wo \u00b4zniak, and\nF. Herrera, \u201cA survey on data preprocessing for data stream\nmining: Current status and future directions,\u201d Neurocomputing ,\nvol. 239, pp. 39\u201357, 2017.\n[8] J. Gama, I. \u02c7Zliobait \u02d9e, A. Bifet, M. Pechenizkiy, and A. Bouchachia,\n\u201cA survey on concept drift adaptation,\u201d ACM Comput. Surv. ,\nvol. 46, no. 4, pp. 1\u201337, 2014.\n[9] G. Ditzler, M. Roveri, C. Alippi, and R. Polikar, \u201cLearning in\nnonstationary environments: a survey,\u201d IEEE Comput. Intell. Mag. ,\nvol. 10, no. 4, pp. 12\u201325, 2015.\n[10] J. Gama, \u201cA survey on learning from data streams: current and\nfuture trends,\u201d Progress in Arti\ufb01cial Intelligence , vol. 1, no. 1, pp.\n45\u201355, 2012.\n[11] J. A. Silva, E. R. Faria, R. C. Barros, E. R. Hruschka, A. C. P . L.\nF. d. Carvalho, and J. Gama, \u201cData stream clustering: A survey,\u201d\nACM Comput. Surv. , vol. 46, no. 1, pp. 1\u201331, 2013.\n[12] J. C. Schlimmer and R. H. Granger Jr, \u201cIncremental learning from\nnoisy data,\u201d Machine learning , vol. 1, no. 3, pp. 317\u2013354, 1986.\n[13] V . Losing, B. Hammer, and H. Wersing, \u201cKnn classi\ufb01er with self\nadjusting memory for heterogeneous concept drift,\u201d in Proc. 16th\nInt. Conf. Data Mining , 2016, Conference Proceedings, pp. 291\u2013\n300.\n[14] I. \u02c7Zliobait \u02d9e and J. Hollm \u00b4en, \u201cOptimizing regression models for\ndata streams with missing values,\u201d Machine Learning , vol. 99,\nno. 1, pp. 47\u201373, 2014.\n[15] S. Amos, \u201cWhen training and test sets are different: characteriz-\ning learning transfer,\u201d Dataset Shift in Machine Learning , pp. 3\u201328,\n2009.", "start_char_idx": 278204, "end_char_idx": 285762, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a": {"__data__": {"id_": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}, {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}]}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "text": "3\u201328,\n2009.[16] J. G. Moreno-Torres, T. Raeder, R. Alaiz-Rodr \u00b4\u0131guez, N. V . Chawla,\nand F. Herrera, \u201cA unifying view on dataset shift in classi\ufb01ca-\ntion,\u201d Pattern Recognit. , vol. 45, no. 1, pp. 521\u2013530, 2012.\n[17] M. Basseville and I. V . Nikiforov, Detection of abrupt changes: theory\nand application . Prentice Hall Englewood Cliffs, 1993, vol. 104.\n[18] A. Dries and U. R \u00a8uckert, \u201cAdaptive concept drift detection,\u201d\nStatistical Analysis and Data Mining: The ASA Data Science Journal ,\nvol. 2, no. 5\u20136, pp. 311\u2013327, 2009.\n[19] C. Alippi and M. Roveri, \u201cJust-in-time adaptive classi\ufb01ers part i:\nDetecting nonstationary changes,\u201d IEEE Trans. Neural Networks ,\nvol. 19, no. 7, pp. 1145\u20131153, 2008.\n[20] J. Gama, P . Medas, G. Castillo, and P . Rodrigues, \u201cLearning with\ndrift detection,\u201d in Proc. 17th Brazilian Symp. Arti\ufb01cial Intelligence ,\nser. Lecture Notes in Computer Science. Springer, 2004, Book\nSection, pp. 286\u2013295.\n[21] L. Bu, C. Alippi, and D. Zhao, \u201cA pdf-free change detection\ntest based on density difference estimation,\u201d IEEE Trans. Neural\nNetworks Learn. Syst. , vol. PP , no. 99, pp. 1\u201311, 2016.\n[22] T. Dasu, S. Krishnan, S. Venkatasubramanian, and K. Yi, \u201cAn\ninformation-theoretic approach to detecting changes in multi-\ndimensional data streams,\u201d in Proc. Symp. the Interface of Statistics,\nComputing Science, and Applications . Citeseer, 2006, Conference\nProceedings, pp. 1\u201324.\n[23] I. Frias-Blanco, J. d. Campo-Avila, G. Ramos-Jimenez, R. Morales-\nBueno, A. Ortiz-Diaz, and Y. Caballero-Mota, \u201cOnline and\nnon-parametric drift detection methods based on hoeffding\u2019s\nbounds,\u201d IEEE Trans. Knowl. Data Eng. , vol. 27, no. 3, pp. 810\u2013\n823, 2015.\n[24] M. Yamada, A. Kimura, F. Naya, and H. Sawada, \u201cChange-point\ndetection with feature selection in high-dimensional time-series\ndata,\u201d in Proc. 23rd Int. Joint Conf. Arti\ufb01cial Intelligence , 2013,\nConference Proceedings, pp. 1827\u20131833.\n[25] J. Gama and G. Castillo, \u201cLearning with local drift detection,\u201d\ninProc. 2nd Int. Conf. Advanced Data Mining and Applications .\nSpringer, 2006, Conference Proceedings, pp. 42\u201355.\n[26] M. Baena-Garc \u00b4\u0131a, J. del Campo- \u00b4Avila, R. Fidalgo, A. Bifet,\nR. Gavald `a, and R. Morales-Bueno, \u201cEarly drift detection\nmethod,\u201d in Proc. 4th Int. Workshop Knowledge Discovery from Data\nStreams , 2006, Conference Paper.\n[27] S. Xu and J. Wang, \u201cDynamic extreme learning machine for\ndata stream classi\ufb01cation,\u201d Neurocomputing , vol. 238, pp. 433\u2013449,\n2017.\n[28] G.-B. Huang, Q.-Y. Zhu, and C.-K. Siew, \u201cExtreme learning ma-\nchine: Theory and applications,\u201d Neurocomputing , vol. 70, no. 1\u20133,\npp. 489\u2013501, 2006.\n[29] G. J. Ross, N. M. Adams, D. K. Tasoulis, and D. J. Hand, \u201cExpo-\nnentially weighted moving average charts for detecting concept\ndrift,\u201d Pattern Recognit. Lett. , vol. 33, no. 2, pp. 191\u2013198, 2012.\n[30] K. Nishida and K. Yamauchi, \u201cDetecting concept drift using\nstatistical testing,\u201d in Proc. 10th Int. Conf. Discovery Science , V . Cor-\nruble, M. Takeda, and E. Suzuki, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2007, Conference Proceedings, pp.\n264\u2013269.\n[31] A. Bifet and R. Gavald `a, \u201cLearning from time-changing data with\nadaptive windowing,\u201d in Proc. 2007 SIAM Int. Conf. Data Mining ,\nvol. 7. SIAM, 2007, Conference Proceedings, p. 2007.\n[32] \u2014\u2014, \u201cAdaptive learning from evolving data streams,\u201d in Proc.\n8th Int. Symp. Intelligent Data Analysis . Springer, 2009, Confer-\nence Proceedings, pp. 249\u2013260.\n[33] A. Bifet, G. Holmes, B. Pfahringer, and R. Gavald `a, \u201cImproving\nadaptive bagging methods for evolving data streams,\u201d in Proc.\n1st Asian Conf. Machine Learning , ser. Lecture Notes in Computer\nScience, Z.-H. Zhou and T. Washio, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2009, Book Section, pp. 23\u201337.\n[34] A. Bifet, G. Holmes, B. Pfahringer, R. Kirkby, and R. Gavald `a,\n\u201cNew ensemble methods for evolving data streams,\u201d in Proc. 15th\nACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining .\nACM, 2009, Conference Proceedings, pp. 139\u2013148.\n[35] H. M. Gomes, A. Bifet, J. Read, J. P . Barddal, F. Enembreck,\nB. Pfharinger, G. Holmes, and T. Abdessalem, \u201cAdaptive random\nforests for evolving data stream classi\ufb01cation,\u201d Machine Learning ,\n2017.\n[36] J. Shao, Z. Ahmadi, and S. Kramer, \u201cPrototype-based learning\non concept-drifting data streams,\u201d in Proc. 20th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . 2623609: ACM,\n2014, Conference Proceedings, pp. 412\u2013421.\n\n16\n[37] D. Kifer, S. Ben-David, and J. Gehrke, \u201cDetecting change in data\nstreams,\u201d in Proc. 30th Int. Conf. Very Large Databases , vol. 30.\nVLDB Endowment, 2004, Conference Proceedings, pp. 180\u2013191.\n[38] X. Song, M. Wu, C. Jermaine, and S. Ranka, \u201cStatistical change de-\ntection for multi-dimensional data,\u201d in Proc. 13th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . San Jose, Cali-\nfornia, USA: ACM, 2007, Conference Paper, pp. 667\u2013676.\n[39] A. A. Qahtan, B. Alharbi, S. Wang, and X. Zhang, \u201cA pca-based\nchange detection framework for multidimensional data streams,\u201d\ninProc. 21th Int. Conf. on Knowledge Discovery and Data Mining .\nACM, 2015, Conference Proceedings, pp. 935\u2013944.\n[40] F. Gu, G. Zhang, J. Lu, and C.-T. Lin, \u201cConcept drift detection\nbased on equal density estimation,\u201d in Proc. 2016 Int. Joint Conf.\nNeural Networks . IEEE, 2016, Conference Proceedings, pp. 24\u201330.\n[41] L. Bu, D. Zhao, and C. Alippi, \u201cAn incremental change detection\ntest based on density difference estimation,\u201d IEEE Transactions on\nSystems, Man, and Cybernetics: Systems , vol. PP , no. 99, pp. 1\u201313,\n2017.\n[42] C. Alippi and M. Roveri, \u201cJust-in-time adaptive classi\ufb01ers part\nii: designing the classi\ufb01er,\u201d IEEE Trans. Neural Networks , vol. 19,\nno. 12, pp. 2053\u20132064, 2008.", "start_char_idx": 285751, "end_char_idx": 291447, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f55b0dd-4f52-4281-a0cf-25a79ef363c2": {"__data__": {"id_": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}, {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, {"node_id": "7ff46e2e-66c3-447f-a174-7b41b24625aa", "node_type": "1", "metadata": {}, "hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "class_name": "RelatedNodeInfo"}]}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "text": "19,\nno. 12, pp. 2053\u20132064, 2008.\n[43] C. Alippi, G. Boracchi, and M. Roveri, \u201cA just-in-time adaptive\nclassi\ufb01cation system based on the intersection of con\ufb01dence\nintervals rule,\u201d Neural Networks , vol. 24, no. 8, pp. 791\u2013800, 2011.\n[44] \u2014\u2014, \u201cJust-in-time ensemble of classi\ufb01ers,\u201d in Proc. 2012 Int. Joint\nConf. Neural Networks . IEEE, 2012, Conference Proceedings, pp.\n1\u20138.\n[45] \u2014\u2014, \u201cJust-in-time classi\ufb01ers for recurrent concepts,\u201d IEEE Trans.\nNeural Networks Learn. Syst. , vol. 24, no. 4, pp. 620\u2013634, 2013.\n[46] W. Heng and Z. Abraham, \u201cConcept drift detection for streaming\ndata,\u201d in Proc. 2015 Int. Joint Conf. Neural Networks , 2015, Confer-\nence Proceedings, pp. 1\u20139.\n[47] Y. Zhang, G. Chu, P . Li, X. Hu, and X. Wu, \u201cThree-layer concept\ndrifting detection in text data streams,\u201d Neurocomputing , vol. 260,\npp. 393\u2013403, 2017.\n[48] L. Du, Q. Song, L. Zhu, and X. Zhu, \u201cA selective detector en-\nsemble for concept drift detection,\u201d The Computer Journal , vol. 58,\nno. 3, pp. 457\u2013471, 2014.\n[49] B. I. F. Maciel, S. G. T. C. Santos, and R. S. M. Barros, \u201cA\nlightweight concept drift detection ensemble,\u201d in Proc. 27th IEEE\nInt. Conf. on Tools with Arti\ufb01cial Intelligence . IEEE, 2015, pp. 1061\u2013\n1068.\n[50] C. Alippi, G. Boracchi, and M. Roveri, \u201cHierarchical change-\ndetection tests,\u201d IEEE Trans. Neural Networks Learn. Syst. , vol. 28,\nno. 2, pp. 246\u2013258, 2017.\n[51] S. Yu and Z. Abraham, \u201cConcept drift detection with hierarchical\nhypothesis testing,\u201d in Proc. 2017 SIAM Int. Conf. Data Mining .\nSIAM, 2017, Conference Proceedings, pp. 768\u2013776.\n[52] H. Raza, G. Prasad, and Y. Li, \u201cEwma model based shift-detection\nmethods for detecting covariate shifts in non-stationary environ-\nments,\u201d Pattern Recognit. , vol. 48, no. 3, pp. 659\u2013669, 2015.\n[53] S. Yu, X. Wang, and J. C. Principe, \u201cRequest-and-reverify: Hi-\nerarchical hypothesis testing for concept drift detection with\nexpensive labels,\u201d arXiv preprint arXiv:1806.10131 , 2018.\n[54] P . M. Gonc \u00b8alves Jr, S. G. de Carvalho Santos, R. S. Barros, and\nD. C. Vieira, \u201cA comparative study on concept drift detectors,\u201d\nExpert Systems with Applications , vol. 41, no. 18, pp. 8144\u20138156,\n2014.\n[55] F. Pukelsheim, \u201cThe three sigma rule,\u201d The American Statistician ,\nvol. 48, no. 2, pp. 88\u201391, 1994.\n[56] A. Tsymbal, M. Pechenizkiy, P . Cunningham, and S. Puuronen,\n\u201cDynamic integration of classi\ufb01ers for handling concept drift,\u201d\nInformation Fusion , vol. 9, no. 1, pp. 56\u201368, 2008.\n[57] S. H. Bach and M. Maloof, \u201cPaired learners for concept drift,\u201d\ninProc. 8th Int. Conf. Data Mining , 2008, Conference Proceedings,\npp. 23\u201332.\n[58] D. Liu, Y. Wu, and H. Jiang, \u201cFp-elm: An online sequential learn-\ning algorithm for dealing with concept drift,\u201d Neurocomputing ,\nvol. 207, pp. 322\u2013334, 2016.\n[59] D. Han, C. Giraud-Carrier, and S. Li, \u201cEf\ufb01cient mining of high-\nspeed uncertain data streams,\u201d Applied Intelligence , vol. 43, no. 4,\npp. 773\u2013785, 2015.\n[60] S. G. Soares and R. Ara \u00b4ujo, \u201cAn adaptive ensemble of on-line\nextreme learning machines with variable forgetting factor for\ndynamic system prediction,\u201d Neurocomputing , vol. 171, pp. 693\u2013\n707, 2016.[61] B. F. J. Manly and D. Mackenzie, \u201cA cumulative sum type of\nmethod for environmental monitoring,\u201d Environmetrics , vol. 11,\nno. 2, pp. 151\u2013166, 2000.\n[62] N. C. Oza and S. Russell, \u201cExperimental comparisons of online\nand batch versions of bagging and boosting,\u201d in Proc. 7th ACM\nSIGKDD Int. Conf. Knowledge Discovery and Data Mining . 502565:\nACM, 2001, Conference Proceedings, pp. 359\u2013364.\n[63] A. Bifet, G. Holmes, and B. Pfahringer, \u201cLeveraging bagging for\nevolving data streams,\u201d in Proc. 2010 Joint European Conf. Machine\nLearning and Knowledge Discovery in Databases . Springer, 2010,\nConference Proceedings, pp. 135\u2013150.\n[64] F. Chu and C. Zaniolo, \u201cFast and light boosting for adaptive\nmining of data streams,\u201d in Proc. 8th Paci\ufb01c-Asia Conf. Knowledge\nDiscovery and Data Mining , H. Dai, R. Srikant, and C. Zhang,\nEds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2004, Book\nSection, pp. 282\u2013292.\n[65] P . Li, X. Wu, X. Hu, and H. Wang, \u201cLearning concept-drifting data\nstreams with random ensemble decision trees,\u201d Neurocomputing ,\nvol. 166, pp. 68\u201383, 2015.\n[66] J. Z. Kolter and M. A. Maloof, \u201cDynamic weighted majority:\nAn ensemble method for drifting concepts,\u201d Journal of Machine\nLearning Research , 2007.\n[67] R. Elwell and R. Polikar, \u201cIncremental learning of concept drift\nin nonstationary environments,\u201d IEEE Trans. Neural Networks ,\nvol. 22, no. 10, pp. 1517\u201331, 2011.\n[68] X.-C. Yin, K. Huang, and H.-W. Hao, \u201cDe2: Dynamic ensemble of\nensembles for learning nonstationary data,\u201d Neurocomputing , vol.\n165, pp. 14\u201322, 2015.\n[69] P . Zhang, J. Li, P . Wang, B. J. Gao, X. Zhu, and L. Guo, \u201cEnabling\nfast prediction for ensemble models on data streams,\u201d in Proc.\n17th ACM SIGKDD Int. Conf. Knowledge Discovery and Data Min-\ning. San Diego, California, USA: ACM, 2011, Conference Paper,\npp. 177\u2013185.\n[70] Y. Xu, R. Xu, W. Yan, and P . Ardis, \u201cConcept drift learning with\nalternating learners,\u201d in Proc. 2017 Int. Joint Conf. Neural Networks ,\n2017, Conference Proceedings, pp. 2104\u20132111.\n[71] L. Pietruczuk, L. Rutkowski, M. Jaworski, and P . Duda, \u201cA\nmethod for automatic adjustment of ensemble size in stream\ndata mining,\u201d in Proc. 2016 Int. Joint Conf. Neural Networks , 2016,\nConference Proceedings, pp. 9\u201315.\n[72] S.-C. You and H.-T. Lin, \u201cA simple unlearning framework for\nonline learning under concept drifts,\u201d in Proc. 20th Paci\ufb01c-Asia\nConf. Knowledge Discovery and Data Mining . Springer, 2016,\nConference Proceedings, pp. 115\u2013126.\n[73] D. Brzezinski and J. Stefanowski, \u201cReacting to different types of\nconcept drift: The accuracy updated ensemble algorithm,\u201d IEEE\nTrans. Neural Networks Learn. Syst. , vol. 25, no. 1, pp. 81\u201394, 2014.\n[74] P . Zhang, X. Zhu, and Y. Shi, \u201cCategorizing and mining concept\ndrifting data streams,\u201d in Proc.", "start_char_idx": 291415, "end_char_idx": 297293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "518c38b4-975f-4b87-b4c5-89fbc4364837": {"__data__": {"id_": "518c38b4-975f-4b87-b4c5-89fbc4364837", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}, {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, {"node_id": "023d29ba-27f7-4516-bd02-a7ed63efbdb0", "node_type": "1", "metadata": {}, "hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "class_name": "RelatedNodeInfo"}]}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "text": "14th ACM SIGKDD Int. Conf.\nKnowledge Discovery and Data Mining . Las Vegas, Nevada, USA:\nACM, 2008, Conference Paper, pp. 812\u2013820.\n[75] Y. Sun, K. Tang, L. L. Minku, S. Wang, and X. Yao, \u201cOnline en-\nsemble learning of data streams with gradually evolved classes,\u201d\nIEEE Trans. Knowl. Data Eng. , vol. 28, no. 6, pp. 1532\u20131545, 2016.\n[76] J. Gama and P . Kosina, \u201cRecurrent concepts in data streams\nclassi\ufb01cation,\u201d Knowledge and Information Systems , vol. 40, no. 3,\npp. 489\u2013507, 2013.\n[77] J. B. Gomes, M. M. Gaber, P . A. Sousa, and E. Menasalvas,\n\u201cMining recurring concepts in a dynamic feature space,\u201d IEEE\nTrans. Neural Networks Learn. Syst. , vol. 25, no. 1, pp. 95\u2013110, 2014.\n[78] Z. Ahmadi and S. Kramer, \u201cModeling recurring concepts in data\nstreams: a graph-based framework,\u201d Knowledge and Information\nSystems , 2017.\n[79] P . Domingos and G. Hulten, \u201cMining high-speed data streams,\u201d\ninProc. 6th ACM SIGKDD Int. Conf. Knowledge Discovery and Data\nMining . ACM, 2000, Conference Proceedings, pp. 71\u201380.\n[80] G. Hulten, L. Spencer, and P . Domingos, \u201cMining time-changing\ndata streams,\u201d in Proc. 7th ACM SIGKDD Int. Conf. Knowledge\nDiscovery and Data Mining . San Francisco, California: ACM, 2001,\nConference Paper, pp. 97\u2013106.\n[81] J. Gama, R. Rocha, and P . Medas, \u201cAccurate decision trees for\nmining high-speed data streams,\u201d in Proc. 9th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . ACM, 2003,\nConference Proceedings, pp. 523\u2013528.\n[82] H. Yang and S. Fong, \u201cIncrementally optimized decision tree\nfor noisy big data,\u201d in Proc. 1st Int. Workshop Big Data, Streams\nand Heterogeneous Source Mining Algorithms, Systems, Programming\n\n17\nModels and Applications . Beijing, China: ACM, 2012, Conference\nPaper, pp. 36\u201344.\n[83] \u2014\u2014, \u201cCountering the concept-drift problems in big data by\nan incrementally optimized stream mining model,\u201d Journal of\nSystems and Software , vol. 102, pp. 158\u2013166, 2015.\n[84] L. Rutkowski, M. Jaworski, L. Pietruczuk, and P . Duda, \u201cDecision\ntrees for mining data streams based on the gaussian approxima-\ntion,\u201d IEEE Trans. Knowl. Data Eng. , vol. 26, no. 1, pp. 108\u2013119,\n2014.\n[85] L. Rutkowski, L. Pietruczuk, P . Duda, and M. Jaworski, \u201cDecision\ntrees for mining data streams based on the mcdiarmid\u2019s bound,\u201d\nIEEE Trans. Knowl. Data Eng. , vol. 25, no. 6, pp. 1272\u20131279, 2013.\n[86] L. Rutkowski, M. Jaworski, L. Pietruczuk, and P . Duda, \u201cA new\nmethod for data stream mining based on the misclassi\ufb01cation\nerror,\u201d IEEE Trans. Neural Networks Learn. Syst. , vol. 26, no. 5, pp.\n1048\u20131059, 2015.\n[87] I. Fr \u00b4\u0131as-Blanco, J. d. Campo- \u00b4Avila, G. Ramos-Jim \u00b4enez, A. C. P .\nL. F. Carvalho, A. Ortiz-D \u00b4\u0131az, and R. Morales-Bueno, \u201cOnline\nadaptive decision trees based on concentration inequalities,\u201d\nKnowledge-Based Systems , vol. 104, pp. 179\u2013194, 2016.\n[88] J. Gama, R. Sebasti \u02dcao, and P . P . Rodrigues, \u201cOn evaluating stream\nlearning algorithms,\u201d Machine Learning , vol. 90, no. 3, pp. 317\u2013\n346, 2012.\n[89] I. \u02c7Zliobait \u02d9e, \u201cControlled permutations for testing adaptive learn-\ning models,\u201d Knowledge and Information Systems , vol. 39, no. 3, pp.\n565\u2013578, 2014.\n[90] A. Bifet, G. Holmes, B. Pfahringer, and E. Frank, \u201cFast perceptron\ndecision tree learning from evolving data streams,\u201d in Proc. 14th\nPaci\ufb01c-Asia Conf. Knowledge Discovery and Data Mining , M. J. Zaki,\nJ. X. Yu, B. Ravindran, and V . Pudi, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2010, Book Section, pp. 299\u2013310.\n[91] J. Cohen, \u201cA coef\ufb01cient of agreement for nominal scales,\u201d Edu-\ncational and Psychological Measurement , vol. 20, no. 1, pp. 37\u201346,\n1960.\n[92] I. \u02c7Zliobait \u02d9e, A. Bifet, J. Read, B. Pfahringer, and G. Holmes,\n\u201cEvaluation methods and decision theory for classi\ufb01cation of\nstreaming data with temporal dependence,\u201d Machine Learning ,\nvol. 98, no. 3, pp. 455\u2013482, 2015.\n[93] D. Brzezinski and J. Stefanowski, \u201cPrequential auc for classi\ufb01er\nevaluation and drift detection in evolving data streams,\u201d in\nProc. 3rd Int. Workshop New Frontiers in Mining Complex Patterns ,\nA. Appice, M. Ceci, C. Loglisci, G. Manco, E. Masciari, and Z. W.\nRas, Eds. Cham: Springer International Publishing, 2014, Book\nSection, pp. 87\u2013101.\n[94] A. Bifet, G. d. F. Morales, J. Read, G. Holmes, and B. Pfahringer,\n\u201cEf\ufb01cient online evaluation of big data stream classi\ufb01ers,\u201d in\nProc. 21th ACM SIGKDD Int. Conf. Knowledge Discovery and Data\nMining . Sydney, NSW, Australia: ACM, 2015, Conference Paper,\npp. 59\u201368.\n[95] N. Japkowicz and M. Shah, Evaluating learning algorithms: a clas-\nsi\ufb01cation perspective . Cambridge University Press, 2011.\n[96] Q. McNemar, \u201cNote on the sampling error of the difference\nbetween correlated proportions or percentages,\u201d Psychometrika ,\nvol. 12, no. 2, pp. 153\u2013157, 1947.\n[97] J. Dem \u02c7sar, \u201cStatistical comparisons of classi\ufb01ers over multiple\ndata sets,\u201d Journal of Machine Learning Research , vol. 7, no. Jan, pp.\n1\u201330, 2006.\n[98] J. Z. Kolter and M. A. Maloof, \u201cUsing additive expert ensembles\nto cope with concept drift,\u201d in Proc. 22nd Int. Conf. Machine\nLearning . Bonn, Germany: ACM, 2005, Conference Paper, pp.\n449\u2013456.\n[99] X. Wu, P . Li, and X. Hu, \u201cLearning from concept drifting data\nstreams with unlabeled data,\u201d Neurocomputing , vol. 92, pp. 145\u2013\n155, 2012.\n[100] W. N. Street and Y. Kim, \u201cA streaming ensemble algorithm (sea)\nfor large-scale classi\ufb01cation,\u201d in Proc. Seventh ACM Int. Conf.\nKnowledge Discovery and Data Mining . 502568: ACM, 2001,\nConference Proceedings, pp. 377\u2013382.\n[101] R. Fok, A. An, and X. Wang, \u201cMining evolving data streams with\nparticle \ufb01lters,\u201d Comput. Intell. , vol. 33, no. 2, pp. 147\u2013180, 2017.\n[102] P . Kosina and J. Gama, \u201cVery fast decision rules for classi\ufb01cation\nin data streams,\u201d Data Mining and Knowledge Discovery , vol. 29,\nno. 1, pp. 168\u2013202, 2015.\n[103] H. Wang, W. Fan, P . S. Yu, and J. Han, \u201cMining concept-\ndrifting data streams using ensemble classi\ufb01ers,\u201d in Proc.", "start_char_idx": 297294, "end_char_idx": 303157, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1": {"__data__": {"id_": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}, {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, {"node_id": "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0", "node_type": "1", "metadata": {}, "hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "class_name": "RelatedNodeInfo"}]}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "text": "9th\nACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining .\nWashington, D.C.: ACM, 2003, Conference Paper, pp. 226\u2013235.[104] A. Bifet, G. Holmes, R. Kirkby, and B. Pfahringer, \u201cMoa: Massive\nonline analysis,\u201d Journal of Machine Learning Research , vol. 99, pp.\n1601\u20131604, 2010.\n[105] V . M. Souza, D. F. Silva, J. Gama, and G. E. Batista, \u201cData\nstream classi\ufb01cation guided by clustering on nonstationary en-\nvironments and extreme veri\ufb01cation latency,\u201d in Proceedings of the\n2015 SIAM International Conference on Data Mining . SIAM, 2015,\npp. 873\u2013881.\n[106] M. Lichman, \u201cUCI machine learning repository,\u201d 2013. [Online].\nAvailable: http://archive.ics.uci.edu/ml\n[107] M. Harel, S. Mannor, R. El-Yaniv, and K. Crammer, \u201cConcept drift\ndetection through resampling,\u201d in Proc. 31st Int. Conf. Machine\nLearning , 2014, Conference Proceedings, pp. 1009\u20131017.\n[108] X. Zhu, \u201cStream data mining repository,\u201d 2010. [Online].\nAvailable: http://www.cse.fau.edu/ \u223cxqzhu/stream.html\n[109] M. Harries and N. S. Wales, \u201cSplice-2 comparative evaluation:\nElectricity pricing,\u201d 1999.\n[110] I. Katakis, G. Tsoumakas, and I. Vlahavas, \u201cTracking recurring\ncontexts using ensemble classi\ufb01ers: an application to email \ufb01lter-\ning,\u201d Knowledge and Information Systems , vol. 22, no. 3, pp. 371\u2013\n391, 2009.\n[111] I. Katakis, G. Tsoumakas, E. Banos, N. Bassiliades, and I. Vla-\nhavas, \u201cAn adaptive personalized news dissemination system,\u201d\nJournal of Intelligent Information Systems , vol. 32, no. 2, pp. 191\u2013212,\n2008.\n[112] I. Katakis, G. Tsoumakas, and I. P . Vlahavas, \u201cAn ensemble of\nclassi\ufb01ers for coping with recurring contexts in data streams,\u201d\nin18th European Conf. Arti\ufb01cial Intelligence , 2008, Conference\nProceedings, pp. 763\u2013764.\n[113] S. J. Delany, P . Cunningham, A. Tsymbal, and L. Coyle, \u201cA case-\nbased technique for tracking concept drift in spam \ufb01ltering,\u201d\nKnowledge-Based Systems , vol. 18, no. 4\u20135, pp. 187\u2013195, 2005.\n[114] L.-Y. Wang, C. Park, K. Yeon, and H. Choi, \u201cTracking concept drift\nusing a constrained penalized regression combiner,\u201d Comput.\nStat. Data Anal. , vol. 108, pp. 52\u201369, 2017.\n[115] I. Zliobaite, A. Bifet, B. Pfahringer, and G. Holmes, \u201cActive learn-\ning with drifting streaming data,\u201d IEEE Trans. Neural Networks\nLearn. Syst. , vol. 25, no. 1, pp. 27\u201339, 2014.\n[116] G. Song, Y. Ye, H. Zhang, X. Xu, R. Y. K. Lau, and F. Liu, \u201cDy-\nnamic clustering forest: An ensemble framework to ef\ufb01ciently\nclassify textual data stream with concept drift,\u201d Information Sci-\nences , vol. 357, pp. 125\u2013143, 2016.\n[117] G. Ditzler and R. Polikar, \u201cIncremental learning of concept drift\nfrom streaming imbalanced data,\u201d IEEE Trans. Knowl. Data Eng. ,\nvol. 25, no. 10, pp. 2283\u20132301, 2013.\n[118] B. Mirza, Z. Lin, and N. Liu, \u201cEnsemble of subset online sequen-\ntial extreme learning machine for class imbalance and concept\ndrift,\u201d Neurocomputing , vol. 149, pp. 316\u2013329, 2015.\n[119] B. Mirza and Z. Lin, \u201cMeta-cognitive online sequential extreme\nlearning machine for imbalanced and concept-drifting data clas-\nsi\ufb01cation,\u201d Neural Networks , vol. 80, pp. 79\u201394, 2016.\n[120] S. Wang, L. L. Minku, and X. Yao, \u201cResampling-based ensemble\nmethods for online class imbalance learning,\u201d IEEE Trans. Knowl.\nData Eng. , vol. 27, no. 5, pp. 1356\u20131368, 2015.\n[121] E. Arabmakki and M. Kantardzic, \u201cSom-based partial labeling of\nimbalanced data stream,\u201d Neurocomputing , vol. 262, pp. 120\u2013133,\n2017.\n[122] A. Katal, M. Wazid, and R. H. Goudar, \u201cBig data: Issues, chal-\nlenges, tools and good practices,\u201d in Proc. 6th Int. Conf. Contempo-\nrary Computing (IC3) , 2013, Conference Proceedings, pp. 404\u2013409.\n[123] A. Andrzejak and J. B. Gomes, \u201cParallel concept drift detection\nwith online map-reduce,\u201d in Proc. 12th Int. Conf. Data Mining\nWorkshops , 2012, Conference Proceedings, pp. 402\u2013407.\n[124] M. Tennant, F. Stahl, O. Rana, and J. B. Gomes, \u201cScalable real-\ntime classi\ufb01cation of data streams with concept drift,\u201d Future\nGeneration Computer Systems , vol. 75, pp. 187\u2013199, 2017.\n[125] C. C. Aggarwal, J. Han, J. Wang, and P . S. Yu, \u201cA framework\nfor clustering evolving data streams,\u201d in Proc. 29th Int. Conf. Very\nLarge Databases , vol. 29. VLDB Endowment, 2003, Conference\nProceedings, pp. 81\u201392.\n[126] X. Song, H. He, S. Niu, and J. Gao, \u201cA data streams analysis\nstrategy based on hoeffding tree with concept drift on hadoop\nsystem,\u201d in Proc. 4th Int. Conf. Advanced Cloud and Big Data , 2016,\nConference Proceedings, pp. 45\u201348.\n[127] V . Nguyen, T. D. Nguyen, T. Le, S. Venkatesh, and D. Phung,\n\u201cOne-pass logistic regression for label-drift and large-scale clas-\n\n18\nsi\ufb01cation on distributed systems,\u201d in Proc. 16th Int. Conf. Data\nMining , 2016, Conference Proceedings, pp. 1113\u20131118.\n[128] W. Chu, M. Zinkevich, L. Li, A. Thomas, and B. Tseng, \u201cUnbi-\nased online active learning in data streams,\u201d in Proc. 17th ACM\nSIGKDD Int. Conf. Knowledge Discovery and Data Mining . San\nDiego, California, USA: ACM, 2011, Conference Paper, pp. 195\u2013\n203.\n[129] G. Ditzler and R. Polikar, \u201cSemi-supervised learning in non-\nstationary environments,\u201d in Proc. 2011 Int. Joint Conf. Neural\nNetworks , 2011, Conference Proceedings, pp. 2741\u20132748.\n[130] M. J. Hosseini, A. Gholipour, and H. Beigy, \u201cAn ensemble\nof cluster-based classi\ufb01ers for semi-supervised classi\ufb01cation of\nnon-stationary data streams,\u201d Knowledge and Information Systems ,\nvol. 46, no. 3, pp. 567\u2013597, 2015.\n[131] P . Zhang, X. Zhu, J. Tan, and L. Guo, \u201cClassi\ufb01er and cluster\nensembles for mining concept drifting data streams,\u201d in Proc.\n10th Int. Conf. Data Mining , 2010, Conference Proceedings, pp.\n1175\u20131180.\n[132] S. Chandra, A. Haque, L. Khan, and C. Aggarwal, \u201cAn adaptive\nframework for multistream classi\ufb01cation,\u201d in Proc. 25th ACM Int.\non Conf. Information and Knowledge Management . Indianapolis,\nIndiana, USA: ACM, 2016, Conference Paper, pp. 1181\u20131190.", "start_char_idx": 303158, "end_char_idx": 308965, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f183402-a660-4d3d-82ac-b45afaf73040": {"__data__": {"id_": "6f183402-a660-4d3d-82ac-b45afaf73040", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}, {"node_id": "e5f52ff2-4895-416a-a9e7-92222aeb2d2d", "node_type": "1", "metadata": {}, "hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "class_name": "RelatedNodeInfo"}]}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "text": "1181\u20131190.\n[133] A. Haque, L. Khan, M. Baron, B. Thuraisingham, and C. Aggar-\nwal, \u201cEf\ufb01cient handling of concept drift and concept evolution\nover stream data,\u201d in Proc. 32nd Int. Conf. Data Engineering , 2003,\nConference Proceedings, pp. 481\u2013492.\n[134] A. Haque, L. Khan, and M. Baron, \u201cSand: Semi-supervised adap-\ntive novel class detection and classi\ufb01cation over data stream,\u201d in\n30th AAAI Conf. Arti\ufb01cial Intelligence , 2016, Conference Proceed-\nings, pp. 1652\u20131658.\n[135] T. Le, F. Stahl, M. M. Gaber, J. B. Gomes, and G. D. Fatta, \u201cOn\nexpressiveness and uncertainty awareness in rule-based classi\ufb01-\ncation for data streams,\u201d Neurocomputing , vol. 265, pp. 127\u2013141,\n2017.\n[136] J. Cendrowska, \u201cPrism: An algorithm for inducing modular\nrules,\u201d Int. J. Man Mach. Stud. , vol. 27, no. 4, pp. 349\u2013370, 1987.\n[137] M. Pratama, S. G. Anavatti, M. Joo, and E. D. Lughofer, \u201cpclass:\nAn effective classi\ufb01er for streaming examples,\u201d IEEE Trans. Fuzzy\nSyst. , vol. 23, no. 2, pp. 369\u2013386, 2015.\n[138] Y.-R. Yeh and Y.-C. F. Wang, \u201cA rank-one update method for least\nsquares linear discriminant analysis with concept drift,\u201d Pattern\nRecognit. , vol. 46, no. 5, pp. 1267\u20131276, 2013.\n[139] R. C. Cavalcante, L. L. Minku, and A. L. I. Oliveira, \u201cFedd: Fea-\nture extraction for explicit concept drift detection in time series,\u201d\ninProc. 2016 Int. Joint Conf. Neural Networks , 2016, Conference\nProceedings, pp. 740\u2013747.\n[140] M. Pratama, J. Lu, E. Lughofer, G. Zhang, and S. Anavatti, \u201cScaf-\nfolding type-2 classi\ufb01er for incremental learning under concept\ndrifts,\u201d Neurocomputing , vol. 191, pp. 304\u2013329, 2016.\nJie Lu is a Distinguished Professor, Director of\nCentre for Arti\ufb01cial Intelligence, and Associate\nDean Research with in the Faculty of Engineer-\ning and Information Technology at the University\nof Technology Sydney. Her research interests lie\nin the area of decision support systems, concept\ndrift, fuzzy transfer learning, and recommender\nsystems. She has published 10 research books\nand 400 papers, won 8 Australian Research\nCouncil discovery grants and 20 other grants.\nShe serves as Editor-In-Chief for KBS and IJCIS,\nand delivered 16 keynotes in international conferences.\nAnjin Liu is a Postdoctoral Research Associate\nin the A/DRsch Centre for Arti\ufb01cial Intelligence,\nFaculty of Engineering and Information Technol-\nogy, University of Technology Sydney. He re-\nceived the BIT degree (Honour) at the Univer-\nsity of Sydney in 2012. His research interests\ninclude concept drift detection, adaptive data\nstream learning, multi-stream learning, machine\nlearning and big data analytics\nFan Dong is Research Fellow of Centre for\nArti\ufb01cial Intelligence, University of Technology\nSydney. He received the dual Ph.D. degree from\nUniversity of Technology Sydney and Beijing In-\nstitute of Technology in 2018. His research in-\nterests include concept drift detection, adaptive\nlearning under concept drift and data stream\nmining.\nFeng Gu is a Ph.D. candidate at the Faculty\nof Engineering and Information Technology, the\nUniversity of Technology Sydney, NSW, Aus-\ntralia. He received bachelors degree of soft-\nware engineering at Zhejiang University, China,\nin 2012. His research interests include stream\ndata mining, adaptive learning under concept\ndrift and evolving data.\nJo\u02dcao Gama is an Associate Professor at the\nUniversity of Porto, Portugal. He is also a senior\nresearcher and member of the board of directors\nof the Laboratory of Arti\ufb01cial Intelligence and\nDecision Support (LIAAD), a group belonging\nto INESC Porto. He serves as the member of\nthe Editorial Board of Machine Learning Journal,\nData Mining and Knowledge Discovery, Intelli-\ngent Data Analysis and New Generation Com-\nputing. His main research interest is in knowl-\nedge discovery from data streams and evolving\ndata. He has published more than 200 papers and a recent book on\nKnowledge Discovery from Data Streams. He has extensive publications\nin the area of data stream learning.\nGuangquan Zhang is an Associate Professor,\nand the Director of Decision System and e-\nService Intelligence (DeSI) lab with in the Centre\nfor Arti\ufb01cial Intelligence, in the Faculty of Engi-\nneering and Information Technology at the Uni-\nversity of Technology Sydney. His main research\ninterests lie in the area of uncertain information\nprocessing, fuzzy decision making, concept drift\nand fuzzy transfer learning. He has published\n4 monographs and over 400 papers in refer-\need journals, conference proceedings and book\nchapters. He has won 7 Australian Research Council discovery grants\nand guest edited many special issues for international journals.\n\nLive Metrics: Monitor and diagnose with 1-\nsecond latency\nArticle \u202208/11/2023\nMonitor your live, in-production web application by using Live Metrics (also known as QuickPulse) from\nApplication Insights . You can select and filter metrics and performance counters to watch in real time,\nwithout any disturbance to your service. Y ou can also inspect stack traces from sample failed requests\nand exceptions. T ogether with Profiler  and Snapshot Debugger , Live Metrics provides a powerful and\nnoninvasive diagnostic tool for your live website.\nWith Live Metrics, you can:\nValidate a fix while it's released by watching performance and failure counts.\nWatch the effect of test loads and diagnose issues live.\nFocus on particular test sessions or filter out known issues by selecting and filtering the metrics you\nwant to watch.\nGet exception traces as they happen.\nExperiment with filters to find the most relevant KPIs.\nMonitor any Windows performance counter live.\nEasily identify a server that's having issues and filter all the KPI/live feed to just that server.\nLive Metrics is currently supported for ASP.NET, ASP.NET Core, Azure Functions, Java, and Node.js apps.\uff17 Note\nLive Metrics only supports TLS 1.2. For more information, see Troubleshooting .\n\uf80a\n\uff17 Note\n\n1. Follow language-specific guidelines to enable Live Metrics:\nASP.NET : Live Metrics is enabled by default.\nASP.NET Core : Live Metrics is enabled by default.\n.NET/.NET Core Console/W orker : Live Metrics is enabled by default.\n.NET Applications: Enable using code .\nJava: Live Metrics is enabled by default.\nNode.js\n2. In the Azure portal , open the Application Insights resource for your app. Then open Live S tream.\n3. Secure the control channel  if you might use sensitive data like customer names in your filters.\nTo manually configure Live Metrics:\n1. Install the NuGet package Microsoft.ApplicationInsights.P erfCounterCollector .\n2. The following sample console app code shows setting up Live Metrics:The number of monitored server instances displayed by Live Metrics might be lower than the actual\nnumber of instances allocated for the application. This mismatch is because many modern web\nservers will unload applications that don't receive requests over a period of time to conserve\nresources. Because Live Metrics only counts servers that are currently running the application,\nservers that have already unloaded the process won't be included in that total.\nGet started\n\uff09 Impor tant\nTo enable Application Insights, ensure that it's activated in the Azure portal and your app is using a\nrecent version of the Application Insights  NuGet package. Without the NuGet package, some\ntelemetry is sent to Application Insights, but that telemetry won't show in Live Metrics.\n\uff17 Note\nOn March 31, 2025, support for instrumentation key ingestion will end. Instrumentation key\ningestion will continue to work, but we'll no longer provide updates or support for the feature.\nTransition t o connection strings  to take advantage of new cap abilities .\nEnable Live Metrics by using code for any .NET application\n\uff17 Note\nLive Metrics is enabled by default when you onboard it by using the recommended instructions for\n.NET applications.\n\n\nC#\nThe preceding sample is for a console app, but the same code can be used in any .NET applications. If\nany other telemetry modules are enabled to autocollect telemetry, it's important to ensure that the same\nconfiguration used for initializing those modules is used for the Live Metrics module..NET 6.0+\nusing Microsoft.ApplicationInsights;\nusing Microsoft.ApplicationInsights.Extensibility;\nusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n// Create a TelemetryConfiguration instance.", "start_char_idx": 308955, "end_char_idx": 317278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18c5a06b-e2bf-4d40-9681-872357af305c": {"__data__": {"id_": "18c5a06b-e2bf-4d40-9681-872357af305c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}, {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, {"node_id": "292706ac-9541-457a-adf1-75cedb1e2873", "node_type": "1", "metadata": {}, "hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "class_name": "RelatedNodeInfo"}]}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "text": "TelemetryConfiguration config = TelemetryConfiguration.CreateDefault();\nconfig.InstrumentationKey = \"INSTRUMENTATION-KEY-HERE\" ;\nQuickPulseTelemetryProcessor quickPulseProcessor = null;\nconfig.DefaultTelemetrySink.TelemetryProcessorChainBuilder\n    .Use((next) =>\n    {\n        quickPulseProcessor = new QuickPulseTelemetryProcessor(next);\n        return quickPulseProcessor;\n    })\n    .Build();\nvar quickPulseModule = new QuickPulseTelemetryModule();\n// Secure the control channel.\n// This is optional, but recommended.\nquickPulseModule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" ;\nquickPulseModule.Initialize(config);\nquickPulseModule.RegisterTelemetryProcessor(quickPulseProcessor);\n// Create a TelemetryClient instance. It is important\n// to use the same TelemetryConfiguration here as the one\n// used to set up Live Metrics.\nTelemetryClient client = new TelemetryClient(config);\n// This sample runs indefinitely. Replace with actual application logic.\nwhile (true)\n{\n    // Send dependency and request telemetry.\n    // These will be shown in Live Metrics.\n    // CPU/Memory Performance counter is also shown\n    // automatically without any additional steps.\n    client.TrackDependency( \"My dependency\" , \"target\" , \"http://sample\" ,\n        DateTimeOffset.Now, TimeSpan.FromMilliseconds( 300), true);\n    client.TrackRequest( \"My Request\" , DateTimeOffset.Now,\n        TimeSpan.FromMilliseconds( 230), \"200\", true);\n    Task.Delay( 1000).Wait();\n}\nHow does Live Metrics differ from metrics explorer\nand Log Analytics?\n\uff89Expand table\n\nCapabilities Live Stream Metr ics explor er and Log Analy tics\nLatency Data displayed within one second. Aggregated over minutes.\nNo retention Data persists while it's on the chart and is then discarded. Data retained for 90 days.\nOn demand Data is only streamed while the Live Metrics pane is\nopen.Data is sent whenever the SDK is\ninstalled and enabled.\nFree There's no charge for Live S tream data. Subject to pricing .\nSampling All selected metrics and counters are transmitted. F ailures\nand stack traces are sampled.Events can be sampled .\nControl\nchannelFilter control signals are sent to the SDK. W e recommend\nyou secure this channel.Communication is one way, to the\nportal.\nThese capabilities are available with ASP.NET, ASP.NET Core, and Azure Functions (v2).\nYou can monitor custom KPI live by applying arbitrary filters on any Application Insights telemetry from\nthe portal. Select the filter control that shows when you mouse-over any of the charts. The following\nchart plots a custom Request  count KPI with filters on URL and Duration  attributes. V alidate your filters\nwith the stream preview section that shows a live feed of telemetry that matches the criteria you've\nspecified at any point in time.\nYou can monitor a value different from Count . The options depend on the type of stream, which could\nbe any Application Insights telemetry like requests, dependencies, exceptions, traces, events, or metrics.\nIt can also be your own custom measurement .Select and filter your metrics\n\uf80a\n\nAlong with Application Insights telemetry, you can also monitor any Windows performance counter.\nSelect it from the stream options and provide the name of the performance counter.\nLive Metrics are aggregated at two points: locally on each server and then across all servers. Y ou can\nchange the default at either one by selecting other options in the respective dropdown lists.\nBy default, the live feed of events shows samples of failed requests and dependency calls, exceptions,\nevents, and traces. Select the filter icon to see the applied criteria at any point in time.\nAs with metrics, you can specify any arbitrary criteria to any of the Application Insights telemetry types.\nIn this example, we're selecting specific request failures and events.\n\uf80a\nSample telemetry: Custom live diagnostic events\n\uf80a\n\uf80a\n\uff17 Note\n\nTo see the details of an item in the live feed, select it. Y ou can pause the feed either by selecting Pause  or\nby scrolling down and selecting an item. Live feed resumes after you scroll back to the top, or when you\nselect the counter of items collected while it was paused.\nIf you want to monitor a particular server role instance, you can filter by server. T o filter, select the server\nname under Servers.Currently, for exception message-based criteria, use the outermost exception message. In the\npreceding example, to filter out the benign exception with an inner exception message (follows the\n\"<--\" delimiter) \"The client disconnected,\" use a message not-contains \"Error reading request\ncontent\" criteria.\n\uf80a\nFilter by server instance\n\nLive Metrics custom filters allow you to control which of your application's telemetry is streamed to the\nLive Metrics view in the Azure portal. The filters criteria are sent to the apps that are instrumented with\nthe Application Insights SDK. The filter value could potentially contain sensitive information, such as the\ncustomer ID. T o keep this value secured and prevent potential disclosure to unauthorized applications,\nyou have two options:\nRecommended:  Secure the Live Metrics channel by using Microsoft Entra authentication .\nLegacy (no longer r ecommended):  Set up an authenticated channel by configuring a secret API\nkey as explained in the \"Legacy option\" section.\nIt's possible to try custom filters without having to set up an authenticated channel. Select any of the\nfilter icons and authorize the connected servers. If you choose this option, you have to authorize the\n\uf80a\nSecure the control channel\n\uff17 Note\nOn September 30, 2025, API keys used to stream Live Metrics telemetry into Application Insights\nwill be retired. After that date, applications that use API keys won't be able to send Live Metrics data\nto your Application Insights resource. Authenticated telemetry ingestion for Live Metrics streaming\nto Application Insights will need to be done with Microsoft Entra authentication for Application\nInsights .\n\nconnected servers once every new session or whenever a new server comes online.\n1. Select the API Access  tab and then select Create API k ey.\n2. Select the Authenticat e SDK contr ol channel  checkbox and then select Generat e key.\uff12 Warning\nWe strongly discourage the use of unsecured channels and will disable this option six months after\nyou start using it. The Authorize connect ed ser vers dialog displays the date after which this option\nwill be disabled.\n\uf80a\nLegacy option: Create an API key\n\uf80a\n\nYou can add an API key to configuration for ASP.NET, ASP.NET Core, W orkerService, and Azure Functions\napps.\nIn the Program.cs  file, add the following namespace:\nC#\nThen add the following service registration:\nC#\nFor more information on how to configure ASP.NET Core applications, see Configuring telemetry\nmodules in ASP.NET Core .\nFor WorkerService  applications, follow these instructions.\nAdd the following namespace:\n\uf80a\nAdd an API key to configuration\n.NET 6.0+\nusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n// Existing code which includes services.AddApplicationInsightsTelemetry() to enable \nApplication Insights.\nbuilder.Services.ConfigureTelemetryModule<QuickPulseTelemetryModule> ((module, o) => \nmodule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" );\nWorkerSer vice\n\nC#\nNext, add the following line before the call services.AddApplicationInsightsTelemetryWorkerService:\nC#\nFor more information on how to configure W orkerService applications, see Configuring telemetry\nmodules in W orkerServices .\nFor Azure Functions apps (v2), you can secure the channel with an API key by using an environment\nvariable.\nCreate an API key from within your Application Insights resource and go to Settings  > Configuration  for\nyour Azure Functions app. Select New application setting , enter a name of\nAPPINSIGHTS_QUICKPULSEAUTHAPIKEY, and enter a value that corresponds to your API key.\nLanguage Basic metr ics Performance\nmetr icsCustom\nfilteringSample\ntelemetr yCPU split by\nprocess\n.NET Framework Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)\n.NET Core (target=.NET\nFramework)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)\n.NET Core (target=.NET\nCore)Supported\n(LTS)Supported* Supported\n(LTS)Supported\n(LTS)Not suppor ted\nAzure Functions v2 Supported Supported Supported Supported Not suppor ted\nJava Supported\n(V2.0.0+)Supported\n(V2.0.0+)Not\nsuppor tedSupported\n(V3.2.0+)Not suppor ted\nNode.js Supported\n(V1.3.0+)Supported\n(V1.3.0+)Not\nsuppor tedSupported\n(V1.3.0+)Not suppor ted\nPython Not suppor ted Not suppor ted Not\nsuppor tedNot suppor ted Not suppor ted\nBasic metrics include request, dependency, and exception rate. P erformance metrics (performance\ncounters) include memory and CPU. Sample telemetry shows a stream of detailed information for failedusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n    services.ConfigureTelemetryModule<QuickPulseTelemetryModule> ((module, o) => \nmodule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" );\nAzur e Functions apps\nSupported features table\n\uff89Expand table", "start_char_idx": 317279, "end_char_idx": 326348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ca3563b-2c46-419f-b043-b4795d3ecd3a": {"__data__": {"id_": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f", "node_type": "4", "metadata": {}, "hash": "9ccbedcebcf9355cde0c23dc83f6fa8dda71150b04d0fabb069c60d8d353fa69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}, {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, {"node_id": "bebb1407-bcb2-450b-9ad4-4192b4ae0a94", "node_type": "1", "metadata": {}, "hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "class_name": "RelatedNodeInfo"}]}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "text": "requests and dependencies, exceptions, events, and traces.\nPerfCounters support varies slightly across versions of .NET Core that don't target the .NET Framework:\nPerfCounters metrics are supported when running in Azure App Service for Windows (ASP.NET\nCore SDK version 2.4.1 or higher).\nPerfCounters are supported when the app is running on any Windows machine for apps that target\n.NET Core LTS or higher.\nPerfCounters are supported when the app is running anywher e (such as Linux, Windows, app\nservice for Linux, or containers) in the latest versions, but only for apps that target .NET Core LTS\nor higher.\nLive Metrics uses different IP addresses than other Application Insights telemetry. Make sure those IP\naddresses  are open in your firewall. Also check that outgoing ports for Live Metrics  are open in the\nfirewall of your servers.\nAs described in the Azure TLS 1.2 migration announcement , Live Metrics now only supports TLS 1.2. If\nyou're using an older version of TLS, Live Metrics doesn't display any data. For applications based on\n.NET Framework 4.5.1, see Enable T ransport Layer Security (TLS) 1.2 on clients - Configuration Manager\nto support the newer TLS version.\n1. Verify that you're using the latest version of the NuGet package\nMicrosoft.ApplicationInsights.P erfCounterCollector .\n2. Edit the ApplicationInsights.config file:\nVerify that the connection string points to the Application Insights resource you're using.\nLocate the QuickPulseTelemetryModule configuration option. If it isn't there, add it.\nLocate the QuickPulseTelemetryProcessor configuration option. If it isn't there, add it.\nXML\n3. Restart the application.\nTroubleshooting\nMissing configuration for .NET\n<TelemetryModules >\n<Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.\nQuickPulse.QuickPulseTelemetryModule, Microsoft.AI.PerfCounterCollector\" />\n</TelemetryModules >\n<TelemetryProcessors >\n<Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.\nQuickPulse.QuickPulseTelemetryProcessor, Microsoft.AI.PerfCounterCollector\" />\n</TelemetryProcessors >\n\"Data is temporarily inaccessible\" status message\n\nWhen navigating to Live Metrics, you may see a banner with the status message: \"Data is temporarily\ninaccessible. The updates on our status are posted here https://aka.ms/aistatus  \"\nFollow the link to the Azure status page and check if there's an activate outage affecting Application\nInsights. V erify that firewalls and browser extensions aren't blocking access to Live Metrics if an outage\nisn't occurring. For example, some popular ad-blocker extensions block connections to\n*.monitor.azure.com. In order to use the full capabilities of Live Metrics, either disable the ad-blocker\nextension or add an exclusion rule for the domain *.livediagnostics.monitor.azure.com to your ad-\nblocker, firewall, etc.\nApplication Insights SDKs use a REST API to communicate with QuickPulse endpoints, which provide live\nmetrics for your web application. By default, the SDKs poll the endpoints once every five seconds to\ncheck if you are viewing the Live Metrics pane in the Azure portal.\nIf you open the Live Metrics pane, the SDKs switch to a higher frequency mode and send new metrics to\nQuickPulse every second. This allows you to monitor and diagnose your live application with 1-second\nlatency, but also generates more network traffic. T o restore normal flow of traffic, naviage away from the\nLive Metrics pane.\nMonitor usage with Application Insights\nUse Diagnostic Search\nProfiler\nSnapshot Debugger\nUnexpected large number of requests to\nlivediagnostics.monitor.azure.com\n\uff17 Note\nThe REST API calls made by the SDKs to QuickPulse endpoints are not tracked by Application\nInsights and do not affect your dependency calls or other metrics. However, you may see them in\nother network monitoring tools.\nNext steps\n\nTitle: Understanding the Technical Architecture of Alibaba Cloud's Recommender System\n\nAlibaba Cloud's technical expert, Aohai, delves into the fundamental concepts and intricate architecture of an enterprise-level recommender system in this comprehensive article.\n\n1) What Is a Recommender System?\n\nAohai elucidates the necessity and function of recommender systems in today's digital landscape. As online platforms expand, the challenge of connecting users with suitable products intensifies. Platforms like Taobao, hosting a myriad of products, grapple with this challenge. Recommender systems address this by refining the matching of user information with item information, notably through query-based and feed streaming recommendations.\n\nThe system aligns user preferences with item properties. Query-based recommendations tailor item displays based on user preferences, such as color and price. In contrast, feed streaming recommendations, prevalent in apps like Hupu and Toutiao, curate content according to daily user preferences, leveraging machine learning models to understand both user inclinations and item attributes.\n\n1.2 Personalized Recommendation Process\n\nAohai offers a schematic overview of the recommendation process, emphasizing two pivotal modules: matching and ranking. The matching module filters items based on user preferences, while the ranking module refines these choices according to the user's specific inclinations. This efficient process ensures swift feedback within milliseconds, a critical factor in user engagement strategies.\n\nMoreover, Aohai emphasizes that a recommender system encompasses not just recommendation algorithms but also robust system engineering. Addressing performance and data storage issues is paramount, especially when deploying such a system in the cloud environment.\n\n2) Architecture of an Enterprise-level Recommender System\n\n2.1 Requirements for an Enterprise-level Recommender System\n\nAohai outlines four fundamental requirements for designing an enterprise-level recommender system. The architecture must cater to platforms with millions of users, facilitate extensive model training with large datasets, support algorithm plug-ins for flexibility, ensure high-performance feedback within milliseconds, and allow elastic resource scaling to optimize costs.\n\n2.2 Overall Architecture of a Recommender System\n\nThis section elucidates the architecture's layers, starting with the basic data layer encompassing user profiles, item data, behavior data, and comment data. Following data processing and storage, the system employs matching and ranking modules powered by various algorithms. A new policy filters and deduplicates recommendations before online deployment, culminating in the top-layer recommendation service.\n\n2.3 PAI-based Technical Architecture for a Recommender System\n\nAlibaba Cloud's technical implementation involves leveraging PAI technology. It begins with storing demo offline data in ApsaraDB RDS for MySQL, processing real-time behavior data via Apache Kafka, and using Flink for generating real-time data. Model training employs PAI algorithms, advocating cloud-native solutions for scalability. The final phase orchestrates matching, deduplication, ranking, and feedback to users, showcasing Alibaba Cloud's holistic technical architecture.\n\nThe article serves as a comprehensive guide, shedding light on the intricacies of Alibaba Cloud's advanced recommender system technology, blending cutting-edge algorithms with robust system engineering principles.", "start_char_idx": 326351, "end_char_idx": 333749, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b185e45e-164d-455f-8fe4-4690a93afb42": {"__data__": {"id_": "b185e45e-164d-455f-8fe4-4690a93afb42", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "db3c733c-e5d2-4887-9248-9a57654e8d7c", "node_type": "1", "metadata": {}, "hash": "20391dd0c2e11eca0f2e5dbb1ff1f862da631f5ec95f0c2b1b86c2fb2129d72f", "class_name": "RelatedNodeInfo"}, {"node_id": "60aafb64-eda8-4dd1-80ff-e7ce8ac8e4d8", "node_type": "1", "metadata": {}, "hash": "3df3716b3795fd80b60c857f2d1f23e52b386b0a7aeb24e78f06f52675bc0076", "class_name": "RelatedNodeInfo"}, {"node_id": "2ad76419-66d8-4320-87c7-068feb5c9fc6", "node_type": "1", "metadata": {}, "hash": "388e1844c11226b527b6e9cf8ef2a279ddaa7ba5a9cb971f5ea42ee5912137e6", "class_name": "RelatedNodeInfo"}, {"node_id": "71ff6609-6393-45da-955b-ab58805ed2de", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, {"node_id": "9bb12023-40d3-4864-8645-1bc6dcc45230", "node_type": "1", "metadata": {}, "hash": "88884bd86c88c55592e2ae98b074cff945e012c170704d2009edc0ca33ff73f1", "class_name": "RelatedNodeInfo"}]}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "text": "This page is the first page of the book with an eye-catching image to catch peoples attention. The image contains the words \u201cToy.ai\u201d.\n\nThis page is the introduction page. It explains that the topics the book will be covering is \u201cModel Deployment\u201d and it has been written by \u201cAssociate Professor Dr. Sergio Hernandez Marin\u201d. Also shows how it is a topic that is being taught by the \u201cNational University of Singapore\u201d.\n\nThis page gives the reader a quick reminder of \u201cThe Data Science Lifecycle Process\u201d. To be clear the steps in order are, Business Understanding, Data Acquisition and Understanding, Deployment, and Modelling. Now we will go through this steps in more detail. The Data Science Lifecycle Process begins by first establishing a strong Business Understanding of the project. This can be done by engaging with Business Stakeholders. Then you move on to Data Acquisition and Understanding step. After this you move on to the Deployment step. Here insights become available to users, developers, or systems. Finally, you can move on to modelling step. In the modelling step, you can socialize results or first insights. At any point you can go back track or go to another step depending on your needs.\n\nThis page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case. Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation. Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set.", "start_char_idx": 0, "end_char_idx": 2549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624": {"__data__": {"id_": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "189dfbdc-7077-4c4c-8b4b-6296a59ba4f4", "node_type": "1", "metadata": {}, "hash": "464a908edb135df8680c780a4f5346864d1e233777600c78065962728ced98d8", "class_name": "RelatedNodeInfo"}, {"node_id": "d453893d-f437-4111-9be7-ada682cb4f27", "node_type": "1", "metadata": {}, "hash": "22bbbc725f2f41b7d5fe02c35e4ab04c4212baad64058d3564b0a6c760b79ca3", "class_name": "RelatedNodeInfo"}, {"node_id": "1bc011a6-a5e2-4d68-8814-258d2ee40d98", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, {"node_id": "e2450f93-0a7f-41f6-be1c-415bb4f43ec3", "node_type": "1", "metadata": {}, "hash": "34cfcc691ee933162f14abfa1300aa4be7eb605ee1c202b6710b9fcf3a49516c", "class_name": "RelatedNodeInfo"}, {"node_id": "1de88753-ad04-4f1d-a0b1-894b18979e2d", "node_type": "1", "metadata": {}, "hash": "17fd0af85a3ef5cf768c56128b95bbd98784e767ecfaa4eaaa03263d8eb06004", "class_name": "RelatedNodeInfo"}]}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "text": "Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.\n\nThe following explains the previous page: [This page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case. Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation. Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata.", "start_char_idx": 2445, "end_char_idx": 5063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d201edb6-82bd-4b07-82e6-be462bb8b2d7": {"__data__": {"id_": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "f3719389-d4c5-488f-ba96-b89e814511ce", "node_type": "1", "metadata": {}, "hash": "58c524d74e2296458c8b70bd5b1cbd431702d27b439dbe8c920618ab37a5b7ba", "class_name": "RelatedNodeInfo"}, {"node_id": "39f1b555-66c5-4599-a13e-3c7ab5522b1d", "node_type": "1", "metadata": {}, "hash": "e921b11706703ceaadcf4c243fb0b1154f69a5dc4a2ff723a21024cdfd0e3320", "class_name": "RelatedNodeInfo"}, {"node_id": "81f92843-a596-410e-98cd-9816257554be", "node_type": "1", "metadata": {}, "hash": "fb096e63e14b0f18aeafe5d67800173a0d34884a90678ab03b4b10377417a35c", "class_name": "RelatedNodeInfo"}, {"node_id": "93f3e011-cc40-4bd0-b97b-835b46e1b5ce", "node_type": "1", "metadata": {}, "hash": "28dd6f7fbe7afff5d87bc1fc977493d0c6b4d5bd90aad614182914b8e36e4ff7", "class_name": "RelatedNodeInfo"}, {"node_id": "8b0e1deb-7f33-4503-a7e1-c2e7d6142ea3", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, {"node_id": "a65075ed-fc89-4453-b2b7-15b8b85b3b62", "node_type": "1", "metadata": {}, "hash": "60f9b4660e335f61750edaed64f0e1f82018a75505b70f500073467a92b7c600", "class_name": "RelatedNodeInfo"}]}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "text": "Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.] Now on the current page we go through the architecture with the example of a Recommender System. In this case offline data is user interactions (clickstream data, purchase history), user profiles (demographic data, behavioural data), item data and more. In the \u201cData Extraction and Analysis\u201d stage we can use APIs, web scrapping and Databases (DBs) to integrate relevant data. We can also conduct Explanatory Data Analysis and Data Segmentation. During Model Development, under data preparation we can first conduct feature engineering (eg: Number of interactions, item similarity, Click Through Rate (CTR)) and then we can split our data into Train, Validation, and Test. Under Model Training we can use collaborative filtering, content-based filtering as models, where we use mean square error (MSE), cross-entropy, Bayesian Personalized Ranking as Loss Functions. Finally, can use regularization to deal with over-fitting. Under Model Evaluation and Validation can use Evaluation Metrics such as Mean Average Precision (MAP), precision, recall, etc. Use cross-validation to better evaluate the models and finally can also incorporate user feedback for a human perspective.\n\nThe following explains a page from a few pages ago: [This page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case. Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation.", "start_char_idx": 5004, "end_char_idx": 7589, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f": {"__data__": {"id_": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b6e6fef-c16e-45b5-9065-29a29e35da32", "node_type": "1", "metadata": {}, "hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "26fb3c21-e301-46c8-b939-1559d59e5add", "node_type": "1", "metadata": {}, "hash": "688149212f192683bfeb8e245e64f08c33c870fde34044254ffcfc474a64192a", "class_name": "RelatedNodeInfo"}, {"node_id": "00d74b94-ce83-4615-97b0-7d3974d6cffa", "node_type": "1", "metadata": {}, "hash": "d79c7a91b9077d834e67f1d8d422b28893c0debae4a9ddae7b8a6f9ff271e3a9", "class_name": "RelatedNodeInfo"}, {"node_id": "57ab904f-09bc-426f-bd9c-4518d639ec11", "node_type": "1", "metadata": {}, "hash": "3da84ef670b0093642107853be2c86c3f9b17d36be00c4c1010a25be8c94afb9", "class_name": "RelatedNodeInfo"}, {"node_id": "2062406c-eaa6-4b71-9d12-073ebdc471d4", "node_type": "1", "metadata": {}, "hash": "8a12d7b9e62f0b3ca61c291f87e8626e3d2016712e1ec8d9433acac1a65211e3", "class_name": "RelatedNodeInfo"}, {"node_id": "b6aa4ed2-76c6-455d-9d89-ebbd0ddc6924", "node_type": "1", "metadata": {}, "hash": "764aa212e91f710dd297c5068868b34f93657f7da23932cdb4b37ef67648d239", "class_name": "RelatedNodeInfo"}]}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "text": "Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.]. Now this current page discusses why the architecture discussed on that page won\u2019t be feasible in a Business Setting. The following reasons are given: 1) Testing and Deployment Process: Manual, script-driven, and interactive process where every step is manual. Data scientists execute each step, including data analysis, data preparation, model training, and validation. 2) Disconnection Between ML and Operations: Data scientists create the model, and engineers handle deployment. Trained models are handed over to engineers for deployment as a prediction service. 3) Infrequent Release Iterations: Assumes infrequent model changes, with new model versions deployed only a couple of times per year. 4) No Continuous Integration (CI): CI is not considered, as the process assumes few implementation changes. Testing is typically part of notebooks or script execution. 5) No Continuous Deployment (CD): CD is not considered, as frequent model version deployments are not part of the process. 6) Deployment Focus: The process is concerned only with deploying the trained model as a prediction service (e.g., a REST API microservice). 7) Lack of Active Performance Monitoring: The process does not track or log model predictions and actions, which are essential for detecting model performance degradation and other behavioral drifts.\n\nThis page discusses an example of a Architecture of a Recommender System from a Cloud Provider (Alibaba Cloud).", "start_char_idx": 7590, "end_char_idx": 10185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b6e6fef-c16e-45b5-9065-29a29e35da32": {"__data__": {"id_": "8b6e6fef-c16e-45b5-9065-29a29e35da32", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "node_type": "1", "metadata": {}, "hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "1a849b2b-eb0e-422f-9d4a-90e9c79e0b63", "node_type": "1", "metadata": {}, "hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "class_name": "RelatedNodeInfo"}]}, "hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "text": "This is to show how a more practical example of a Data Science Architecture that can be use in real life. In the realm of recommender systems, understanding the underlying architecture is pivotal. The following figure shows the underlying basic data layer.", "start_char_idx": 10186, "end_char_idx": 10442, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3fa3c67-6378-40d7-b277-211f27947ad4": {"__data__": {"id_": "e3fa3c67-6378-40d7-b277-211f27947ad4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "125ab7cb-5757-4c1e-9325-711eea81eb90", "node_type": "1", "metadata": {}, "hash": "b2f1ca50778f5648f96ee97a0371307732a8914c4c040b346c769aaf50c9a73f", "class_name": "RelatedNodeInfo"}, {"node_id": "fa59fd24-1234-4b08-9da9-820a3713cdb1", "node_type": "1", "metadata": {}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "class_name": "RelatedNodeInfo"}, {"node_id": "f8632f10-ff2a-41c6-88c4-5f1fa6fcb83b", "node_type": "1", "metadata": {}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "class_name": "RelatedNodeInfo"}, {"node_id": "97362a6a-e2e1-4a8e-8522-b751704c6ab1", "node_type": "1", "metadata": {}, "hash": "f2a4de20681599a4f43a85a0ba213f47bce8390da85ab6983751a812ce4d2874", "class_name": "RelatedNodeInfo"}, {"node_id": "3e372769-c26b-4f53-b5e0-ace577df25bc", "node_type": "1", "metadata": {}, "hash": "278473d5daf2102bad66eb58fd9a3730528d94254f7bdde937dce5ca18fbeb58", "class_name": "RelatedNodeInfo"}]}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "text": "The following figure shows the underlying basic data layer. This layer contains user profile data, item data, behavior data, and comment data. The user profile data may be users' heights and weights, items they purchased, their purchase preferences, or their education background. The item data is the prices, colors, and origins of items. If the item is a video, the item data is the information of the video such as the video content and tags. The behavior data refers to the interaction between users and items. For example, when a user watches a video, the user may add a like to the video, add the video to favorites, or pay for the video. These actions are all the user's behavior data. The comment data may involve third-party data and may not be available for every item on every platform. However, the user data, the item data, and the behavior data are essential. With the three types of data ready, we can move on to the data processing and storage layer. In this layer, we can perform data processing, using feature engineering to identify user features, material features, and event features. Going forward is modeling based on these features. The entire recommendation process contains two important modules: matching and ranking. Multiple algorithms can run in parallel in the matching module, which is why this matching module is called the Multi-Channel Matching Module. Some possible matching algorithms include: Collaborative Filtering, ALS Matrix Factorization, Vector Matching and Sample Generation. Matching is followed by ranking. Many ranking algorithms are also available. These include PS-SMART, PS-LR, DeepFM, Sample Generation and more. The details of the matching and ranking algorithms are not in scope of topic. Next, you need to develop a new strategy. You must filter and deduplicate the recommendation results, perform A/B tests on the results, and try the operational strategies before you push the recommendations online. The top layer is the recommendation service, which can recommend an advertisement, a product, or a user. For example, a social networking app can recommend users to let them follow each other. When you have such a recommendation architecture, some cloud services will be needed to make the architecture meet the four basic requirements on an enterprise-level recommender system. The most common practice is to build these modules based on cloud services and cloud ecosystems.", "start_char_idx": 0, "end_char_idx": 2433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3": {"__data__": {"id_": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5a51d814-c116-4700-97bc-4f304b4ff9be", "node_type": "1", "metadata": {}, "hash": "fadc2f40e7e89f7c0439eee3e23e5947a977425fad102a7068a38cda608dc989", "class_name": "RelatedNodeInfo"}, {"node_id": "49f80856-452b-4668-8b36-ab456465ed97", "node_type": "1", "metadata": {}, "hash": "4187134a8a9598155aed81e21f8f5ccfd8dbddd05199a212592a5bfbf84b4a1b", "class_name": "RelatedNodeInfo"}, {"node_id": "57b16b68-794d-4556-9da7-74970220240a", "node_type": "1", "metadata": {}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "class_name": "RelatedNodeInfo"}, {"node_id": "4162606d-72c8-47a0-a826-47440fed3056", "node_type": "1", "metadata": {}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "class_name": "RelatedNodeInfo"}, {"node_id": "70c11c80-5067-46aa-9e94-2266016fac1e", "node_type": "1", "metadata": {}, "hash": "d4f2a2c543fa4dcf11876f2743f5346271c5cc0807d451471199337d6238e1fe", "class_name": "RelatedNodeInfo"}]}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "text": "The most common practice is to build these modules based on cloud services and cloud ecosystems.\n\nThe following explains the previous page: [This page discusses an example of a Architecture of a Recommender System from a Cloud Provider (Alibaba Cloud). This is to show how a more practical example of a Data Science Architecture that can be use in real life. In the realm of recommender systems, understanding the underlying architecture is pivotal. The following figure shows the underlying basic data layer. This layer contains user profile data, item data, behavior data, and comment data. The user profile data may be users' heights and weights, items they purchased, their purchase preferences, or their education background. The item data is the prices, colors, and origins of items. If the item is a video, the item data is the information of the video such as the video content and tags. The behavior data refers to the interaction between users and items. For example, when a user watches a video, the user may add a like to the video, add the video to favorites, or pay for the video. These actions are all the user's behavior data. The comment data may involve third-party data and may not be available for every item on every platform. However, the user data, the item data, and the behavior data are essential. With the three types of data ready, we can move on to the data processing and storage layer. In this layer, we can perform data processing, using feature engineering to identify user features, material features, and event features. Going forward is modeling based on these features. The entire recommendation process contains two important modules: matching and ranking. Multiple algorithms can run in parallel in the matching module, which is why this matching module is called the Multi-Channel Matching Module. Some possible matching algorithms include: Collaborative Filtering, ALS Matrix Factorization, Vector Matching and Sample Generation. Matching is followed by ranking. Many ranking algorithms are also available. These include PS-SMART, PS-LR, DeepFM, Sample Generation and more. The details of the matching and ranking algorithms are not in scope of topic. Next, you need to develop a new strategy. You must filter and deduplicate the recommendation results, perform A/B tests on the results, and try the operational strategies before you push the recommendations online.", "start_char_idx": 2337, "end_char_idx": 4744, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e3d97ab-0707-4722-aa79-da8bbdf78856": {"__data__": {"id_": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "55e30b8c-0512-400f-9a5e-04392a46d6ae", "node_type": "1", "metadata": {}, "hash": "d3c827d6a12eba71f81d7618ee0148bff3bad1aff94c0acff86c0f7f00cd02cb", "class_name": "RelatedNodeInfo"}, {"node_id": "5075fc3b-bde7-49bf-ae26-e0e25fdaef6c", "node_type": "1", "metadata": {}, "hash": "30e080706974ed1e2a18f98add5bd62416430d9338f9bb390e5a45bac89543fd", "class_name": "RelatedNodeInfo"}, {"node_id": "e1c46d10-1323-44e9-a98a-acb01f69c7cb", "node_type": "1", "metadata": {}, "hash": "38c68c1c1b6c6fe9525d10975d45f06a6b186bc8397e8882dc9d79f3fc0e3707", "class_name": "RelatedNodeInfo"}, {"node_id": "45c9b2ed-58b4-4f03-97ff-46c923ed09cf", "node_type": "1", "metadata": {}, "hash": "1f9ef09b2b6b63c117181861813f8e3be4fbfbff9c985e54b3bde7a378306751", "class_name": "RelatedNodeInfo"}, {"node_id": "7b07d9b9-d883-4bda-af66-83369cbf9fb9", "node_type": "1", "metadata": {}, "hash": "ae61bc195fcdf484938059d0892dbf791376a57d1d2b86c2999dea2553e0e002", "class_name": "RelatedNodeInfo"}]}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "text": "The top layer is the recommendation service, which can recommend an advertisement, a product, or a user. For example, a social networking app can recommend users to let them follow each other. When you have such a recommendation architecture, some cloud services will be needed to make the architecture meet the four basic requirements on an enterprise-level recommender system. The most common practice is to build these modules based on cloud services and cloud ecosystems.] Now the current page looks at the actual implementation of these ideas. We can store underlying basic data (user data, item data, comment data) in a database such as RDS MySQL or DRDS. To process some online behaviour data in real time, such as some clicks or follows, we can use Apache Kafka. At the data processing and storage level, can use Flink Real-Time computing to process data and generate real-time behaviour data. Can use Max Compute for feature engineering processes. The model training layer can be implemented using matching and ranking algorithms from Alibaba\u2019s Platform for AI (PAI). In such implementations it may make sense to adopt a cloud-native solution for the top-layer application to ensure resource and service elasticity. In the final phase where the recommendation system actually starts recommending to users, you can perform matching and then deduplicate the matching results to generate the final sample for ranking. Then the ranking results are fed back to the user.\n\nThe following page discusses the topic of Memento Deployment, where developed models and solutions are put into practical use to derive value from data. This is discussed via the following things that are done for deployment. Model Integration: Integrate ML models into the target system, Scalability & Optimize: Ensure models can handle real-world loads, Monitor & Maintain: Continuously assess and maintain model performance, A/B Testing: Compare model performance through A/B tests, User Interface & Integrate: Integrate solutions with user interfaces, Security & Compliance: Ensure data security and regulatory compliance, Documentation: Provide comprehensive system documentation, User Training & Support: Train users and offer support for effective use, Feedback Loop: Establish a user feedback mechanism, Scale & Allocate: Monitor and scale resources as needed, Business Impact: Continuously assess the solution's impact on goals, Model Re-Training: Plan for periodic model updates.\n\nThis page discusses Model Serving Patterns. Essentially the page looks into Machine Learning (ML) Architecture Patterns for ML Model Operationalization.", "start_char_idx": 4745, "end_char_idx": 7364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c83fa5fa-7421-42f8-b613-da4d7ecb6f08": {"__data__": {"id_": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2088a27-5fe6-416f-9e99-830391aa20e6", "node_type": "1", "metadata": {}, "hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9fd3d57a-689b-48cf-89fe-1ac43363fd8b", "node_type": "1", "metadata": {}, "hash": "514b0977660358bff68155cc4fd3a34ba6e15ed2613fbe45ae504e86ed57a4e4", "class_name": "RelatedNodeInfo"}, {"node_id": "59112c5b-af14-4204-a884-6adfc73e6b7e", "node_type": "1", "metadata": {}, "hash": "143c3cd34d548fdaf85282ca4653c3e9f4d0b09e4068d735faded81ca3200c71", "class_name": "RelatedNodeInfo"}, {"node_id": "596c5249-8745-4113-aaaa-aafc6f60dfa0", "node_type": "1", "metadata": {}, "hash": "903b34d4c31eed3440474e34f7b387d635d0dc82ca9c88abcfa37a53da6d63db", "class_name": "RelatedNodeInfo"}, {"node_id": "7716de20-bef5-4c15-a790-9dcc7f5b0071", "node_type": "1", "metadata": {}, "hash": "6ae182af8f9941c9a416e9c6451b1a590457768028c68f2a8b5a36ddb202b11e", "class_name": "RelatedNodeInfo"}, {"node_id": "aa53c5fd-2f00-4f92-8097-02cd762e7ef4", "node_type": "1", "metadata": {}, "hash": "8b03c4899f07e07dcf30b5099d9e3e1accd721dd1017ad58116d19f3ecd40323", "class_name": "RelatedNodeInfo"}]}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "text": "Essentially the page looks into Machine Learning (ML) Architecture Patterns for ML Model Operationalization. This is done via the use of a graph which shows that, if the Model Prediction is to be done on demand and the model learning is to be done offline then one should use Microservices and REST API. If the Model Prediction is to be done on demand and the model learning is to be done online then one should use Real-time streaming analysis and Online Learning. If the Model Prediction is to be done in Batches and the model learning is to be done online then one should use Automated ML. If the Model Prediction is to be done in Batches and the model learning is to be done offline then one should use Forecast and Batch Prediction. One thing to note is that services that need to be predicted on demand need to use Real-Time data whereas models that can be predicted in batches can use historical data. Finally, Models that can learn/trained offline are Static Learning whereas models that are to be trained online are said to be dynamic learning.\n\nThe following page discusses the topic of Machine Learning (ML) Model Serialization formats. This basically discusses how to create a format that can be distributed, the ML model must be both accessible and capable of running autonomously. There are two main formats that the page discusses, Language-Agnostic Exchange Formats and Vendor-Specific Exchange Formats. Language-Agnostic Exchange Formats: Amalgamation: Bundles model and code into one package for simple ML algorithms, PMML (Predictive Model Markup Language): Describes models in XML, but not all ML algorithms are supported, limited open-source usage due to licensing, PFA (Portable Format for Analytics): JSON format for executable scoring engines, needs a PFA-enabled environment and ONNX (Open Neural Network eXchange): Framework-independent format supported by tech giants, enables compatibility among various ML tools. Vendor-Specific Exchange Formats: Scikit-Learn: Saves models as pickled Python objects (.pkl), H2O: Converts models to POJO or MOJO, SparkML: Uses MLeap with runtime support for Spark, Scikit-learn, and Tensorflow, TensorFlow: Models saved as .pb (protocol buffer) files, PyTorch: Uses proprietary Torch Script as .pt files for C++, Keras: Saves models as .h5 files in HDF format and Apple Core ML: Proprietary .mlmodel format for iOS apps, requires conversion for models from other frameworks.", "start_char_idx": 7256, "end_char_idx": 9692, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2088a27-5fe6-416f-9e99-830391aa20e6": {"__data__": {"id_": "a2088a27-5fe6-416f-9e99-830391aa20e6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "faffad4d-166c-4d95-869c-dd34dfaacc44", "node_type": "1", "metadata": {}, "hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "dc971e03-cd34-4d49-a07a-f8525022c66a", "node_type": "1", "metadata": {}, "hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "class_name": "RelatedNodeInfo"}]}, "hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "text": "The following page discusses the topic of Machine Learning Model Serving Taxonomy, essentially meaning the ways to integrate the ML model in a software system. There are a few different ways to integrate ML models that we will be looking at: Model-as-Dependency, Model-as-Service, Hybrid Model Serving, Precompute and Model On Demand.", "start_char_idx": 9694, "end_char_idx": 10028, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d3b15b3-05fb-4c83-bbab-29c02613daa3": {"__data__": {"id_": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c63db16a-5671-4c84-a7ae-55210385c6c1", "node_type": "1", "metadata": {}, "hash": "286af3f436c36d014c08e0123318264b96b880acb61bef19b9d597c3294f1996", "class_name": "RelatedNodeInfo"}, {"node_id": "e690edde-5105-4631-a9b8-5fb9ba9b805a", "node_type": "1", "metadata": {}, "hash": "890c5aadefba855a89c1b8af524330019878c4b992c753e57b5a6aa88d3ed921", "class_name": "RelatedNodeInfo"}, {"node_id": "4b381ccf-a2e7-4a5c-ba81-1498484c4b68", "node_type": "1", "metadata": {}, "hash": "e8488350feaa8b729a1f9df97a93e8c09693bc6b01d2802a72bc7173dfe10a2f", "class_name": "RelatedNodeInfo"}, {"node_id": "1a443e7c-c9ba-452e-a008-ebaa4394ef83", "node_type": "1", "metadata": {}, "hash": "1499ebc7f9bc3adb7133a76f065bd2268c44147f39cb10c44683983e2555f8b9", "class_name": "RelatedNodeInfo"}, {"node_id": "bb331bd7-dd37-4d71-b0cf-257c68c73927", "node_type": "1", "metadata": {}, "hash": "95c26fa84d8998a599905d3479a3bb2367b64ce9c66a98efae219d73eccc4a68", "class_name": "RelatedNodeInfo"}]}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "text": "In the case of model-as-dependency, the model service and versioning are together with the consuming application In this case, user has the model and can input directly and get predictions directly. Thus, the build & runtime are immediately available to user. In the case of Model-as-Service, service & versioning is independent from the consuming application. The compile and runtime are available through the use of REST API. Therefore, as the name suggests when users web app gets an input they need to feed to model, they send the input to the model via REST API and get the prediction back via said API. In this case, the web interacts with a web app that sends inputs to the model which then sends the predictions back to the web app. Hybrid Model Serving also known as Federated Learning is the combination of the two former methods. Finally, for model on demand or precompute, service & versioning is also independent from the consuming application. In this case however, the model is only available at the runtime scope.\n\nThe following page discusses Machine Learning (ML) Deployment Strategies. The strategies discussed vary based on infrastructure. We can either deploy our ML Model to Cloud instances or we can deploy our ML Model as a serverless function. Let us first discuss deployment of our ML Model to Cloud Instances. In this scenario, containerization is the usual way to deliver models, in which case Docker is the popular technology to use. It does not matter whether you are using it on-premises, the cloud, or a mix of the two. The containers can be managed using either Kubernetes or AWS Fargate. ML model functions are made available through a REST API, often made using Flask. Now let us discuss the deployment of ML Model as serverless functions. Cloud vendors provide ML platforms for deploying model (example: AWS Sagemaker, Google Cloud AI Platform, Azure ML Studio, and IDM Watson ML). Commercial cloud services like AWS Lambda and Google App Engine containerize ML models. Deploying a model as a serverless function means putting code and dependencies into .zip files with a single-entry point. Then Azure Functions, AWS Lambda, and Google Cloud Functions manage these functions. The decision of which infrastructure to choose depends on cost, privacy of models and data and various other needs.\n\nThe following page discusses the importance of Optimizing ML Deployments with Machine Learning Operations (ML Ops).", "start_char_idx": 0, "end_char_idx": 2445, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "444b87b8-602d-43ac-87b5-e43467864782": {"__data__": {"id_": "444b87b8-602d-43ac-87b5-e43467864782", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6859e6bf-998d-459f-b45a-4dfdde7ea1ca", "node_type": "1", "metadata": {}, "hash": "92ec555ec6ed234f62fa44cf7a4d4a067625358a32cc56c7c65d06127bc72689", "class_name": "RelatedNodeInfo"}, {"node_id": "14af1033-c053-4882-bb8c-8a22c85c9c0f", "node_type": "1", "metadata": {}, "hash": "a0fed716c4d9133fb9df4c3aa427083266117a091c375f0169b2253e8419b370", "class_name": "RelatedNodeInfo"}, {"node_id": "4e1a32e9-0f6b-4a12-b9be-78566fcabbf8", "node_type": "1", "metadata": {}, "hash": "a352b5c7a10923821a18690388a3bf6919d9eb990d8b26835f062f8cc5cae99e", "class_name": "RelatedNodeInfo"}, {"node_id": "b77f9223-fd0f-4aa3-b6dc-366c66836370", "node_type": "1", "metadata": {}, "hash": "7cc56f1f81a5afd969bdba943d9c7ac7534570ea5ec0245a5b5e12f0c6e207a4", "class_name": "RelatedNodeInfo"}, {"node_id": "79d9c03b-6e99-4fcb-8edc-7d8fffe3dd9f", "node_type": "1", "metadata": {}, "hash": "ba7d679180b4563e92a0efbf2d78d0172abbe9474fb5d2cdc2539a59d01e2e36", "class_name": "RelatedNodeInfo"}]}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "text": "The page discusses how to establish best practices and tools to test, deploy, manage, and monitor ML models in real-world production. Only a small fraction of a real-world ML system is composed of the ML code. Technical Debt is real, there are shortcuts, suboptimal practices, or decisions made during the development and deployment of ML systems that can lead to long-term consequences, inefficiencies, and challenges. Here are a few reasons why it is ML Ops is important: [ML Ops is vital for adapting to changing factors in ML applications], [It speeds up model deployment, reducing wait times and delivering value], [ML systems face technical and compliance risks linked to data, code, and processes], [Lack of infrastructure, monitoring, or compliance can harm systems and reputation], [ML Ops enhances long-term performance and efficiency via automation], [ML Ops blends ModelOps, DataOps, and DevOps principles for stability and efficiency] and [DevOps manages software apps, while ML Ops excels in ML model and data management for peak performance].\n\nThe following page discusses the Distinctions Between Deployment in the Data Science Lifecycle Process and Machine Learning Operations (MLOPs). The page compares the two in a table format. Each row compares Deployment in the Data Science Lifecycle Process vs. Deployment in MLOps. First row: [Timing of Deployment: Data Science Lifecycle: Occurs in the later stages of the project, post-model development and evaluation. MLOps: Spans the entire lifecycle of an ML model, from initial development to continuous maintenance in production.]. Second row: [Focus of Deployment: Data Science Lifecycle: Focuses on transitioning a validated ML model from a research/development environment to production. MLOps: Emphasizes ongoing operationalization and management of ML models in production, ensuring reliability and scalability.]. Third row: [Tasks Involved: Data Science Lifecycle: Involves packaging the model, creating APIs, integration with data sources, and making it available for use. MLOps: Encompasses initial deployment, continuous monitoring, automated retraining, version control, integration with CI/CD pipelines, and addressing data or concept drift.] Fourth row: [Primary Goal: Data Science Lifecycle: Aims at making the model accessible for predictions or analysis in the production environment. MLOps: Focuses on ensuring effective and reliable functioning of the ML model in the real world, heavily relying on automation, monitoring, and maintenance.].", "start_char_idx": 2446, "end_char_idx": 4970, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04a3c7ec-b72f-420e-a583-c1107481c12c": {"__data__": {"id_": "04a3c7ec-b72f-420e-a583-c1107481c12c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "node_type": "1", "metadata": {}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4013eecd-6af1-4126-a353-3e354c4be33a", "node_type": "1", "metadata": {}, "hash": "e1a5e10fb60512ee23e44a098fcae129cddab41ce5ccef8c028e6c9144f82083", "class_name": "RelatedNodeInfo"}, {"node_id": "ffa3fd62-0326-4174-9326-f11256f22cc8", "node_type": "1", "metadata": {}, "hash": "ab350a8554c634a07d1f2c85ab383cb4227dde058af2d483b9da02e1d5059705", "class_name": "RelatedNodeInfo"}, {"node_id": "0c9f2743-ef3d-45bb-b4a4-89f093a6214a", "node_type": "1", "metadata": {}, "hash": "fc16175da2460a218ad4f98ecf555612d9e857bc3824f6c703481039ba3e807e", "class_name": "RelatedNodeInfo"}, {"node_id": "535039fc-1ba6-4485-bd97-668b16f0585a", "node_type": "1", "metadata": {}, "hash": "6df15212bfc5c202638475d6c963cc3d6964267f3a18040695d84dcc8d2425a8", "class_name": "RelatedNodeInfo"}, {"node_id": "3996d7c9-619b-491c-8108-3367f691595e", "node_type": "1", "metadata": {}, "hash": "cfe1ca63f998eddc1bd3c5953d156fd580f4a340da18ac7a03eac68cbec36a9a", "class_name": "RelatedNodeInfo"}]}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "text": "Fifth row: [Emphasis on Monitoring: Data Science Lifecycle: Limited to model evaluation and performance assessment before deployment. MLOps: Entails continuous monitoring throughout the model's operational life, tracking issues like data drift, concept drift, and model performance degradation.]. Sixth Row: [Performance Assessment: Data Science Lifecycle: Focuses on model evaluation metrics (accuracy, precision, recall, etc.) to determine if the model meets success criteria. MLOps: Extends beyond traditional metrics to include real-time monitoring of data quality, model latency, false positives/negatives, and alignment with business objectives.].\n\nThe following page discusses the stages in Model Development and Deployment to ensure a systematic and controlled process for creating, testing, and deploying Machine Learning (ML) models. This is shown in a table format. [Stage 1] Experimentation. Purpose: Model development, algorithm exploration, hyperparameter tuning. Scope: Research and model development environment. Environment: Controlled research environment. [Stage 2] Test. Purpose: Verify model functionality and performance pre-production. Scope: Testing for issues and bugs isolated from production. Environment: Isolated testing environment. [Stage 3] Staging. Purpose: Test final version in an environment resembling production. Scope: Ensuring model works in a similar setup. Environment: Environment closely mirroring production. [Stage 4] Pre-Production. Purpose: Limited-scale testing before full-scale production release. Scope: Identify potential issues with a limited audience. Environment: Closer to production but with restrictions. [Stage 5] Production. Purpose: Live environment where the model actively serves its purpose. Scope: Operational phase delivering value to users. Environment: Real-world, live production environment.\n\nThe following page discusses how MLOps Offers a Process with a Series of Iterative and Incremental Steps to Develop, Deploy, and Manage ML Models Effectively. It covers two different topics, Iterative-Incremental Development and Maturity of Automation: CI/CD Level of Automation. Iterative-Incremental Development has three broad phases, Design, Model Development and Operations. Design looks at requirements engineering, ML-use cases prioritization and Data availability check. Model Development looks at Data Engineering, ML Model Engineering and Model Testing & Validation.  Operations looks at ML Model Deployment, CI/CD Pipelines and Monitoring & Triggering.", "start_char_idx": 4971, "end_char_idx": 7498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bdd46867-69cb-4ff5-91d0-b2774cfc7e05": {"__data__": {"id_": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "88931f80-f889-4a2c-a5f2-014daa4d0e22", "node_type": "1", "metadata": {}, "hash": "13e4c9dab536da3c4f0c5348d18084620f6a50327ca79922c74eb24b6861872c", "class_name": "RelatedNodeInfo"}, {"node_id": "dbb69e8d-17ff-4235-b3a8-8335e2325f28", "node_type": "1", "metadata": {}, "hash": "ca1e003c124f03c05168e9ae43cb078e6ee67ae31a7d6d240876f67731df6eae", "class_name": "RelatedNodeInfo"}]}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "text": "Operations looks at ML Model Deployment, CI/CD Pipelines and Monitoring & Triggering. Maturity of Automation: CI/CD Level of Automation is described using a really detailed diagram. For a rapid and reliable update of the pipelines in production, you need a robust automated CI/CD system. This automated CI/CD system lets your data scientists rapidly explore new ideas around feature engineering, model architecture, and hyperparameters. They can implement these ideas and automatically build, test, and deploy the new pipeline components to the target environment. The following diagram shows the implementation of the ML pipeline using CI/CD, which has the characteristics of the automated ML pipelines setup plus the automated CI/CD routines. This MLOps setup includes the following components: Source control, Test and build services, Deployment services, Model registry, Feature store, ML metadata store & ML pipeline orchestrator.", "start_char_idx": 7413, "end_char_idx": 8348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b48cc563-2c03-495c-a9b4-a3529a9ad09e": {"__data__": {"id_": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "node_type": "1", "metadata": {}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "node_type": "1", "metadata": {}, "hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "684d71d1-a5d6-4b4e-bb76-6083a280b65d", "node_type": "1", "metadata": {}, "hash": "49b57bbfb97fc346d441a1416a1860e6223c285bf876549d80dcf3baa989be0e", "class_name": "RelatedNodeInfo"}, {"node_id": "b7c4feec-57ed-4901-acaa-236586fe976f", "node_type": "1", "metadata": {}, "hash": "bc7c7d1595e6864f83a277549cf34accd779fc169a9de2c9244d3bd09df7fcd6", "class_name": "RelatedNodeInfo"}, {"node_id": "dfc0c368-b863-4300-b1c2-8b9e4a878106", "node_type": "1", "metadata": {}, "hash": "76f8820ac5a984a41228f033dfd387a71d602ee973f4df25b02b519f263648a7", "class_name": "RelatedNodeInfo"}, {"node_id": "87c282a8-9c70-4382-9bd7-67ae4960c13b", "node_type": "1", "metadata": {}, "hash": "600c2bb4e12c3860337d293aaf1a7151fa1fe97f5c5815da707704a30fb7cb0e", "class_name": "RelatedNodeInfo"}]}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "text": "The following page discusses The Complete Machine Learning (ML) Development Pipeline. This pipeline includes three levels where changes can occur: Data, ML Model, and Code. This means that in ML-based systems, the trigger for a build might be the combination of a code change, data change or model change. We will no go through ML Operations (MLOPs) Principles and see where how Data, ML Model, or Code can cause a change. Principle 1: Versioning, which is the tracking of ML models and data sets with version control systems. Data: Encompasses Data preparation pipelines, Features store, Datasets, and Metadata. ML Model: Includes ML model training pipeline, ML model (object), Hyperparameters, and Experiment tracking. Code: Encompasses Application code and Configurations. Principle 2: Testing, which is ensuring the quality, reliability, and robustness of ML models and the systems built around them. Data: Covers Data Validation for error detection and Feature creation unit testing. ML Model: Involves Unit testing for model specification, Integration testing for the ML model pipeline, Model validation before operationalization, ML model staleness testing in production, Testing model relevance and correctness, and testing non-functional requirements like security, fairness, and interpretability. Code: Encompasses Unit testing and Integration testing for the end-to-end pipeline. Principle 3: Automation, how to automate the complete ML-workflow steps. Data: Includes Data transformation, Feature creation and manipulation. ML Model: Comprises Data engineering pipeline, ML model training pipeline, and Hyperparameter/Parameter selection. Code: Involves ML model deployment with CI/CD and Application build.", "start_char_idx": 8352, "end_char_idx": 10070, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7183bf1-15a2-4b31-8742-869f779c113f": {"__data__": {"id_": "e7183bf1-15a2-4b31-8742-869f779c113f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "eb3f2a26-9fde-4ee9-a559-6135e85d0d20", "node_type": "1", "metadata": {}, "hash": "3166ff77dbfee0c7aaefa81ee63bd8bc574fc8e1aef3da6b016eea01efeafd4e", "class_name": "RelatedNodeInfo"}, {"node_id": "0c9f35c6-7178-44df-875d-60d54fda49ee", "node_type": "1", "metadata": {}, "hash": "f35392a9e22dfe103b5bb9ab3201d1017901804b3a2018aed29539acb56eab11", "class_name": "RelatedNodeInfo"}, {"node_id": "4aae927c-0a32-4ab6-9a96-542bcfb1a2b7", "node_type": "1", "metadata": {}, "hash": "283b81914ae7a50e59462eab51def8542457fffb16c0de5f2bf018b37d49234d", "class_name": "RelatedNodeInfo"}, {"node_id": "15d0ffde-810d-4887-a2fa-bcecdbe723e5", "node_type": "1", "metadata": {}, "hash": "b8190d6d22e9a45001a61c42dc82bed0812c360eeaa47d1b7dc5cd2594faab04", "class_name": "RelatedNodeInfo"}, {"node_id": "15aa29ea-ec2a-4578-b626-6a27664aea57", "node_type": "1", "metadata": {}, "hash": "f66263c737817bae7a572d241fe9d56173b9b31c16338a12292ae71da3f1953a", "class_name": "RelatedNodeInfo"}]}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "text": "Code: Involves ML model deployment with CI/CD and Application build. Principle 4: Reproducibility, how every phase produces identical results given the same input. Data: Incorporates Backup data, Data versioning, Extract metadata, and Versioning of feature engineering. ML Model: Encompasses identical Hyperparameter tuning between dev and prod, Maintaining the same feature order, ensuring consistency in ensemble learning of ML models, and Documenting model pseudo-code. Code: Involves matching versions of dependencies in dev and prod, Consistent technical stack across dev and production environments, and providing reproducible results via container images or virtual machines. Principle 5: Deployment, transitioning from development/testing to production. Data: Involves using Feature store in both dev and prod environments. ML Model: Encompasses Containerization of the ML stack, REST API implementation, and Deployment on-premise, cloud, or edge environments. Code: Involves deployment strategies for on-premise, cloud, or edge settings. Principle 6: Monitoring, assuring everything performs as expected. Data: Includes tracking changes in Data distribution between training and serving data, and Monitoring disparities in training vs. serving features. ML Model: Covers ML model decay, Numerical stability, and Computational performance. Code: Encompasses assessing the predictive quality of the application on serving data.\n\nThe following page discusses how Machine Learning (ML) Requires Extensive Testing. The behaviour of ML-based systems is challenging to predefine, as it relies on dynamic data characteristics and a multitude of model configuration choices. In general, when we have our code we first let it undergo ML Infrastructure Tests and Unit Tests. Then for our data, we conduct data tests and skew tests. After that we can proceed to model training where we conduct model tests and integration tests. Finally, when our system is running, we continue to run integration tests, and skew tests on our data. At the same time, we monitor the data, prediction and system. The following points are necessary to take note when it comes to testing ML models. Feature and Data Tests: Validate data and feature schema/domain, Measure feature importance and Ensure policy compliance (e.g., GDPR).", "start_char_idx": 0, "end_char_idx": 2309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0144dbce-80d3-4318-8ae5-5866f0330241": {"__data__": {"id_": "0144dbce-80d3-4318-8ae5-5866f0330241", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c86cb95c-13ec-4155-bb8c-b9f920e6e8ba", "node_type": "1", "metadata": {}, "hash": "3544f68aee3515401c4a1017964e820becea8d00f130d336b49af4fe809d3d66", "class_name": "RelatedNodeInfo"}, {"node_id": "0756c2c3-572c-4226-80e4-6b368dcc42bd", "node_type": "1", "metadata": {}, "hash": "24738a7b67ae03b4dc67fec4cc1abf674f65bf09f75421a5b67c92e149e66515", "class_name": "RelatedNodeInfo"}, {"node_id": "d87cbf58-b3e3-431f-90d9-bf9152478ea9", "node_type": "1", "metadata": {}, "hash": "240b4ccd08551e993ae8347e374d07942cd62b19d193f3887348dbe5cd8f55fa", "class_name": "RelatedNodeInfo"}, {"node_id": "c49c9cce-17bd-4a03-8505-729997ae4656", "node_type": "1", "metadata": {}, "hash": "f39d770337ea38856ad66fa14041b9ec4b1eafbf9cadafb549aa616091cb5910", "class_name": "RelatedNodeInfo"}, {"node_id": "cdde58b8-3042-4538-ab04-9348f0d82bc7", "node_type": "1", "metadata": {}, "hash": "499a547df128c145c64faff02beb578c12e4ebdf7ce7470e803cfc5f376b097c", "class_name": "RelatedNodeInfo"}]}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "text": "Reliable Model Development: Correlate ML loss metrics with business impact, Test model staleness and retraining frequency, Compare ML model performance to baselines, use separate test sets for final evaluation, Address fairness, bias, and inclusion issues and implement conventional unit testing. ML Infrastructure Tests: ensure reproducibility in training, minimise non-determinism in training, test ML API usage and stress, check algorithmic correctness, integrate, and validate the full ML pipeline,  validate the model before serving and ensure consistency between training and serving environments.\n\nThe following page discusses the topic of Biased data using a scenario. Topic: Suspicious Loans and Biased Data in Loan Approvals. Scenario Description: In the realm of loan approvals, a concerning trend emerges where applicants from specific neighbourhoods consistently face rejection. This repetitive denial of loans is rooted in historical data riddled with biases against these very neighbourhoods. Issue: The loan approval model, guided by historical loan data, displays a clear prejudice against certain localities. The biases ingrained in this dataset unfairly disadvantage applicants from these neighbourhoods, leading to systematic and unjust loan denials. Impact: The consequence of such biased data is the perpetuation of financial disparities. It not only hampers the prospects of deserving individuals seeking financial assistance but also deepens the existing societal divides by withholding opportunities based on geographic factors rather than the individual's creditworthiness. Challenges: Addressing this issue demands a nuanced approach. Simply relying on historical data without considering and rectifying the inherent biases can reinforce and perpetuate discriminatory practices. Resolution: Efforts should focus on recalibrating the loan approval model to mitigate biases and ensure fair assessment criteria. Incorporating robust measures to counteract historical biases in the dataset is crucial to promote equitable lending practices. Implementing algorithms that actively identify and mitigate biases could significantly contribute to a more just and inclusive loan approval system.\n\nThe following page discusses the topic of Imbalanced data using a scenario. Topic: Challenges of Rare Disease Detection with Imbalanced Data. Scenario Overview: In the realm of healthcare, a predicament arises concerning a model designed for detecting a rare disease. Despite boasting an impressive accuracy score, this model encounters significant difficulty in identifying instances of the rare disease within a population where only a mere 1 percentage of individuals are affected. Identified Issue: The primary hurdle stems from the nature of the dataset, there is an imbalance in the representation of the rare disease.", "start_char_idx": 2310, "end_char_idx": 5148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32392c6f-4303-49ba-9a39-c4c6da1bddd2": {"__data__": {"id_": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "11e540b6-9f58-4845-b5f9-9bd38bf0d8d0", "node_type": "1", "metadata": {}, "hash": "4ec62737f936cdacdda6ad895550218fda2519d48a910f6391a29ae3b1511803", "class_name": "RelatedNodeInfo"}, {"node_id": "abde40db-9714-4cd1-bebc-c1d98c6323c0", "node_type": "1", "metadata": {}, "hash": "9c0deb8f051bee9115a54cea72fc25188aad727d389b7e900597c6e23648fb71", "class_name": "RelatedNodeInfo"}, {"node_id": "ab5fa94c-4196-4994-beb7-0174f85b477b", "node_type": "1", "metadata": {}, "hash": "11f8ce3110cae7a28f5951fbd2d15212a1c4b41f5e82de5e4653f9146827b27a", "class_name": "RelatedNodeInfo"}, {"node_id": "aa83d018-7c38-4aec-82ed-d81726fe2f49", "node_type": "1", "metadata": {}, "hash": "3918799c5f1d56724cfdfc3c0bb92a4586ef8582b0c89dec4dd8f1a3bb103ae8", "class_name": "RelatedNodeInfo"}, {"node_id": "1c0ba5c4-71ee-4caf-ba7f-5f0ee137604e", "node_type": "1", "metadata": {}, "hash": "f5dcfe03c874b5f1326190fe146cd79a5ff3c5c8b0234c0171ef9d7fdf144250", "class_name": "RelatedNodeInfo"}]}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "text": "With such a minuscule percentage of the population affected by the condition, the model, while demonstrating high accuracy, struggles to effectively identify and classify instances of this rare ailment. Challenges Posed by Imbalanced Data: The imbalanced dataset poses a substantial challenge to the model's learning process. Its overwhelming focus on the majority class, representing the disease-free population, hampers its ability to grasp the intricate patterns and nuances associated with the rare disease. As a result, despite its overall high accuracy, the model fails to accurately pinpoint and classify instances of this critical condition. Impact and Implications: The repercussions of this limitation are significant. Failure to effectively detect the rare disease translates to delayed diagnosis and treatment for those afflicted. In turn, this can have severe consequences on their health outcomes, potentially leading to exacerbated health conditions or even mortality due to delayed intervention. Resolving the Imbalance: Addressing this challenge requires strategic intervention. Techniques such as oversampling the minority class, synthetic data generation, or leveraging specialized algorithms designed to handle imbalanced datasets could potentially recalibrate the model's learning process. By providing a more balanced representation of the rare disease within the dataset, the model can be trained to better recognize and accurately classify instances of this critical condition.\n\nThe following page discusses the topic of Data Drift using a scenario. Topic: Addressing Traffic Jams Caused by Data Drift in Traffic Light Optimization. Scenario Description: Within a city's intricate traffic management system, an ML model was meticulously trained to streamline traffic flow by optimizing the timings of traffic lights. Initially, this model operated seamlessly, efficiently navigating vehicular movement. However, an unexpected turn of events has occurred as traffic jams have started to emerge, contradicting the model's intended purpose. Identified Issue: The root cause behind this unforeseen disruption lies in what's known as 'data drift'. Over time, the environmental factors, traffic patterns, and behavioural dynamics of drivers have subtly shifted. These changes, unaccounted for in the model's initial training data, have led to a disparity between the model's predictions and the evolving real-time traffic conditions. Data Drift and Its Implications: Data drift, the gradual deviation of new data from the original training data, poses a significant challenge. The model, designed to optimize traffic flow based on historical patterns, struggles to adapt to the evolving traffic dynamics.", "start_char_idx": 5149, "end_char_idx": 7871, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "311bd72d-5546-4502-bbab-baee387de6f3": {"__data__": {"id_": "311bd72d-5546-4502-bbab-baee387de6f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd6114a1-4263-4f9d-a493-6307f278e827", "node_type": "1", "metadata": {}, "hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4e4df545-6ba1-4bf2-bc56-84199d771183", "node_type": "1", "metadata": {}, "hash": "fb40cd3aad769da672b56151d75f29e2628c891a226b9152a15631d66e17958e", "class_name": "RelatedNodeInfo"}, {"node_id": "b4f55450-8c58-4e2d-a99f-8c413350f21d", "node_type": "1", "metadata": {}, "hash": "8f617bf4d209167ca8fc09164c9a7c1650d3bb8064d1efd622490e11494c7bab", "class_name": "RelatedNodeInfo"}, {"node_id": "429c52c1-8ff8-44ee-b26a-54cf6eb8adc4", "node_type": "1", "metadata": {}, "hash": "0798a09527aa64b6367d2dec802e50bfb004dcf0c20d8e122b13894f8e2cf065", "class_name": "RelatedNodeInfo"}, {"node_id": "7a98b628-84b0-47ac-9abf-12e8318dd00f", "node_type": "1", "metadata": {}, "hash": "65350e1c106f67b51bad5efdffcef26b1f0d483f25873918c7ce7ac857196b0d", "class_name": "RelatedNodeInfo"}, {"node_id": "ad955d23-c9da-4902-829b-4c43b4851a1f", "node_type": "1", "metadata": {}, "hash": "499552db6fa5b03974503f054b95cd08764b7edeb4d941755c4d21b4f62aa014", "class_name": "RelatedNodeInfo"}]}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "text": "Consequently, its recommendations for traffic light timings no longer align with the current traffic scenarios, inadvertently causing congestion and gridlocks instead of alleviating them. Impact and Mitigation: The ramifications of this mismatch between model predictions and actual traffic conditions are evident in the increasing traffic congestion, resulting in delays, frustration among commuters, and economic implications due to lost productivity. Resolving this issue necessitates recalibrating the model by incorporating mechanisms to detect and adapt to data drift. Techniques involving continuous model retraining using updated datasets reflecting current traffic dynamics or implementing adaptive learning algorithms capable of adjusting to evolving patterns in real-time could aid in restoring the model's effectiveness.\n\nThe following page discusses the topic of Lack of generalization using a scenario. Topic: Addressing Breed Misclassification in Dog Image Classification Models. Scenario Overview: Within the domain of image classification, a model trained specifically on dog images encounters persistent misclassification issues, particularly with certain breeds of dogs. This puzzling discrepancy raises the question: why are these misclassifications occurring? Identified Issue: The primary culprit behind these recurrent misclassifications lies in the model's limited generalization capabilities. While proficient in recognizing and categorizing several dog breeds accurately, its failure to generalize across all breeds leads to misclassifications for certain specific breeds. Lack of Generalization and its Ramifications: The model's inability to generalize effectively across diverse features and characteristics present in various dog breeds significantly impacts its accuracy. Traits unique to specific breeds, such as subtle variations in fur texture, facial structures, or colour patterns, pose challenges for the model's generalized learning, resulting in misclassifications. Implications and Addressing the Shortcoming: The implications of this limitation are apparent in the mislabelling of dog breeds, potentially causing confusion in applications relying on accurate breed identification, such as veterinary diagnostics or pet-related services. Addressing this issue warrants augmenting the model's training data with a more comprehensive and diverse set of images encompassing a wider spectrum of dog breeds. Additionally, implementing techniques to enhance the model's generalization abilities, such as transfer learning from pre-trained models or incorporating regularization methods to reduce overfitting to specific breed features, could significantly improve its breed classification accuracy.\n\nThis page just says the word bonus and then shows a set of images. The first group of images show images that can be mistaken to be either dogs or donuts. The second group of images show images that can be mistaken to be either mop or dogs.", "start_char_idx": 7872, "end_char_idx": 10846, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd6114a1-4263-4f9d-a493-6307f278e827": {"__data__": {"id_": "cd6114a1-4263-4f9d-a493-6307f278e827", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "351fd49c-870e-439b-83e0-89bad897f1a1", "node_type": "1", "metadata": {}, "hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "fd01ea58-a6eb-4b99-942a-3bef5880ac29", "node_type": "1", "metadata": {}, "hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "class_name": "RelatedNodeInfo"}]}, "hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "text": "The second group of images show images that can be mistaken to be either mop or dogs. The final group of images show images that can be mistaken to be either chicken wings or dogs.\n\nThe following page discusses the topic of concept drift using a scenario. Topic: Addressing Concept Drift Impacting E-commerce Recommendation Systems.", "start_char_idx": 10761, "end_char_idx": 11093, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "044bf26b-d29b-4f80-b543-2cb3ed2443df": {"__data__": {"id_": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "cbdb8738-24da-403f-9f5a-47a2f4d24695", "node_type": "1", "metadata": {}, "hash": "9b942a240550d5702850f39416215c7450450cfdc3c1891d85961a58830d4ee1", "class_name": "RelatedNodeInfo"}, {"node_id": "9f92e116-495b-451f-8551-96fe292765b9", "node_type": "1", "metadata": {}, "hash": "ba368a53304de339eb7e71d889e1a38541bdf5746296fbbfb51e2487cdaf930d", "class_name": "RelatedNodeInfo"}, {"node_id": "886f38df-3047-4079-988e-5f9305f64a87", "node_type": "1", "metadata": {}, "hash": "308973e0b286bebdbe13e4d460f2ecac6a32edae7f353cd198b96f0a248fcdd0", "class_name": "RelatedNodeInfo"}, {"node_id": "0f99e99d-c4fb-43a5-918f-32210c4aeb65", "node_type": "1", "metadata": {}, "hash": "bd0306237fe0098dcff37280cd0ff8532a07df15574695b19dc07c1bef1690bf", "class_name": "RelatedNodeInfo"}, {"node_id": "1dccd4d4-5e39-4fbb-9137-6f5daae99e57", "node_type": "1", "metadata": {}, "hash": "258f643c42b7d544a76e599ebe9e67337bc937551e09ecfe9226e3ba66332b3d", "class_name": "RelatedNodeInfo"}]}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "text": "Topic: Addressing Concept Drift Impacting E-commerce Recommendation Systems. Scenario Overview: Within the realm of e-commerce, a once-efficient recommendation system on a website tailored to suggest products to users is experiencing a sudden decline in performance. What used to be an excellent tool for suggesting relevant items to users has recently started recommending unrelated products, coinciding with a noticeable drop in sales. Identified Issue: The underlying challenge behind this unexpected shift in recommendation quality lies in what's termed 'concept drift'. The system, originally trained to comprehend user preferences and suggest relevant products, accordingly, is now grappling with changes in user behaviour or preferences that were not accounted for in its initial training data. Concept Drift and its Impact: The manifestation of concept drift presents a significant obstacle for the recommendation system. Shifts in user preferences, evolving trends, or changes in purchasing behaviour over time have led to a divergence between the system's understanding of user preferences and the current preferences of the user base. Consequently, the system's recommendations are no longer aligned with users' actual interests, resulting in a decline in sales. Implications and Mitigation Strategies: The implications of concept drift are evident in the decreased sales figures, indicating a mismatch between the system's recommendations and user preferences. Mitigating this issue requires strategies focused on adapting the recommendation system to changing user preferences. Incorporating real-time feedback mechanisms to capture and adapt to evolving user preferences, leveraging dynamic learning algorithms capable of adjusting to shifting trends, or periodically retraining the model with updated data reflecting current user behaviours could help mitigate the impact of concept drift and restore the system's efficacy in suggesting relevant products to users.\n\nThe following page discusses the topic of Insufficient training using a scenario. Topic: Addressing Misclassification of Rare Endangered Species in Wildlife Conservation Models. Scenario Overview: In the domain of wildlife conservation, a dedicated organization employs a machine learning model to classify endangered animal species captured in camera trap images. However, the model consistently grapples with misclassifying rare and endangered species, prompting the question: what is causing these recurring misclassifications? Identified Issue: The prevailing issue leading to the misclassification of rare species stems from insufficient training data. While the model has been trained to identify and categorize various animal species, the limited representation or scarcity of data related to rare and endangered species hinders the model's ability to accurately recognize and classify these specific animals.", "start_char_idx": 0, "end_char_idx": 2897, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "752a5b4a-9053-459e-9303-400144ec6f56": {"__data__": {"id_": "752a5b4a-9053-459e-9303-400144ec6f56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6fcc07ff-4cc2-4d47-9d3b-0275652d7d35", "node_type": "1", "metadata": {}, "hash": "f75361005be8605b1d7342d966b236566ed4e809f3468a4d43eef7a337ab5c45", "class_name": "RelatedNodeInfo"}, {"node_id": "69edbff8-8022-4d94-90f5-cc40985f8ea7", "node_type": "1", "metadata": {}, "hash": "281a3c9836f1c86031a2006eaac64d4b5d8ea7d21213a5a805908b54bb19b6f5", "class_name": "RelatedNodeInfo"}, {"node_id": "73e32222-f0e0-4269-b211-076685392039", "node_type": "1", "metadata": {}, "hash": "5fe3fe62cf3a4676042763c24fb21ca066fed9b64bd6430eadc974569bc501e6", "class_name": "RelatedNodeInfo"}, {"node_id": "f0db9774-7231-4d5c-bb50-30f9a87024c5", "node_type": "1", "metadata": {}, "hash": "87228fdeff8da75f0f6ede67542b425ca015a094709f1718815f83cb9b25135f", "class_name": "RelatedNodeInfo"}, {"node_id": "2b729654-7df3-4d7e-b24f-eada34b4b32c", "node_type": "1", "metadata": {}, "hash": "9b7da33d1adc4a8b2c6c72f1f93c51b20cf87f3fe1f85e5b4db5070255be651e", "class_name": "RelatedNodeInfo"}]}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "text": "Insufficient Training Data and its Impact: The dearth of comprehensive training data pertaining to rare species significantly impacts the model's learning process. Unique characteristics, nuanced features, or infrequent sightings of these rare species are inadequately represented in the training dataset. Consequently, the model lacks the requisite exposure to adequately discern and categorize these rare animals, leading to misclassifications. Implications and Strategies for Improvement: The implications of this challenge are profound within the realm of wildlife conservation. Misclassifying rare and endangered species could result in a lack of accurate population assessments, potentially impacting conservation efforts and endangerment status assessments. To address this limitation, augmenting the training dataset with a more extensive and diverse collection of images featuring rare species is crucial. Additionally, employing techniques like transfer learning from related species or implementing specialized algorithms focusing on feature extraction from limited data could aid in enhancing the model's ability to accurately classify and identify these endangered animals within camera trap images.\n\nThe following page discusses the topic of Overfitting using a scenario. Topic: Addressing the Issue of Overfitting in Essay Grading Models. Scenario Overview: In the realm of educational technology, an essay grading model designed to evaluate student essays encounters an unexpected hurdle. The model consistently assigns high scores to essays employing sophisticated vocabulary, yet lacking coherence and logical structure, prompting an investigation into the model's failure. Identified Issue: The primary issue leading to this discrepancy lies in the phenomenon known as 'overfitting'. The model, while adept at recognizing complex vocabulary and language intricacies, has become excessively focused on these superficial aspects without effectively gauging the coherence and substance of the essay's content. Overfitting and its Ramifications: Overfitting, where the model excessively tailors its predictions to the training data, has led to a skewed emphasis on superficial elements such as sophisticated vocabulary. Consequently, the model erroneously equates the usage of advanced language with essay quality, disregarding the fundamental aspects of coherence, logical flow, and relevance of content. Implications and Strategies for Improvement: The implications of this limitation are evident in the inflated scores given to essays lacking substantive content, potentially misleading educators about students' actual writing proficiency. Addressing overfitting necessitates recalibrating the model's learning process.", "start_char_idx": 2898, "end_char_idx": 5636, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82257d0b-5b2f-4bef-871e-7f50cf0e54eb": {"__data__": {"id_": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "920563dc-9066-498f-9dcc-82e44b79f387", "node_type": "1", "metadata": {}, "hash": "903daf663576ee2e41e0bc02b33b5d1e56cea0c9f0b4ad00ed2a4f557c78cfc5", "class_name": "RelatedNodeInfo"}, {"node_id": "684cf36d-59a3-4fca-a204-b610ccd31a78", "node_type": "1", "metadata": {}, "hash": "ce8bde214c3aa60347b980c6faa62b14e40b9e8a970eea82238a1e5dfdaa8911", "class_name": "RelatedNodeInfo"}, {"node_id": "ff330ddd-928b-4b0b-8ba5-79b8daaccf2d", "node_type": "1", "metadata": {}, "hash": "2370666b40fe0e54a9155f212c6e1b5e636ad22dd05548a50ebddae21f3e9aee", "class_name": "RelatedNodeInfo"}, {"node_id": "955b35d5-9116-413e-a537-2f5c87ff7782", "node_type": "1", "metadata": {}, "hash": "ecd450a407fba25c8ea4f21348ddd6e26a48b19c25a09028cf318144c39a1728", "class_name": "RelatedNodeInfo"}, {"node_id": "7e9b3f5d-4ff8-44a8-b942-743e2980d288", "node_type": "1", "metadata": {}, "hash": "df995cf83f8587b878f6d8a24fa5a0c9739a3856c6e8071fc75a648ad5e9f45b", "class_name": "RelatedNodeInfo"}]}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "text": "Addressing overfitting necessitates recalibrating the model's learning process. Strategies such as diversifying the training dataset to encompass a broader range of well-structured essays, implementing regularization techniques to prevent the model from overly focusing on specific language nuances, or introducing features that assess coherence and logical progression within essays could significantly mitigate the impact of overfitting and enhance the model's ability to evaluate essays holistically.\n\nThe following page discusses a scenario. Title: Calling out Sick. In 2008, Google attempted to use search data to predict the flu, which could provide early insights into flu prevalence. Google Flu Trends (GFT) claimed success but failed spectacularly during the 2013 flu season, missing by 140 percent. This was due Big Data hubris. The failure of GFT was due to opaque methods, vulnerability to overfitting, and not accounting for changes in search behaviour. The following are some of the mistakes. Noise Sensitivity: GFT's algorithm was sensitive to unrelated or noisy search terms. Failure to Filter Seasonal Terms: It didn't effectively filter out terms correlated due to seasonal trends. Inadaptability to Search Behaviour Changes: GFT didn't adjust to changes in search behaviour. Limited incorporation of ground truth data.\n\nThe following page just says the following: Few Days Ago, A Scottish Football Club ICFTC Announced Something New.\n\nThe following page discusses the topic of Feature Engineering Issues using a scenario. Scenario: An intriguing puzzle plagues a popular music recommendation ap. It often suggests tunes completely unrelated to a user's musical preferences. The baffling question looms: What lies at the root of this curious mismatch? Feature Engineering Issues: The heart of this discordance likely dwells within the intricacies of feature engineering. The algorithms powering the app might be stumbling upon a hurdle in accurately capturing the nuanced facets of a user's musical taste. It's conceivable that the extraction and representation of user preferences, perhaps in the form of latent features, fail to encapsulate the holistic essence of individual music inclinations. The app's algorithmic prowess could be inadvertently misled by inherent limitations in its ability to decipher the intricacies of user preferences. Unravelling this conundrum demands a deeper exploration into the structural aspects of feature engineering, potentially necessitating a recalibration of the algorithms to better encapsulate the diverse and evolving nature of musical tastes.\n\nThe following page shows a lemon decaying.", "start_char_idx": 5557, "end_char_idx": 8205, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a379e407-7360-45ed-8be5-8adf76f86e24": {"__data__": {"id_": "a379e407-7360-45ed-8be5-8adf76f86e24", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25", "node_type": "1", "metadata": {}, "hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5e7bdc30-0af9-45bc-a287-6056115633aa", "node_type": "1", "metadata": {}, "hash": "a4460a01dc7118fdf072bcfbbc214c234c5697da36ae1b503151c7d84cf37a3f", "class_name": "RelatedNodeInfo"}, {"node_id": "5b53eb3b-af91-4917-8ed5-878084216d35", "node_type": "1", "metadata": {}, "hash": "d5fdd631228774a9edd965030b343801de03205eb342a0a11a834d4a75e33434", "class_name": "RelatedNodeInfo"}, {"node_id": "27d2122a-59b3-49a7-8b91-82b8957b3f99", "node_type": "1", "metadata": {}, "hash": "6e6f8081e55e5f577911ee5be9f061c5421777dfb6bd9ceb3dbf1dd53d0fbb73", "class_name": "RelatedNodeInfo"}, {"node_id": "d941a78f-fd58-4d1c-8c46-f8c6e7c46142", "node_type": "1", "metadata": {}, "hash": "d9b43fe19c941b026d3855da108f97d91c7504b3d4f4125dfa706553819dce7b", "class_name": "RelatedNodeInfo"}, {"node_id": "b25611d8-5ec0-45e4-85df-181e37762f98", "node_type": "1", "metadata": {}, "hash": "10ebe8a3bc8a660434443a2a87835901671bd0ba7517920fef25a1f33f0ba858", "class_name": "RelatedNodeInfo"}]}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "text": "The following page shows a lemon decaying. This is to preface the next page that discusses Model Decay.\n\nThe following page discusses the topic of model decay. Title: Model Decay: The Inevitable Instability in ML in Production. This is a phenomenon where a ML model's performance degrades over time in a production environment. The following are the primary causes for this. Concept Drift: Changing data properties make model assumptions outdated. Data Staleness: Outdated training data mismatches current data distribution. Data Quality Issues: Deteriorating data quality or errors affect model performance. Environmental Changes: Changes in the production environment impact model behaviour. Overfitting: Overoptimization for training data hinders generalization. Sample Bias: Non-representative training data affects model performance. Algorithm Drift: Outdated techniques lead to performance loss over time. Class Imbalance: Dominant classes bias the model, affecting minority classes. Regulatory Changes: Laws and privacy policies impact data collection and usage. Data Shifts: Unforeseen data distribution changes affect predictions. Conclusion: Understanding the intricate web of factors contributing to Model Decay is paramount in crafting resilient ML systems. Addressing these causes requires a holistic approach encompassing adaptive algorithms, continual training with updated data, and a vigilant eye on evolving environmental and regulatory landscapes.\n\nThe following page discusses a case study: Dynamic Healthcare Demands Continuous Machine Learning (ML) Monitoring to Maintain Model Effectiveness. Focus: Predicting 30-day hospital readmissions \u2014 a critical problem in the U.S. healthcare landscape, driven by Medicare's Hospital Readmissions Reduction Program. Static Clinical Guidelines: Prevalent Stability: Clinical guidelines remain remarkably stable, Recommendations: Common practice is to review guidelines every two to three years, and Hospital Use: Hospitals often rely on older guidelines (e.g., LACE and HOSPITAL scores) for readmission predictions. Challenges for ML Models: Project Context: Developing predictive readmission models for hospitals, Model Degradation: Trained, optimized, and deployed models start degrading within two to three months, and Variation: Models change differently at various hospitals or even within hospital buildings. Consequences: Rapid Decline: Within three months of deploying new ML software, customer dissatisfaction arises due to declining prediction accuracy, and Scalability Challenge: Expanding to more hospitals exacerbates the problem.", "start_char_idx": 8163, "end_char_idx": 10768, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25": {"__data__": {"id_": "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c", "node_type": "1", "metadata": {}, "hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d5606743-e8da-430d-87fb-31b964819a7d", "node_type": "1", "metadata": {}, "hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "class_name": "RelatedNodeInfo"}]}, "hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "text": "Root Causes: Real-World Interactions: ML models interact with real-world healthcare data, Impact of Data Changes: Changes in electronic health records, lab tests, and insurance types affect data fields and distributions, leading to prediction accuracy degradation, and Unnoticed Changes: These changes aren't traditional software updates or interface modifications, and often no one notifies the ML team.", "start_char_idx": 10769, "end_char_idx": 11173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e55a430-5f14-4057-a3f9-9364f895a8d3": {"__data__": {"id_": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0132a31d-4acf-46ab-912a-6de3e4f91d6a", "node_type": "1", "metadata": {}, "hash": "8a6c5ca86ee7d945634f5222d30b121017dceb30edbf86183ecc9c88b3259495", "class_name": "RelatedNodeInfo"}, {"node_id": "3b54452e-1c6f-438e-bcea-40908e6b6adc", "node_type": "1", "metadata": {}, "hash": "7700069e6006d736936b21cba4c46de6302b8a5fdfed009078110416e36e15c8", "class_name": "RelatedNodeInfo"}, {"node_id": "0e4263d2-9b40-40b4-914a-0cd1a7aee46e", "node_type": "1", "metadata": {}, "hash": "48b35937e47c42a5ef746910d4a23a991f8b579f8e868bb355f3ce3d1a9bac1b", "class_name": "RelatedNodeInfo"}, {"node_id": "865c13c6-ef89-42bb-9cae-5e423014804c", "node_type": "1", "metadata": {}, "hash": "d7d61a50e10243e9cc316b7ebcb6eb0d552f9c9171f5d1da9c5f42af15e8ad7c", "class_name": "RelatedNodeInfo"}, {"node_id": "2d726394-76af-4fab-b702-48e4094b5286", "node_type": "1", "metadata": {}, "hash": "4104ac0718534ac2d90b58450d48c2ba75693b4574c1ee10d424ec771913a342", "class_name": "RelatedNodeInfo"}]}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "text": "Conclusion: The narrative of ML model decay within the healthcare sphere underscores the imperative need for vigilant monitoring, adaptive strategies, and a nuanced understanding of the intricate interactions between models and the ever-evolving healthcare landscape.\n\n\n\n\n\nThe following page discusses how Models Drifting Away from their Original Mission. The categories it discusses are sudden drifts, gradual drift, incremental drift, and reoccurring concepts. Sudden drift: A new concept occurs within a  short time. For example, In a financial fraud detection model, a sudden drift might occur when a new type of fraudulent transaction emerges that the model has never encountered before. Gradual drift: a new concept gradually replaces and old one over a period of time. For example, in a weather forecasting model, gradual drift can happen when climate patterns change slowly over time. Incremental drift: an old concept incrementally changes to a new concept over a period of time. For example, In a stock price prediction model, incremental drift might occur as new data arrives daily. Reoccurring concepts: an old concept may reoccur after some time. For example, In social media, recurring concepts can emerge with the changing interests of users.\n\nThe following page discusses Model Monitoring.  Title: Enters Model Monitoring. The idea is to continuously track the performance of Machine Learning (ML) models in a production environment to detect any potential issues that could have adverse business implications. This involves system health monitoring and model\u2019s performance monitoring. In system health monitoring, we monitor the following metrics specific to service requests: latency, throughput, error rates, etc. Also look at infrastructure utilization: CPU / GOU utilization, memory. For the model\u2019s performance monitoring, the behaviour of ML systems is determined not only by predefined rules in the code but also by the learned model behaviour derived from data. Look at shifts in data distribution, training-serving skew, data quality problems, environmental changes, or shifts in consumer behaviour.\n\nThe following page discusses how in a Machine Learning (ML) System, we need to account for two extra components: data dependencies and the model itself. The page uses the example of the pandemic and how people\u2019s weird behaviour during the pandemic messed with AI model. Therefore, the page explains how to monitor the model the following things should be tracked: Data Drift, Broken Pipelines, Schema Change, Data Outage, Underperformance Segments, Model Bias, Concept Drift and Model Accuracy.", "start_char_idx": 0, "end_char_idx": 2621, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "127e2699-ba49-4856-8a6d-7641c5a47611": {"__data__": {"id_": "127e2699-ba49-4856-8a6d-7641c5a47611", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "fdb54770-d247-4fb9-99f1-153b7614c735", "node_type": "1", "metadata": {}, "hash": "910f16e5fa85cc9ed3174cdff49fca505f19092c4cdb670f89fdcfb300988372", "class_name": "RelatedNodeInfo"}, {"node_id": "5feacdd8-04bc-4a05-ac72-b79269b0bd2c", "node_type": "1", "metadata": {}, "hash": "335f56892678983023e6dee63a6c4913cc8545c7dfa988b7922c903da1598155", "class_name": "RelatedNodeInfo"}, {"node_id": "f9414dbd-9a0d-47c5-bb08-43666cc4965b", "node_type": "1", "metadata": {}, "hash": "4e2a3dfef0b08e3906f925458b4fd344d2245d4ba19f76fe51bb1b4b0aedb719", "class_name": "RelatedNodeInfo"}, {"node_id": "0423aca6-0545-45bf-a490-c5747584bbfb", "node_type": "1", "metadata": {}, "hash": "11869159518893588344d585cc615af3bbe2454b903886487eed92553d88e599", "class_name": "RelatedNodeInfo"}, {"node_id": "4edec649-9468-4fd7-ad44-748ef80a8d73", "node_type": "1", "metadata": {}, "hash": "39a43b47136dc62d6aff715c2a775fec3e606bda1c0b57df0429799fbe3cf29e", "class_name": "RelatedNodeInfo"}]}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "text": "The following page discusses the benefits of monitoring systems. The benefits can be categorized into Operational Excellence, Reliability, and Governance. Operational Excellence can be broken down into Early Issue Detection, Cost Savings, and Quick Alerts. Early Issue Detection: [Identify problems with ML models and data early in their operation, allowing for timely intervention and issue resolution. This prevents disruptions and downtime.]. Cost Savings: [Monitoring resource usage and model performance helps allocate resources efficiently, cutting operational costs in model deployment]. Quick Alerts: [Notify relevant stakeholders when issues or anomalies occur, enabling swift responses and problem resolution]. Reliability can be broken down into Improved Model Performance, Cleaner Data, and Continuous Improvement. Improved Model Performance: [Checks model performance metrics, such as accuracy, and provides insights to improve model accuracy, reliability, and predictive power]. Cleaner Data: [Identifies and addresses data quality issues, such as missing values or outliers, ensuring that data used for training and inference is of high quality and reliability]. Continuous Improvement: [Organizations can iteratively enhance models by retraining them with updated data, thus maintaining and improving their effectiveness over time]. Governance can be broken down into Business Success, Security & Compliance, and Model Interpretability. Business Success: [Connects model performance to key business metrics, allowing organizations to measure and optimize the real-world impact of their ML applications]. Security & Compliance: [Helps ensure that models follow regulatory rules and security standards, detecting and mitigating potential security threats, data breaches, and violations.]. Model Interpretability: [Often offer tools for interpreting and explaining predictions, boosting transparency, trust, and user understanding].\n\nThe following page discusses the Importance of Monitoring Key Performance Indicators (KPIs). The following points are given. Quantifiable Assessment: A numeric measure of model performance for easy comparisons. Performance Tracking: Track performance changes over time, enabling timely interventions. Early Issues Detection: Identify issues like overfitting early for corrective action. Objective Benchmarking: Compare models and assess improvements. Performance Target: Set expectations and standards for model performance. Model Iteration and Improvement: Guide improvements in model development. Resource Allocation: Allocate resources efficiently based on KPI assessments. Customer satisfaction and trust: Ensure customer trust and satisfaction with accurate predictions. Risk mitigation: Detect and mitigate risks associated with model failures. Ethical and Fairness considerations: Assess fairness and ethical considerations in model predictions.", "start_char_idx": 2623, "end_char_idx": 5522, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd": {"__data__": {"id_": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d371cae5-3a25-49ba-b3b7-86ea8cfc1b3d", "node_type": "1", "metadata": {}, "hash": "21c5255d038661f7baa612e64c7b968d9fa6106c7c89794ea57ee40fa91aa619", "class_name": "RelatedNodeInfo"}, {"node_id": "fded7855-c023-4132-8501-abd549174769", "node_type": "1", "metadata": {}, "hash": "c56a8cd4ea28128cd83e56d0106612dcfb115c2288d7c4dc83bd696637c8c32a", "class_name": "RelatedNodeInfo"}, {"node_id": "3ae92522-126c-4449-91c1-f7621ce0a45e", "node_type": "1", "metadata": {}, "hash": "1482eac4b4665075fb9773a86919410408c6664f21272da04566059a734f77aa", "class_name": "RelatedNodeInfo"}, {"node_id": "b04d5b46-e351-4d23-88b6-f549f9f22c17", "node_type": "1", "metadata": {}, "hash": "bf5ee90c87eeb6e243ac8162d3bb042d86346f5b44886f9716ec187278993099", "class_name": "RelatedNodeInfo"}, {"node_id": "c752ef3e-6058-44aa-9a8e-289234dc1012", "node_type": "1", "metadata": {}, "hash": "ef7920af4df1617e6f6e71c0ec67af5c3a7538d843236e5ae642ed2711d366a4", "class_name": "RelatedNodeInfo"}]}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "text": "Ethical and Fairness considerations: Assess fairness and ethical considerations in model predictions. Regulatory Compliance: Ensure compliance with legal and regulatory requirements. Business Impact: Understand the model's impact on business objectives.\n\nThe following page just has one quote: \"If someone reports close to 100 percent accuracy, they are either lying to you, made a mistake, forecasting the future with the future, predicting something with the same thing, or rigged the problem\" \u2013 Matthew Schneider.\n\nThe following page discusses how the availability of Ground Truth impacts the ease of monitoring ML models. Ground truth refers to the accurate and reliable reference data or information that is used as a standard for evaluating the performance, accuracy, or quality of a system, model, or algorithm. Instant Ground Truth: Having access to accurate and reliable reference data as the same time as the algorithm's predictions. Makes monitoring and evaluating the performance of our model much easier. Examples: Face Recognition at Airport Security. Delayed Ground Truth: A situation where true and accurate outcomes or labels of a dataset are not available immediately or in real-time but are delayed in their availability. Examples: 1. Medical Diagnosis, 2. Stock Market Predictions. Absent Ground Truth: No or limited access to reference data for evaluating the performance of an algorithm. Examples: 1. Space Exploration, 2. Content moderation in emerging languages.\n\nThe following page discusses the challenges of delayed ground truth. Here are some reasons for delayed ground truth. Data Collection and Reporting Lag: Impedes timely issue identification, risk of drift detection delays, reduced responsiveness, and slower model iteration. Human Involvement: Impedes timely issue identification, risk of drift detection delays, and slower model iteration. Natural Processes: Risk of drift detection delays and slower model iteration. Logistical Challenges: Impedes timely issue identification and slower model iteration. Regulatory and Compliance Requirements: Impedes timely issue identification, risk of drift detection delays, and slower model iteration. Data Transmission and Storage: Impedes timely issue identification, risk of drift detection delays, reduced responsiveness, and slower model iteration. Privacy and Security Considerations: Risk of drift detection delays, reduced responsiveness, and slower model iteration. Infrastructure and Technology Constraints: Risk of drift detection delays and reduced responsiveness. Sampling Frequency: Risk of drift detection delays and reduced responsiveness. Change in Data Sources: Impedes timely issue identification, risk of drift detection delays, and slower model iteration.", "start_char_idx": 5421, "end_char_idx": 8174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "735bef37-1cc0-4400-886f-b6a698d8fb8a": {"__data__": {"id_": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "979d8852-deef-4e32-b16e-e3edfd902ebf", "node_type": "1", "metadata": {}, "hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "718de839-c6cd-4b80-96ae-723df437c85f", "node_type": "1", "metadata": {}, "hash": "497c05cee20cedea35bb6f5217d2308a9bdbd00435af051d3dd9f9697357f45c", "class_name": "RelatedNodeInfo"}, {"node_id": "348aca2f-2b7d-4075-a73c-7dd99279b3cc", "node_type": "1", "metadata": {}, "hash": "3f4f7a186c197799da5cfae21afceaff6f69b3ec6e9ae4e9e9d0564360dad4a9", "class_name": "RelatedNodeInfo"}, {"node_id": "803bcf49-0b5c-49b5-8f43-fba6bc3505a6", "node_type": "1", "metadata": {}, "hash": "127e40960faf8ca55bdf3b8f50534d32ccaccb046fae800b1816bd344804ad29", "class_name": "RelatedNodeInfo"}, {"node_id": "00846d48-b058-4e12-89dc-84785a74dcd5", "node_type": "1", "metadata": {}, "hash": "0524e778e4b9a1beef45e73523ec13eee67314b82613237b1c9a8342791277a8", "class_name": "RelatedNodeInfo"}, {"node_id": "e83713dc-98ae-40c0-a5a3-5318450166c9", "node_type": "1", "metadata": {}, "hash": "1e901b7cbd9cd39d5ae2ab32d068d2d2f764eb5b6aabe8dda21bb62596481336", "class_name": "RelatedNodeInfo"}]}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "text": "The following page discusses Data Drift Detection using Kolmogorov-Smirnov Test. This test compares the maximum vertical distance between the CDFs of two datasets. The test statistic is the maximum absolute difference between the CDFs. For example, let us say that we want to evaluate the potential data drift in the distribution of \u2018Attack\u2019 attribute values within Pok\u00e9mon datasets originating from generation 1 and 2. To use this test we do the following steps. ECDF Construction: It constructs empirical cumulative distribution functions (ECDFs) from the data. Calculating the KS Statistic (D): measures the maximum vertical difference between the two ECDFs. Hypothesis Testing: It tests whether the observed differences are statistically significant by comparing D to a critical value for a given significance level (e.g., alpha = 0.05). Interpretation: If D exceeds the critical value, it suggests different distributions, indicating data drift; if not, the distributions are considered similar.\n\nThe following page discusses Data Drift Detection using Kullback-Leibler (KL) divergence. This method is Utilized to ensure that input or output data in production doesn\u2019t drastically change from a baseline. For example, let us say that we want to determine whether there has been a significant change in the distribution of Pok\u00e9mon types. This is how we use KL divergence, define two probability distributions, P and Q, that you want to compare. P represents the reference distribution, and Q is the distribution you want to measure against it. If the distributions are continuous, you might need to discretize them into bins. For each bin or unique value in the sample space, calculate the KL Divergence between the corresponding probabilities in P and Q: KL(P || Q) = P(x) * log(P(x) / Q(x)). Once the KL divergence for each bin is calculated sum the KL values calculated for each bin/value to obtain the overall KL Divergence. A higher KL Divergence indicates a larger difference between the two distributions, while a lower value suggests a smaller difference.\n\nThe following page discusses Data Drift Detection using Population Stability Index (PSI). Essentially try and identify how much a population has shifted over time or between two different samples of a population in a single number.", "start_char_idx": 8182, "end_char_idx": 10482, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "979d8852-deef-4e32-b16e-e3edfd902ebf": {"__data__": {"id_": "979d8852-deef-4e32-b16e-e3edfd902ebf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "38f22fb1-4b4f-4961-808c-1caeba430163", "node_type": "1", "metadata": {}, "hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6e211404-5347-4e34-8b8a-66e60cdee37f", "node_type": "1", "metadata": {}, "hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "class_name": "RelatedNodeInfo"}]}, "hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "text": "For example, let us say that we want to evaluate the potential drift in the distribution of 'Defence' attribute values within Pok\u00e9mon datasets originating from generation 1 and 7. This is how we test data drift detection using PSI, first collect two datasets: the original training dataset (development) and a newer dataset (validation) for monitoring. Divide the data into bins or intervals based on a relevant variable. Typically, use the same binning strategy for both development and validation datasets. Calculate the number of observations (counts) in each bin for both datasets.", "start_char_idx": 10483, "end_char_idx": 11068, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26c87f96-fa3e-4816-b783-59e51995658c": {"__data__": {"id_": "26c87f96-fa3e-4816-b783-59e51995658c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "67c7ce57-c84e-4347-a604-7fbd24d3d925", "node_type": "1", "metadata": {}, "hash": "a7f7f6e7e26fda0384267df0a6485651d32fbca862b0d0381a7e0d32a40e5170", "class_name": "RelatedNodeInfo"}, {"node_id": "56246172-2064-47ad-8dee-5f36a84bc1b9", "node_type": "1", "metadata": {}, "hash": "5bee2dc0858a8e5ca3ff7fc61bfc19ac771a75a604bcc4468b9ae18e6f1b6993", "class_name": "RelatedNodeInfo"}, {"node_id": "c54495cf-b4a9-4f03-9d64-ab60741f1433", "node_type": "1", "metadata": {}, "hash": "1594879604dcdd97d52c27a4060b4f9dd2e7c4b50a1f89af71689dac41de16ce", "class_name": "RelatedNodeInfo"}, {"node_id": "e7d4af59-e7dc-4b38-adf7-71e75f3eff47", "node_type": "1", "metadata": {}, "hash": "20c690a3ba80698fab2305f3923eb358a97683951017ab69a21b37a26712041c", "class_name": "RelatedNodeInfo"}, {"node_id": "c74bb39b-a299-4315-87cd-57e881216bfb", "node_type": "1", "metadata": {}, "hash": "1edfd3ace231feeffe62bf230c0032f8cd176e020cebff683eba9e6025fc078a", "class_name": "RelatedNodeInfo"}]}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "text": "Calculate the number of observations (counts) in each bin for both datasets. Calculate percentage of observations in each bin relative to the total number of observations in the respective dataset. For each bin, compute, P_valid = Percentage observations in the validation dataset in a specification bin, P_dev = Positive percentage observations in the development dataset in the same bin, and PSI = sum[ (P_valid \u2013 P_dev) * ln(P_valid / P_dev) ]. Once P_valid, P_dev, and PSI are computed for each bin, add the PSI values for all bins to obtain an overall PSI score for the model. A low PSI indicates stability, while a high PSI suggests a significant distributional shift. Thus, a low PSI means low data drift, whereas high PSI means high data drift.\n\nThe following page discusses different Detection Methods that can be used for either data drift detection or concept drift detection. I will now write down the different methods as such: \u2018Method: yes/yes\u2019 where the first yes or no is if the method can be used for data drift detection and the second yes or no is for if the method can be used for concept drift detection. First we look through statistical tests. Kolmogorov-Smirnov Test: yes/no, Chi-Square Test: yes/no, Two-Sample T-Test: yes/no, Mann-Whitney U Test: yes/no, and KS-Statistic: yes/no. Next we look at Density Estimation methods. Kernel Density Estimation: yes/no, and Histogram-Based Methods: yes/no. Next we look at Distance-Based Methods. Wasserstein Distance: yes/no, Jensen-Shannon Distance: yes/yes, Earth Mover's Distance: yes/no, Mahalanobis Distance: yes/no, and Kullback-Leibler Divergence: yes/yes. For Ensemble Methods: yes/yes. Next we will look at  Drift Detection Frameworks. Drift Detection with Apache Kafka: yes/yes, Scikit-Multiflow (Python library): no/yes, Drift-Detection Stream Plugins (MOA): no/yes. Next we will look at supervised learning methods. Supervised Learning: yes/yes, Use classification models to detect drift: no/no,  and Monitor model performance metrics: yes/yes. Next we look at unsupervised learning methods.", "start_char_idx": 0, "end_char_idx": 2070, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f8ef14d-15ba-4c39-919b-64cf4b06481b": {"__data__": {"id_": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0577199e-ba4f-4dd0-a938-17a606d65366", "node_type": "1", "metadata": {}, "hash": "945b746e6badfd199ec09b5e144b6acf77ceda1e6173bb741d6b73dd93ba7a51", "class_name": "RelatedNodeInfo"}, {"node_id": "91f16057-f48a-4a89-9f86-ac8f7aa997f8", "node_type": "1", "metadata": {}, "hash": "8d8681bbbc032cf29f53ebd99c98bd336fd821007f421bf54e4445829b732fe7", "class_name": "RelatedNodeInfo"}, {"node_id": "19d5896a-fc97-445d-8681-dfd116765743", "node_type": "1", "metadata": {}, "hash": "3f54e662a8037aeebbaa63ec7500f4fdc1f56452add11eabdab32e986481040c", "class_name": "RelatedNodeInfo"}, {"node_id": "cc47862e-791b-459e-89e3-c699f515a0b7", "node_type": "1", "metadata": {}, "hash": "8624652c6eb38d042e1898049bc7892972f2369c481c924a3545a5786b68abef", "class_name": "RelatedNodeInfo"}, {"node_id": "c9088077-e2a5-4e99-a4a1-1ecab2da78f1", "node_type": "1", "metadata": {}, "hash": "6b73e3c46aef6167a81b74b60c8b14fc8ee92c71241c5c70688904ea586dba10", "class_name": "RelatedNodeInfo"}]}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "text": "Next we look at unsupervised learning methods. Unsupervised Learning: yes/yes, Clustering-Based Methods: yes/yes, and Outlier Detection Methods: yes/yes. Next we will look at time series analysis methods. Time Series Analysis: yes/yes, CUSUM (Cumulative Sum): yes/yes, Exponential Smoothing: yes/yes, and Time Series Forecasting Models: yes/yes. Finally, we look at domain-specific tests. Domain-Specific Tests: yes/yes, and Custom rules or heuristics: yes/yes.\n\nThe following page has two comic strips. The first comic strip is titled DOGBERT CONSULTS. There are three characters in this comic. Two humans and a dog. In the first panel the dog says, \u201cCustomer data is an asset that you can sell\u201d. In the second panel the says, \u201cIt\u2019s totally ethical because our customers would do the same thing to us if they could.\u201d. In the final panel, the dog says, \u201cIn phase one, we\u2019ll dehumanize the enemy by calling them \u2018DATA.\u2019\u201d. In the same panel, one of the humans says, \u201cSounds fair\u201d. In the second comic strip there are two human characters, one who is an employer and one who is the employee. In the first panel, the employee says, \u201cWe had a massive data breach, hackers got into the private data of all of our customers\u201d. In the second panel, the employer says, \u201cNo problem we\u2019ll issue a press release that says we\u2019re sorry and it will never happen again\u201d. In the final panel, the employee says, \u201cThat\u2019s what we said the last time three times it happened.\u201d. In this same panel, the employer replies, \u201cOur strategy is to wear them down\u201d. These are supposed to preview the next page which discusses the data protection and privacy regulations around the world.\n\nThe following page discusses Global Data Protection and Privacy Regulation. This is done using an image that shows a world map with regulation and enforcement going from darker to lower shades of red for heavy, robust, moderate, and limited data regulations. A few countries are highlighted. Canada (Heavily Regulated): Digital Privacy Act reforming PIPEDA (Personal Information and Protection and Electronic Documents Act). California (Heavily Regulated): CCPA (California Consumer Privacy Act).", "start_char_idx": 2024, "end_char_idx": 4177, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c1a1255-277e-419f-bf65-25a3c3bb79d3": {"__data__": {"id_": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d11a66c1-5a5a-4436-8e2e-95255d267a2d", "node_type": "1", "metadata": {}, "hash": "568631821462678a3a888a96ad8c1a74538e8878ab24f44661481635be3c64ce", "class_name": "RelatedNodeInfo"}, {"node_id": "a256d415-64c3-4020-a7ce-1ad5879da92a", "node_type": "1", "metadata": {}, "hash": "a3e2c381811fa09c87df382ab80afef2bf3a1f0fbe6acc5acd6dc33c44e74ef9", "class_name": "RelatedNodeInfo"}, {"node_id": "b1cb113b-ada4-4690-9734-f748fbd1ffa5", "node_type": "1", "metadata": {}, "hash": "46b52d15463d319527704bacf4b4158acc3c3b553d67041d8db73b02f1790cf7", "class_name": "RelatedNodeInfo"}, {"node_id": "60c55969-ff12-4dbf-8835-0e175450bebe", "node_type": "1", "metadata": {}, "hash": "266015b956a5c89dd114e70d0732c10e1a9b6e58d253f6754c98954bb149cca6", "class_name": "RelatedNodeInfo"}, {"node_id": "0288124d-9ec7-416b-b507-0d16b949ea40", "node_type": "1", "metadata": {}, "hash": "31307b3c5d0ec971ede8013aff1e283ff776d1cc219bfe2ea721be90c23069b0", "class_name": "RelatedNodeInfo"}]}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "text": "California (Heavily Regulated): CCPA (California Consumer Privacy Act). Brazil (Moderately Regulated): LGPD (General Data Protection Law). European Union (Heavily Regulated): ePrivacy Regulated and GDPR. South Africa (Moderately Regulated): POPIA (Protection of Personal Information Act). China (Heavily Regulated): PIS Standard (Personal Informatic Security Specification). India (Limited Regulation): PDPB (Person Data Protection Bill). New Zealand (Heavily Regulated): Privacy Bill 34-2. Thailand (Limited Regulation): PDPA (Personal Data Protection Act). Australia (Heavily Regulated): Privacy Act and Amendments.\n\nThe following page just has one comic strip. There are two characters one of whom is the employer while the other is the employee. In the first panel the employer tells the employee \u201cWally, I need you to head up our Artificial Intelligence Project\u201d. The second panel the employer tells the employee \u201cYou will have no budget and no hope of success, I just like saying we\u2019re working on AI\u201d. In the final panel, the employer tells the employee \u201cAnd you\u2019re completely useless, so it\u2019s a good match\u201d. In the same panel, the employee replies \u201cI won\u2019t let you down\u201d.\n\nThe following page discusses \u201cThe problem is that a single metric, such as classification accuracy, is an incomplete description of most real-world tasks\u201d. Introduction: In the realm of real-world tasks, relying solely on a singular metric, such as classification accuracy, often falls short in capturing the complexity of these tasks (Doshi-Velez and Kim, 2017). Understanding the significance of interpretability in machine learning models is crucial for comprehending, ensuring fairness, establishing trust, and addressing biases inherent in these systems. When Do We Need Interpretability? Human Curiosity and Learning: Satisfying human inquisitiveness and fostering learning through model transparency. Finding Meaning: Uncovering deeper insights and comprehending the reasoning behind model decisions. Bias Detection: Identifying and rectifying biases that might be embedded within the model's predictions. Social Acceptance: Gaining societal trust and acceptance by providing explanations for model outputs. Managing Social Interactions: Facilitating better human-computer interactions by making model decisions understandable. Use Cases for Interpretability: Decisions with Significant Impact: Cases where model decisions hold considerable consequences.", "start_char_idx": 4106, "end_char_idx": 6547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9": {"__data__": {"id_": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11d2fa45-8ced-449f-9b75-4adecdccd93a", "node_type": "1", "metadata": {}, "hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0ad48f78-7771-4ca9-973b-329de59c5957", "node_type": "1", "metadata": {}, "hash": "ccfe71cc948dabc44040dc752d4e54abe2e9b9d0852e71d9121ba6089bc9ad15", "class_name": "RelatedNodeInfo"}, {"node_id": "74c92e8d-c37d-4994-8f16-9774f830962a", "node_type": "1", "metadata": {}, "hash": "34f8f5193a26fc4a9d4de39e9ca96de22e8cd80d8e44598585ff81d4a8cb092e", "class_name": "RelatedNodeInfo"}, {"node_id": "f27c9074-b3b4-494f-a038-8868d8699e7c", "node_type": "1", "metadata": {}, "hash": "3b86cf6a443ae171dafa44f3f0b95133ef9dfc4bfe5e2f2c8bdfb21bfc43ddf3", "class_name": "RelatedNodeInfo"}, {"node_id": "d0d6d758-908a-46ad-9ac9-80eb23382aa3", "node_type": "1", "metadata": {}, "hash": "38485619a3e4bdce536743bf0c4a6b44a89b0df937fc758347c7ebc099f7a9fa", "class_name": "RelatedNodeInfo"}, {"node_id": "a49d4f32-31fb-46ed-8a07-b93a3dc20763", "node_type": "1", "metadata": {}, "hash": "259a9bb515d47ec90484d263d330ef920c34b27a426122b520db8182b0fc18d9", "class_name": "RelatedNodeInfo"}]}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "text": "Fairness and Non-Discrimination: Ensuring fairness and mitigating discriminatory outcomes. Privacy Protection: Safeguarding sensitive information while maintaining model performance. Reliability and Robustness: Enhancing model dependability and resilience. Causality Examination: Investigating cause-and-effect relationships within the model's decisions. Building Trust: Fostering trust among users by making the model's decision-making process transparent. When Interpretability May Not Be Necessary: Minimal Impact: Situations where the model's decisions have minimal repercussions. In low-impact, low-risk scenarios: Environments where the stakes are low, and risks are minimal. Well-Studied Problems: Instances where ample historical data and knowledge exist about the problem domain. Where ample experience exists: Domains where expertise and experience offer substantial understanding. Potential for Manipulation: Cases where interpretability might lead to misuse or manipulation of the model's outcomes. Conclusion: Interpretability in machine learning models stands as a pillar for promoting comprehension, fairness, trust, and bias mitigation. Its necessity, however, is context-dependent, contingent upon the potential impact of the model's decisions. Understanding this balance is crucial in harnessing the power of interpretable machine learning models.\n\nThis is the final page. It says thanks to the reader for finishing the topic.\n\nThree Levels of ML Software\nML/AI is rapidly adopted by new applications and industries. As al\u2010\nready been mentioned, the goal of a machine learning project is to\nbuild a statistical model by using collected data and applying ma\u2010\nchine learning algorithms. Yet building successful ML-based soft\u2010\nware projects is still difficult because every ML-based software\nneeds to manage three main assets: Data, Model, and Code.\nMachine Learning Model Operationalization Management - MLOps,\nas a DevOps extension, establishes effective practices and processes\naround designing, building, and deploying ML models into production.\nWe describe here essential technical methodologies, which are in\u2010\nvolved in the development of the Machine Learning-based software,\nnamely Data Engineering, ML Model Engineering, and Software\nRelease Engineering.\nWe recommend documenting everything you have learned in each\nstep of the whole pipeline.\nData: Data Engineering Pipelines\nWe mentioned previously that the fundamental part of any machine\nlearning workflow is Data. Collecting good data sets has a huge im\u2010\npact on the quality and performance of the ML model.", "start_char_idx": 6548, "end_char_idx": 9133, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11d2fa45-8ced-449f-9b75-4adecdccd93a": {"__data__": {"id_": "11d2fa45-8ced-449f-9b75-4adecdccd93a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c", "node_type": "1", "metadata": {}, "hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "61563d53-dbfa-471f-928f-453d993edecd", "node_type": "1", "metadata": {}, "hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "class_name": "RelatedNodeInfo"}]}, "hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "text": "The famous\ncitation\n\u201cGarbage In, Garbage Out\u201d,\nin the machine learning context means that the ML model is only as\ngood as your data. Therefore, the data, which has been used for\ntraining of the ML model, indirectly influence the overall perfor\u2010\nmance of the production system.", "start_char_idx": 9134, "end_char_idx": 9410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d85cc9e6-7cd9-4481-90c2-203747d5332f": {"__data__": {"id_": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6f8d0612-7b8a-495e-b432-848449530ef5", "node_type": "1", "metadata": {}, "hash": "204c9d6ecb68f3b262c5689d862b896210e33520392d98a0a1db7d3a9106bd8c", "class_name": "RelatedNodeInfo"}, {"node_id": "3efac0a4-63b4-45b6-b3b7-8e7d63726cf4", "node_type": "1", "metadata": {}, "hash": "761aa3bdf92cc4a16caf898afe07d7414ba29909c0441d2087d208b5d4653e23", "class_name": "RelatedNodeInfo"}, {"node_id": "ebbdf27d-9fb0-4b40-bb22-e70ee50c1266", "node_type": "1", "metadata": {}, "hash": "9d7628d7510bc7593fc0bb26baa70e9cde079dbc93a6895fcb0718eb36d449da", "class_name": "RelatedNodeInfo"}, {"node_id": "c9fcd2be-9aec-4972-8fcf-7a0c3aa810e1", "node_type": "1", "metadata": {}, "hash": "0c84dc25e7ee06b94595d4e012839a5e64ce7a7e730d879effb08cce154c1e3a", "class_name": "RelatedNodeInfo"}, {"node_id": "11217679-d58e-465a-8483-cb4e02b195c0", "node_type": "1", "metadata": {}, "hash": "bbc3faefbf2772b4f6c6139abf0fc4f1830c048181cbce90b120632281e8165f", "class_name": "RelatedNodeInfo"}, {"node_id": "1d0ed90d-1427-47d1-9177-3950b71ff790", "node_type": "1", "metadata": {}, "hash": "060265547acb354c024ca50e5cbd836b47cd2de762319cc7c06c927d19026e5b", "class_name": "RelatedNodeInfo"}]}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "text": "The amount and quality of the\ndata set are usually problem-specific and can be empirically\ndiscovered.\nBeing an important step, data engineering is reported as heavily\ntime-consuming. We might spend the majority of time on a machine\nlearning project constructing data sets, cleaning, and transforming\ndata.\nThe data engineering pipeline includes a sequence of operations on\nthe available data. The final goal of these operations is to create\ntraining and testing datasets for the ML algorithms. In the following,\nwe describe each stage of the data engineering pipeline such as\nData Ingestion, Exploration and Validation, Data Wrangling\n(Cleaning), and Data Splitting.\nData Ingestion\nData Ingestion - Collecting data by using various systems, frame\u2010\nworks and formats, such as internal/external databases, data\nmarts, OLAP cubes, data warehouses, OLTP systems, Spark, HDFSBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\netc. This step might also include synthetic data generation or data\nenrichment The best practices for this step include the following ac\u2010\ntions that should be maximally automated:\nData Sources Identification: Find the data and document its ori\u2010\ngin (data provenance).\nSpace Estimation: Check how much storage space it will take.\nSpace Location: Create a workspace with enough storage space.\nObtaining Data: Get the data and convert them to a format that\ncan be easily manipulated without changing the data itself.\nBack up Data: Always work on a copy of the data and keep the\noriginal dataset untouched.\nPrivacy Compliance: Ensure sensitive information is deleted or\nprotected (e.g., anonymized) to ensure GDPR compliance.\nMetadata Catalog: Start documenting the metadata of the\ndataset by recording the basic information about the size, for\u2010\nmat, aliases, last modified time, and access control lists. (Further\nreading)\nTest Data: Sample a test set, put it aside, and never look at it to\navoid the \u201cdata snooping\u201d bias. You fell for this if you are select\u2010\ning a particular kind of ML model by using the test set. This will\nlead to an ML model selection that is too optimistic and will not\nperform well in production.\nExploration and Validation\nExploration and Validation - Includes data profiling to obtain infor\u2010\nmation about the content and structure of the data.", "start_char_idx": 0, "end_char_idx": 2337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cb911ed-dec2-422d-a13c-15dce190ad98": {"__data__": {"id_": "4cb911ed-dec2-422d-a13c-15dce190ad98", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "f07d1bdc-dcea-449e-bb8f-c05682e20beb", "node_type": "1", "metadata": {}, "hash": "ba935ef972985ab619daa95cc81bab4e766cbc3a05a9c60a2f801d56b2e6ff31", "class_name": "RelatedNodeInfo"}, {"node_id": "ae5410e4-388d-4797-b322-5c3738c20f8b", "node_type": "1", "metadata": {}, "hash": "89990828963492ffa996c6cc67ef0fb1cbdd0431371653f96ef7c15fb95eefb8", "class_name": "RelatedNodeInfo"}, {"node_id": "bc2b1699-3321-498a-81a6-9f48719637f5", "node_type": "1", "metadata": {}, "hash": "a97aee935ca13e4530970dbbc281d96b4bded7ba17f59901434f92f002e5a425", "class_name": "RelatedNodeInfo"}, {"node_id": "2fadb8e5-0985-44d1-bf4c-439d02261b8a", "node_type": "1", "metadata": {}, "hash": "8638bdf7dd2c9e62821f07c085d45c0284c9fae816c45361c51bf4452a19a53f", "class_name": "RelatedNodeInfo"}, {"node_id": "bf60b907-e849-4d2a-bed9-a51e6c7ac729", "node_type": "1", "metadata": {}, "hash": "85916773dc8d368ad522ad029d01e438e37f9a6ed9a15bc81085c1f6830c0fdf", "class_name": "RelatedNodeInfo"}]}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "text": "The output of\nthis step is a set of metadata, such as max, min, avg of values. Data\nvalidation operations are user-defined error detection functions,\nwhich scan the dataset to spot some errors. The validation is a\nprocess of assessing the quality of the data by running dataset vali\u2010\ndation routines (error detection methods). For example, for \u201cad\u2010\ndress\u201d-attributes, are the address components consistent? Is the\ncorrect postal code associated with the address? Are there missing\nvalues in the relevant attributes? The best practices for this step in\u2010\nclude the following actions:\nUse RAD tools: Using Jupyter notebooks is a good way to keep\nrecords of data exploration and experimentation.\nAttribute Profiling: Obtain and document the metadata about\neach attribute, such as\nName\nNumber of Records\nData Type (categorical, numerical, int/float, text, structured,\netc.)\nNumerical Measures (min, max, avg, median, etc. for numeri\u2010\ncal data)\nAmount of missing values (or \u201cmissing value ratio\u201d = Number\nof absent values/ Number of records)\nType of distribution (Gaussian, uniform, logarithmic, etc.)Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nLabel Attribute Identification: For supervised learning tasks, iden\u2010\ntify the target attribute(s).\nData Visualization: Build a visual representation for value\ndistribution.\nAttributes Correlation: Compute and analyze the correlations be\u2010\ntween attributes.\nAdditional Data: Identify data that would be useful for building\nthe model (go back to \u201cData Ingestion\u201d).\nData Wrangling (Cleaning)\nData Wrangling (Cleaning) - Data preparation step where we pro\u2010\ngrammatically wrangle data, e.g., by re-formatting or re-structuring\nparticular attributes that might change the form of the data\u2019s\nschema. We recommend writing scripts or functions for all data\ntransformations in the data pipeline to re-use all these functionali\u2010\nties on future data.\nTransformations: Identify the promising transformations you\nmay want to apply.\nOutliers: Fix or remove outliers (optional).\nMissing Values: Fill in missing values (e.g., with zero, mean, me\u2010\ndian) or drop their rows or columns.\nNot relevant Data: Drop the attributes that provide no useful in\u2010\nformation for the task (relevant for feature engineering).", "start_char_idx": 2338, "end_char_idx": 4623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6e4bcc9-596e-4d62-81ff-c43577daed77": {"__data__": {"id_": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "42c5463d-3edb-4487-a266-6d75f5f75a42", "node_type": "1", "metadata": {}, "hash": "f0197b6aa0f9b25f2ad3c9547c673f194d4229792871905e35174e0f4abdf56a", "class_name": "RelatedNodeInfo"}, {"node_id": "03387317-48f3-479e-97e1-8bf14b82411c", "node_type": "1", "metadata": {}, "hash": "81d271fb3d23b41ebe6fa7ea22670246ddcfeb99856e904009441c04175def0b", "class_name": "RelatedNodeInfo"}, {"node_id": "0f5ce71b-d34e-469a-8960-561329a4356e", "node_type": "1", "metadata": {}, "hash": "78f4343ef1004ae4280594ff0ea152dee4aedf5a0e39534f04f43c6abffdc7ca", "class_name": "RelatedNodeInfo"}, {"node_id": "18c1b723-e724-4f69-b3c9-3d6f1b257dcb", "node_type": "1", "metadata": {}, "hash": "373f55e319a325a3e4c0986d6132c766f4eb32b2f37226416da0647ac3c41ddd", "class_name": "RelatedNodeInfo"}, {"node_id": "7ac46e1a-7f09-4ce1-b9ef-3378ce3c5a91", "node_type": "1", "metadata": {}, "hash": "a47426569062d022f1dabb361e12856eba3e6c335764b020b3cba7fbcb326e79", "class_name": "RelatedNodeInfo"}, {"node_id": "33b2ea32-a369-4ed3-ae4b-083d94792b92", "node_type": "1", "metadata": {}, "hash": "65e4349c6ca4b51b58eadea74d35454b63bd88669e66f7241af0daeaf10a72b8", "class_name": "RelatedNodeInfo"}]}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "text": "Restructure Data: Might include the following operations (from\nthe book \u201cPrinciples of Data Wrangling\u201d)\nReordering record fields by moving columns\nCreating new record fields through extracting values\nCombining multiple record fields into a single record field\nFiltering datasets by removing sets of records\nShifting the granularity of the dataset and the fields associ\u2010\nated with records through aggregations and pivots.\nData Splitting\nData Splitting - Splitting the data into training (80 %), validation,\nand test datasets to be used during the core machine learning\nstages to produce the ML model.\nModel: Machine Learning Pipelines\nThe core of the ML workflow is the phase of writing and executing\nmachine learning algorithms to obtain an ML model. The model engi\u2010\nneering pipeline is usually utilized by a data science team and in\u2010\ncludes a number of operations that lead to a final model. These op\u2010\nerations include Model Training, Model Evaluation, Model Testing,\nand Model Packaging. We recommend automating these steps as\nmuch as possible.\nModel TrainingBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nModel Training - The process of applying the machine learning algo\u2010\nrithm on training data to train an ML model. It also includes feature\nengineering the hyperparameter tuning for the model training activ\u2010\nity. The following list is adopted from \u201cHands-On Machine Learning\nwith Scikit-Learn, Keras, and TensorFlow\u201d by Aur\u00e9lien G\u00e9ron\nFeature engineering might include:\nDiscretize continuous features\nDecompose features (e.g., categorical, date/time, etc.)\nAdd transformations of features (e.g., log(x), sqrt(x), x2, etc.)\nAggregate features into promising new features\nFeature scaling: Standardize or normalize features\nNew features should be added quickly to get fast from a fea\u2010\nture idea to the feature running in production. Further reading\n\u201cFeature Engineering for Machine Learning. Principles and\nTechniques for Data Scientists\u201d by Alice Zheng, Amanda\nCasari\nModel Engineering might be an iterative process and include the\nfollowing workflow:\nEvery ML model specification (code that creates an ML\nmodel) should go through a code review and be versioned.", "start_char_idx": 4624, "end_char_idx": 6843, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15a861a5-591a-42ed-85e7-dfb2baa70eb9": {"__data__": {"id_": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b384836f-88bc-4aa2-8535-0aba633151b1", "node_type": "1", "metadata": {}, "hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2873b237-50a2-404f-a5b9-b3182ae6a93d", "node_type": "1", "metadata": {}, "hash": "2829c545a08b666fa7034eaf492222b3094956100191d7dd5c8439939bb01d9e", "class_name": "RelatedNodeInfo"}, {"node_id": "9ab93845-3810-4ab7-924d-4579965c4ea7", "node_type": "1", "metadata": {}, "hash": "57618041de78412d21e7994c70cc63d7db8221f15d26d7351cd0d4e403ea3d7e", "class_name": "RelatedNodeInfo"}, {"node_id": "b87ffb98-0f67-49f7-a5b7-e08642a88344", "node_type": "1", "metadata": {}, "hash": "6bc331d97ffc5cb935d1efde2a1e6324edd3dc230322db3f90097f1a7b32f5fe", "class_name": "RelatedNodeInfo"}, {"node_id": "f7efc4b8-c791-4125-8962-6bd68f325ab4", "node_type": "1", "metadata": {}, "hash": "ba9ae8748633ae093de0567e32e945f14f8501d0823e93a54a7f29f06935a9a7", "class_name": "RelatedNodeInfo"}, {"node_id": "dc143671-3bdb-442f-bca6-0141c49597e7", "node_type": "1", "metadata": {}, "hash": "583041c72959afd17ad6af6bb04e9c3f35a58eb372f3e48648f68839e13ec7ab", "class_name": "RelatedNodeInfo"}]}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "text": "Train many ML models from different categories (e.g., linear\nregression, logistic regression, k-means, naive Bayes, SVM,\nRandom Forest, etc.) using standard parameters.\nMeasure and compare their performance. For each model, use\nN-fold cross-validation and compute the mean and standard\ndeviation of the performance measure on the N folds.\nError Analysis: analyze the types of errors the ML models\nmake.\nConsider further feature selection and engineering.\nIdentify the top three to five most promising models, prefer\u2010\nring models that make different types of errors.\nHyperparameters tuning by using cross-validation. Please\nnote that data transformation choices are also hyperparame\u2010\nters. Random search for hyperparameters is preferred over\ngrid search.\nConsider Ensemble methods such as majority vote, bagging,\nboosting, or stacking. Combining ML models should produce\nbetter performance than running them individually. (Further\nreading \u201cEnsemble Methods: Foundations and Algorithms\u201d by\nZhi-Hua Zhou)\nModel Evaluation\nModel Evaluation - Validate the trained model to ensure it meets\noriginal business objectives before serving the ML model in produc\u2010\ntion to the end-user.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nModel Testing\nModel Testing - Once the final ML model is trained, its performance\nneeds to be measured by using the hold-back test dataset to esti\u2010\nmate the generalization error by performing the final \u201cModel\nAcceptance Test\u201d.\nModel Packaging\nModel Packaging - The process of exporting the final ML model into\na specific format (e.g. PMML , PFA, or ONNX), which describes the\nmodel to be consumed by the business application. We cover the ML\nmodel packaging in the part \u2018ML Model serialization formats\u2019 below.\nDifferent forms of ML workflows\nOperating an ML model might assume several architectural styles. In\nthe following, we discuss four architectural patterns which are clas\u2010\nsified along two dimensions:\n1. ML Model Training and\n2. ML Model Prediction\nPlease note that for the sake of simplicity, we disregard the third di\u2010\nmension 3. ML Model Type, which denotes the type of machine learn\u2010\ning algorithm such as supervised, unsupervised, semisupervised, and\nReinforcement Learning.", "start_char_idx": 6844, "end_char_idx": 9104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b384836f-88bc-4aa2-8535-0aba633151b1": {"__data__": {"id_": "b384836f-88bc-4aa2-8535-0aba633151b1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "14b15cf5-022e-4216-bf3f-b3974574f833", "node_type": "1", "metadata": {}, "hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "caeaa5c9-ba58-4383-8799-217e673db756", "node_type": "1", "metadata": {}, "hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "class_name": "RelatedNodeInfo"}]}, "hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "text": "There are two ways how we perform ML Model Training:\n1Offline learning (aka batch or static learning): The model is\ntrained on a set of already collected data.", "start_char_idx": 9105, "end_char_idx": 9264, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8212e847-90ca-4688-b6e0-e95181ddf3a1": {"__data__": {"id_": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7d8e3982-1435-4d8e-91b3-84a8d006dcd8", "node_type": "1", "metadata": {}, "hash": "5b6daa1cf1930b3ccda545904a2ad95d26fd707da952874d1894411559f98777", "class_name": "RelatedNodeInfo"}, {"node_id": "ace8cbf6-ae5c-4b81-a5b8-17ca7b742faa", "node_type": "1", "metadata": {}, "hash": "9e6f8a5528d11619411448f052d81a9225f2d732fbe1258f56629ed069874eaf", "class_name": "RelatedNodeInfo"}, {"node_id": "130996ca-43b7-494d-adee-fef6b4000d9c", "node_type": "1", "metadata": {}, "hash": "0615c98bfd4f24e7cfe1fe7eaecafc04e87e68cc9d302e8126d7df97b2c65ee2", "class_name": "RelatedNodeInfo"}, {"node_id": "1c898484-1725-4fb0-99b2-c258e3eeb3bd", "node_type": "1", "metadata": {}, "hash": "8f091ab43e2239ec7b9e514a70d427b5b94ea0f16f06f2e6f5299725217388e6", "class_name": "RelatedNodeInfo"}, {"node_id": "4e53b794-cab5-4b6e-9041-1f0c4cf2bf1d", "node_type": "1", "metadata": {}, "hash": "77f5e5190c67304a55201dc074a252973897f5f98a6fc113cafffe6fa7aaa7fd", "class_name": "RelatedNodeInfo"}]}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "text": "After deploying to the\nproduction environment, the ML model remains constant until it\nre-trained because the model will see a lot of real-live data and\nbecomes stale. This phenomenon is called \u2018model decay\u2019 and\nshould be carefully monitored.\n2Online learning (aka dynamic learning): The model is regularly be\u2010\ning re-trained as new data arrives, e.g. as data streams. This is\nusually the case for ML systems that use time-series data, such as\nsensor, or stock trading data to accommodate the temporal ef\u2010\nfects in the ML model.\nThe second dimension is ML Model Prediction, which denotes the me\u2010\nchanics of the ML model to makes predictions. Here we also distin\u2010\nguish two modes:\n1Batch predictions: The deployed ML model makes a set of predic\u2010\ntions based on historical input data. This is often sufficient for\ndata that is not time-dependent, or when it is not critical to ob\u2010\ntain real-time predictions as output.\n2Real-time predictions (aka on-demand predictions): Predictions\nare generated in real-time using the input data that is available\nat the time of the request.\nAfter identifying these two dimensions, we can classify the opera\u2010\ntionalization of machine learning models into four ML architectureBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\npatterns:\nFigure source\nIn the following, we present a description of the model architectural\npatterns such as Forecast, Web-Service, Online Learning, and\nAutoML.\nForecast\nThis type of machine learning workflow is widely spread in academic\nresearch or data science education (e.g., Kaggle or DataCamp). This\nform is used to experiment with ML algorithms and data as it is the\neasiest way to create a machine learning system. Usually, we take an\navailable dataset, train the ML model, then run this model on an\u2010\nother (mostly historical) data, and the ML model makes predictions.\nThis way, we output a forecast. This ML workflow is not very useful\nand, therefore, not common in an industry setting for production\nsystems (e.g. mobile applications).\nWeb-Service\nThe most commonly described deployment architecture for ML mod\u2010\nels is a web service (microservise). The web service takes input data\nand outputs a prediction for the input data points.", "start_char_idx": 0, "end_char_idx": 2252, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bcbe1df8-d675-4abe-8d15-92624af70bc4": {"__data__": {"id_": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ddf406d9-928a-425c-8325-dd91b7d366a4", "node_type": "1", "metadata": {}, "hash": "56ad4975ba8cab0521ce20d75f2057a3adcf2bb86647cca36eb6f88884701424", "class_name": "RelatedNodeInfo"}, {"node_id": "bbc78b89-775e-4c28-9a14-ed9c5f1422f9", "node_type": "1", "metadata": {}, "hash": "c32e46e1cb3101c55b4ee2de2d496402ea9ca8f36b46c41ed1940b33c82b71d4", "class_name": "RelatedNodeInfo"}, {"node_id": "6ff47426-6103-4403-9cb0-00307e504431", "node_type": "1", "metadata": {}, "hash": "31762703d3771224ea04474ccf5b59c5f6d955fa37fc939f5e6b4317022d1b4a", "class_name": "RelatedNodeInfo"}, {"node_id": "a54cf6cc-cce6-4dfc-ab0d-c8532fb53740", "node_type": "1", "metadata": {}, "hash": "b1e044181c6e1ed4c696fd4382d6c29599eed0fa6f75337d495d40075a23eeba", "class_name": "RelatedNodeInfo"}, {"node_id": "375e50bc-39d5-4b0b-b7cb-2c61ce33f547", "node_type": "1", "metadata": {}, "hash": "dfd85861f36b2621f01af59b8dbc0dd4fc44e17cc0bce2f31431699b6f8c152f", "class_name": "RelatedNodeInfo"}]}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "text": "The web service takes input data\nand outputs a prediction for the input data points. The model is\ntrained offline on historical data, but it uses real-live data to make\npredictions. The difference from a forecast (batch predictions) is\nthat the ML model runs near real-time and handles a single record at\na time instead of processing all the data at once. The web service\nuses real-time data to make predictions, but the model remains con\u2010\nstant until it is re-trained and re-deployed into the production\nsystem.\nThe figure below illustrates the architecture for wrapping trained\nmodels as deployable services. Please note, we discuss methods for\nwrapping trained ML models as deployable services in the\nDeployment Strategies Section.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nOnline Learning\nThe most dynamic way to embed machine learning into a production\nsystem is to implement online learning, which is also known as real-\ntime streaming analytics. Please note that online learning can be a\nconfusing name because the core learning or ML model training is\nusually not performed on the live system. We should call it incremen\u2010\ntal learning; however, the term online learning is already established\nwithin the ML community.\nIn this type of ML workflow, the ML learning algorithm is continu\u2010\nously receiving a data stream, either as single data points or in small\ngroups called mini-batches. The system learns about new data on\nthe fly as it arrives, so the ML model is incrementally being re-\ntrained with new data. This continually re-trained model is instantly\navailable as a web service.\nTechnically, this type of ML system works well with the lambda ar\u2010\nchitecture in big data systems. Usually, the input data is a stream of\nevents, and the ML model takes the data as it enters the system,\nprovides predictions and re-learns on these new data. The model\nwould typically run as a service on a Kubernetes cluster or similar.\nA big difficulty with the online learning system in production is that if\nbad data is entering the system, the ML model, as well as the whole\nsystem performance, will increasingly decline.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nFigure Source\nAutoML\nAn even more sophisticated version of online learning is automated\nmachine learning or AutoML.", "start_char_idx": 2168, "end_char_idx": 4558, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e672703-bba4-4f1e-9e3b-379fc6fe65c5": {"__data__": {"id_": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "094e3db7-6011-4382-a5ae-f6def0737c12", "node_type": "1", "metadata": {}, "hash": "e748b228c2f5c6bb0a2e023b575c35884411150af4fc7c0093fb833ceb508a24", "class_name": "RelatedNodeInfo"}, {"node_id": "56092edb-3c14-422d-959e-1c0e73dcf4ed", "node_type": "1", "metadata": {}, "hash": "203e5bbdfa0220fad2e096c8e599aed1c918c9cedc3420ca795887381f8e5f7e", "class_name": "RelatedNodeInfo"}, {"node_id": "0ff2c95e-1eff-426d-8571-93b49341fd17", "node_type": "1", "metadata": {}, "hash": "b2bf2763f91d8fac94236c21cdecfd6671b1a05602883d615125fc43dbac2a44", "class_name": "RelatedNodeInfo"}, {"node_id": "1e3216bc-6c08-4f8c-99f3-fb5ddf46744d", "node_type": "1", "metadata": {}, "hash": "75e5f207a7373cfbbf90a4f3816254b722d819934440813e05e9f673393084f5", "class_name": "RelatedNodeInfo"}, {"node_id": "4f316f1f-32e1-486d-8fb9-0f9388cd42db", "node_type": "1", "metadata": {}, "hash": "be9320872547a92bd52327090099aeb1a5fb871c77e527b1c6c85b0cf4001ddd", "class_name": "RelatedNodeInfo"}]}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "text": "AutoML is getting a lot of attention and is considered the next ad\u2010\nvance for enterprise ML. AutoML promises training ML models with\nminimal effort and without machine learning expertise. The user\nneeds to provide data, and the AutoML system automatically selects\nan ML algorithm, such as neural network architecture, and config\u2010\nures the selected algorithm.\nInstead of updating the model, we execute an entire ML model train\u2010\ning pipeline in production that results in new models on the fly. For\nnow, this is a very experimental way to implement ML workflows.\nAutoML is usually provided by big cloud providers, such as Google or\nMS Azure. However, models build with AutoML need to reach the\nlevel of accuracy required for real-world success.\nFurther readi ng\nAutoML: Overview and Tools\nAutoML Benchmark\nML Model serialization formats\nThere are various formats to distribute ML models. In order to\nachieve a distributable format, the ML model should be present and\nshould be executable as an independent asset. For example, we\nmight want to use a Scikit-learn model in a Spark job. This means\nthat the ML models should work outside of the model-training envi\u2010\nronment. In the following, we describe Language-agnostic and\nVendor-specific exchange formats for ML models.\nLanguage-agnostic exchange formats\nAmalgamation is the simplest way to export an ML model. The\nmodel and all necessary code to run are bundled as one package.\nUsually, it is a single source code file that can be compiled on\nnearly any platform as a standalone program. For example, we\ncan create a standalone version of an ML model by using\nSKompiler. This python package provides a tool for transforming\ntrained Scikit-learn models into other forms, such as SQL queries,\nExcel formulas, Portable Format for Analytics (PFA) files, or\nSymPy expressions. The last can be translated to code in a variety\nof languages, such as C, Javascript, Rust, Julia, etc.\nAmalgamation is a straightforward concept, and the exported\nML models are portable. With some easy ML algorithms, such as\nlogistic regression or decision tree, this format is compact and\nmight have good performance, which is useful for constrained\nembedded environments. However, the ML model code and pa\u2010\nrameters need to be managed together.", "start_char_idx": 4559, "end_char_idx": 6827, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87ee291c-72d0-47ed-9d5a-9a2edcd579e5": {"__data__": {"id_": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "821dbc59-27a8-42a7-a88a-a52095ea2a16", "node_type": "1", "metadata": {}, "hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4db9cb2c-14e1-4c4d-8e01-ca94bd87ce95", "node_type": "1", "metadata": {}, "hash": "8f8d4eb92726ac73cf7ce8c8bd3cf2e97c3b4372b0a6405511891e6bfa301b26", "class_name": "RelatedNodeInfo"}, {"node_id": "2f564de1-1d5e-4c71-a70d-e5610bf88a51", "node_type": "1", "metadata": {}, "hash": "9d82d50c0bdd159afdbb2c9743b4f189cee424bec4ee5b6a61f14ba91e6ff5d9", "class_name": "RelatedNodeInfo"}, {"node_id": "dcbdde15-623c-45d9-9beb-dde9c0ffb196", "node_type": "1", "metadata": {}, "hash": "7f8dadb31dec6bde840a8bf0e9979ada8ef6b13bfcf4f08ab12947b2d771360a", "class_name": "RelatedNodeInfo"}, {"node_id": "e9512d88-2aec-436c-a314-fb932aaa84bb", "node_type": "1", "metadata": {}, "hash": "5b30a29872ded857557a048f865a765709de3f47db78d9a58cf9d97bd87c3ad6", "class_name": "RelatedNodeInfo"}, {"node_id": "0ae7c6e2-8b2e-4f19-9244-371ef3906376", "node_type": "1", "metadata": {}, "hash": "c31429f733fee91af7ff3563857491cb25fc6df2bbcf21b6fd72e04df2bf0985", "class_name": "RelatedNodeInfo"}]}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "text": "However, the ML model code and pa\u2010\nrameters need to be managed together.\nPMML is a format for model serving based on XML with the file\nextension .pmml. PMML has been standardized by the Data\nMining Group (DMG) . Basically, .ppml describes a model and\npipeline in XML . The PMML supports not all of the ML algorithms,Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nand its usage in open source-driven tools is limited due to licens\u2010\ning issues.\nPFA (Portable Format for Analytics) is designed as a replacement\nfor PMML. From DMG: \u201cA PFA document is a string of JSON-for\u2010\nmatted text that describes an executable called a scoring engine.\nEach engine has a well-defined input, a well-defined output, and\nfunctions for combining inputs to construct the output in an ex\u2010\npression-centric syntax tree\u201d. PFA capabilities include (1) control\nstructures, such as conditionals, loops, and user-defined func\u2010\ntions, (2) expressed within JSON, and can, therefore, be easily\ngenerated and manipulated by other programs, (3) fine-grained\nfunction library supporting extensibility callbacks. To run ML\nmodels as PFA files, we will need a PFA-enabled environment.\nONNX (Open Neural Network eXchange) is an ML framework in\u2010\ndependent file format. ONNX was created to allow any ML tool\nto share a single model format. This format is supported by many\nbig tech companies such as Microsoft, Facebook, and Amazon.\nOnce the ML model is serialized in the ONNX format, it can be\nconsumed by onnx-enabled runtime libraries (also called inference\nengines) and then make predictions. Here you will find the list of\ntools that can use ONNX format. Notably that most deep learn\u2010\ning tools have ONNX support.\nSource: Open Standard Models\nVendor-specific exchange formats\nScikit-Learn saves models as pickled python objects, with a .pkl\nfile extension.\nH2O allows you to convert the models you have built to either\nPOJO (Plain Old Java Object) or MOJO (Model Object,\nOptimized).\nSparkML models that can be saved in the MLeap file format and\nserved in real-time using an MLeap model server.", "start_char_idx": 6755, "end_char_idx": 8865, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "821dbc59-27a8-42a7-a88a-a52095ea2a16": {"__data__": {"id_": "821dbc59-27a8-42a7-a88a-a52095ea2a16", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "node_type": "1", "metadata": {}, "hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c661d886-7f8b-4f03-af5a-7fd9fee6b1fe", "node_type": "1", "metadata": {}, "hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "class_name": "RelatedNodeInfo"}]}, "hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "text": "The MLeap run\u2010\ntime is a JAR that can run in any Java application.MLeap sup\u2010\nports Spark, Scikit-learn, and Tensorflow for training pipelines\nand exporting them to an MLeap Bundle.", "start_char_idx": 8866, "end_char_idx": 9046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c098625d-e8a7-41a5-abae-3bba4ea9de78": {"__data__": {"id_": "c098625d-e8a7-41a5-abae-3bba4ea9de78", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7714117d-bef8-4fe8-a3bd-0bc726f35583", "node_type": "1", "metadata": {}, "hash": "253673d2dcadb9365ad155d5377775bd7031a8432a93a15656a6ffa76cd8b31e", "class_name": "RelatedNodeInfo"}, {"node_id": "d0112c5b-7c32-479a-97bd-9438fa1771d3", "node_type": "1", "metadata": {}, "hash": "7b7425daef3fe465d8f3c5a6499b5fba97da35dd586f4d38d723ae8359089afe", "class_name": "RelatedNodeInfo"}]}, "hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "text": "TensorFlow saves models as .pb files; which is the protocol buffer\nfiles extension.\nPyTorch serves models by using their proprietary Torch Script as\na .pt file. Their model format can be served from a C\u2013 application.\nKeras saves a model as a .h5 file, which is known in the scientific\ncommunity as a data file saved in the Hierarchical Data Format\n(HDF). This type of file contains multidimensional arrays of data.\nApple has its proprietary file format with the extension .mlmodel\nto store models embedded in iOS applications. The Core ML\nframework has native support for Objective-C and Swift pro\u2010\ngramming languages. Applications trained in other ML frame\u2010\nworks, such as TensorFlow, Scikit-Learn, and other frameworks\nneed to use tools like such as coremltools and Tensorflow con\u2010\nverter to translate their ML model files to the .mlmodel format\nfor use on iOS.", "start_char_idx": 0, "end_char_idx": 863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4": {"__data__": {"id_": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78", "node_type": "1", "metadata": {}, "hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4bb71919-2013-4728-9dc2-57182a1771af", "node_type": "1", "metadata": {}, "hash": "868db532fe6626fc73a22677b5e473fe612a8f4ef656b375773ae86c10cc2864", "class_name": "RelatedNodeInfo"}, {"node_id": "960ab783-6d27-45f7-a6be-49f2e7532c9a", "node_type": "1", "metadata": {}, "hash": "0c0932ce5678c76c3f742a86388f8fb76ac2f18ed0a40be1b74026a90c388194", "class_name": "RelatedNodeInfo"}, {"node_id": "4d093e52-87c9-46b7-b75d-1ace03bf599b", "node_type": "1", "metadata": {}, "hash": "fa3d74a139ad95f17a1090172fa69dceb36bfe6985d90e06635dfc0d85e98377", "class_name": "RelatedNodeInfo"}, {"node_id": "e0c03fe3-060a-4782-a41f-e4b6ffbc3251", "node_type": "1", "metadata": {}, "hash": "7722572cb670296a38ab19f11d3b3049ed39f96e3fbb3a01024f4da48f17332a", "class_name": "RelatedNodeInfo"}, {"node_id": "b401a653-d593-42d5-9243-5d83093798f3", "node_type": "1", "metadata": {}, "hash": "ad046583165c91038276fcf0b9096f785d47166b2b3e407d3c9fde3391ef37cd", "class_name": "RelatedNodeInfo"}]}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "text": "The following Table summarizes all ML model serialization formats:Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nOpen-\nFormat VendorFile\nExtension LicenseML Tools &\nPlatforms\nSupportHuman-\nread\u2010\nable Compress\n\"almagi\u2010\nnation\"\u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2713\nPMML\u2713DMG .pmml AGPL R, Python,\nSpark\u2713\n(XML)\u2718\nPFA\u2713DMG JSON PFA-en\u2010\nabled\nruntime\u2713\n(JSON)\u2718\nONNX\u2713SIG\nLFAI.onnx TF, CNTK,\nCore ML,\nMXNet,\nML.NET\u2212 \u2713\nTF\nServing\nFormat\u2713Google .pf Tensor\nFlow\u2718g-zip\nPickle\nFormat\u2713.pkl scikit-learn\u2718g-zip\nJAR/\nPOJO\u2713.jar H2O\u2718 \u2713\nHDF\u2713.h5 Keras\u2718 \u2713\nMLEAP\u2713.jar/ .zip Spark, TF,\nscikit-learn\u2718g-zip\nTorch\nScript\u2718.pt PyTorch\u2718 \u2713\nApple\n.mlmodel\u2718Apple .mlmodel TensorFlow,\nscikit-learn,\nCore ML\u2212 \u2713\nFurther reading:\nML Models training file formats\nOpen Standard Models\nCode: Deployment Pipelines\nThe final stage of delivering an ML project includes the following\nthree steps:\n1Model Serving - The process of deploying the ML model in a pro\u2010\nduction environment.\n2Model Performance Monitoring - The process of observing the ML\nmodel performance based on live and previously unseen data,\nsuch as prediction or recommendation. In particular, we are inter\u2010\nested in ML-specific signals, such as prediction deviation from\nprevious model performance. These signals might be used as trig\u2010\ngers for model re-training.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\n3Model Performance Logging - Every inference request results in a\nlog-record.\nIn the following, we discuss Model Serving Patterns and Model\nDeployment Strategies.\nModel Serving Patterns\nThree components should be considered when we serve an ML model\nin a production environment. The inference is the process of getting\ndata to be ingested by a model to compute predictions. This process\nrequires a model, an interpreter for the execution, and input data.", "start_char_idx": 864, "end_char_idx": 2730, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "22d940f3-f943-4714-bc50-5bdfdbf66adf": {"__data__": {"id_": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "fede8ebb-dff7-4cff-bb80-6c6c4442a37d", "node_type": "1", "metadata": {}, "hash": "bb49bd13adce5a7b3c4d16f847f5f93513b3e41c09ea79e45addf777b04df6d9", "class_name": "RelatedNodeInfo"}, {"node_id": "4bfc7226-6269-4036-8253-89c19406915d", "node_type": "1", "metadata": {}, "hash": "944582356ee1c19e3828fe479e411312cec6d4d299c977c43640871b809f61b7", "class_name": "RelatedNodeInfo"}, {"node_id": "72ae79f0-16f6-409f-a4b4-4dc943ca566d", "node_type": "1", "metadata": {}, "hash": "6c9b93bc689d354446f8b35362a2fc8eea16fd4573ad15ef687ac82627631ccc", "class_name": "RelatedNodeInfo"}, {"node_id": "576d392c-1d49-43f9-b9c8-16ff55b735bd", "node_type": "1", "metadata": {}, "hash": "d6dcc0cf9340310799307f13b2a98a9c794a9875919b9cd634b70afe1a95c5a7", "class_name": "RelatedNodeInfo"}, {"node_id": "6ffe8ea6-1378-43f1-a4d3-0d51afa4108b", "node_type": "1", "metadata": {}, "hash": "01ab2310c9dd0d0f27a9951013f0ad61b057ed3980216ceddcf738baa0ad2a9e", "class_name": "RelatedNodeInfo"}, {"node_id": "6824f290-dc3b-4d35-9c22-ed22ae19fa60", "node_type": "1", "metadata": {}, "hash": "ae4fbc9bab875fe2585c10dbe47f31ca49c31524d05aa566e9471d33a7971a23", "class_name": "RelatedNodeInfo"}]}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "text": "This process\nrequires a model, an interpreter for the execution, and input data.\nDeploying an ML system to a production environment includes two\naspects, first deploying the pipeline for automated retraining and\nML model deployment. Second, providing the API for prediction on\nunseen data.\nModel serving is a way to integrate the ML model in a software sys\u2010\ntem. We distinguish between five patterns to put the ML model in\nproduction: Model-as-Service, Model-as-Dependency, Precompute,\nModel-on-Demand, and Hyb rid-Serving. Please note that the above-\ndescribed model serialization formats might be used for any of the\nmodel serving patterns.\nThe following taxonomy shows these approaches:\nMachine Learning Model Serving Taxonomy\n\u00a0 ML Model\nService &\nVersioningTogether with the\nconsuming\napplicationIndependent from the consuming\napplication\nCompile/\nRuntime\nAvailabiltyBuild & runtime\navailableAvailable re\u2010\nmotely through\nREST API/RPCAvailable at the\nruntime scope\nServing\nPatterns\"Model-as-\nDependency\"\"Model-as-\nService\"\"Precompute\" and\n\"Model on\nDemand\"\nHybrid Model Serving (Federated\nLearning)\u00a0\nNow, we present the serving patterns to productionize the ML model\nsuch as Model-as-Service, Model-as-Dependency, Precompute,\nModel-on-Demand, and Hyb rid-Serving.\nModel-as-Service\nModel-as-Service is a common pattern for wrapping an ML model as\nan independent service. We can wrap the ML model and the inter\u2010\npreter within a dedicated web service that applications can request\nthrough a REST API or consume as a gRPC service.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nThis pattern can be used for various ML workflows, such as Forecast,\nWeb Service, Online Learning.\nFigure Source\nModel-as-Dependency\nModel-as-Dependency is probably the most straightforward way to\npackage an ML model. A packaged ML model is considered as a de\u2010\npendency within the software application. For example, the applica\u2010\ntion consumes the ML model like a conventional jar dependency by\ninvoking the prediction method and passing the values. The return\nvalue of such method execution is some prediction that is performed\nby the previously trained ML model. The Model-as-Dependency ap\u2010\nproach is mostly used for implementing the Forecast pattern.", "start_char_idx": 2650, "end_char_idx": 4931, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72551f36-ec85-45af-bae3-5423db829066": {"__data__": {"id_": "72551f36-ec85-45af-bae3-5423db829066", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "519c17ff-67c4-45e6-8c18-1de6f686499a", "node_type": "1", "metadata": {}, "hash": "d9c4a268b03c71eb6c78fec0b06c0baa3b4cae0d136000da2fe7f1ff4a1a3802", "class_name": "RelatedNodeInfo"}, {"node_id": "787369f8-7ee4-44c6-9cb0-a49266145a71", "node_type": "1", "metadata": {}, "hash": "791a9d26e041e6ea72e5001c97613af19e49721066df212cb83fcaedafdabc8b", "class_name": "RelatedNodeInfo"}, {"node_id": "9a45eb22-2399-44c0-acae-288d0e5c2159", "node_type": "1", "metadata": {}, "hash": "fd91b6526f68e5b35bd6b063390c2dd92e4459a98ab1a62c19ae039f500bf81f", "class_name": "RelatedNodeInfo"}, {"node_id": "41a86f97-3f58-409b-b9c2-023d13c9351d", "node_type": "1", "metadata": {}, "hash": "5bd884b34fe96df0d4a680c69ad51b4c56a3c682715f2e36915a78b25472ecd0", "class_name": "RelatedNodeInfo"}, {"node_id": "cfd0a9a2-4770-4314-95ec-13d2acd03e4b", "node_type": "1", "metadata": {}, "hash": "60e5a241858c95163f5cad127156697b19adf5f5061fe3339343acbfe2e63ba1", "class_name": "RelatedNodeInfo"}]}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "text": "The Model-as-Dependency ap\u2010\nproach is mostly used for implementing the Forecast pattern.\nPrecompute Serving Pattern\nThis type of ML model serving is tightly related to the Forecast ML\nworkflow. With the Precompute serving pattern, we use an already\ntrained ML model and precompute the predictions for the incoming\nbatch of data. The resulting predictions are persisted in the data\u2010\nbase. Therefore, for any input request, we query the database to get\nthe prediction result.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nFurther reading: Bringing ML to Production (Slides)\nModel-on-Demand\nThe Model-on-Demand pattern also treats the ML model as a de\u2010\npendency that is available at runtime. This ML model, contrary to the\nModel-as-Dependency pattern, has its own release cycle and is pub\u2010\nlished independently.\nThe message-broker architecture is typically used for such on-de\u2010\nmand model serving. The message-broker topology architecture pat\u2010\ntern contains two main types of architecture components: a broker\ncomponent and an event processor component. The broker compo\u2010\nnent is the central part that contains the event channels that are\nutilised within the event flow. The event channels, which are enclosed\nin the broker component, are message queues. We can imagine such\narchitecture containing input- and output-queues. A message broker\nallows one process to write prediction-requests in an input queue.\nThe event processor contains the model serving runtime and the ML\nmodel. This process connects to the broker, reads these requests in\nbatch from the queue and sends them to the model to make the pre\u2010\ndictions. The model serving process runs the prediction generation on\nthe input data and writes the resulted predictions to the output\nqueue. Afterwards, the queued prediction results are pushed to the\nprediction service that initiated the prediction request.\nFurther reading:\nEvent-driven architecture\nWeb services vs. streaming for real-time machine learning\nendpoints\nHyb rid-Serving (Feder ated Learning)\nFederated Learning, also known as hybrid-serving, is another way of\nserving a model to the users. It is unique in the way it does, there is\nnot only one model that predicts the outcome, but there are also lots\nof it.", "start_char_idx": 4843, "end_char_idx": 7128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c491f0d-e54c-42ce-abca-cf987967a63d": {"__data__": {"id_": "3c491f0d-e54c-42ce-abca-cf987967a63d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "node_type": "1", "metadata": {}, "hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3920b6b6-165d-4081-a2f3-fd4bfd11d94b", "node_type": "1", "metadata": {}, "hash": "0b218f43a674c1ec06b4e3e087af3d055e5e0f17d1976c688f2a82bf91562d13", "class_name": "RelatedNodeInfo"}, {"node_id": "503ceb27-2176-427d-aed7-28fb8851714b", "node_type": "1", "metadata": {}, "hash": "4f929d348f5da34031cfb91abefce8fe182e14b329b64e4571fb34e5746f160a", "class_name": "RelatedNodeInfo"}, {"node_id": "8068f1ab-4c29-44c7-ade7-6aa2eb3bc2ab", "node_type": "1", "metadata": {}, "hash": "f006ace3bc530f88f4a57a8299237d8a870e5d81e893c9f5b8c143490f913861", "class_name": "RelatedNodeInfo"}]}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "text": "Exactly spoken there are as many models as users exist, in ad\u2010\ndition to the one that\u2019s held on a server. Let us start with the unique\nmodel, the one on the server. The model on the server-side is trainedBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nonly once with the real-world data. It sets the initial model for each\nuser. Also, it is a relatively general trained model so it fits for the\nmajority of users. On the other side, there are the user-side models,\nwhich are the real unique models. Due to the raising hardware stan\u2010\ndards on mobile devices, it is possible for the devices to train their\nown models. Like that the devices will train their own highly special\u2010\nized model for their own user. Once in a while, the devices send their\nalready trained model data (not the personal data) to the server.\nThere the server model will be adjusted, so the actual trends of the\nwhole user community will be covered by the model. This model is set\nto be the new initial model that all devices are using. For not having\nany downsides for the users, while the server model gets updated,\nthis happens only when the device is idle, connected to WiFi and\ncharging. Also, the testing is done on the devices, therefore the newly\nadopted model from the server is sent to the devices and tested for\nfunctionality.\nThe big benefit of this is that the data used for training and testing,\nwhich is highly personal, never leaves the devices while still capturing\nall data that is available.", "start_char_idx": 7129, "end_char_idx": 8660, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2135c83-d5c7-4455-9b06-92769a72c4bf": {"__data__": {"id_": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b29e2185-6487-4a2f-a2c7-9b78c143ec49", "node_type": "1", "metadata": {}, "hash": "2073d0f0c1dadc4f5a05bde21aa1479b1bcc69b124f40081a9c6d38f267a1cc6", "class_name": "RelatedNodeInfo"}, {"node_id": "d82d9a02-ea07-4b3d-80d4-46e13aed9994", "node_type": "1", "metadata": {}, "hash": "f3f8cd733457b858b79499e9ea5113a00d02884c8bb9113427d9a592f9b7ddc5", "class_name": "RelatedNodeInfo"}, {"node_id": "dcf6a7ce-08b1-480e-810d-bcbe837a8b0d", "node_type": "1", "metadata": {}, "hash": "9949baab63ce92d284019f06aee7d0799ea422c5acf3a2cbda39033b91588dc8", "class_name": "RelatedNodeInfo"}, {"node_id": "f9f3614a-c2df-412b-a822-4fa748fc2000", "node_type": "1", "metadata": {}, "hash": "ce5620e85421299477ee07dd2d9539fd4fbab6ee1239dc871a295d425397692a", "class_name": "RelatedNodeInfo"}, {"node_id": "6eeeb8cf-4c12-4ba5-b385-b41fdcc0156e", "node_type": "1", "metadata": {}, "hash": "163eff244166f9e0ad8a154a1e465f999a9991c6d1ac2558ae2127e6b94880a6", "class_name": "RelatedNodeInfo"}]}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "text": "This way it is possible to train highly accu\u2010\nrate models while not having to store tons of (probably personal)\ndata in the cloud. But there is no such thing as a free lunch, normal\nmachine learning algorithms are built with homogeneously and large\ndatasets on powerful hardware which is always available for train\u2010\ning. With Federated Learning there are other circumstances, the mo\u2010\nbile devices are less powerful, the training data is distributed across\nmillions of devices and these are not always available for training.\nExactly for this TensorFlow Federated (TFF) has been created. TFF\nis a lightweight form of TensorFlow created for Federated Learning.\nFigure Source\nDeployment Strategies\nIn the following, we discuss common ways for wrapping trained\nmodels as deployable services, namely deploying ML models as\nDocker Containers to Cloud Instances and as Serverless Functions.\nDeploying ML Models as Docker ContainersBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nAs of now, there is no standard, open solution to ML model deploy\u2010\nment. As ML model inference being considered stateless, lightweight,\nand idempotent, containerization becomes the de-facto standard\nfor delivery. This means we deploy a container that wraps an ML\nmodel inference code. For on-premise, cloud, or hybrid deployments,\nDocker is considered to be de-facto standard containerization\ntechnology.\nOne ubiquitous way is to package the whole ML tech stack (depen\u2010\ndencies) and the code for ML model prediction into a Docker con\u2010\ntainer. Then Kubernetes or an alternative (e.g. AWS Fargate) does\nthe orchestration. The ML model functionality, such as prediction, is\nthen available through a REST API (e.g. implemented as Flask\napplication)\nDeploying ML Models as Serverless Functions\nVarious cloud vendors already provide machine-learning platforms,\nand you can deploy your model with their services. Examples are\nAmazon AWS Sagemaker, Google Cloud AI Platform, Azure Machine\nLearning Studio, and IBM Watson Machine Learning, to name a few.\nCommercial cloud services also provide containerization of ML mod\u2010\nels such as AWS Lambda and Google App Engine servlet host.", "start_char_idx": 0, "end_char_idx": 2195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c2ac410-38f3-4b43-97aa-afe1918019c5": {"__data__": {"id_": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a949e8c7-ffda-49a1-b339-a6f7d2f48ef4", "node_type": "1", "metadata": {}, "hash": "c509ee35a8632290ef3dec61fb694c69d6dad6a92913302c31608c525c6ca97a", "class_name": "RelatedNodeInfo"}, {"node_id": "6e0b48a4-47d1-4675-ac47-cd8ccd583f4d", "node_type": "1", "metadata": {}, "hash": "c46129bae03efea507a475acdc47c8e60e12a0bdba1302960c93bd449233a08d", "class_name": "RelatedNodeInfo"}, {"node_id": "def231b8-c1b7-4a00-b0f9-ec23066e1f7c", "node_type": "1", "metadata": {}, "hash": "188a73388654244fc641a56d04444a05c9bb1b1ff5701095d4e8db15919f586a", "class_name": "RelatedNodeInfo"}, {"node_id": "40b4fd5c-9805-473e-9457-e0a1e6ed0a4a", "node_type": "1", "metadata": {}, "hash": "e4f28cd334a64ebf18e32236bac09837f4ce79dcccc3860fd50c0feddb69abe8", "class_name": "RelatedNodeInfo"}, {"node_id": "f48a29ad-f064-4f99-aa42-e6481ec00bdd", "node_type": "1", "metadata": {}, "hash": "e862ec292330d40cbb1fd37e34e8095d792d455ced5a889b9ce553314b97108e", "class_name": "RelatedNodeInfo"}]}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "text": "In order to deploy an ML model as a serverless function, the applica\u2010\ntion code and dependencies are packaged into .zip files, with a single\nentry point function. This function then could be managed by major\ncloud providers such as Azure Functions, AWS Lambda, or Google\nCloud Functions. However, attention should be paid to possible con\u2010\nstraints of the deployed artifacts such as the size of the artifact.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nThe content of this site was created by Dr. Larysa\nVisengeriyeva, Anja Kammer, Isabel B\u00e4r, Alexander\nKniesz, and Michael Pl\u00f6d (DDD Advisor). Design\nmade by Sebastian Eberstaller.\nIt is published under Creative Commons Attribution\n4.0 International Public License and can therefore\nbe shared and adapted with attribution\n(\"INNOQ\").\nMade and maintained by\nPrivacy | Site noticeBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nMLOps Principles\nAs machine learning and AI propagate in software\nproducts and services, we need to establish best prac\u2010\ntices and tools to test, deploy, manage, and monitor\nML models in real-world production. In short, with\nMLOps we strive to avoid \u201ctechnical debt\u201d in machine\nlearning applications.\nSIG MLOps defines \u201can optimal MLOps experience [as]\none where Machine Learning assets are treated con\u2010\nsistently with all other software assets within a CI/CD\nenvironment. Machine Learning models can be de\u2010\nployed alongside the services that wrap them and the\nservices that consume them as part of a unified re\u2010\nlease process.\u201d By codifying these practices, we hope\nto accelerate the adoption of ML/AI in software sys\u2010\ntems and fast delivery of intelligent software. In the\nfollowing, we describe a set of important concepts in\nMLOps such as Iterative-Incremental Development,\nAutomation, Continuous Deployment, Versioning,\nTesting, Reproducibility, and Monitoring.", "start_char_idx": 2196, "end_char_idx": 4145, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd6b745d-e8d9-495b-b6ce-333955638033": {"__data__": {"id_": "bd6b745d-e8d9-495b-b6ce-333955638033", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a91168b0-6ea4-472d-bc06-b081330b168f", "node_type": "1", "metadata": {}, "hash": "0d0482f4d41d9186be53911242dcd4c28764a3cbe78175ef932ea4be41aa0dd3", "class_name": "RelatedNodeInfo"}, {"node_id": "03e47879-f991-433d-97ca-d48ea0af7b90", "node_type": "1", "metadata": {}, "hash": "00223029112f45cbabe50645bd150e696c17dada9c9997b546607bbfdfca2198", "class_name": "RelatedNodeInfo"}, {"node_id": "100cdae7-28de-4cf2-94c3-38d7c46e8c91", "node_type": "1", "metadata": {}, "hash": "a8c3fe9aee3d366647c1797ec7b5ad9bbcbb63537717219f721e7ecf168ba8da", "class_name": "RelatedNodeInfo"}, {"node_id": "8be279ff-ef64-4fe2-a895-abba32d58c32", "node_type": "1", "metadata": {}, "hash": "d430428d6c8cdcef27ad554bbef479fc15329992824fd00f27441693bc94dee8", "class_name": "RelatedNodeInfo"}, {"node_id": "36792f86-4b31-44ca-8932-bff12013809e", "node_type": "1", "metadata": {}, "hash": "354d950d090f0b3432ce5b0ef84bd2e3c663d8eb38ff1a60ee55d1726ec1265a", "class_name": "RelatedNodeInfo"}]}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "text": "Iterative-Incremental Process in\nMLOps\nThe complete MLOps process includes three broad\nphases of \u201cDesigning the ML-powered application\u201d,Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\n\u201cML Experimentation and Development\u201d, and \u201cML\nOperations\u201d.\nThe first phase is devoted to business understanding,\ndata understanding and designing the ML-powered\nsoftware. In this stage, we identify our potential user,\ndesign the machine learning solution to solve its prob\u2010\nlem, and assess the further development of the\nproject. Mostly, we would act within two categories of\nproblems - either increasing the productivity of the\nuser or increasing the interactivity of our application.\nInitially, we define ML use-cases and prioritize them.\nThe best practice for ML projects is to work on one ML\nuse case at a time. Furthermore, the design phase\naims to inspect the available data that will be needed\nto train our model and to specify the functional and\nnon-functional requirements of our ML model. We\nshould use these requirements to design the architec\u2010\nture of the ML-application, establish the serving strat\u2010\negy, and create a test suite for the future ML model.\nThe follow-up phase \u201cML Experimentation and\nDevelopment\u201d is devoted to verifying the applicability\nof ML for our problem by implementing Proof-of-\nConcept for ML Model. Here, we run iteratively differ\u2010\nent steps, such as identifying or polishing the suitable\nML algorithm for our problem, data engineering, and\nmodel engineering. The primary goal in this phase is to\ndeliver a stable quality ML model that we will run in\nproduction.\nThe main focus of the \u201cML Operations\u201d phase is to de\u2010\nliver the previously developed ML model in production\nby using established DevOps practices such as testing,\nversioning, continuous delivery, and monitoring.\nAll three phases are interconnected and influence each\nother. For example, the design decision during the de\u2010\nsign stage will propagate into the experimentation\nphase and finally influence the deployment options\nduring the final operations phase.", "start_char_idx": 4146, "end_char_idx": 6453, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a9e4169-a13c-478c-942c-5617a4cbefcb": {"__data__": {"id_": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "387374e2-778f-472b-a73f-092761fffd50", "node_type": "1", "metadata": {}, "hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "bb7ca060-e17d-4903-bbaa-822ab0f66438", "node_type": "1", "metadata": {}, "hash": "3f484c8eb650f9bf40db84610b92b7cbb8ce0c34147577c8304b3e27ae6f31f5", "class_name": "RelatedNodeInfo"}, {"node_id": "f90556c7-c8f4-451a-8d80-cf4ff4c8e6cb", "node_type": "1", "metadata": {}, "hash": "34020e9fb1aa9f7af919b072c1902bb9b5f50d5945ffa592e03b3a6c66765b62", "class_name": "RelatedNodeInfo"}, {"node_id": "054cbdea-b57c-42f0-9d70-1b33eab3ad34", "node_type": "1", "metadata": {}, "hash": "060cb7093eaebfd9d0bc263697552ace48ae20142aa98b3758ff0c8c969944b0", "class_name": "RelatedNodeInfo"}, {"node_id": "247ca1b7-b46b-47f7-8a5d-fa87c9ea9c0c", "node_type": "1", "metadata": {}, "hash": "6b8f5dc325cd7226bafd3287e7795706783213168a88f4e891728ac6beb7efdd", "class_name": "RelatedNodeInfo"}, {"node_id": "24a3a044-c310-43f3-8343-b55d949c8ffc", "node_type": "1", "metadata": {}, "hash": "5c296cf0c67ec3eef49d93f20c690d07fdb3da42060435874d80e5e086448264", "class_name": "RelatedNodeInfo"}, {"node_id": "91b7b727-dceb-4096-bc15-abe813e5cbbb", "node_type": "1", "metadata": {}, "hash": "f965f064560dded95d3691c7d02e51d119f22cf93266e21e6db0890ddf6c551d", "class_name": "RelatedNodeInfo"}]}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "text": "Automation\nThe level of automation of the Data, ML Model, and\nCode pipelines determines the maturity of the ML\nprocess. With increased maturity, the velocity for the\ntraining of new models is also increased. The objectiveBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nof an MLOps team is to automate the deployment of\nML models into the core software system or as a ser\u2010\nvice component. This means, to automate the com\u2010\nplete ML-workflow steps without any manual inter\u2010\nvention. Triggers for automated model training and\ndeployment can be calendar events, messaging, moni\u2010\ntoring events, as well as changes on data, model train\u2010\ning code, and application code.\nAutomated testing helps discovering problems quickly\nand in early stages. This enables fast fixing of errors\nand learning from mistakes.\nTo adopt MLOps, we see three levels of automation,\nstarting from the initial level with manual model train\u2010\ning and deployment, up to running both ML and CI/CD\npipelines automatically.\n1Manual process. This is a typical data science\nprocess, which is performed at the beginning of im\u2010\nplementing ML. This level has an experimental and\niterative nature. Every step in each pipeline, such as\ndata preparation and validation, model training and\ntesting, are executed manually. The common way to\nprocess is to use Rapid Application Development\n(RAD) tools, such as Jupyter Notebooks.\n2ML pipeline automation. The next level includes the\nexecution of model training automatically. We in\u2010\ntroduce here the continuous training of the model.\nWhenever new data is available, the process of\nmodel retraining is triggered. This level of automa\u2010\ntion also includes data and model validation steps.\n3CI/CD pipeline automation. In the final stage, we in\u2010\ntroduce a CI/CD system to perform fast and reli\u2010\nable ML model deployments in production.", "start_char_idx": 6454, "end_char_idx": 8548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "387374e2-778f-472b-a73f-092761fffd50": {"__data__": {"id_": "387374e2-778f-472b-a73f-092761fffd50", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c55660-67f1-419a-b4fc-77672300517c", "node_type": "1", "metadata": {}, "hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "1fc134b1-5260-4e17-97a9-4d799078b18e", "node_type": "1", "metadata": {}, "hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "class_name": "RelatedNodeInfo"}]}, "hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "text": "The core\ndifference from the previous step is that we now\nautomatically build, test, and deploy the Data, ML\nModel, and the ML training pipeline components.", "start_char_idx": 8549, "end_char_idx": 8705, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09e83244-0f60-4b37-9ec7-b77488731f88": {"__data__": {"id_": "09e83244-0f60-4b37-9ec7-b77488731f88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "88561f61-11b4-4831-80e6-56ea5a7b8884", "node_type": "1", "metadata": {}, "hash": "ffee8d33b4320a7b5ce14819d386499bf1c4a863ab946117304bfe5adeb905d2", "class_name": "RelatedNodeInfo"}, {"node_id": "9a58da2c-4931-49ac-a9ad-c0851876d001", "node_type": "1", "metadata": {}, "hash": "2b433187a4d0bd126b2292eb6c8bf51b006654c93c7ab9dac5628e9e3ddefc6e", "class_name": "RelatedNodeInfo"}, {"node_id": "28907271-0aca-4c70-827c-4cfdbc72fedd", "node_type": "1", "metadata": {}, "hash": "fd2f5f49c913e25e35ed5753c846c2e490cf400ea1142efcd03f8ed6b244ced1", "class_name": "RelatedNodeInfo"}, {"node_id": "ea32f259-157b-4a72-93fe-6cc2c06718b7", "node_type": "1", "metadata": {}, "hash": "21817921f2360bb081a227a41cb8a43f01303472ca88af850a967e9244f5ef39", "class_name": "RelatedNodeInfo"}, {"node_id": "cd2c91d5-fd7a-4565-9083-819f265ba97f", "node_type": "1", "metadata": {}, "hash": "e9a102ad2daf76d77286c847ac6bd2abce5e914760f47f92bee49b55d1e94bca", "class_name": "RelatedNodeInfo"}]}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "text": "The following picture shows the automated ML pipe\u2010\nline with CI/CD routines:Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nFigure adopted from \u201cMLOps: Continuous delivery and\nautomation pipelines in machine learning\u201d\nThe MLOps stages that reflect the process of ML pipe\u2010\nline automation are explained in the following table:\nMLOps StageOutput of the Stage\nExecution\nDevelopment &\nExperimentation (ML algo\u2010\nrithms, new ML models)Source code for pipelines:\nData extraction, validation,\npreparation, model training,\nmodel evaluation, model\ntesting\nPipeline Continuous Integration\n(Build source code and run\ntests)Pipeline components to be\ndeployed: packages and\nexecutables.\nPipeline Continuous Delivery\n(Deploy pipelines to the target\nenvironment)Deployed pipeline with new\nimplementation of the\nmodel.\nAutomated Triggering (Pipeline\nis automatically executed in\nproduction. Schedule or trigger\nare used)Trained model that is stored\nin the model registry.\nModel Continuous Delivery\n(Model serving for prediction)Deployed model prediction\nservice (e.g. model exposed\nas REST API)\nMonitoring (Collecting data\nabout the model performance\non live data)Trigger to execute the pipe\u2010\nline or to start a new experi\u2010\nment cycle.\nAfter analyzing the MLOps Stages, we might notice\nthat the MLOps setup requires several components toBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nbe installed or prepared. The following table lists those\ncomponents:\nMLOps Setup\nComponents Description\nSource Control Versioning the Code, Data, and ML Model\nartifacts.\nTest & Build\nServicesUsing CI tools for (1) Quality assurance\u00a0\u00a0for\nall ML artifacts, and (2) Building packages\nand executables for pipelines.", "start_char_idx": 0, "end_char_idx": 2210, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5e9c2cd-2b5f-4fd6-9865-9bd318289603": {"__data__": {"id_": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3f48fb26-925f-417f-b515-d565b88d5f7a", "node_type": "1", "metadata": {}, "hash": "e3f3ee93e4a0ba434c4b53faf57cdd52a047dc96a7a3da3ab2b25dde16811a13", "class_name": "RelatedNodeInfo"}, {"node_id": "b77c2312-64b7-4e9e-a4ed-2f0b59d9dc84", "node_type": "1", "metadata": {}, "hash": "3574d961f622ad7a6fc2b6a32429c98aca35a9e28e7ac7a666b79c1cc8578d90", "class_name": "RelatedNodeInfo"}, {"node_id": "92d46532-8d6c-4397-b118-804cc96b6684", "node_type": "1", "metadata": {}, "hash": "30a8fa156d630dbb01136d925ba0dba01ae5a6cb35fc1c6a24b0a13f4a0fac96", "class_name": "RelatedNodeInfo"}, {"node_id": "8583080e-e19d-4aa9-9ea0-26ed3dfe5eb5", "node_type": "1", "metadata": {}, "hash": "a7cedba77c6ae11f88a9405e482bd902bf54e359aec94d34afa8ebe0ff770d0c", "class_name": "RelatedNodeInfo"}, {"node_id": "4408b453-bef7-40ec-bc82-c8ab1e20cd76", "node_type": "1", "metadata": {}, "hash": "ae69dd62ec40c29e67e03064710045b7ff27698c06aef157fab5a373e4983335", "class_name": "RelatedNodeInfo"}]}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "text": "Deployment\nServicesUsing CD tools for deploying pipelines to\nthe target environment.\nModel Registry A registry for storing already trained ML\nmodels.\nFeature Store Preprocessing input data as features to be\nconsumed in the model training pipeline\nand during the model serving.\nML Metadata\nStoreTracking metadata of model training, for\nexample model name, parameters, training\ndata, test data, and metric results.\nML Pipeline\nOrchestratorAutomating the steps of the ML\nexperiments.\nFurther reading: \u201cMLOps: Continuous delivery and au\u2010\ntomation pipelines in machine learning\u201d\nContinuous X\nTo understand Model deployment, we first specify the\n\u201cML assets\u201d as ML model, its parameters and hyperpa\u2010\nrameters, training scripts, training and testing data.\nWe are interested in the identity, components, version\u2010\ning, and dependencies of these ML artifacts. The tar\u2010\nget destination for an ML artifact may be a (micro-)\nservice or some infrastructure components. A deploy\u2010\nment service provides orchestration, logging, monitor\u2010\ning, and notification to ensure that the ML models,\ncode and data artifacts are stable.\nMLOps is an ML engineering culture that includes the\nfollowing practices:\nContinuous Integration (CI) extends the testing and\nvalidating code and components by adding testingBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nand validating data and models.\nContinuous Delivery (CD) concerns with delivery of\nan ML training pipeline that automatically deploys\nanother the ML model prediction service.\nContinuous Training (CT) is unique to ML systems\nproperty, which automatically retrains ML models\nfor re-deployment.\nContinuous Monitoring (CM) concerns with moni\u2010\ntoring production data and model performance\nmetrics, which are bound to business metrics.\nVersioning\nThe goal of the versioning is to treat ML training\nscrips, ML models and data sets for model training as\nfirst-class citizens in DevOps processes by tracking ML\nmodels and data sets with version control systems.", "start_char_idx": 2211, "end_char_idx": 4457, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33a2425b-1dc0-4c42-b651-457a7eb4ba35": {"__data__": {"id_": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6e6f86e8-1fcf-4d35-9d83-b0c80d88bf0f", "node_type": "1", "metadata": {}, "hash": "8b4e69ef37ee76fccd00c4519582efa49e008ac90bb386e6748888bf9693ad62", "class_name": "RelatedNodeInfo"}, {"node_id": "ae094239-1e94-41ec-b537-241ea214da20", "node_type": "1", "metadata": {}, "hash": "96ae1bec059349b4f7b72885539c3ba35ddce9bee1c299228ed47ecea9ebc3fa", "class_name": "RelatedNodeInfo"}, {"node_id": "117fa4cc-c819-4872-aa98-ec9a6615e140", "node_type": "1", "metadata": {}, "hash": "a47f2c3b8f655848975feba1785ba7d2eb6e2f0781c38f8685b57c029b592010", "class_name": "RelatedNodeInfo"}, {"node_id": "23fa5541-1de4-4a93-ba97-e8e14936ffbf", "node_type": "1", "metadata": {}, "hash": "96976567332b3040ad2ca7b05a6ce8fe6d05bfcb130ad9aa0121cec22ee42dda", "class_name": "RelatedNodeInfo"}, {"node_id": "d7f57d8a-ab05-4629-b9ea-d85cf86ff64b", "node_type": "1", "metadata": {}, "hash": "cc3281d06c75c0ac3d9c6be1da281201309676eebe8167297c33389a08b3b964", "class_name": "RelatedNodeInfo"}]}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "text": "The common reasons when ML model and data\nchanges (according to SIG MLOps) are the following:\nML models can be retrained based upon new train\u2010\ning data.\nModels may be retrained based upon new training\napproaches.\nModels may be self-learning.\nModels may degrade over time.\nModels may be deployed in new applications.\nModels may be subject to attack and require\nrevision.\nModels can be quickly rolled back to a previous\nserving version.\nCorporate or government compliance may require\naudit or investigation on both ML model or data,\nhence we need access to all versions of the produc\u2010\ntionized ML model.\nData may reside across multiple systems.\nData may only be able to reside in restricted\njurisdictions.\nData storage may not be immutable.\nData ownership may be a factor.\nAnalogously to the best practices for developing reli\u2010\nable software systems, every ML model specification\n(ML training code that creates an ML model) shouldBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\ngo through a code review phase. Furthermore, every\nML model specification should be versioned in a VCS\nto make the training of ML models auditable and\nreproducible.\nFurther readi ng: How do we manage ML models?\nModel Management Frameworks\nExperiments Tracking\nMachine Learning development is a highly iterative and\nresearch-centric process. In contrast to the traditional\nsoftware development process, in ML development,\nmultiple experiments on model training can be exe\u2010\ncuted in parallel before making the decision what\nmodel will be promoted to production.\nThe experimentation during ML development might\nhave the following scenario: One way to track multiple\nexperiments is to use different (Git-) branches, each\ndedicated to the separate experiment. The output of\neach branch is a trained model. Depending on the se\u2010\nlected metric, the trained ML models are compared\nwith each other and the appropriate model is selected.\nSuch low friction branching is fully supported by the\ntool DVC, which is an extension of Git and an open-\nsource version control system for machine learning\nprojects.", "start_char_idx": 4458, "end_char_idx": 6792, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7a287e2-a5d5-405d-b204-1a9464cb02c8": {"__data__": {"id_": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "338c170b-8eca-4a12-bf0d-5a6a78a6439c", "node_type": "1", "metadata": {}, "hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "cd172577-bb20-4239-8779-41c2d9cc92d8", "node_type": "1", "metadata": {}, "hash": "5253627e770787b25e7074d768181dbaf4d6320fb28dea5070db4fd5bc7f36ea", "class_name": "RelatedNodeInfo"}, {"node_id": "98cb9888-1f26-49b0-99d8-5b1023e3f8a8", "node_type": "1", "metadata": {}, "hash": "8fadbf275860ffca84d700592ae82730cc46570803dbaef3ac86c34bf608c12c", "class_name": "RelatedNodeInfo"}, {"node_id": "5aba2019-cc1d-491d-b3dd-b7fe5aea8359", "node_type": "1", "metadata": {}, "hash": "bf1dadc88149be7b176c186576c411ede9a1bd08b11a1fa629de2ce188d8d883", "class_name": "RelatedNodeInfo"}, {"node_id": "5f2c8335-5e09-437b-9254-9146dc3ce4c0", "node_type": "1", "metadata": {}, "hash": "fe5fc7f463a9ac337340f6fe53e73dd41d45347029258c0816717832485911a1", "class_name": "RelatedNodeInfo"}, {"node_id": "87d46d85-62c5-4f6f-adaf-439bff2ac8b5", "node_type": "1", "metadata": {}, "hash": "215f0fb427c7ad1d8c7267e03917e7117839d48ff32ffccd0e192beb2f861414", "class_name": "RelatedNodeInfo"}]}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "text": "Another popular tool for ML experiments\ntracking is the Weights and Biases (wandb) library,\nwhich automatically tracks the hyperparameters and\nmetrics of the experiments.\nTesting\nFigure source: \u201cThe ML Test Score: A Rubric for ML\nProduction Readiness and Technical Debt Reduction\u201d\nby E.Breck et al. 2017\nThe complete development pipeline includes three es\u2010\nsential components, data pipeline, ML model pipeline,\nand application pipeline. In accordance with this sepa\u2010\nration we distinguish three scopes for testing in MLBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nsystems: tests for features and data, tests for model\ndevelopment, and tests for ML infrastructure.\nFeatures and Data Tests\nData validation: Automatic check for data and fea\u2010\ntures schema/domain.\nAction: In order to build a schema (domain val\u2010\nues), calculate statistics from the training data.\nThis schema can be used as expectation defini\u2010\ntion or semantic role for input data during train\u2010\ning and serving stages.\nFeatures importance test to understand whether\nnew features add a predictive power.\nAction: Compute correlation coefficient on fea\u2010\ntures columns.\nAction: Train model with one or two features.\nAction: Use the subset of features \u201cOne of k left\nout and train a set of different models.\nMeasure data dependencies, inference latency,\nand RAM usage for each new feature. Compare\nit with the predictive power of the newly added\nfeatures.\nDrop out unused/deprecated features from your\ninfrastructure and document it.\nFeatures and data pipelines should be policy-com\u2010\npliant (e.g. GDPR). These requirements should be\nprogrammatically checked in both development\nand production environments.\nFeature creation code should be tested by unit\ntests (to capture bugs in features).\nTests for Reliable Model Development\nWe need to provide specific testing support for detect\u2010\ning ML-specific errors.\nTesting ML training should include routines, which\nverify that algorithms make decisions aligned to\nbusiness objective. This means that ML algorithm\nloss metrics (MSE, log-loss, etc.)", "start_char_idx": 6793, "end_char_idx": 9109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "338c170b-8eca-4a12-bf0d-5a6a78a6439c": {"__data__": {"id_": "338c170b-8eca-4a12-bf0d-5a6a78a6439c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "29cf881f-fb52-48da-9752-b54df95c18c2", "node_type": "1", "metadata": {}, "hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7215347a-bec8-4499-b84b-87e56d7798d7", "node_type": "1", "metadata": {}, "hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "class_name": "RelatedNodeInfo"}]}, "hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "text": "This means that ML algorithm\nloss metrics (MSE, log-loss, etc.) should correlate\nwith business impact metrics (revenue, user en\u2010\ngagement, etc.", "start_char_idx": 9046, "end_char_idx": 9189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df10fc68-725d-452b-abe1-a801e77316e1": {"__data__": {"id_": "df10fc68-725d-452b-abe1-a801e77316e1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "1fd2d5d1-becb-4b8c-95ae-4d22c81751ac", "node_type": "1", "metadata": {}, "hash": "f108ea2d3cb675571839119270f4a0df54cba0d006794edadc682f2d53b27c89", "class_name": "RelatedNodeInfo"}, {"node_id": "466d7896-5982-4d15-8c09-ce1b2b499fcb", "node_type": "1", "metadata": {}, "hash": "3ee9282fa7e9d09c55893c3da1a750f2f03c9a1f80aa3c97d224cd31cb3772ac", "class_name": "RelatedNodeInfo"}, {"node_id": "764cb45a-c263-4c13-82cf-8bcc8614f18d", "node_type": "1", "metadata": {}, "hash": "c7d6144b07e396cf6468b96a2a3d20bb35ce00e4f0b937d2cf08e837a68a26e3", "class_name": "RelatedNodeInfo"}, {"node_id": "c26462c8-5ba6-409a-bdef-d32f4af76e8c", "node_type": "1", "metadata": {}, "hash": "2b89b5c3c41b67f794e317f8ce38f0c8b4c26393f3d5187c4394ad6d9fe5e611", "class_name": "RelatedNodeInfo"}, {"node_id": "96935e3d-077e-4077-a34c-563046a4a9af", "node_type": "1", "metadata": {}, "hash": "6cdccf0b20298394170175ab97e8495969158eca47ed1893d47d573e1b9a818b", "class_name": "RelatedNodeInfo"}]}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "text": "should correlate\nwith business impact metrics (revenue, user en\u2010\ngagement, etc.)Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAction: The loss metrics - impact metrics rela\u2010\ntionship, can be measured in small scale A/B\ntesting using an intentionally degraded model.\nFurther reading: Selecting the Right Metric for\nevaluating Machine Learning Models. here 1,\nhere 2\nModel staleness test. The model is defined as stale\nif the trained model does not include up-to-date\ndata and/or does not satisfy the business impact\nrequirements. Stale models can affect the quality\nof prediction in intelligent software.\nAction: A/B experiment with older models.\nIncluding the range of ages to produce an Age\nvs. Prediction Quality curve to facilitate the un\u2010\nderstanding of how often the ML model should\nbe trained.\nAssessing the cost of more sophisticated ML\nmodels.\nAction: ML model performance should be com\u2010\npared to the simple baseline ML model (e.g. lin\u2010\near model vs neural network).\nValidating performance of a model.\nIt is recommended to separate the teams and\nprocedures collecting the training and test data\nto remove the dependencies and avoid false\nmethodology propagating from the training set\nto the test set (source).\nAction: Use an additional test set, which is dis\u2010\njoint from the training and validation sets. Use\nthis test set only for a final evaluation.\nFairness/Bias/Inclusion testing for the ML model\nperformance.\nAction: Collect more data that includes poten\u2010\ntially under-represented categories.\nAction: Examine input features if they correlate\nwith protected user categories.", "start_char_idx": 0, "end_char_idx": 1853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64ef4e44-872f-4b0a-8ea8-d584657679e9": {"__data__": {"id_": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4d62f771-970b-48f8-b14a-62e26bc7e93b", "node_type": "1", "metadata": {}, "hash": "3853c6b5fa643c854839155473449ea671eaa53605bf88989276e8779cfec47b", "class_name": "RelatedNodeInfo"}, {"node_id": "6cad24ca-86e6-4ce9-a3f9-d4300a461240", "node_type": "1", "metadata": {}, "hash": "91ab2ef83afc257c8a4d9b1ae720a22d5107cfd9d0c475c003cf3853eb866638", "class_name": "RelatedNodeInfo"}, {"node_id": "f3d6202b-fbdb-4dd7-843c-d4c69d693507", "node_type": "1", "metadata": {}, "hash": "74578d166bd0aa0696c58002fc3b9ed10ce205b17f8943148b3dbb467641d002", "class_name": "RelatedNodeInfo"}, {"node_id": "9c6aa033-bc49-4f28-a70c-df8fb280f9db", "node_type": "1", "metadata": {}, "hash": "daaa329ad5e9e668780357162a95722e3ddf943b19163590045003ba4441f95a", "class_name": "RelatedNodeInfo"}]}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "text": "Action: Examine input features if they correlate\nwith protected user categories.\nFurther reading: \u201cTour of Data Sampling\nMethods for Imbalanced Classification\u201d\nConventional unit testing for any feature creation,Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nML model specification code (training) and testing.\nModel governance testing (coming soon)\nML infrastructure test\nTraining the ML models should be reproducible,\nwhich means that training the ML model on the\nsame data should produce identical ML models.\nDiff-testing of ML models relies on deterministic\ntraining, which is hard to achieve due to non-\nconvexity of the ML algorithms, random seed\ngeneration, or distributed ML model training.\nAction: determine the non-deterministic parts in\nthe model training code base and try to mini\u2010\nmize non-determinism.\nTest ML API usage. Stress testing.\nAction: Unit tests to randomly generate input\ndata and training the model for a single opti\u2010\nmization step (e.g gradient descent).\nAction: Crash tests for model training. The ML\nmodel should restore from a checkpoint after a\nmid-training crash.\nTest the algorithmic correctness.\nAction: Unit test that it is not intended to com\u2010\npleting the ML model training but to train for a\nfew iterations and ensure that loss decreases\nwhile training.\nAvoid: Diff-testing with previously build ML\nmodels because such tests are hard to maintain.\nIntegration testing: The full ML pipeline should be\nintegration tested.\nAction: Create a fully automated test that regu\u2010\nlarly triggers the entire ML pipeline. The test\nshould validate that the data and code success\u2010\nfully finish each stage of training and the result\u2010\ning ML model performs as expected.\nAll integration tests should be run before the ML\nmodel reaches the production environment.", "start_char_idx": 1773, "end_char_idx": 3817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd": {"__data__": {"id_": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a5b29452-7cf0-4e7c-9eef-db750abfb1f3", "node_type": "1", "metadata": {}, "hash": "c800c0cd31bbb97e31ed2a33ac0782b638020a3b041b84b13ef41bf867282047", "class_name": "RelatedNodeInfo"}, {"node_id": "153ff03a-7a5d-41b1-a225-d33f096a08d6", "node_type": "1", "metadata": {}, "hash": "51d5f42a73c291906d5a22cb37c1c1e9c093162fd0eac08bdd6f9d45ca618cb2", "class_name": "RelatedNodeInfo"}, {"node_id": "983f6bcd-90a3-467c-b5c7-046b750315d0", "node_type": "1", "metadata": {}, "hash": "13e0f3d12b6b2e15b637dd61f09a05e619a2083760550873bc5312624e5647ef", "class_name": "RelatedNodeInfo"}, {"node_id": "8a87b86b-963b-470d-b6e6-926da66a50de", "node_type": "1", "metadata": {}, "hash": "4083217ecaa94d07113e66333ec31143953a6e09f3084715a69ee25f9790d8bd", "class_name": "RelatedNodeInfo"}]}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "text": "All integration tests should be run before the ML\nmodel reaches the production environment.\nValidating the ML model before serving it.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAction: Setting a threshold and testing for slow\ndegradation in model quality over many versions\non a validation set.\nAction: Setting a threshold and testing for sud\u2010\nden performance drops in a new version of the\nML model.\nML models are canaried before serving.\nAction: Testing that an ML model successfully\nloads into production serving and the prediction\non real-life data is generated as expected.\nTesting that the model in the training environment\ngives the same score as the model in the serving\nenvironment.\nAction: The difference between the performance\non the holdout data and the \u201cnext day\u201d data.\nSome difference will always exist. Pay attention\nto large differences in performance between\nholdout and \u201cnext day\u201d data because it may indi\u2010\ncate that some time-sensitive features cause\nML model degradation.\nAction: Avoid result differences between train\u2010\ning and serving environments. Applying a model\nto an example in the training data and the same\nexample at serving should result in the same\nprediction. A difference here indicates an engi\u2010\nneering error.\nMonitoring\nOnce the ML model has been deployed, it need to be\nmonitored to assure that the ML model performs as\nexpected. The following check list for model monitoring\nactivities in production is adopted from \u201cThe ML Test\nScore: A Rubric for ML Production Readiness and\nTechnical Debt Reduction\u201d by E.Breck et al. 2017:\nMonitor dependency changes throughout the com\u2010\nplete pipeline result in notification.\nData version change.\nChanges in source system.", "start_char_idx": 3726, "end_char_idx": 5692, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "963debed-7070-4f3c-96e2-5ec66d6c6847": {"__data__": {"id_": "963debed-7070-4f3c-96e2-5ec66d6c6847", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "965dbdc7-9602-43b1-80bf-018976ad93c0", "node_type": "1", "metadata": {}, "hash": "f9be28b7fcf71ea4d0c152e1ec47bb0acf08f458df45b16d49e140d047abbc7c", "class_name": "RelatedNodeInfo"}, {"node_id": "245d234e-eebb-4aa1-b998-0442e66a44a9", "node_type": "1", "metadata": {}, "hash": "5cb8f17f208dc42299e8de622e069de3a38c04b4e11075834befe437f2cacd12", "class_name": "RelatedNodeInfo"}, {"node_id": "18f178b4-7cd9-48ff-b80c-6bb76112b9ef", "node_type": "1", "metadata": {}, "hash": "e85d8cb9516d35a6b385a7e0379b7db5abaddf03000e2f05264f0bb65cad508e", "class_name": "RelatedNodeInfo"}, {"node_id": "d2ce0a4e-ad12-400f-ad9a-61193a02b616", "node_type": "1", "metadata": {}, "hash": "c66b65aa746b448f2015a66bd6eef2cb4b35897abdaca8ed827fdb771eca5561", "class_name": "RelatedNodeInfo"}]}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "text": "Data version change.\nChanges in source system.\nDependencies upgrade.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMonitor data invariants in training and serving in\u2010\nputs: Alert if data does not match the schema,\nwhich has been specified in the training step.\nAction: tuning of alerting threshold to ensure\nthat alerts remain useful and not misleading.\nMonitor whether training and serving features\ncompute the same value.\nSince the generation of training and serving fea\u2010\ntures might take place on physically separated\nlocations, we must carefully test that these dif\u2010\nferent code paths are logically identical.\nAction: (1) Log a sample of the serving traffic.\n(2) Compute distribution statistics (min, max,\navg, values, % of missing values, etc.) on the\ntraining features and the sampled serving fea\u2010\ntures and ensure that they match.\nMonitor the numerical stability of the ML model.\nAction: trigger alerts for the occurrence of any\nNaNs or infinities.\nMonitor computational performance of an ML sys\u2010\ntem. Both dramatic and slow-leak regression in\ncomputational performance should be notified.\nAction: measure the performance of versions\nand components of code, data, and model by\npre-setting the alerting threshold.\nAction: collect system usage metrics like GPU\nmemory allocation, network traffic, and disk us\u2010\nage. These metrics are useful for cloud costs\nestimations.\nMonitor how stale the system in production is.\nMeasure the age of the model. Older ML models\ntend to decay in performance.\nAction: Model monitoring is a continuous\nprocess, therefore it is important to identify the\nelements for monitoring and create a strategy\nfor the model monitoring before reaching\nproduction.\nMonitor the processes of feature generation as\nthey have impact on the model.", "start_char_idx": 5646, "end_char_idx": 7677, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f709652a-4211-4c99-bfdb-564137f3c1ff": {"__data__": {"id_": "f709652a-4211-4c99-bfdb-564137f3c1ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "node_type": "1", "metadata": {}, "hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "305cc266-361e-46b0-a7ed-0229ed2dc951", "node_type": "1", "metadata": {}, "hash": "5913fbfd7d84ed3efd24a928d1a4503424a65265a15c6b768b680f1f6614c0ae", "class_name": "RelatedNodeInfo"}, {"node_id": "321fcb63-d95c-4677-9785-63b5f08cecf9", "node_type": "1", "metadata": {}, "hash": "0b02ab09df556b96705d580b8625f012321bddf13fa82671da88c956f999bb97", "class_name": "RelatedNodeInfo"}, {"node_id": "1498a664-7df3-4580-80aa-da852b9765ca", "node_type": "1", "metadata": {}, "hash": "9d936f328c0ddf9a205f3c1b69727fa6798735c3735c36f2ec907a58fc360b6d", "class_name": "RelatedNodeInfo"}]}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "text": "Monitor the processes of feature generation as\nthey have impact on the model.\nAction: re-run feature generation on a frequentBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nbasis.\nMonitor degradation of the predictive quality of the\nML model on served data. Both dramatic and slow-\nleak regression in prediction quality should be\nnotified.\nDegradation might happened due to changes in\ndata or differing code paths, etc.\nAction: Measure statistical bias in predictions\n(avg in predictions in a slice of data). Models\nshould have nearly zero bias.\nAction: If a label is available immediately after\nthe prediction is made, we can measure the\nquality of prediction in real-time and identify\nproblems.\nThe picture below shows that the model monitoring\ncan be implemented by tracking the precision, recall,\nand F1-score of the model prediction along with the\ntime. The decrease of the precision, recall, and F1-score\ntriggers the model retraining, which leads to model\nrecovery.\n\u201cML Test Score\u201d System\nThe \u201cML Test Score\u201d measures the overall readiness of\nthe ML system for production.", "start_char_idx": 7600, "end_char_idx": 8944, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71a03883-c942-459b-b797-21604e74eac8": {"__data__": {"id_": "71a03883-c942-459b-b797-21604e74eac8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6206d07c-1153-4eb0-bc74-d43fe861a882", "node_type": "1", "metadata": {}, "hash": "6a3c4ff801fb6183e9d217ca7a6cb95e01a3ee35e10dfc2844817376b935c6ea", "class_name": "RelatedNodeInfo"}, {"node_id": "42583b1f-8492-4241-924f-c9f3b6a52fa1", "node_type": "1", "metadata": {}, "hash": "157a8e66dae5912d08a1563c3d602b1a297300e0b7e93c4aba9d45a7647ab974", "class_name": "RelatedNodeInfo"}, {"node_id": "b890cdf5-63e3-4f21-a765-e24e1f50978b", "node_type": "1", "metadata": {}, "hash": "bc326012d182def302ba231118ef305a6e57ed8191806e952cd4b9d72d4eecc8", "class_name": "RelatedNodeInfo"}, {"node_id": "b384dcae-5512-4c33-a499-3776bfcf85ca", "node_type": "1", "metadata": {}, "hash": "a875d07372e5772521e5d1d3ee12c7a7878b528e4672f99bf82835aa8d9d1591", "class_name": "RelatedNodeInfo"}]}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "text": "The final ML Test Score\nis computed as follows:\nFor each test, half a point is awarded for executing\nthe test manually, with the results documented and\ndistributed.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nA full point is awarded if the there is a system in\nplace to run that test automatically on a repeated\nbasis.\nSum the score of each of the four sections individu\u2010\nally: Data Tests, Model Tests, ML Infrastructure\nTests, and Monitoring.\nThe final ML Test Score is computed by taking the\nminimum of the scores aggregated for each of the\nsections: Data Tests, Model Tests, ML\nInfrastructure Tests, and Monitoring.\nAfter computing the ML Test Score, we can reason\nabout the readiness of the ML system for production.\nThe following table provides the interpretation ranges:\nPoints Description\n0 More of the research project than a productionized\nsystem.\n(0,1] Not totally untested, but it is worth considering the\npossibility of serious holes in reliability.\n(1,2] There has been first pass at basic productionization,\nbut additional investment may be needed.\n(2,3] Reasonably tested, but it is possible that more of\nthose tests and procedures may be automated.\n(3,5] Strong level of automated testing and monitoring.\n>5 Exceptional level of automated testing and\nmonitoring.\nSource: \u201cThe ML Test Score: A Rubric for ML\nProduction Readiness and Technical Debt Reduction\u201d\nby E.Breck et al.", "start_char_idx": 0, "end_char_idx": 1659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "184598be-7970-47d5-8ba1-3495d65a5982": {"__data__": {"id_": "184598be-7970-47d5-8ba1-3495d65a5982", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "94bc3331-64ca-49c4-9998-97c7e964d574", "node_type": "1", "metadata": {}, "hash": "003324236cba9b537d539eca61e7fd5de4ba7e11ccf0e261a02e92cdbb406f97", "class_name": "RelatedNodeInfo"}, {"node_id": "0f27daf2-26b8-489e-8cb6-47577e9d8900", "node_type": "1", "metadata": {}, "hash": "1d57b32a9c46f52e0c790230c5afd912325079ff00f3442d93af7aab56dbe908", "class_name": "RelatedNodeInfo"}, {"node_id": "b33651d7-e2b9-4b0c-8002-33c07a7fe702", "node_type": "1", "metadata": {}, "hash": "39b3d3f68012bdcfce8cbd6c32ad1632099993a79b5180f79356ed4007cc9d6b", "class_name": "RelatedNodeInfo"}, {"node_id": "8bae23d5-e668-426c-bbcb-018a6807a5e0", "node_type": "1", "metadata": {}, "hash": "77ba0aace675f30d38ce6c76b8ea23ccb68ef021f7fd39c939249b58363a0eda", "class_name": "RelatedNodeInfo"}, {"node_id": "f43a0660-a0cb-49c1-93fc-21f7354cf830", "node_type": "1", "metadata": {}, "hash": "0d83b25e1cad8905b5549d6b0d512366cb52a5d8e5d068293583a82a03d0f9a5", "class_name": "RelatedNodeInfo"}]}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "text": "2017\nReproducibility\nReproducibility in a machine learning workflow means\nthat every phase of either data processing, ML model\ntraining, and ML model deployment should produce\nidentical results given the same input.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nPhase ChallengesHow to Ensure\nReproducibility\nCollecting\nDataGeneration of the\ntraining data can't\nbe reproduced (e.g\ndue to constant\ndatabase changes\nor data loading is\nrandom)1) Always backup your\ndata.\n2) Saving a snapshot\nof the data set (e.g.\non the cloud storage).\n3) Data sources\nshould be designed\nwith timestamps so\nthat a view of the\ndata at any point can\nbe retrieved.\n4) Data versioning.\nFeature\nEngineeringScenarios:\n1) Missing values\nare imputed with\nrandom or mean\nvalues.\n2) Removing labels\nbased on the per\u2010\ncentage of observa\u2010\ntion.\n3) Non-determinis\u2010\ntic feature extrac\u2010\ntion methods.1) Feature generation\ncode should be taken\nunder version control.\n2) Require repro\u2010\nducibility of the previ\u2010\nous step \"Collecting\nData\"\nModel\nTraining /\nModel BuildNon-determinism 1) Ensure the order of\nfeatures is always the\nsame.\n2) Document and au\u2010\ntomate feature trans\u2010\nformation, such as\nnormalization.\n3) Document and au\u2010\ntomate hyperparame\u2010\nter selection.\n4) For ensemble learn\u2010\ning: document and au\u2010\ntomate the combina\u2010\ntion of ML models.\nModel\nDeployment1) Training the ML\nmodel has been\nperformed with a\nsoftware version\nthat is different to\nthe production envi\u2010\nronment.\n2) The input data,\nwhich is required by\nthe ML model is\nmissing in the pro\u2010\nduction\nenvironment.1) Software versions\nand dependencies\nshould match the pro\u2010\nduction environment.", "start_char_idx": 1660, "end_char_idx": 3549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fcae3af-5c06-43ee-8163-850e87e5b408": {"__data__": {"id_": "4fcae3af-5c06-43ee-8163-850e87e5b408", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "53c4be28-95c7-496d-b8a6-b771eec1ff8d", "node_type": "1", "metadata": {}, "hash": "35e5adbb7092798fc053d43db307e7f21751a9b656282f6b4a443a6c8c6f3167", "class_name": "RelatedNodeInfo"}, {"node_id": "a27df6ef-1e79-46b1-8d46-1bd60daa381e", "node_type": "1", "metadata": {}, "hash": "a7279571d180d784a17c9f480613df27f910efd7d9093a3611d378a02a90e17f", "class_name": "RelatedNodeInfo"}, {"node_id": "9e0e8481-7aad-43d0-a105-05a7a37ed67f", "node_type": "1", "metadata": {}, "hash": "64b0bdb321d76d9fef7dc8373ea1d17c82253184d674abd16f2a4fe19fe8bbb7", "class_name": "RelatedNodeInfo"}, {"node_id": "5712e442-71a5-417c-ae70-c10634cbdd6f", "node_type": "1", "metadata": {}, "hash": "91226ee9c8a38811851d31a38a8f1a67a231ee2a46cb1b11750755a07d9f5d7d", "class_name": "RelatedNodeInfo"}, {"node_id": "bed55be9-7411-435a-9b92-c6246b7a935d", "node_type": "1", "metadata": {}, "hash": "4ee47784f40d49fbc2a17bc47a2f010c97f87e901f7f60d465f0b59a5ef5c92e", "class_name": "RelatedNodeInfo"}]}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "text": "2) Use a container\n(Docker) and docu\u2010\nment its specification,\nsuch as image version.\n3) Ideally, the same\nprogramming lan\u2010\nguage is used for\ntraining and\ndeployment.\nLoosely Coupled Architecture\n(Modularity)Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAccording to Gene Kim et al., in their book\n\u201cAccelerate\u201d, \u201chigh performance [in software delivery]\nis possible with all kinds of systems, provided that sys\u2010\ntems\u2014and the teams that build and maintain them \u2014\nare loosely coupled. This key architectural property en\u2010\nables teams to easily test and deploy individual com\u2010\nponents or services even as the organization and the\nnumber of systems it operates grow\u2014that is, it allows\norganizations to increase their productivity as they\nscale.\u201d\nAdditionally, Gene Kim et al., recommend to \u201cuse a\nloosely coupled architecture. This affects the extent to\nwhich a team can test and deploy their applications on\ndemand, without requiring orchestration with other\nservices. Having a loosely coupled architecture allows\nyour teams to work independently, without relying on\nother teams for support and services, which in turn en\u2010\nables them to work quickly and deliver value to the\norganization.\u201d\nRegarding ML-based software systems, it can be more\ndifficult to achieve loose coupling between machine\nlearning components than for traditional software\ncomponents. ML systems have weak component\nboundaries in several ways. For example, the outputs\nof ML models can be used as the inputs to another ML\nmodel and such interleaved dependencies might affect\none another during training and testing.\nBasic modularity can be achieved by structuring the\nmachine learning project.", "start_char_idx": 3550, "end_char_idx": 5475, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1b517c9-af44-40ff-a58d-2a9900695b35": {"__data__": {"id_": "c1b517c9-af44-40ff-a58d-2a9900695b35", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9803418a-96e0-4315-b2ca-cabf46837209", "node_type": "1", "metadata": {}, "hash": "181e4de98ef95bd57174f2677196636de4228b5b92d0e0878775cb116a1d8ecd", "class_name": "RelatedNodeInfo"}, {"node_id": "d808c73f-e825-461c-95d4-b0bd0b5b074d", "node_type": "1", "metadata": {}, "hash": "22e6752d05854cd1c4ce1eefcf5c739210aa68bda7d924a24d0d10dd5c416492", "class_name": "RelatedNodeInfo"}, {"node_id": "46339c77-c80c-433c-8ecd-43d5323a2965", "node_type": "1", "metadata": {}, "hash": "dc0d29f6d514febbf77862318df9fce0d8b886e9ce6016c5fc05149963062dc1", "class_name": "RelatedNodeInfo"}, {"node_id": "4baa4868-a654-4e4b-93d4-1eb0d850dc63", "node_type": "1", "metadata": {}, "hash": "1dfd9fa2f118d2399e94d806cdecc2a7542cd3a53279d1a70d0c11baabc33256", "class_name": "RelatedNodeInfo"}, {"node_id": "fa8c8e40-60c3-42d9-9104-22fcac806347", "node_type": "1", "metadata": {}, "hash": "a9049a6de392b1c661b7f5b937b7a88eb4785a30dbe7243372bfe4b817c8c956", "class_name": "RelatedNodeInfo"}]}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "text": "Basic modularity can be achieved by structuring the\nmachine learning project. To set up a standard project\nstructure, we recommend using dedicated templates\nsuch as\nCookiecutter Data Science Project Template\nThe Data Science Lifecycle Process Template\nPyScaffold\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nIn the most resent study on the state of DevOps, the\nauthors emphasized four key metrics that capture the\neffectivenes of the software development and delivery\nof elite/high performing organisations: Deployment\nFrequency, Lead Time for Changes, Mean Time ToBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nRestore, and Change Fail Percentage. These metrics\nhave been found useful to measure and improve ones\nML-based software delivery. In the following table, we\ngive the definition of each of the metricts and make\nthe connection to MLOps.\nMetric DevOps MLOps\nDeployment\nFrequencyHow often\ndoes your or\u2010\nganization\ndeploy code\nto production\nor release it\nto end-users?ML Model Deployment\nFrequency depends on\n1) Model retraining require\u2010\nments (ranging from less\nfrequent to online training).\nTwo aspects are crucial for\nmodel retraining\n1.1) Model decay metric.\n1.2) New data availability.\n2) The level of automation of\nthe deployment process,\nwhich might range between\n*manual deployment* and\n*fully automated CI/CD\npipeline*.\nLead Time\nfor ChangesHow long\ndoes it take\nto go from\ncode commit\u2010\nted to code\nsuccessfully\nrunning in\nproduction?ML Model Lead Time for\nChanges depends on\n1) Duration of the explorative\nphase in Data Science in or\u2010\nder to finalize the ML model\nfor deployment/serving.\n2) Duration of the ML model\ntraining.\n3) The number and duration\nof manual steps during the\ndeployment process.", "start_char_idx": 5398, "end_char_idx": 7400, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba92c151-064a-411f-8f21-6a0dfa57c3c1": {"__data__": {"id_": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57328f93-818f-4727-8222-c596382ef989", "node_type": "1", "metadata": {}, "hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7a3cd01e-bd8c-4508-b023-1f030efb5d70", "node_type": "1", "metadata": {}, "hash": "a99c390ae7cd922a3a7bc56366e9151a64bce5f0851afceb01a02c8ed0091b23", "class_name": "RelatedNodeInfo"}, {"node_id": "8b93a573-d8fe-4e04-a22e-a7dd5095aa52", "node_type": "1", "metadata": {}, "hash": "8c367424ad565a799bba13310932d924d25e710ad1a7f57fe2d8704877a37114", "class_name": "RelatedNodeInfo"}, {"node_id": "82c157d6-1485-4ff4-8229-f9693af9d444", "node_type": "1", "metadata": {}, "hash": "867dc7fb244c479348676b74e12e804cc167a8030a67cc82e8b930697e15c713", "class_name": "RelatedNodeInfo"}]}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "text": "3) The number and duration\nof manual steps during the\ndeployment process.\nMean Time\nTo Restore\n(MTTR)How long\ndoes it gener\u2010\nally take to\nrestore ser\u2010\nvice when a\nservice inci\u2010\ndent or a de\u2010\nfect that im\u2010\npacts users\noccurs (e.g.,\nunplanned\noutage or ser\u2010\nvice\nimpairment)?ML Model MTTR depends on\nthe number and duration of\nmanually performed model\ndebugging, and model de\u2010\nployment steps. In case,\nwhen the ML model should\nbe retrained, then MTTR also\ndepends on the duration of\nthe ML model training.\nAlternatively, MTTR refers to\nthe duration of the rollback\nof the ML model to the previ\u2010\nous version.\nChange\nFailure RateWhat per\u2010\ncentage of\nchanges to\nproduction or\nreleased to\nusers result in\ndegraded ser\u2010\nvice (e.g., lead\nto service im\u2010\npairment or\nservice out\u2010\nage) and sub\u2010\nsequently re\u2010ML Model Change Failure\nRate can be expressed in the\ndifference of the currently\ndeployed ML model perfor\u2010\nmance metrics to the previ\u2010\nous model's metrics, such as\nPrecision, Recall, F-1, accu\u2010\nracy, AUC, ROC, false posi\u2010\ntives, etc.", "start_char_idx": 7327, "end_char_idx": 8357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4630f66-e9d3-400a-a896-6014b851892f": {"__data__": {"id_": "e4630f66-e9d3-400a-a896-6014b851892f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a7b511c6-158d-4432-a2ba-a964d7dc3433", "node_type": "1", "metadata": {}, "hash": "b0ba74d8410114bd08f8aa51d6f79c722a7d3704e27d4cb9976edb68ecea389a", "class_name": "RelatedNodeInfo"}, {"node_id": "7c1c5a46-c21e-4dc5-9b6a-9a3a646b4e86", "node_type": "1", "metadata": {}, "hash": "f10b8e92530787354f18e751fee03652ca7cda3ac12d3be828009ce5db8c8ed1", "class_name": "RelatedNodeInfo"}, {"node_id": "26cffffb-9a18-4402-803e-119aa55c4994", "node_type": "1", "metadata": {}, "hash": "80e16649037b3a05998874f2c61c14f3ccb6e455433360870ca8b8478bffdc96", "class_name": "RelatedNodeInfo"}, {"node_id": "7bab914d-da19-408a-b3bf-592abf88699b", "node_type": "1", "metadata": {}, "hash": "c59194cbe63f0ad9efa87d09cf5447feecabec05887a106c3c1ca820141a2252", "class_name": "RelatedNodeInfo"}]}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "text": "ML Model Change\nFailure Rate is also related to\nA/B testing.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMetric DevOps MLOps\nquire remedi\u2010\nation (e.g., re\u2010\nquire a hotfix,\nrollback, fix\nforward,\npatch)?\nTo improve the effectiveness of the ML development\nand delivery process one should measure the above\nfour key metrics. A practical way to achieve such ef\u2010\nfectiveness is to implement the CI/CD pipeline first\nand adopt test-driven development for Data, ML\nModel, and Software Code pipelines.\nSummary of MLOps Principles and\nBest Practices\nThe complete ML development pipeline includes three\nlevels where changes can occur: Data, ML Model, and\nCode. This means that in machine learning-based sys\u2010\ntems, the trigger for a build might be the combination\nof a code change, data change or model change. The\nfollowing table summarizes the MLOps principles for\nbuilding ML-based software:\nMLOps\nPrinciples Data ML Model Code\nVersioning 1) Data\nprepara\u2010\ntion pipe\u2010\nlines\n2)\nFeatures\nstore\n3)\nDatasets\n4)\nMetadata1) ML model training pipe\u2010\nline\n2) ML model (object)\n3) Hyperparameters\n4) Experiment tracking1) Application\ncode\n2)\nConfigurations\nTesting 1) Data\nValidation\n(error de\u2010\ntection)\n2) Feature\ncreation\nunit\ntesting1) Model specification is unit\ntested\n2) ML model training pipe\u2010\nline is integration tested\n3) ML model is validated be\u2010\nfore being operationalized\n4) ML model staleness test\n(in production)\n5) Testing ML model rele\u2010\nvance and correctness\n6) Testing non-functional\nrequirements (security, fair\u2010\nness,", "start_char_idx": 0, "end_char_idx": 1785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1368a402-6ab3-453c-a888-6ab05bf57a23": {"__data__": {"id_": "1368a402-6ab3-453c-a888-6ab05bf57a23", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2b7f456e-3a0d-441d-83f2-c29e2ff448b4", "node_type": "1", "metadata": {}, "hash": "2a6bac078f6b5499217eb74dfdcb3444a3d898da8d658bb527afc4265b9e711f", "class_name": "RelatedNodeInfo"}, {"node_id": "79bd5447-1e29-4695-8cb8-96d6a94888f1", "node_type": "1", "metadata": {}, "hash": "4df94d52b6d58e75746a9e14c9da342115d16b93d2cab4cbae623b672f2ff2f8", "class_name": "RelatedNodeInfo"}, {"node_id": "e4e26d94-d41a-4612-a630-935e50c8be7e", "node_type": "1", "metadata": {}, "hash": "535d14b9ac859f9754bd7db0e800ea2f2aacd5149a2db62e515db7b1982897c3", "class_name": "RelatedNodeInfo"}, {"node_id": "09b30c55-035e-442a-a6d5-d7c0850f9669", "node_type": "1", "metadata": {}, "hash": "0cdc789b94825f8a39f822f9c3119f45458d1e62d7e4f7395fa84037a7fb1bf0", "class_name": "RelatedNodeInfo"}]}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "text": "fair\u2010\nness, interpretability)1) Unit testing\n2) Integration\ntesting for the\nend-to-end\npipeline\nAutomation 1) Data\ntransfor\u2010\nmation1) Data engineering pipeline\n2) ML model training pipe\u2010\nline1) ML model\ndeployment\nwith CI/CDBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMLOps\nPrinciples Data ML Model Code\n2) Feature\ncreation\nand\nmanipula\u2010\ntion3)\nHyperparameter/Parameter\nselection2) Application\nbuild\nReproducibility 1) Backup\ndata\n2) Data\nversioning\n3) Extract\nmetadata\n4)\nVersioning\nof feature\nengineer\u2010\ning1) Hyperparameter tuning is\nidentical between dev and\nprod\n2) The order of features is\nthe same\n3) Ensemble learning: the\ncombination of ML models\nis same\n4)The model pseudo-code is\ndocumented1) Versions of\nall dependen\u2010\ncies in dev and\nprod are iden\u2010\ntical\n2) Same tech\u2010\nnical stack for\ndev and pro\u2010\nduction envi\u2010\nronments\n3)\nReproducing\nresults by pro\u2010\nviding con\u2010\ntainer images\nor virtual\nmachines\nDeployment 1) Feature\nstore is\nused in\ndev and\nprod\nenviron\u2010\nments1) Containerization of the\nML stack\n2) REST API\n3) On-premise, cloud, or\nedge1) On-premise\ncloud, or edge\nMonitoring 1) Data\ndistribu\u2010\ntion\nchanges\n(training\nvs.", "start_char_idx": 1774, "end_char_idx": 3179, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4efa7cd5-9fdc-4d27-85d7-da34c73536ef": {"__data__": {"id_": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e8ccf3d5-5a82-47b8-b11a-5e88799e669e", "node_type": "1", "metadata": {}, "hash": "2b5433015f450a783aad69d5f1a9ee09138d0f8c26da677de19383ad5c90fefa", "class_name": "RelatedNodeInfo"}, {"node_id": "9fcdb236-aa42-4a0c-a3a7-858e913b4446", "node_type": "1", "metadata": {}, "hash": "7d90164ad435ad284c18b49ea9fec82fca5d4fd0c7abe5381fc6c09b61a98a6e", "class_name": "RelatedNodeInfo"}, {"node_id": "0a36c17f-5fd7-4296-933b-c9a39f290a66", "node_type": "1", "metadata": {}, "hash": "d8c3c8721f2a95cd1547ae04351f3c45ec21b5b6ed98f46a0b8623c80982bba4", "class_name": "RelatedNodeInfo"}, {"node_id": "9240184d-6865-4a68-89e9-ef3c72284881", "node_type": "1", "metadata": {}, "hash": "a7665bf4b7d6395547e6ce255a0429dc91d20c74629942e51832094e02a853a3", "class_name": "RelatedNodeInfo"}, {"node_id": "432dc6bc-84d9-4165-9774-2181e5498835", "node_type": "1", "metadata": {}, "hash": "51c5a3447e2742ae26f1e47e478e1c2e60406cfb28a73f30589d6ab7d72422c1", "class_name": "RelatedNodeInfo"}]}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "text": "serving\ndata)\n2)\nTraining\nvs serving\nfeatures1) ML model decay\n2) Numerical stability\n3) Computational perfor\u2010\nmance of the ML model1) Predictive\nquality of the\napplication on\nserving data\nAlong with the MLOps principles, following the set of\nbest practices should help reducing the \u201ctechnical\ndebt\u201d of the ML project:\nMLOps Best\nPractices DataML\nModel Code\nDocumentation 1) Data\nsources\n2) Decisions,\nhow/where\nto get data\n3) Labelling\nmethods1) Model\nselection\ncriteria\n2) Design\nof experi\u2010\nments\n3) Model\npseudo-\ncode1)\nDeployment\nprocess\n2) How to run\nlocallyBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMLOps Best\nPractices DataML\nModel Code\nProject\nStructure1) Data\nfolder for\nraw and\nprocessed\ndata\n2) A folder\nfor data en\u2010\ngineering\npipeline\n3) Test\nfolder for\ndata engi\u2010\nneering\nmethods1) A\nfolder\nthat con\u2010\ntains the\ntrained\nmodel\n2) A\nfolder for\nnote\u2010\nbooks\n3) A\nfolder for\nfeature\nengineer\u2010\ning\n4)A\nfolder for\nML\nmodel\nengineer\u2010\ning1) A folder for\nbash/shell\nscripts\n2) A folder\nfor tests\n3) A folder\nfor deploy\u2010\nment files\n(e.g Docker\nfiles)\nThe content of this site was created by\nDr. Larysa Visengeriyeva, Anja Kammer,\nIsabel B\u00e4r, Alexander Kniesz, and Michael\nPl\u00f6d (DDD Advisor). Design made by\nSebastian Eberstaller.\nIt is published under Creative Commons\nAttribution 4.0 International Public\nLicense and can therefore be shared and\nadapted with attribution (\"INNOQ\").", "start_char_idx": 3180, "end_char_idx": 4833, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d625f540-381d-499a-85ff-aa967dd9d39f": {"__data__": {"id_": "d625f540-381d-499a-85ff-aa967dd9d39f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701", "node_type": "1", "metadata": {}, "hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "db38802c-2b7d-4ed4-8da5-a489be6f4af4", "node_type": "1", "metadata": {}, "hash": "d2b6fdb7a3dbce6a6a3d2d7ccf54dfc5342119f2000979f4885b4f8db988a10a", "class_name": "RelatedNodeInfo"}, {"node_id": "ea4df9d3-e098-4ea5-bf19-ac641a1ec025", "node_type": "1", "metadata": {}, "hash": "6824e11d2d169e89563092f39812c33d446cb0df1ef7925bdf1770e56f9ff8b3", "class_name": "RelatedNodeInfo"}, {"node_id": "74dc7ca9-d179-420a-a225-0df2ef70fb95", "node_type": "1", "metadata": {}, "hash": "6333b65522d472e612b882a95a2b524f5e90cd5b4abb43a0fe5e4625dfae5e88", "class_name": "RelatedNodeInfo"}, {"node_id": "13407554-22ae-4438-a991-08c9b06c15e7", "node_type": "1", "metadata": {}, "hash": "8492df127d6fe49fe1f69c99594d56d388c781f7e84296730eb0e442f84e5f4a", "class_name": "RelatedNodeInfo"}, {"node_id": "a81b5efe-769a-4b67-8d91-eb489f5d2f1b", "node_type": "1", "metadata": {}, "hash": "2bcd2dac3e2d55bae38a5a0ffc9452f627dfd2ada0e86153d5892284870d7f93", "class_name": "RelatedNodeInfo"}]}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "text": "Made and maintained by\nPrivacy | Site noticeBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMachine Learning Operations (MLOps):  Overview, Definition, and Architecture Dominik Kreuzberger  KIT  Germany dominik.kreuzberger@alumni.kit.edu Niklas K\u00fchl  KIT  Germany  kuehl@kit.edu  Sebastian Hirschl   IBM\u2020   Germany   sebastian.hirschl@de.ibm.comABSTRACT The final goal of all industrial machine learning (ML) projects is to develop ML products and rapidly bring them into production. However, it is highly challenging to automate and operationalize ML products and thus many ML endeavors fail to deliver on their expectations. The paradigm of Machine Learning Operations (MLOps) addresses this issue. MLOps includes several aspects, such as best practices, sets of concepts, and development culture. However, MLOps is still a vague term and its consequences for researchers and professionals are ambiguous. To address this gap, we conduct mixed-method research, including a literature review, a tool review, and expert interviews. As a result of these investigations, we provide an aggregated overview of the necessary principles, components, and roles, as well as the associated architecture and workflows. Furthermore, we furnish a definition of MLOps and highlight open challenges in the field. Finally, this work provides guidance for ML researchers and practitioners who want to automate and operate their ML products with a designated set of technologies. KEYWORDS CI/CD, DevOps, Machine Learning, MLOps, Operations, Workflow Orchestration 1 Introduction  Machine Learning (ML) has become an important technique to leverage the potential of data and allows businesses to be more innovative [1], efficient [13], and sustainable [22]. However, the success of many productive ML applications in real-world settings falls short of expectations [21]. A large number of ML projects fail\u2014with many ML proofs of concept never progressing as far as production [30].", "start_char_idx": 4834, "end_char_idx": 7061, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c89d5173-c1a7-4bbe-8064-2fc75161e701": {"__data__": {"id_": "c89d5173-c1a7-4bbe-8064-2fc75161e701", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a", "node_type": "1", "metadata": {}, "hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4a4cea12-5d79-406d-ad3c-21d9f227f854", "node_type": "1", "metadata": {}, "hash": "c6df11ec110851486a38f91698a09f0ce15903d90be9ae0b9e21ab96134c6828", "class_name": "RelatedNodeInfo"}, {"node_id": "c0b1a7d4-9a50-4cbe-bee6-6f62ff47091d", "node_type": "1", "metadata": {}, "hash": "d03882fcef4e14b7121bbe461f62bdd7057afa6bc415f23a7f07b2e01cb03932", "class_name": "RelatedNodeInfo"}]}, "hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "text": "From a research perspective, this does not come as a surprise as the ML community has focused extensively on the building of ML models, but not on (a) building production-ready ML products and (b) providing the necessary coordination of the resulting, often complex ML system components and infrastructure, including the roles required to automate and operate an ML system in a real-world setting [35]. For instance, in many industrial applications, data scientists still manage ML workflows manually  \u2020 This paper does not represent an official IBM statement to a great extent, resulting in many issues during the operations of the respective ML solution [26].  To address these issues, the goal of this work is to examine how manual ML processes can be automated and operationalized so that more ML proofs of concept can be brought into production. In this work, we explore the emerging ML engineering practice \u201cMachine Learning Operations\u201d\u2014MLOps for short\u2014precisely addressing the issue of designing and maintaining productive ML.", "start_char_idx": 7062, "end_char_idx": 8095, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f80aa8da-056e-480d-adcc-4ba7e1121390": {"__data__": {"id_": "f80aa8da-056e-480d-adcc-4ba7e1121390", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "90bd322e-2faf-4ed7-8261-65b54e740248", "node_type": "1", "metadata": {}, "hash": "93f3e8998e0cbc3a6a7f1d2131317c33c15d27e70bddbdae92bba8f2e4d78f08", "class_name": "RelatedNodeInfo"}, {"node_id": "7dded2c5-45d0-4ff8-9d74-34616469c23c", "node_type": "1", "metadata": {}, "hash": "a3fe1a2263da2277df03dd204d2f0e0d58fe7cb65352857f568e7cf5212abe04", "class_name": "RelatedNodeInfo"}, {"node_id": "5d467a4a-07af-4842-921c-2651fd28f6c4", "node_type": "1", "metadata": {}, "hash": "d7372b743251d29fc041217d0047d2dcc3f0832d8220d60117aee40472e37ab7", "class_name": "RelatedNodeInfo"}, {"node_id": "5b5b9057-ea0d-4db0-aef6-e8c7f9608235", "node_type": "1", "metadata": {}, "hash": "990199baf4def5f6afcf3480a3198a23db98bfcfba9aac6c78a30ab6f2a8dde2", "class_name": "RelatedNodeInfo"}, {"node_id": "99560ed0-b14e-43b7-8a97-ced0c5f26c4b", "node_type": "1", "metadata": {}, "hash": "a37bdd05bf21cae7f8d85dd312ffcd87d0b9b4c05402366da79fd4912f7197c0", "class_name": "RelatedNodeInfo"}]}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "text": "We take a holistic perspective to gain a common understanding of the involved components, principles, roles, and architectures. While existing research sheds some light on various specific aspects of MLOps, a holistic conceptualization, generalization, and clarification of ML systems design are still missing. Different perspectives and conceptions of the term \u201cMLOps\u201d might lead to misunderstandings and miscommunication, which, in turn, can lead to errors in the overall setup of the entire ML system. Thus, we ask the research question: RQ: What is MLOps? To answer that question, we conduct a mixed-method research endeavor to (a) identify important principles of MLOps, (b) carve out functional core components, (c) highlight the roles necessary to successfully implement MLOps, and (d) derive a general architecture for ML systems design. In combination, these insights result in a definition of MLOps, which contributes to a common understanding of the term and related concepts.  In so doing, we hope to positively impact academic and practical discussions by providing clear guidelines for professionals and researchers alike with precise responsibilities. These insights can assist in allowing more proofs of concept to make it into production by having fewer errors in the system\u2019s design and, finally, enabling more robust predictions in real-world environments. The remainder of this work is structured as follows. We will first elaborate on the necessary foundations and related work in the field. Next, we will give an overview of the utilized methodology, consisting of a literature review, a tool review, and an interview study. We then present the insights derived from the application of the methodology and conceptualize these by providing a unifying definition. We conclude the paper with a short summary, limitations, and outlook. \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  2 Foundations of DevOps In the past, different software process models and development methodologies surfaced in the field of software engineering. Prominent examples include waterfall [37] and the agile manifesto [5]. Those methodologies have similar aims, namely to deliver production-ready software products. A concept called \u201cDevOps\u201d emerged in the years 2008/2009 and aims to reduce issues in software development [9,31]. DevOps is more than a pure methodology and rather represents a paradigm addressing social and technical issues in organizations engaged in software development.", "start_char_idx": 0, "end_char_idx": 2524, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893": {"__data__": {"id_": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9ee7b1a2-dca2-425a-a2a4-f43643002188", "node_type": "1", "metadata": {}, "hash": "9b543fefe4ef8b65942273c9422fabc68e2fc25d2c47e40a9cfdabc577bc1383", "class_name": "RelatedNodeInfo"}, {"node_id": "c5d6ad3e-9d97-467c-b9d8-84af28a314a7", "node_type": "1", "metadata": {}, "hash": "45476748d50ff1266ab441abf103e8915cb63d92215ec10ec92fb03f342b1e54", "class_name": "RelatedNodeInfo"}, {"node_id": "a8304d01-ae23-470c-bf1c-7c60396dcad6", "node_type": "1", "metadata": {}, "hash": "4a73fdc8dcca78a09f5e07127bd39ac3358af378b0d53d6f83447518b2bde8ac", "class_name": "RelatedNodeInfo"}, {"node_id": "6462a0de-f05d-41f3-9829-6df044c4bdb0", "node_type": "1", "metadata": {}, "hash": "9c7f44a66a2d7bfb226f649ef6a87710849a047359ee24fcff54aec83548dc2a", "class_name": "RelatedNodeInfo"}, {"node_id": "1a065996-cbb8-44e6-b2a4-b9f5fe3b281f", "node_type": "1", "metadata": {}, "hash": "92b0bc7c7ca71cd44c6c233a2cbffd92c7cc2fbe50deaae7f230f5d9f84c9fef", "class_name": "RelatedNodeInfo"}]}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "text": "It has the goal of eliminating the gap between development and operations and emphasizes collaboration, communication, and knowledge sharing. It ensures automation with continuous integration, continuous delivery, and continuous deployment (CI/CD), thus allowing for fast, frequent, and reliable releases. Moreover, it is designed to ensure continuous testing, quality assurance, continuous monitoring, logging, and feedback loops. Due to the commercialization of DevOps, many DevOps tools are emerging, which can be differentiated into six groups [23,28]: collaboration and knowledge sharing (e.g., Slack, Trello, GitLab wiki), source code management (e.g., GitHub, GitLab), build process (e.g., Maven), continuous integration (e.g., Jenkins, GitLab CI), deployment automation (e.g., Kubernetes, Docker), monitoring and logging (e.g., Prometheus, Logstash). Cloud environments are increasingly equipped with ready-to-use DevOps tooling that is designed for cloud use, facilitating the efficient generation of value [38]. With this novel shift towards DevOps, developers need to care about what they develop, as they need to operate it as well. As empirical results demonstrate, DevOps ensures better software quality [34]. People in the industry, as well as academics, have gained a wealth of experience in software engineering using DevOps. This experience is now being used to automate and operationalize ML. 3 Methodology To derive insights from the academic knowledge base while also drawing upon the expertise of practitioners from the field, we apply a mixed-method approach, as depicted in Figure 1. As a first step, we conduct a structured literature review [20,43] to obtain an overview of relevant research. Furthermore, we review relevant tooling support in the field of MLOps to gain a better understanding of the technical components involved. Finally, we conduct semi-structured interviews [33,39] with experts from different domains. On that basis, we conceptualize the term \u201cMLOps\u201d and elaborate on our findings by synthesizing literature and interviews in the next chapter (\u201cResults\u201d). 3.1 Literature Review To ensure that our results are based on scientific knowledge, we conduct a systematic literature review according to the method of Webster and Watson [43] and Kitchenham et al. [20].", "start_char_idx": 2525, "end_char_idx": 4833, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccce360b-35a4-41ed-807b-5331211701de": {"__data__": {"id_": "ccce360b-35a4-41ed-807b-5331211701de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "31e12560-acbf-4c47-8b2d-96ad0f84d2fb", "node_type": "1", "metadata": {}, "hash": "93dd6753e50e3105fd23cf3a676ebba8d8cee603888af531b4a725e09e91364b", "class_name": "RelatedNodeInfo"}, {"node_id": "9a4a0ea0-3fdb-41c7-ad4c-1039d675776a", "node_type": "1", "metadata": {}, "hash": "64075042e6e19894aa403c6a01e735d345eadd8306437a896b71b672c65a67cd", "class_name": "RelatedNodeInfo"}, {"node_id": "c9b28730-67fb-4a58-877d-f3d99d4fd21c", "node_type": "1", "metadata": {}, "hash": "2028f5c2477dafdf10a6ad1bea33bff7a8385acf9b534718a4b884c738d5fa50", "class_name": "RelatedNodeInfo"}, {"node_id": "225b5ae6-a81e-41b3-b090-84bc9dd0d278", "node_type": "1", "metadata": {}, "hash": "da61691df50dc8c88fc4db295d8d5bb5ef4fac54afbcbd7fca78c9e2d2d03d05", "class_name": "RelatedNodeInfo"}, {"node_id": "e6b59695-4da2-4acd-82dd-25e8d006d49b", "node_type": "1", "metadata": {}, "hash": "c745f81ed8072420715b0ceba4ed52ef9bb5b72663a5c375a38c8ea6c8d804a6", "class_name": "RelatedNodeInfo"}]}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "text": "[20]. After an initial exploratory search, we define our search query as follows: (((\"DevOps\" OR \"CICD\" OR \"Continuous Integration\" OR \"Continuous Delivery\" OR \"Continuous Deployment\") AND \"Machine Learning\") OR \"MLOps\" OR \"CD4ML\"). We query the \nscientific databases of Google Scholar, Web of Science, Science Direct, Scopus, and the Association for Information Systems eLibrary. It should be mentioned that the use of DevOps for ML, MLOps, and continuous practices in combination with ML is a relatively new field in academic literature. Thus, only a few peer-reviewed studies are available at the time of this research. Nevertheless, to gain experience in this area, the search included non-peer-reviewed literature as well. The search was performed in May 2021 and resulted in 1,864 retrieved articles. Of those, we screened 194 papers in detail. From that group, 27 articles were selected based on our inclusion and exclusion criteria (e.g., the term MLOps or DevOps and CI/CD in combination with ML was described in detail, the article was written in English, etc.). All 27 of these articles were peer-reviewed. 3.2 Tool Review After going through 27 articles and eight interviews, various open-source tools, frameworks, and commercial cloud ML services were identified. These tools, frameworks, and ML services were reviewed to gain an understanding of the technical components of which they consist. An overview of the identified tools is depicted in Table 1 of the Appendix. 3.3 Interview Study To answer the research questions with insights from practice, we conduct semi-structured expert interviews according to Myers and Newman [33]. One major aspect in the research design of expert interviews is choosing an appropriate sample size [8]. We apply a theoretical sampling approach [12], which allows us to choose experienced interview partners to obtain high-quality data. Such data can provide meaningful insights with a limited number of interviews. To get an adequate sample group and reliable insights, we use LinkedIn\u2014a social network for professionals\u2014to identify experienced ML professionals with profound MLOps knowledge on a global level. To gain insights from various perspectives, we choose interview partners from different organizations and industries, different countries and nationalities, as well as different genders. Interviews are conducted until no new categories and concepts emerge in the analysis of the data.", "start_char_idx": 4828, "end_char_idx": 7272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db0aa27b-ea92-4876-8486-17599745f512": {"__data__": {"id_": "db0aa27b-ea92-4876-8486-17599745f512", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e42b7ba-699f-4007-b796-b1828f7088eb", "node_type": "1", "metadata": {}, "hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0d3b2897-8759-4e5a-b14c-e805f5e5ea97", "node_type": "1", "metadata": {}, "hash": "91973ab1f30d4721cd79d590dbbc9be6853c661dd234323a40e78de1af4c1849", "class_name": "RelatedNodeInfo"}, {"node_id": "1ccfc152-03d2-4f6e-af81-dff5ba9055ca", "node_type": "1", "metadata": {}, "hash": "0202e655f14f5292e8104b71516944f15c45c3543e4097b04e1ff63de08f292e", "class_name": "RelatedNodeInfo"}, {"node_id": "a82aa6c0-6adb-4ef3-810a-72479dd78648", "node_type": "1", "metadata": {}, "hash": "307aab1d9eb0e3846845588d574f55179ed3e27c0221db160d006b365464644a", "class_name": "RelatedNodeInfo"}, {"node_id": "6f492e26-fa96-4d6a-bc71-14dff335e96e", "node_type": "1", "metadata": {}, "hash": "52c13bfa521f151d89dcc2468a51e859c559d43a3676624397c1dd024ce7f88d", "class_name": "RelatedNodeInfo"}, {"node_id": "5a51a28c-2d72-45ad-ab74-730d1d8fc4cf", "node_type": "1", "metadata": {}, "hash": "df2281cba15db76fb853df6823db070341ccce2626bc32a73456e6ca09796193", "class_name": "RelatedNodeInfo"}]}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "text": "Interviews are conducted until no new categories and concepts emerge in the analysis of the data. In total, we conduct eight interviews with experts (\u03b1 - \u03b8), whose details are depicted in Table 2 of the Appendix. According to Glaser and MethodologyResultsMLOpsPrinciplesComponentsRolesArchitectureLiterature Review(27 articles)Tool Review(11 tools)Interview Study(8 interviewees)\nFigure 1. Overview of the methodology \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n Strauss [5, p.61], this stage is called \u201ctheoretical saturation.\u201d All interviews are conducted between June and August 2021.  With regard to the interview design, we prepare a semi-structured guide with several questions, documented as an interview script [33]. During the interviews, \u201csoft laddering\u201d is used with \u201chow\u201d and \u201cwhy\u201d questions to probe the interviewees\u2019 means-end chain [39]. This methodical approach allowed us to gain additional insight into the experiences of the interviewees when required. All interviews are recorded and then transcribed. To evaluate the interview transcripts, we use an open coding scheme [8]. 4 Results We apply the described methodology and structure our resulting insights into a presentation of important principles, their resulting instantiation as components, the description of necessary roles, as well as a suggestion for the architecture and workflow resulting from the combination of these aspects. Finally, we derive the conceptualization of the term and provide a definition of MLOps. 4.1 Principles A principle is viewed as a general or basic truth, a value, or a guide for behavior. In the context of MLOps, a principle is a guide to how things should be realized in MLOps and is closely related to the term \u201cbest practices\u201d from the professional sector. Based on the outlined methodology, we identified nine principles required to realize MLOps. Figure 2 provides an illustration of these principles and links them to the components with which they are associated.  \nP1 CI/CD automation. CI/CD automation provides continuous integration, continuous delivery, and continuous deployment. It carries out the build, test, delivery, and deploy steps. It provides fast feedback to developers regarding the success or failure of certain steps, thus increasing the overall productivity [15,17,26,27,35,42,46] [\u03b1, \u03b2, \u03b8].  P2 Workflow orchestration.", "start_char_idx": 7175, "end_char_idx": 9527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e42b7ba-699f-4007-b796-b1828f7088eb": {"__data__": {"id_": "5e42b7ba-699f-4007-b796-b1828f7088eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00", "node_type": "1", "metadata": {}, "hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5dcf6c8a-9ef8-40a4-becb-54fddc67d134", "node_type": "1", "metadata": {}, "hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "class_name": "RelatedNodeInfo"}]}, "hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "text": "P2 Workflow orchestration. Workflow orchestration coordinates the tasks of an ML workflow pipeline according to directed acyclic graphs (DAGs). DAGs define the task execution order by considering relationships and dependencies [14,17,26,32,40,41] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b6, \u03b7]. P3 Reproducibility.", "start_char_idx": 9501, "end_char_idx": 9787, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "568e0f92-74aa-4a54-a55d-b1b7a1bbb066": {"__data__": {"id_": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0f79fa48-9598-48f6-8911-8dc6cc59c128", "node_type": "1", "metadata": {}, "hash": "9826a34850459d835c19bf1f4d828c0f8e8ff09bad85245bc4061bf667c1fa47", "class_name": "RelatedNodeInfo"}, {"node_id": "e6378a24-0227-4c82-8511-8c028cf5ef3d", "node_type": "1", "metadata": {}, "hash": "813159ee8ce76806b8507c5acac7e93a6a35647842e6642dc0f62abd64147ab8", "class_name": "RelatedNodeInfo"}, {"node_id": "fb5fad50-9e27-4fb2-929e-0db25688f5af", "node_type": "1", "metadata": {}, "hash": "1252febea3fe4df9aa998db5442056e2d3eef6692f63d8f7e9c643679bae8ab9", "class_name": "RelatedNodeInfo"}, {"node_id": "0e1af8fa-2b32-43cf-9927-e5001c9051df", "node_type": "1", "metadata": {}, "hash": "3d74257a14f0fe0e99e66381586c9e92053bd6f3bdc2bba2fafcb8148894996f", "class_name": "RelatedNodeInfo"}, {"node_id": "4eb1dcaf-b8bd-4898-bdf2-c777104d1c5f", "node_type": "1", "metadata": {}, "hash": "63b4d530951881b3a037712f9fb8caa10ba4d6c61aa82aab9ca5e66535cffffb", "class_name": "RelatedNodeInfo"}]}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "text": "P3 Reproducibility. Reproducibility is the ability to reproduce an ML experiment and obtain the exact same results [14,32,40,46] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b7]. P4 Versioning. Versioning ensures the versioning of data, model, and code to enable not only reproducibility, but also traceability (for compliance and auditing reasons) [14,32,40,46] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b7]. P5 Collaboration. Collaboration ensures the possibility to work collaboratively on data, model, and code. Besides the technical aspect, this principle emphasizes a collaborative and communicative work culture aiming to reduce domain silos between different roles [14,26,40] [\u03b1, \u03b4, \u03b8].  P6 Continuous ML training & evaluation. Continuous training means periodic retraining of the ML model based on new feature data. Continuous training is enabled through the support of a monitoring component, a feedback loop, and an automated ML workflow pipeline. Continuous training always includes an evaluation run to assess the change in model quality [10,17,19,46] [\u03b2, \u03b4, \u03b7, \u03b8].  P7 ML metadata tracking/logging. Metadata is tracked and logged for each orchestrated ML workflow task. Metadata tracking and logging is required for each training job iteration (e.g., training date and time, duration, etc.), including the model specific metadata\u2014e.g., used parameters and the resulting performance metrics, model lineage: data and code used\u2014to ensure the full traceability of experiment runs [26,27,29,32,35] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8]. P8 Continuous monitoring. Continuous monitoring implies the periodic assessment of data, model, code, infrastructure resources, and model serving performance (e.g., prediction accuracy) to detect potential errors or changes that influence the product quality [4,7,10,27,29,42,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7].  P9 Feedback loops. Multiple feedback loops are required to integrate insights from the quality assessment step into the development or engineering process (e.g., a feedback loop from the experimental model engineering stage to the previous feature engineering stage).", "start_char_idx": 0, "end_char_idx": 2038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52cf35a2-f41d-4c76-b56d-8ac809eb1556": {"__data__": {"id_": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "15c961b8-fcbf-4ad8-a360-a4dc78ca4691", "node_type": "1", "metadata": {}, "hash": "680b54c30ce6d766a59faf001e8135104e9da23f3a4d1f064ad89c0458575443", "class_name": "RelatedNodeInfo"}, {"node_id": "6a8d2732-afa0-4cf2-8e49-5b70a0c1a13b", "node_type": "1", "metadata": {}, "hash": "203d91d62fe8775dbac290215d92020388433e2d844cfe9f2dd97f3e65a48f5d", "class_name": "RelatedNodeInfo"}, {"node_id": "5c01e908-9c6b-4c09-b732-9f9441441f6a", "node_type": "1", "metadata": {}, "hash": "a2c09b0b9bb506b64258f0e21f39d6609dd173b11cc0a16c24ea3ec532792b54", "class_name": "RelatedNodeInfo"}, {"node_id": "4ddd9932-61e0-4107-8d22-e25f53b88f28", "node_type": "1", "metadata": {}, "hash": "8d2a22cdadf4fd556f121ef4d25021c72a80318bca8ab9b36219f8e3eaf85b0d", "class_name": "RelatedNodeInfo"}, {"node_id": "04a87901-9db4-4399-ab2d-afe1f0dd996d", "node_type": "1", "metadata": {}, "hash": "1443853dda990fa9b490cbb0338db5fda9e6fd50510ecb56d6bddd9499e32ff8", "class_name": "RelatedNodeInfo"}, {"node_id": "c978d67c-bbcc-4149-be14-2bf06746d9a8", "node_type": "1", "metadata": {}, "hash": "4801fe8361b94988bbaee84a8c6fce73dd50fe1ae9e4b5f915470adda5cf12bc", "class_name": "RelatedNodeInfo"}]}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "text": "Another feedback loop is required from the monitoring component (e.g., observing the model serving performance) to the scheduler to enable the retraining [4,6,7,17,27,46] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b7, \u03b8]. 4.2 Technical Components After identifying the principles that need to be incorporated into MLOps, we now elaborate on the precise components and implement them in the ML systems design. In the following, the components are listed and described in a generic way with their essential functionalities. The references in brackets refer to the respective principles that the technical components are implementing. C1 CI/CD Component (P1, P6, P9). The CI/CD component ensures continuous integration, continuous delivery, and continuous deployment. It takes care of the build, test, delivery, and deploy steps. It provides rapid feedback to developers regarding the success or failure of certain steps, thus increasing the overall productivity [10,15,17,26,35,46] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7]. Examples are Jenkins [17,26] and GitHub actions (\u03b7). Source Code Repository CI/CD ComponentWorkflow Orchestration ComponentFeatureStoresModel Training InfrastructureModel Registry\nML Metadata StoresMonitoring ComponentModel Serving ComponentPRINCIPLESP1CI/CD automationP2Workflow orchestrationP3ReproducibilityP4Versioning of data, code, modelP5CollaborationP6Continuous ML training & evaluationP7ML metadata trackingP8Continuous monitoringP9Feedback loopsP1P6P9P4P5P2P3P6P6P3P4P3P4P8P9P4P7P1\nCOMPONENTFigure 2. Implementation of principles within technical components \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  C2 Source Code Repository (P4, P5). The source code repository ensures code storing and versioning. It allows multiple developers to commit and merge their code [17,25,42,44,46] [\u03b1, \u03b2, \u03b3, \u03b6, \u03b8]. Examples include Bitbucket [11] [\u03b6], GitLab [11,17] [\u03b6], GitHub [25] [\u03b6 ,\u03b7], and Gitea [46].", "start_char_idx": 2039, "end_char_idx": 3947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04a4b035-21c1-4369-9c6d-2c8256b1e9cd": {"__data__": {"id_": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3269e536-db30-4391-a2ba-a53cd3e3cf78", "node_type": "1", "metadata": {}, "hash": "b590d89e56b547bd1a3c4fd669860336762ff50241a39ff6d0ef94c2ff4c8c78", "class_name": "RelatedNodeInfo"}, {"node_id": "6e821d96-904a-44d9-b391-308b59e81bd4", "node_type": "1", "metadata": {}, "hash": "eccf118632746ad087edfa3626f9b010186306afd421711635294d65a3091b3f", "class_name": "RelatedNodeInfo"}, {"node_id": "d1ee1453-3be7-4752-8d36-d542ca0eeded", "node_type": "1", "metadata": {}, "hash": "25fbe575cb215a78c027fe3b5a2f122379e4fdb45235ad4d6bbd48c2a17199e6", "class_name": "RelatedNodeInfo"}, {"node_id": "1e41f815-cb98-42c8-9107-72f71d09f1ae", "node_type": "1", "metadata": {}, "hash": "08d6ea92e5275b96484f6efcce09d4ab45efc4ce548eeeb0648ca09828382277", "class_name": "RelatedNodeInfo"}, {"node_id": "0da85683-9ff5-4f0a-9eb0-1808af60e198", "node_type": "1", "metadata": {}, "hash": "2d72ef66fe1dc2ae967e9c2d07e1737f12c14e46d1ed8ff4bc8965baccdaa696", "class_name": "RelatedNodeInfo"}]}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "text": "C3 Workflow Orchestration Component (P2, P3, P6). The workflow orchestration component offers task orchestration of an ML workflow via directed acyclic graphs (DAGs). These graphs represent execution order and artifact usage of single steps of the workflow [26,32,35,40,41,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7]. Examples include Apache Airflow [\u03b1, \u03b6], Kubeflow Pipelines [\u03b6], Luigi [\u03b6], AWS SageMaker Pipelines [\u03b2], and Azure Pipelines [\u03b5]. C4 Feature Store System (P3, P4). A feature store system ensures central storage of commonly used features. It has two databases configured: One database as an offline feature store to serve features with normal latency for experimentation, and one database as an online store to serve features with low latency for predictions in production [10,14] [\u03b1, \u03b2, \u03b6, \u03b5, \u03b8]. Examples include Google Feast [\u03b6], Amazon AWS Feature Store [\u03b2, \u03b6], Tecton.ai and Hopswork.ai [\u03b6]. This is where most of the data for training ML models will come from. Moreover, data can also come directly from any kind of data store. C5 Model Training Infrastructure (P6). The model training infrastructure provides the foundational computation resources, e.g., CPUs, RAM, and GPUs. The provided infrastructure can be either distributed or non-distributed. In general, a scalable and distributed infrastructure is recommended [7,10,24\u201326,29,40,45,46] [\u03b4, \u03b6, \u03b7, \u03b8]. Examples include local machines (not scalable) or cloud computation [7] [\u03b7, \u03b8], as well as non-distributed or distributed computation (several worker nodes) [25,27]. Frameworks supporting computation are Kubernetes [\u03b7, \u03b8] and Red Hat OpenShift [\u03b3]. C6 Model Registry (P3, P4). The model registry stores centrally the trained ML models together with their metadata. It has two main functionalities: storing the ML artifact and storing the ML metadata (see C7) [4,6,14,17,26,27] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8].", "start_char_idx": 3948, "end_char_idx": 5810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c3144f5-b808-42a8-898e-1ba57ab8b253": {"__data__": {"id_": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30da43e3-e957-4749-833b-2a3da21bfd1a", "node_type": "1", "metadata": {}, "hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "135d8eae-9240-423f-9b09-448286bd0ca0", "node_type": "1", "metadata": {}, "hash": "f1d912ce805d99d5a669322d0b2595dd7f4d6862b9a5f7ca5bbb0a4aeed515c8", "class_name": "RelatedNodeInfo"}, {"node_id": "08851b7d-3d0b-490f-850f-eab8d0d2e0a1", "node_type": "1", "metadata": {}, "hash": "78f4bc9297ed1b288702f3a65421d7f8b094bcce6f1724ac2ac08345bf3952a4", "class_name": "RelatedNodeInfo"}, {"node_id": "a2ca7a63-6dae-416a-bbcf-defc21b90eab", "node_type": "1", "metadata": {}, "hash": "daac28f6cfc4fe2aa0ac6b6f96395ee3208846828791777bd5dbd1bdcc4234cc", "class_name": "RelatedNodeInfo"}, {"node_id": "e61c134b-dcda-4ab9-a832-12457053398e", "node_type": "1", "metadata": {}, "hash": "b9c79460220cc89ee1600fd44a213c1bc98e56e29659a504c0028cb726b200cb", "class_name": "RelatedNodeInfo"}, {"node_id": "2f7c3a15-dd9f-4072-a660-518dad9b734f", "node_type": "1", "metadata": {}, "hash": "257262a2be887262c99b33524be18358fd60dd18f7081d83ea2800ebdeb9cf88", "class_name": "RelatedNodeInfo"}]}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "text": "Advanced storage examples include MLflow [\u03b1, \u03b7, \u03b6], AWS SageMaker Model Registry [\u03b6], Microsoft Azure ML Model Registry [\u03b6], and Neptune.ai [\u03b1]. Simple storage examples include Microsoft Azure Storage, Google Cloud Storage, and Amazon AWS S3 [17]. C7 ML Metadata Stores (P4, P7). ML metadata stores allow for the tracking of various kinds of metadata, e.g., for each orchestrated ML workflow pipeline task. Another metadata store can be configured within the model registry for tracking and logging the metadata of each training job (e.g., training date and time, duration, etc.), including the model specific metadata\u2014e.g., used parameters and the resulting performance metrics, model lineage: data and code used [14,25\u201327,32] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b8]. Examples include orchestrators with built-in metadata stores tracking each step of experiment pipelines [\u03b1] such as Kubeflow Pipelines [\u03b1,\u03b6], AWS SageMaker Pipelines [\u03b1,\u03b6], Azure ML, and IBM Watson Studio [\u03b3]. MLflow provides an advanced metadata store in combination with the model registry [32,35].  C8 Model Serving Component (P1). The model serving component can be configured for different purposes. Examples are online inference for real-time predictions or batch inference for predictions using large volumes of input data. The serving can be provided, e.g., via a REST API. As a foundational infrastructure layer, a scalable and distributed model serving infrastructure is recommended [7,11,25,40,45,46] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b7, \u03b8]. One example of a model serving component configuration is the use of Kubernetes and Docker technology to containerize the ML model, and leveraging a Python web application framework like Flask [17] with an API for serving [\u03b1]. Other Kubernetes supported frameworks are KServing of Kubeflow [\u03b1], TensorFlow Serving, and Seldion.io serving [40]. Inferencing could also be realized with Apache Spark for batch predictions [\u03b8]. Examples of cloud services include Microsoft Azure ML REST API [\u03b5], AWS SageMaker Endpoints [\u03b1, \u03b2], IBM Watson Studio [\u03b3], and Google Vertex AI prediction service [\u03b4]. C9 Monitoring Component (P8, P9).", "start_char_idx": 5811, "end_char_idx": 7913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30da43e3-e957-4749-833b-2a3da21bfd1a": {"__data__": {"id_": "30da43e3-e957-4749-833b-2a3da21bfd1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5dee02cb-3702-43aa-ab89-7908a515b978", "node_type": "1", "metadata": {}, "hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "cc281ab0-2e4d-44b4-8c27-82ef456a8256", "node_type": "1", "metadata": {}, "hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "class_name": "RelatedNodeInfo"}]}, "hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "text": "C9 Monitoring Component (P8, P9). The monitoring component takes care of the continuous monitoring of the model serving performance (e.g., prediction accuracy).", "start_char_idx": 7880, "end_char_idx": 8040, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5": {"__data__": {"id_": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a42c78e1-e356-4f59-a55d-73bf8c091375", "node_type": "1", "metadata": {}, "hash": "2be435b2f21e2f8546c57591d5ec356ceefdb27c3f7f3515640bf09d030fdefd", "class_name": "RelatedNodeInfo"}, {"node_id": "ecf1b2fa-45bf-4b80-ae9e-4d2b64fdebe9", "node_type": "1", "metadata": {}, "hash": "15d0301af4bb1164d5bc5593f3f23ac257c87f34d8edd0da68142af8776e34be", "class_name": "RelatedNodeInfo"}, {"node_id": "dd0ba1a0-a407-4c2b-af60-bcafff85a92d", "node_type": "1", "metadata": {}, "hash": "965ef0f180b3a79ad644f84ae669f437c368c88354ce34e5a19363ca95326e1a", "class_name": "RelatedNodeInfo"}, {"node_id": "909bdfb2-03c6-469e-956c-0a85b73df27b", "node_type": "1", "metadata": {}, "hash": "976ff651139eecf88234c381599cef8453115eeec33d62ceccce60c3413d8070", "class_name": "RelatedNodeInfo"}, {"node_id": "4a10f491-2852-47d6-9e10-c633b60ef81a", "node_type": "1", "metadata": {}, "hash": "4562ab613ae85545c54b11e8e40bd79819d118b716b0438539786365398b9a9e", "class_name": "RelatedNodeInfo"}]}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "text": "Additionally, monitoring of the ML infrastructure, CI/CD, and orchestration are required [7,10,17,26,29,36,46] [\u03b1, \u03b6, \u03b7, \u03b8]. Examples include Prometheus with Grafana [\u03b7, \u03b6], ELK stack (Elasticsearch, Logstash, and Kibana) [\u03b1, \u03b7, \u03b6], and simply TensorBoard [\u03b8]. Examples with built-in monitoring capabilities are Kubeflow [\u03b8], MLflow [\u03b7], and AWS SageMaker model monitor or cloud watch [\u03b6]. 4.3 Roles After describing the principles and their resulting instantiation of components, we identify necessary roles in order to realize MLOps in the following. MLOps is an interdisciplinary group process, and the interplay of different roles is crucial to design, manage, automate, and operate an ML system in production. In the following, every role, its purpose, and related tasks are briefly described: R1 Business Stakeholder (similar roles: Product Owner, Project Manager). The business stakeholder defines the business goal to be achieved with ML and takes care of the communication side of the business, e.g., presenting the return on investment (ROI) generated with an ML product [17,24,26] [\u03b1, \u03b2, \u03b4, \u03b8].  R2D2Solution Architect (similar role: IT Architect). The solution architect designs the architecture and defines the technologies to be used, following a thorough evaluation [17,27] [\u03b1, \u03b6].  R3 Data Scientist (similar roles: ML Specialist, ML Developer). The data scientist translates the business problem into an ML problem and takes care of the model engineering, including the selection of the best-performing algorithm and hyperparameters [7,14,26,29] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8].  R4 Data Engineer (similar role: DataOps Engineer). The data engineer builds up and manages data and feature engineering pipelines. Moreover, this role ensures proper data ingestion to the databases of the feature store system [14,29,41] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8]. \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n  R5 Software Engineer.", "start_char_idx": 0, "end_char_idx": 1917, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3d9a200-8d09-4a5f-8057-525d40945061": {"__data__": {"id_": "e3d9a200-8d09-4a5f-8057-525d40945061", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "95a447d3-6ca9-400f-8337-60574b1cada5", "node_type": "1", "metadata": {}, "hash": "cb10eb88bfa18751ecbdfcb6087e92c82ab463e807c089e6338616f9b31d66c3", "class_name": "RelatedNodeInfo"}, {"node_id": "be7e36ef-fe2e-4e90-b70c-7a50ad7fc22c", "node_type": "1", "metadata": {}, "hash": "e3d7b801aac00cbe456f3e1f869a85c0093164114d06708eb8d85ce025f7c8e5", "class_name": "RelatedNodeInfo"}, {"node_id": "7f8ae9c4-22d3-4550-951f-0f0f82d23c2d", "node_type": "1", "metadata": {}, "hash": "33d339740c13fc72675aa636bdc1564ded6c50d647246ecade52d442974709ad", "class_name": "RelatedNodeInfo"}, {"node_id": "eee39ce9-1e38-412b-a0e1-6093f069dcad", "node_type": "1", "metadata": {}, "hash": "932d8f28b62fe2bd31ade6cafab3920861ab0c2284c4475a8a423e544e7f35e3", "class_name": "RelatedNodeInfo"}, {"node_id": "9eea42c9-9132-4606-b947-d1feb67f85d6", "node_type": "1", "metadata": {}, "hash": "02bf167599ff70ee7eef35157f7f796eb093a735ea2017b0d3dec73636601eac", "class_name": "RelatedNodeInfo"}]}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "text": "The software engineer applies software design patterns, widely accepted coding guidelines, and best practices to turn the raw ML problem into a well-engineered product [29] [\u03b1, \u03b3]. R6 DevOps Engineer. The DevOps engineer bridges the gap between development and operations and ensures proper CI/CD automation, ML workflow orchestration, model deployment to production, and monitoring [14\u201316,26] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8]. R7 ML Engineer/MLOps Engineer. The ML engineer or MLOps engineer combines aspects of several roles and thus has cross-domain knowledge. This role incorporates skills from data scientists, data engineers, software engineers, DevOps engineers, and backend engineers (see Figure 3). This cross-domain role builds up and operates the ML infrastructure, manages the automated ML workflow pipelines and model deployment to production, and monitors both the model and the ML infrastructure [14,17,26,29] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8].  \n  5 Architecture and Workflow On the basis of the identified principles, components, and roles, we derive a generalized MLOps end-to-end architecture to give ML researchers and practitioners proper guidance. It is depicted in Figure 4. Additionally, we depict the workflows, i.e., the sequence in which the different tasks are executed in the different stages. The artifact was designed to be technology-agnostic. Therefore, ML researchers and practitioners can choose the best-fitting technologies and frameworks for their needs.  As depicted in Figure 4, we illustrate an end-to-end process, from MLOps project initiation to the model serving. It includes (A) the MLOps project initiation steps; (B) the feature engineering pipeline, including the data ingestion to the feature store; (C) the experimentation; and (D) the automated ML workflow pipeline up to the model serving.  (A) MLOps project initiation. (1) The business stakeholder (R1) analyzes the business and identifies a potential business problem that can be solved using ML. (2) The solution architect (R2) defines the architecture design for the overall ML system and, decides on the technologies to be used after a thorough evaluation. (3) The data scientist (R3) derives an ML problem\u2014such as whether regression or classification should be used\u2014from the business goal.", "start_char_idx": 1918, "end_char_idx": 4196, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f30528b-8b87-4916-8530-b167226ec7c7": {"__data__": {"id_": "2f30528b-8b87-4916-8530-b167226ec7c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0b25c7cf-6f96-448a-840d-eb23b7b27cf9", "node_type": "1", "metadata": {}, "hash": "0d6f609a3ac5caadbdfd6444d07bc1af83dd5a4c8e79c092bbe37ee7923cd253", "class_name": "RelatedNodeInfo"}, {"node_id": "9f4e5765-af3c-4cd0-bddc-330785d407f8", "node_type": "1", "metadata": {}, "hash": "537d5c6106a5149b3c513bb6963279a294da0ef75a69461f3d2a399e548c0243", "class_name": "RelatedNodeInfo"}, {"node_id": "38a42ca1-e7af-41ef-b721-a3f02034f28c", "node_type": "1", "metadata": {}, "hash": "bef0ac4ac2ffb0be3dbad0af4ea27e3385d51d64a20d9028d430f8d7fee11df8", "class_name": "RelatedNodeInfo"}, {"node_id": "b4d490c7-956f-4df8-9f26-17f447afd45c", "node_type": "1", "metadata": {}, "hash": "d7d5e9d4adb0a64a4673dc15b11f0dc734147a10985088264b0d5d0d6e004fe8", "class_name": "RelatedNodeInfo"}, {"node_id": "52384559-246d-4e74-b894-844451d98bdd", "node_type": "1", "metadata": {}, "hash": "75d9d1ad8618dce097ea2137f6824bcf4df1231de4737a680c72f7d205bc7d16", "class_name": "RelatedNodeInfo"}]}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "text": "(4) The data engineer (R4) and the data scientist (R3) work together in an effort to understand which data is required to solve the problem. (5) Once the answers are clarified, the data engineer (R4) and data scientist (R3) collaborate to locate the raw data sources for the initial data analysis. They check the distribution, and quality of the data, as well as performing validation checks. Furthermore, they ensure that the incoming data from the data sources is labeled, meaning that a target attribute is known, as this is a mandatory requirement for supervised ML. In this example, the data sources already had labeled data available as the labeling step was covered during an upstream process. (B1) Requirements for feature engineering pipeline. The features are the relevant attributes required for model training. After the initial understanding of the raw data and the initial data analysis, the fundamental requirements for the feature engineering pipeline are defined, as follows: (6) The data engineer (R4) defines the data transformation rules (normalization, aggregations) and cleaning rules to bring the data into a usable format. (7) The data scientist (R3) and data engineer (R4) together define the feature engineering rules, such as the calculation of new and more advanced features based on other features. These initially defined rules must be iteratively adjusted by the data scientist (R3) either based on the feedback coming from the experimental model engineering stage or from the monitoring component observing the model performance. (B2) Feature engineering pipeline. The initially defined requirements for the feature engineering pipeline are taken by the data engineer (R4) and software engineer (R5) as a starting point to build up the prototype of the feature engineering pipeline. The initially defined requirements and rules are updated according to the iterative feedback coming either from the experimental model engineering stage or from the monitoring component observing the model\u2019s performance in production. As a foundational requirement, the data engineer (R4) defines the code required for the CI/CD (C1) and orchestration component (C3) to ensure the task orchestration of the feature engineering pipeline. This role also defines the underlying infrastructure resource configuration. (8) First, the feature engineering pipeline connects to the raw data, which can be (for instance) streaming data, static batch data, or data from any cloud storage. (9) The data will be extracted from the data sources.", "start_char_idx": 4197, "end_char_idx": 6744, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "627089ab-2bd9-485b-a802-bfa4e68a989f": {"__data__": {"id_": "627089ab-2bd9-485b-a802-bfa4e68a989f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3", "node_type": "1", "metadata": {}, "hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "562b22f2-c306-4f43-a2a8-105c451f87e2", "node_type": "1", "metadata": {}, "hash": "65a52f1359e90a37b59a776d7bed40fa3715f5cc0bcd9bb732c0eb52fb9320ba", "class_name": "RelatedNodeInfo"}, {"node_id": "698fc5ad-21b3-4381-abaf-27e51cd07f06", "node_type": "1", "metadata": {}, "hash": "93a75960bb36b7754178c05328774539e6df08bf0237d05e2410b8db7a1f94c1", "class_name": "RelatedNodeInfo"}, {"node_id": "2e9e5cc2-9d95-4f21-8e70-3343c4119b23", "node_type": "1", "metadata": {}, "hash": "68f9a67146b9c48d9c670af551f6538f54b93267af6dca38c0371af39ac26cbb", "class_name": "RelatedNodeInfo"}, {"node_id": "38deef60-5953-4ce6-a948-7534442a8c79", "node_type": "1", "metadata": {}, "hash": "b69fefe6348e0f18ef1b85a235b1bd13eb343ec866b6c50ee91ca6ab6202e9db", "class_name": "RelatedNodeInfo"}, {"node_id": "1037093c-fc66-44ba-91e3-78a995e518c3", "node_type": "1", "metadata": {}, "hash": "e0518e2cc3f1cf9d5b0ccf65aaafa8860286b46b31506c36d6266178ebcd383c", "class_name": "RelatedNodeInfo"}]}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "text": "(9) The data will be extracted from the data sources. (10) The data preprocessing begins with data transformation and cleaning tasks. The transformation rule artifact defined in the requirement gathering stage serves as input for this task, and the main aim of this task is to bring the data into a usable format. These transformation rules are continuously improved based on the feedback.  Data Scientist(ML model development)Data Engineer(data management, data pipeline management) Backend Engineer(ML infrastructure management)DevOps Engineer(Software engineer with DevOps skills,ML workflow pipeline orchestration,CI/CD pipeline management,monitoring) ML Engineer /MLOps Engineer(cross-functional managementof ML environment and assets:ML infrastructure,ML models,ML workflow pipelines,data Ingestion,monitoring)\nDS\nDE\nDO\nML\nBE\nSE{\u2026}Software Engineer(applies design patterns andcoding guidelines)Figure 3. Roles and their intersections contributing to the MLOps paradigm \n\n  Figure 4. End-to-end MLOps architecture and workflow with functional components and roles  (11) The feature engineering task calculates new and more advanced features based on other features. The predefined feature engineering rules serve as input for this task. These feature engineering rules are continuously improved based on the feedback. (12) Lastly, a data ingestion job loads batch or streaming data into the feature store system (C4). The target can either be the offline or online database (or any kind of data store). (C) Experimentation. Most tasks in the experimentation stage are led by the data scientist (R3). The data scientist is supported by the software engineer (R5). (13) The data scientist (R3) connects to the feature store system (C4) for the data analysis. (Alternatively, the data scientist (R3) can also connect to the raw data for an initial analysis.) In case of any required data adjustments, the data \nScheduler(trigger when new data available,event-based orperiodical)\nMonitoring componentcontinuous monitoring of model serving performanceML metadata storemodel status (staging or prod)parameter & perf.", "start_char_idx": 6691, "end_char_idx": 8806, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7": {"__data__": {"id_": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "43a2dbee-6d01-4401-96a5-61c873838777", "node_type": "1", "metadata": {}, "hash": "d58f66633934c77c5e6e78bb98e3c4db4b39984c1939b23726a6f44650b4e65a", "class_name": "RelatedNodeInfo"}, {"node_id": "1bcbffa3-1812-4ad0-be4f-c849e40c34d3", "node_type": "1", "metadata": {}, "hash": "34ba845e79dd7ec3b6dd66e532a70e082aff786108ac6b7037c62a157ff6e2a5", "class_name": "RelatedNodeInfo"}, {"node_id": "c6d8cb3b-a823-417c-b781-8a6bff348530", "node_type": "1", "metadata": {}, "hash": "f4ceffc40963abd014b6546476a980e861549f8e21ada9826f1194e0dcf2e786", "class_name": "RelatedNodeInfo"}, {"node_id": "3e60a303-0647-497d-9c1c-f07a7abff7e7", "node_type": "1", "metadata": {}, "hash": "b96fe28977eb06879f99fc2980231f779c49a6caa455ad8b516fcc55aca1a0d9", "class_name": "RelatedNodeInfo"}]}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "text": "metricsmodel training computation infrastructureML metadata storeML model\nmodelvalidation\ndataextractiondatapreparation & validationmodel training/ refinementmodelvalidationexportmodelpush to model registryWorkflow orchestration component\nmodel training computation infrastructureExperimentation\nAutomated ML Workflow Pipeline ML Experimentation ZoneML Production Zoneprod ready ML model\nModel serving component(prediction on new batch or streaming data)ML metadata store(metadata logging of each ML workflow task)\nFeedback Loop \u2013enables continuous training / retraining & continuous improvementnew versioned feature data (batch or streaming data)model serving computation infrastructureML workflow pipeline codeversioned artifacts: model + ML training & workflow codemodel engineering (best algorithm selection, hyperparameter tuning)\nversioned feature dataRepositoryexportmodeldata analysisdatapreparation & validationmodeltrainingdata preprocessingFeature Engineering Pipelinedefine transformation& cleaning rulestransformation rulesdefine feature engineering rulesfeature engineering rules\nstreaming data\nbatchdatacloud storage\nBusinessStakeholderData ScientistDataEngineerDevOpsEngineerML EngineerDO\nDS\nML\nDE\nBS\nML\nDO\nML\nOR\nDS\nDE\nML\nDO\nML\nOR\nDE\nDS\nDE\nAND\nLEGENDBusiness problemanalysis(define goal)deriveML problem from business goal(e.g., classification, regression)MLOps Project InitiationUnderstand required data to solve problem(data available?, where is it?, how to get it?)BS\nDS\nConnect to raw data for initial data analysis(distribution analysis, data quality checks, validation checks)\nDE\nDS\nAND\nfeature engineering(e.g., calc.", "start_char_idx": 0, "end_char_idx": 1640, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09a2726e-0481-410b-ad8a-2b781b5ace20": {"__data__": {"id_": "09a2726e-0481-410b-ad8a-2b781b5ace20", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b2cdd11d-e256-467c-a3d8-aea0cacbcc29", "node_type": "1", "metadata": {}, "hash": "cf6d1ffbae7f398d6d1621620ffbd192c8719184b88ed73ed3cdae3f4acc90a7", "class_name": "RelatedNodeInfo"}, {"node_id": "0b373152-101b-4199-9214-e355804544d3", "node_type": "1", "metadata": {}, "hash": "53161288260a6df60398810a52679809131728c9dc7eb53f6b505d25d90a8393", "class_name": "RelatedNodeInfo"}, {"node_id": "37e282cd-edbf-4c07-bc1a-c6019e9cbf42", "node_type": "1", "metadata": {}, "hash": "1455d2bd1b1510825d660ea6f1107d458d65d8956af0f0071a327bf54984b694", "class_name": "RelatedNodeInfo"}, {"node_id": "e8d348cd-8002-4444-9eaa-f1345eab4532", "node_type": "1", "metadata": {}, "hash": "084cc7fa12bd9edae87a5c1819f0c0ce8e079cacb20a680a05b81194392f62d1", "class_name": "RelatedNodeInfo"}, {"node_id": "13810b79-ed46-4c11-9300-86270dd789af", "node_type": "1", "metadata": {}, "hash": "0fd41b4afe8680c43fd3aaee26df25bbc1d58c80acd3ee486df01abad2c4f254", "class_name": "RelatedNodeInfo"}]}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "text": "of new features)Connect toraw datadata extractiondata transformation & cleaningdata Ingestion job(batch or streaming)Data Sources\ndata processing computation infrastructure\nDE\nDS\nAND\ndata pipeline codeA\nC\nDB2Requirements for feature engineering pipeline\nDO\nML\nORModel RegistryFeedback Loopfeature requirements (iterative)\nCI / CD componentartifact store(e.g., Image Registry)continuous integration / continuous delivery (build, test and push)CI/CD componentartifact storeData Engineering Zone\ncontinuous deployment(build, test and deploy model)modelservingcodeorchestration component\nDO\nML\nORB1MLOps Project Initiation Zone\nversioned feature dataFeature storesystemonline DB(low-latency)\noffline DB(normallatency)\nVersioned Feature FlowFeedback loop flowData Engineering flowModel / Code flow\nDE\nGeneral process flowIT SolutionArchitectSASAdesigns architecture and technologies to be used\n(labeleddata)model training codeAND\nSE{\u2026}SoftwareEngineerSE{\u2026}SE{\u2026}\nSE{\u2026}SE{\u2026}\n(best algorithm selection, parameter & perf. metric logging)\n\n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  scientist (R3) reports the required changes back to the data engineering zone (feedback loop).  (14) Then the preparation and validation of the data coming from the feature store system is required. This task also includes the train and test split dataset creation. (15) The data scientist (R3) estimates the best-performing algorithm and hyperparameters, and the model training is then triggered with the training data (C5). The software engineer (R5) supports the data scientist (R3) in the creation of well-engineered model training code. (16) Different model parameters are tested and validated interactively during several rounds of model training. Once the performance metrics indicate good results, the iterative training stops. The best-performing model parameters are identified via parameter tuning. The model training task and model validation task are then iteratively repeated; together, these tasks can be called \u201cmodel engineering.\u201d The model engineering aims to identify the best-performing algorithm and hyperparameters for the model. (17) The data scientist (R3) exports the model and commits the code to the repository.", "start_char_idx": 1641, "end_char_idx": 3891, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c16c3890-e372-4b47-a635-f842b511fff4": {"__data__": {"id_": "c16c3890-e372-4b47-a635-f842b511fff4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ee3fb77f-1d14-42f3-9f2c-b843ce1b8aa0", "node_type": "1", "metadata": {}, "hash": "b03d90bd722490cf9e7b612189f37dfe92c52a0dded7726b47aa12f3d451725d", "class_name": "RelatedNodeInfo"}, {"node_id": "9c2df3ac-ce65-4b47-8816-9ad2cb5c8d7e", "node_type": "1", "metadata": {}, "hash": "6ef69291895ab7c3bb2a2fde35bbcbb32ec2a5751cdf4ed9a9f85ddc90a2385a", "class_name": "RelatedNodeInfo"}, {"node_id": "a078ef6b-980e-48ff-a909-46d93ae4a576", "node_type": "1", "metadata": {}, "hash": "7f96dd8db48ef1c98b05700e8df3824e35332e2346b62d3c3f99055d7f51f67a", "class_name": "RelatedNodeInfo"}, {"node_id": "ee55230e-af50-484c-ac4e-33b78e3c093d", "node_type": "1", "metadata": {}, "hash": "0436e27e97c82de24d0d7dadf79b2bc65f022c8380aceab880b4aa8349d15066", "class_name": "RelatedNodeInfo"}, {"node_id": "9a520d63-0b4a-480a-b1d7-906086648372", "node_type": "1", "metadata": {}, "hash": "bd1ac117d70c2e66011863307a5aac815978e8d3a7d30e651c88e198c003090d", "class_name": "RelatedNodeInfo"}]}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "text": "As a foundational requirement, either the DevOps engineer (R6) or the ML engineer (R7) defines the code for the (C2) automated ML workflow pipeline and commits it to the repository. Once either the data scientist (R3) commits a new ML model or the DevOps engineer (R6) and the ML engineer (R7) commits new ML workflow pipeline code to the repository, the CI/CD component (C1) detects the updated code and triggers automatically the CI/CD pipeline carrying out the build, test, and delivery steps. The build step creates artifacts containing the ML model and tasks of the ML workflow pipeline. The test step validates the ML model and ML workflow pipeline code. The delivery step pushes the versioned artifact(s)\u2014such as images\u2014to the artifact store (e.g., image registry). (D) Automated ML workflow pipeline. The DevOps engineer (R6) and the ML engineer (R7) take care of the management of the automated ML workflow pipeline. They also manage the underlying model training infrastructure in the form of hardware resources and frameworks supporting computation such as Kubernetes (C5). The workflow orchestration component (C3) orchestrates the tasks of the automated ML workflow pipeline. For each task, the required artifacts (e.g., images) are pulled from the artifact store (e.g., image registry). Each task can be executed via an isolated environment (e.g., containers). Finally, the workflow orchestration component (C3) gathers metadata for each task in the form of logs, completion time, and so on. Once the automated ML workflow pipeline is triggered, each of the following tasks is managed automatically: (18) automated pulling of the versioned features from the feature store systems (data extraction). Depending on the use case, features are extracted from either the offline or online database (or any kind of data store). (19) Automated data preparation and validation; in addition, the train and test split is defined automatically. (20) Automated final model training on new unseen data (versioned features). The algorithm and hyperparameters are already predefined based on the settings of the previous experimentation stage. The model is retrained and refined. (21) Automated model evaluation and iterative adjustments of hyperparameters are executed, if required. Once the performance metrics indicate good results, the automated iterative training stops.", "start_char_idx": 3892, "end_char_idx": 6265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57c6c99b-d287-4b37-a3f9-cd0ee460b000": {"__data__": {"id_": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402", "node_type": "1", "metadata": {}, "hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7f18dfb3-09c8-487a-b978-594b096af9a6", "node_type": "1", "metadata": {}, "hash": "6a409d0b658e0f3856e54be2067da2ca7190a541b1a2b31a27c534cbc159d986", "class_name": "RelatedNodeInfo"}, {"node_id": "fbc49e2e-35d7-4b98-8097-548fcae36e3a", "node_type": "1", "metadata": {}, "hash": "e5cd8b62ad226effa5aa76124925d34740500579c6ee283f875e6c090fe63e3d", "class_name": "RelatedNodeInfo"}, {"node_id": "cc9ea388-20a0-40cc-8744-1723d241030a", "node_type": "1", "metadata": {}, "hash": "53d07fb0e38db6ebb43c6ed0267932591e65763a1a8a8b88742fffbfae5e9081", "class_name": "RelatedNodeInfo"}, {"node_id": "8a0cdde4-777c-410c-8c7b-8f6e3fe52755", "node_type": "1", "metadata": {}, "hash": "970caff3ba6092f1e7f5c3475582f6311bed060ce96ef27a7d37ba70e0f188da", "class_name": "RelatedNodeInfo"}, {"node_id": "4722ed5a-e26f-4db0-a771-b57818810a64", "node_type": "1", "metadata": {}, "hash": "0d192be6d6b395c867bacf0f9ac7c0ad5ff43652429b5869e82feb6bb55ae37d", "class_name": "RelatedNodeInfo"}]}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "text": "Once the performance metrics indicate good results, the automated iterative training stops. The automated model training task and the automated model validation task can be iteratively repeated until a good result has been achieved. (22) The trained model is then exported and (23) pushed to the model registry (C6), where it is stored e.g., as code or containerized together with its associated configuration and environment files. For all training job iterations, the ML metadata store (C7) records metadata such as parameters to train the model and the resulting performance metrics. This also includes the tracking and logging of the training job ID, training date and time, duration, and sources of artifacts. Additionally, the model specific metadata called \u201cmodel lineage\u201d combining the lineage of data and code is tracked for each newly registered model. This includes the source and version of the feature data and model training code used to train the model. Also, the model version and status (e.g., staging or production-ready) is recorded. Once the status of a well-performing model is switched from staging to production, it is automatically handed over to the DevOps engineer or ML engineer for model deployment. From there, the (24) CI/CD component (C1) triggers the continuous deployment pipeline. The production-ready ML model and the model serving code are pulled (initially prepared by the software engineer (R5)). The continuous deployment pipeline carries out the build and test step of the ML model and serving code and deploys the model for production serving. The (25) model serving component (C8) makes predictions on new, unseen data coming from the feature store system (C4). This component can be designed by the software engineer (R5) as online inference for real-time predictions or as batch inference for predictions concerning large volumes of input data. For real-time predictions, features must come from the online database (low latency), whereas for batch predictions, features can be served from the offline database (normal latency). Model-serving applications are often configured within a container and prediction requests are handled via a REST API. As a foundational requirement, the ML engineer (R7) manages the model-serving computation infrastructure. The (26) monitoring component (C9) observes continuously the model-serving performance and infrastructure in real-time. Once a certain threshold is reached, such as detection of low prediction accuracy, the information is forwarded via the feedback loop.", "start_char_idx": 6174, "end_char_idx": 8726, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1f6a34e-8c7f-410b-8bdd-805c045f2402": {"__data__": {"id_": "d1f6a34e-8c7f-410b-8bdd-805c045f2402", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a215e7c-9ec7-4443-993c-7d022cab1064", "node_type": "1", "metadata": {}, "hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ded51de2-58c1-4f23-997c-f2444c442fc5", "node_type": "1", "metadata": {}, "hash": "ab56f2e80b266d3fda50edc498bcb4edfb481f7f7ad22818494c8825924bfd9f", "class_name": "RelatedNodeInfo"}, {"node_id": "1830f899-bf77-414d-9fc1-601092e0fccd", "node_type": "1", "metadata": {}, "hash": "8de19af12d6b204ac14cd3ba589e7c58df8d6e99e40911e113b3d4cae976548b", "class_name": "RelatedNodeInfo"}]}, "hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "text": "The (27) feedback loop is connected to the monitoring component (C9) and ensures fast and direct feedback allowing for more robust and improved predictions. It enables continuous training, retraining, and improvement. With the support of the feedback loop, information is transferred from the model monitoring component to several upstream receiver points, such as the experimental stage, data engineering zone, and the scheduler (trigger). The feedback to the experimental stage is taken forward by the data scientist for further model improvements. The feedback to the data engineering zone allows for the adjustment of the features prepared for the feature store system. Additionally, the detection of concept drifts as a feedback mechanism can enable (28) continuous training. For instance, once the model-monitoring component (C9) detects a drift \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n in the data [3], the information is forwarded to the scheduler, which then triggers the automated ML workflow pipeline for retraining (continuous training). A change in adequacy of the deployed model can be detected using distribution comparisons to identify drift.", "start_char_idx": 8727, "end_char_idx": 9886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "664de977-ff5e-4562-a767-60f5d1a97172": {"__data__": {"id_": "664de977-ff5e-4562-a767-60f5d1a97172", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2872a7fc-b7f0-43fd-9ace-fe70645eba38", "node_type": "1", "metadata": {}, "hash": "ab59aa50e3081f2163f34fa70136da93420b2bdd1991b0213515ef9fc74bff32", "class_name": "RelatedNodeInfo"}, {"node_id": "6efe5fe6-5200-4bf0-bf2c-b04c22545f9f", "node_type": "1", "metadata": {}, "hash": "aaa6521df88196d46da724dce67b845cbe7596ed0432d45fd1780aaf1acb4069", "class_name": "RelatedNodeInfo"}, {"node_id": "2508fa31-feed-4f9c-9e0f-89fbb8810d5d", "node_type": "1", "metadata": {}, "hash": "43b073acc9d58987bacfefbf54caba9838d5df022161453ffa65df2332a60c43", "class_name": "RelatedNodeInfo"}, {"node_id": "39ab40c2-69ca-4a43-92e5-6f41d180871b", "node_type": "1", "metadata": {}, "hash": "64512f0f79932ae13001e4e494a15f93f0ede17a546f03848153e590db7b8896", "class_name": "RelatedNodeInfo"}, {"node_id": "3cc1cf4f-4887-49b0-bc30-d942f3571db2", "node_type": "1", "metadata": {}, "hash": "7e0b75878049af8421abda6c2743c6491655e1c0a573a796d32ce77532e9fa3b", "class_name": "RelatedNodeInfo"}]}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "text": "A change in adequacy of the deployed model can be detected using distribution comparisons to identify drift. Retraining is not only triggered automatically when a statistical threshold is reached; it can also be triggered when new feature data is available, or it can be scheduled periodically. 6 Conceptualization With the findings at hand, we conceptualize the literature and interviews. It becomes obvious that the term MLOps is positioned at the intersection of machine learning, software engineering, DevOps, and data engineering (see Figure 5 in the Appendix). We define MLOps as follows: MLOps (Machine Learning Operations) is a paradigm, including aspects like best practices, sets of concepts, as well as a development culture when it comes to the end-to-end conceptualization, implementation, monitoring, deployment, and scalability of machine learning products. Most of all, it is an engineering practice that leverages three contributing disciplines: machine learning, software engineering (especially DevOps), and data engineering. MLOps is aimed at productionizing machine learning systems by bridging the gap between development (Dev) and operations (Ops). Essentially, MLOps aims to facilitate the creation of machine learning products by leveraging these principles: CI/CD automation, workflow orchestration, reproducibility; versioning of data, model, and code; collaboration; continuous ML training and evaluation; ML metadata tracking and logging; continuous monitoring; and feedback loops. 7 Open Challenges Several challenges for adopting MLOps have been identified after conducting the literature review, tool review, and interview study. These open challenges have been organized into the categories of organizational, ML system, and operational challenges. Organizational challenges. The mindset and culture of data science practice is a typical challenge in organizational settings [2]. As our insights from literature and interviews show, to successfully develop and run ML products, there needs to be a culture shift away from model-driven machine learning toward a product-oriented discipline [\u03b3]. The recent trend of data-centric AI also addresses this aspect by putting more focus on the data-related aspects taking place prior to the ML model building. Especially the roles associated with these activities should have a product-focused perspective when designing ML products [\u03b3]. A great number of skills and individual roles are required for MLOps (\u03b2).", "start_char_idx": 0, "end_char_idx": 2486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5da86237-d9b1-4d3f-aed2-88d87c182a46": {"__data__": {"id_": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "89922951-0d4a-49d4-9878-8a3d41466751", "node_type": "1", "metadata": {}, "hash": "cda1c22a28967b1a5212a7c8667f0ba189b57d868769c130b844276fe500a1eb", "class_name": "RelatedNodeInfo"}, {"node_id": "bd3b3825-3d0f-4bcf-893c-cfe106989f76", "node_type": "1", "metadata": {}, "hash": "249adb5f35c266972b61010657f8a647cce5e1595cc6b4f9c4973e24bb1e36d1", "class_name": "RelatedNodeInfo"}, {"node_id": "e90a575a-261d-49e7-ab32-6bc4d8c8da9f", "node_type": "1", "metadata": {}, "hash": "4ea560f8b1cc1b0e1028a85db49bf6310e30c0cade1fe8f3f70e8606f6e3c1d0", "class_name": "RelatedNodeInfo"}, {"node_id": "0959a0e6-e2da-4e24-be50-6be1d624a89c", "node_type": "1", "metadata": {}, "hash": "060790c596f43d3aeb5af92ddf937dfecda2513d7409610ab4cbf11161132612", "class_name": "RelatedNodeInfo"}, {"node_id": "46ca73b5-0fc1-4ecd-8104-4106acfdb6ef", "node_type": "1", "metadata": {}, "hash": "64e8d8b524d2e4de69f3eba8eb019aa36bf2828379569b13fb64f44e79735d89", "class_name": "RelatedNodeInfo"}, {"node_id": "d9846b04-65b3-4668-b41a-07d864932ed2", "node_type": "1", "metadata": {}, "hash": "d28958b1d9e8a63836bc072888bfc685d419e9b8e128ac0ec6b4ed0a1ab76825", "class_name": "RelatedNodeInfo"}]}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "text": "A great number of skills and individual roles are required for MLOps (\u03b2). As our identified sources point out, there is a lack of highly skilled experts for these roles\u2014especially with regard to architects, data engineers, ML engineers, and DevOps engineers [29,41,44] [\u03b1, \u03b5]. This is related to the necessary education of future professionals\u2014as MLOps is typically not part of data science education [7] [\u03b3]. Posoldova (2020) [35] further stresses this aspect by remarking that students should not only learn about model creation, but must also learn about technologies and components necessary to build functional ML products.  Data scientists alone cannot achieve the goals of MLOps. A multi-disciplinary team is required [14], thus MLOps needs to be a group process [\u03b1]. This is often hindered because teams work in silos rather than in cooperative setups [\u03b1]. Additionally, different knowledge levels and specialized terminologies make communication difficult. To lay the foundations for more fruitful setups, the respective decision-makers need to be convinced that an increased MLOps maturity and a product-focused mindset will yield clear business improvements [\u03b3]. ML system challenges. A major challenge with regard to MLOps systems is designing for fluctuating demand, especially in relation to the process of ML training [7]. This stems from potentially voluminous and varying data [10], which makes it difficult to precisely estimate the necessary infrastructure resources (CPU, RAM, and GPU) and requires a high level of flexibility in terms of scalability of the infrastructure [7,26] [\u03b4]. Operational challenges. In productive settings, it is challenging to operate ML manually due to different stacks of software and hardware components and their interplay. Therefore, robust automation is required [7,17]. Also, a constant incoming stream of new data forces retraining capabilities. This is a repetitive task which, again, requires a high level of automation [18] [\u03b8]. These repetitive tasks yield a large number of artifacts that require a strong governance [24,29,40] as well as versioning of data, model, and code to ensure robustness and reproducibility [11,27,29]. Lastly, it is challenging to resolve a potential support request (e.g., by finding the root cause), as many parties and components are involved. Failures can be a combination of ML infrastructure and software [26].", "start_char_idx": 2413, "end_char_idx": 4815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e88707d-a88e-455f-a7ca-5b8112f2f9f0": {"__data__": {"id_": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d141017c-d986-45ad-9cfe-3835daeed41c", "node_type": "1", "metadata": {}, "hash": "89fa3eea6dc9c51f1694018609b83acbda6732dd643478f90509a687d5317bd4", "class_name": "RelatedNodeInfo"}, {"node_id": "8620ce5a-a9fe-499f-bf4d-5a767ec296a3", "node_type": "1", "metadata": {}, "hash": "822b21cd025a648378e2a80f5333d5269146bba6a32b0c128f03a03e68f04499", "class_name": "RelatedNodeInfo"}, {"node_id": "f8f8943c-d4bb-4480-9bbf-8ddd6832935c", "node_type": "1", "metadata": {}, "hash": "f82a7517124dd217d1c8d3adcb7824cf6f5b23be51d41b5d9b94491febe6e723", "class_name": "RelatedNodeInfo"}, {"node_id": "8b06359d-3771-435b-a372-59189b4aba2f", "node_type": "1", "metadata": {}, "hash": "05208d8aecd255e7807239ba4ccf3868fc9c6903822cfa59732a7619f7389856", "class_name": "RelatedNodeInfo"}, {"node_id": "6cdf2fb2-48c0-4e93-8e2e-20750f82d678", "node_type": "1", "metadata": {}, "hash": "103cec00b0308248e8a6a938c956122964e23c296b925572f6f90d90956211cd", "class_name": "RelatedNodeInfo"}]}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "text": "Failures can be a combination of ML infrastructure and software [26]. 8 Conclusion With the increase of data availability and analytical capabilities, coupled with the constant pressure to innovate, more machine learning products than ever are being developed. However, only a small number of these proofs of concept progress into deployment and production. Furthermore, the academic space has focused intensively on machine learning model building and benchmarking, but too little on operating complex machine learning systems in real-world scenarios. In the real world, we observe data scientists still managing ML workflows manually to a great extent. The paradigm of Machine Learning Operations (MLOps) addresses these challenges. In this work, we shed more light on MLOps. By conducting a mixed-method study analyzing existing literature and tools, as well as interviewing eight experts from the field, we uncover four main aspects of MLOps: its principles, components, roles, and architecture. From these aspects, we infer a holistic definition. The results support a common understanding of the term MLOps and its associated concepts, and will hopefully assist researchers and professionals in setting up successful ML projects in the future.   \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  REFERENCES  [1] Muratahan Aykol, Patrick Herring, and Abraham Anapolsky. 2020. Machine learning for continuous innovation in battery technologies. Nat. Rev. Mater. 5, 10 (2020), 725\u2013727. [2] Lucas Baier, Fabian J\u00f6hren, and Stefan Seebacher. 2020. Challenges in the deployment and operation of machine learning in practice. 27th Eur. Conf. Inf. Syst. - Inf. Syst. a Shar. Soc. ECIS 2019 (2020), 0\u201315. [3] Lucas Baier, Niklas K\u00fchl, and Gerhard Satzger. 2019. How to Cope with Change? Preserving Validity of Predictive Services over Time. In Hawaii International Conference on System Sciences (HICSS-52), Grand Wailea, Maui, Hawaii, USA. [4] Amitabha Banerjee, Chien Chia Chen, Chien Chun Hung, Xiaobo Huang, Yifan Wang, and Razvan Chevesaran.", "start_char_idx": 4746, "end_char_idx": 6821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ed9369e-5a39-46e3-a44d-6d2203cc83d2": {"__data__": {"id_": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6182115c-f574-4e4a-a6a3-e3380a7b3e7e", "node_type": "1", "metadata": {}, "hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e8006a70-a8a6-406c-bc72-fc569ef4b07e", "node_type": "1", "metadata": {}, "hash": "9b92c93d963b4f6579a0c390716c3d98bbafc20431edd09dd514d6aef863813e", "class_name": "RelatedNodeInfo"}, {"node_id": "443bcf4e-cd91-42ee-9d3e-da5317cdf5c4", "node_type": "1", "metadata": {}, "hash": "15885c9a1adb1367ea7e08ba43553ad1423a4fb6d6fd8a465d397e5c7221fd47", "class_name": "RelatedNodeInfo"}, {"node_id": "6f34f248-9736-45ab-aa35-8c61a58027a5", "node_type": "1", "metadata": {}, "hash": "a579e157486eeb50f11a72712b7ce9a0ac36caa7acde47830a38457454223b54", "class_name": "RelatedNodeInfo"}, {"node_id": "8fd64ac2-9f95-4894-873c-946e502f7445", "node_type": "1", "metadata": {}, "hash": "5ede7d8a424bfc9cce02b4b02cabb8641dede34a3eee7a4239e9ab0cedfcdab8", "class_name": "RelatedNodeInfo"}, {"node_id": "bb31d6e6-f4ed-4f46-82e3-67516f40b86c", "node_type": "1", "metadata": {}, "hash": "b976de70d01e40ad55132753619b59709679388588833112c9e382a5d970dd17", "class_name": "RelatedNodeInfo"}, {"node_id": "21459c43-c8f1-49f9-ad53-a23a01658233", "node_type": "1", "metadata": {}, "hash": "155267e60949e9480125e28223e6220885a8dbc329c08a43435042b8216e39a2", "class_name": "RelatedNodeInfo"}]}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "text": "2020. Challenges and experiences with MLOps for performance diagnostics in hybrid-cloud enterprise software deployments. OpML 2020 - 2020 USENIX Conf. Oper. Mach. Learn. (2020), 7\u20139. [5] Kent Beck, Mike Beedle, Arie van Bennekum, Alistair Cockburn, Ward Cunningham, Martin Fowler, James Grenning, Jim Highsmith, Andrew Hunt, Ron Jeffries, Jon Kern, Brian Marick, Robert C. Martin, Steve Mellor, Ken Schwaber, Jeff Sutherland, and Dave Thomas. 2001. Manifesto for Agile Software Development. (2001). [6] Benjamin Benni, Blay Fornarino Mireille, Mosser Sebastien, Precisio Frederic, and Jungbluth Gunther. 2019. When DevOps meets meta-learning: A portfolio to rule them all. Proc. - 2019 ACM/IEEE 22nd Int. Conf. Model Driven Eng. Lang. Syst. Companion, Model. 2019 (2019), 605\u2013612. DOI:https://doi.org/10.1109/MODELS-C.2019.00092 [7] Lucas Cardoso Silva, Fernando Rezende Zagatti, Bruno Silva Sette, Lucas Nildaimon Dos Santos Silva, Daniel Lucredio, Diego Furtado Silva, and Helena De Medeiros Caseli. 2020. Benchmarking Machine Learning Solutions in Production. Proc. - 19th IEEE Int. Conf. Mach. Learn. Appl. ICMLA 2020 (2020), 626\u2013633. DOI:https://doi.org/10.1109/ICMLA51294.2020.00104 [8] Juliet M. Corbin and Anselm Strauss. 1990. Grounded theory research: Procedures, canons, and evaluative criteria. Qual. Sociol. 13, 1 (1990), 3\u201321. DOI:https://doi.org/10.1007/BF00988593 [9] Patrick Debois. 2009. Patrick Debois - devopsdays Ghent.", "start_char_idx": 6822, "end_char_idx": 8262, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6182115c-f574-4e4a-a6a3-e3380a7b3e7e": {"__data__": {"id_": "6182115c-f574-4e4a-a6a3-e3380a7b3e7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794", "node_type": "1", "metadata": {}, "hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "dff98556-7886-4d53-bdcd-28c669565d6f", "node_type": "1", "metadata": {}, "hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "class_name": "RelatedNodeInfo"}]}, "hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "text": "2009. Patrick Debois - devopsdays Ghent. Retrieved March 25, 2021 from https://devopsdays.org/events/2019-ghent/speakers/patrick-debois/ [10] Behrouz Derakhshan, Alireza Rezaei Mahdiraji, Tilmann Rabl, and Volker Markl. 2019. Continuous deployment of machine learning pipelines. Adv.", "start_char_idx": 8222, "end_char_idx": 8505, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4a72ba1-e946-4d10-9441-7af1ecc87ee4": {"__data__": {"id_": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "54393072-7c19-4be3-9772-c8c379cdd4d4", "node_type": "1", "metadata": {}, "hash": "dbc7dc7216c2b1c64e2cd95b57d95e99e81b9352b646c17fb3258919f16a1d8c", "class_name": "RelatedNodeInfo"}, {"node_id": "a716c2ee-d2d3-4cd1-994a-18b41d64d398", "node_type": "1", "metadata": {}, "hash": "66849e32e24363ee4b3f50b8b25ed7910538543fd10bdd52356c006d3eece548", "class_name": "RelatedNodeInfo"}, {"node_id": "dc3ba930-c2fa-4ba1-8465-93832129cc79", "node_type": "1", "metadata": {}, "hash": "052ce35ec0cd922559de88d712e2d61b1b65e7258c8e3dcb22e874cdaa67801c", "class_name": "RelatedNodeInfo"}, {"node_id": "4ab420e9-d5ef-4d97-94c0-e7356e9927d3", "node_type": "1", "metadata": {}, "hash": "4a72374f249ad85a2e0190cdb2f3a16a7b9f9eae7b263f0cd7ab1626cf9eeda1", "class_name": "RelatedNodeInfo"}, {"node_id": "6056e648-c18a-4623-b3db-f5e736cf2637", "node_type": "1", "metadata": {}, "hash": "d47ff4d1773566a06efca50e18d6602a2c03b9793f864f973aace242a7824a30", "class_name": "RelatedNodeInfo"}]}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "text": "2019. Continuous deployment of machine learning pipelines. Adv. Database Technol. - EDBT 2019-March, (2019), 397\u2013408. DOI:https://doi.org/10.5441/002/edbt.2019.35 [11] Grigori Fursin. 2021. Collective knowledge: organizing research projects as a database of reusable components and portable workflows with common interfaces. Philos. Trans. A. Math. Phys. Eng. Sci. 379, 2197 (2021), 20200211. DOI:https://doi.org/10.1098/rsta.2020.0211 [12] Barney Glaser and Anselm Strauss. 1967. The discovery of grounded theory: strategies for qualitative research.  [13] Mahendra Kumar Gourisaria, Rakshit Agrawal, G M Harshvardhan, Manjusha Pandey, and Siddharth Swarup Rautaray. 2021. Application of Machine Learning in Industry 4.0. In Machine Learning: Theoretical Foundations and Practical Applications. Springer, 57\u201387. [14] Akshita Goyal. 2020. MLOps - Machine Learning Operations. Int. J. Inf. Technol. Insights Transform. (2020). Retrieved April 15, 2021 from http://technology.eurekajournals.com/index.php/IJITIT/article/view/655/769 [15] Tuomas Granlund, Aleksi Kopponen, Vlad Stirbu, Lalli Myllyaho, and Tommi Mikkonen. 2021. MLOps Challenges in Multi-Organization Setup: Experiences from Two Real-World Cases. (2021). Retrieved from http://arxiv.org/abs/2103.08937 [16] Willem Jan van den Heuvel and Damian A. Tamburri. 2020. Model-driven ml-ops for intelligent enterprise applications: vision, approaches and challenges. Springer International Publishing.", "start_char_idx": 0, "end_char_idx": 1456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1": {"__data__": {"id_": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "1ac86fbe-a417-47c9-9e2e-6c14fbafbed4", "node_type": "1", "metadata": {}, "hash": "6356f0e0f065498ae44ba6da0fbd854350908698f27ccb121c3dbce30f384f83", "class_name": "RelatedNodeInfo"}, {"node_id": "8427e9f8-72a5-4e2d-895d-3125dff55c68", "node_type": "1", "metadata": {}, "hash": "4cbd222b3822275ab19d5f6b0cc0bf79e948dac28bae89bc4bbf890cff52a328", "class_name": "RelatedNodeInfo"}, {"node_id": "c266ed46-1c9c-4292-8658-65455e726ff5", "node_type": "1", "metadata": {}, "hash": "9f157352e5c85d5360f642e2d62f8420be3616af069cb43fb2599921bc3a98e7", "class_name": "RelatedNodeInfo"}, {"node_id": "0a315078-9dca-4f36-b5a1-562e08e347a9", "node_type": "1", "metadata": {}, "hash": "ae13ba61a574ecaf2003ff72ef852ff38e5ce7b184e743d59862031d90d1a525", "class_name": "RelatedNodeInfo"}, {"node_id": "b57869ce-b7c3-4a64-ab43-fb4019e9e285", "node_type": "1", "metadata": {}, "hash": "2f6c3ec66bba60d7fd07f1c2611060d5ce6b79632c13ba7e197cb676a7796986", "class_name": "RelatedNodeInfo"}]}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "text": "Springer International Publishing. DOI:https://doi.org/10.1007/978-3-030-52306-0_11 [17] Ioannis Karamitsos, Saeed Albarhami, and Charalampos Apostolopoulos. 2020. Applying devops practices of continuous automation for machine learning. Inf. 11, 7 (2020), 1\u201315. DOI:https://doi.org/10.3390/info11070363 [18] Bojan Karla\u0161, Matteo Interlandi, Cedric Renggli, Wentao Wu, Ce Zhang, Deepak Mukunthu Iyappan Babu, Jordan Edwards, Chris Lauren, Andy Xu, and Markus Weimer. 2020. Building Continuous Integration Services for Machine Learning. Proc. ACM SIGKDD Int. Conf. Knowl. Discov. Data Min. (2020), 2407\u20132415. DOI:https://doi.org/10.1145/3394486.3403290 [19] Rupesh Raj Karn, Prabhakar Kudva, and Ibrahim Abe M. Elfadel. 2019. Dynamic autoselection and autotuning of machine learning models for cloud network analytics. IEEE Trans. Parallel Distrib. Syst. 30, 5 (2019), 1052\u20131064. DOI:https://doi.org/10.1109/TPDS.2018.2876844 [20] Barbara Kitchenham, O. Pearl Brereton, David Budgen, Mark Turner, John Bailey, and Stephen Linkman. 2009. Systematic literature reviews in software engineering - A systematic literature review. Inf. Softw. Technol. 51, 1 (2009), 7\u201315. DOI:https://doi.org/10.1016/j.infsof.2008.09.009 [21] Rafal Kocielnik, Saleema Amershi, and Paul N Bennett. 2019. Will you accept an imperfect ai? exploring designs for adjusting end-user expectations of ai systems. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, 1\u201314.", "start_char_idx": 1422, "end_char_idx": 2888, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "154e45bd-a51d-42d0-807d-deee29626d3b": {"__data__": {"id_": "154e45bd-a51d-42d0-807d-deee29626d3b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "13436a1c-f61d-40aa-a204-7dcdf965ff4e", "node_type": "1", "metadata": {}, "hash": "47a9288454fb9344caa12c09e5d31f3d72405922f6c78274a78437f95a004ce2", "class_name": "RelatedNodeInfo"}, {"node_id": "2a360f7d-df7a-499b-976b-5de55b38e5e9", "node_type": "1", "metadata": {}, "hash": "d522bde412e7b4a6eae0dade03f817b0ac8aec5ea958cb2dd778afaa1a151d97", "class_name": "RelatedNodeInfo"}, {"node_id": "640aa4f0-1e90-4d45-ac32-8ec5f52eb41d", "node_type": "1", "metadata": {}, "hash": "513190462a59ea8e169a15153746b1e70a3c525516eab64926f3fbfbe07a5a6a", "class_name": "RelatedNodeInfo"}, {"node_id": "c2a81f52-9b2d-40ad-89c4-6f0bb9277ffb", "node_type": "1", "metadata": {}, "hash": "a1c9310bec7a74c2f4c30d901266b9753ffe944ea6d85ebd4c300094c34468e8", "class_name": "RelatedNodeInfo"}, {"node_id": "40138fea-aa69-44bc-836d-a2817608f3b0", "node_type": "1", "metadata": {}, "hash": "b8957c31a9ed75105506a929cacda7fc53e2280c7e6da68ce1643359215bb5e1", "class_name": "RelatedNodeInfo"}]}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "text": "[22] Ana De Las Heras, Amalia Luque-Sendra, and Francisco Zamora-Polo. 2020. Machine learning technologies for sustainability in smart cities in the post-covid era. Sustainability 12, 22 (2020), 9320. [23] Leonardo Leite, Carla Rocha, Fabio Kon, Dejan Milojicic, and Paulo Meirelles. 2019. A survey of DevOps concepts and challenges. ACM Comput. Surv. 52, 6 (2019). DOI:https://doi.org/10.1145/3359981 [24] Yan Liu, Zhijing Ling, Boyu Huo, Boqian Wang, Tianen Chen, and Esma Mouine. 2020. Building A Platform for Machine Learning Operations from Open Source Frameworks. IFAC-PapersOnLine 53, 5 (2020), 704\u2013709. DOI:https://doi.org/10.1016/j.ifacol.2021.04.161 [25] Alvaro Lopez Garcia, Viet Tran, Andy S. Alic, Miguel Caballer, Isabel Campos Plasencia, Alessandro Costantini, Stefan Dlugolinsky, Doina Cristina Duma, Giacinto Donvito, Jorge Gomes, Ignacio Heredia Cacha, Jesus Marco De Lucas, Keiichi Ito, Valentin Y. Kozlov, Giang Nguyen, Pablo Orviz Fernandez, Zdenek Sustr, Pawel Wolniewicz, Marica Antonacci, Wolfgang Zu Castell, Mario David, Marcus Hardt, Lara Lloret Iglesias, Germen Molto, and Marcin Plociennik. 2020. A cloud-based framework for machine learning workloads and applications. IEEE Access 8, (2020), 18681\u201318692. DOI:https://doi.org/10.1109/ACCESS.2020.2964386 [26] Lwakatare. 2020. From a Data Science Driven Process to a Continuous Delivery Process for Machine Learning Systems. Lect. Notes Comput. Sci. (including Subser. Lect. Notes Artif. Intell. Lect.", "start_char_idx": 2889, "end_char_idx": 4368, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39b97a34-dc97-48a5-aaab-ae3980088068": {"__data__": {"id_": "39b97a34-dc97-48a5-aaab-ae3980088068", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131", "node_type": "1", "metadata": {}, "hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ffde2f1a-0aa1-4224-97cc-8ffe3f990812", "node_type": "1", "metadata": {}, "hash": "731bc6f68d29c5f0a8411f76ed916a0ced84d6ad088803637d5bf94425b019ee", "class_name": "RelatedNodeInfo"}, {"node_id": "355fe1e7-f963-4b57-a43e-269d129451a9", "node_type": "1", "metadata": {}, "hash": "fef64186baff411253dbb479ec54f88af1efaa18afb83d5d6371ff2f7a87d772", "class_name": "RelatedNodeInfo"}, {"node_id": "c5c4b40b-7e7b-4706-a829-b9e30c5a6d86", "node_type": "1", "metadata": {}, "hash": "e2cffe412a6edc71169c14a85854940205a74143572ee712a9ee6ec5ace8b780", "class_name": "RelatedNodeInfo"}, {"node_id": "55b49e46-8231-488a-aceb-eb95697abe6c", "node_type": "1", "metadata": {}, "hash": "97ea0b2821bcbb004e469c2a08ab641032a8e4db2eac93a1a8db21074c07ad67", "class_name": "RelatedNodeInfo"}, {"node_id": "7bbe043f-a244-4bb6-8136-40785442a1b9", "node_type": "1", "metadata": {}, "hash": "5d9ad957596c88a78568178731ec22387b18bbebd2b8be9f7e08fb169203471e", "class_name": "RelatedNodeInfo"}]}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "text": "Lect. Notes Artif. Intell. Lect. Notes Bioinformatics) 12562 LNCS, (2020), 185\u2013201. DOI:https://doi.org/10.1007/978-3-030-64148-1_12 [27] Lwakatare. 2020. DevOps for AI - Challenges in Development of AI-enabled Applications. (2020). DOI:https://doi.org/10.23919/SoftCOM50211.2020.9238323 [28] Ruth W. Macarthy and Julian M. Bass. 2020. An Empirical Taxonomy of DevOps in Practice. In 2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), IEEE, 221\u2013228. DOI:https://doi.org/10.1109/SEAA51224.2020.00046 [29] Sasu M\u00e4kinen, Henrik Skogstr\u00f6m, Eero Laaksonen, and Tommi Mikkonen. 2021. Who Needs MLOps: What Data Scientists Seek to Accomplish and How Can MLOps Help? Ml (2021). Retrieved from http://arxiv.org/abs/2103.08942 [30] Rob van der Meulen and Thomas McCall. 2018. Gartner Says Nearly Half of CIOs Are Planning to Deploy Artificial Intelligence. Retrieved December 4, 2021 from https://www.gartner.com/en/newsroom/press-releases/2018-02-13-gartner-says-nearly-half-of-cios-are-planning-to-deploy-artificial-intelligence [31] Steve Mezak. 2018. The Origins of DevOps: What\u2019s in a Name? - DevOps.com. Retrieved March 25, 2021 from https://devops.com/the-origins-of-devops-whats-in-a-name/ [32] Antonio Molner Domenech and Alberto Guill\u00e9n. 2020. Ml-experiment: A Python framework for reproducible data science. J. Phys. Conf. Ser. 1603, 1 (2020).", "start_char_idx": 4336, "end_char_idx": 5718, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9dc9003-cf40-4cb7-8940-f9a7378a3131": {"__data__": {"id_": "f9dc9003-cf40-4cb7-8940-f9a7378a3131", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "node_type": "1", "metadata": {}, "hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4b337b71-a942-4f95-a9b0-8aec46ee3086", "node_type": "1", "metadata": {}, "hash": "3cbf4e4ea2ab2b687cec45798f542200969a5e136775e99f82e7408d234b629c", "class_name": "RelatedNodeInfo"}, {"node_id": "e93c47c1-1a4d-4484-8aad-94e1c468b224", "node_type": "1", "metadata": {}, "hash": "96f4e899f69db683e61de8281936ad61fd6c15855f2e544951adf5c957593ba9", "class_name": "RelatedNodeInfo"}]}, "hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "text": "Conf. Ser. 1603, 1 (2020). DOI:https://doi.org/10.1088/1742-6596/1603/1/012025 [33] Michael D. Myers and Michael Newman. 2007. The qualitative interview in IS research: Examining the craft. Inf. Organ. 17, 1 (2007), 2\u201326. DOI:https://doi.org/10.1016/j.infoandorg.2006.11.001 [34] Pulasthi Perera, Roshali Silva, and Indika Perera. 2017. Improve software quality through practicing DevOps.", "start_char_idx": 5692, "end_char_idx": 6080, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4": {"__data__": {"id_": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ef006118-f471-4824-9d54-c9831da9cea0", "node_type": "1", "metadata": {}, "hash": "8ffcdb4afd31559025cc19fa14c445ace2d372337d04e5ad1f01e843f340299d", "class_name": "RelatedNodeInfo"}, {"node_id": "1241dfe3-334e-445c-bb28-d4bd5859193d", "node_type": "1", "metadata": {}, "hash": "38d28eb464d5b098c96f1b176cc53ff5d390a4092b5616c9a58785f0cc29dfdf", "class_name": "RelatedNodeInfo"}, {"node_id": "bf99aeaa-e2d2-4c54-aaea-3cbfc1a2af4e", "node_type": "1", "metadata": {}, "hash": "5934629e5446db9ab9db2a266398229613a2714fb5d7d92eaafde21bc63a40d6", "class_name": "RelatedNodeInfo"}, {"node_id": "c3a61a5a-9a57-4b45-be5e-8189b09df34f", "node_type": "1", "metadata": {}, "hash": "7944b3caefaf88afea2e57a300597c1ba99e1fcc3860e9f4fe374ac3a34c18ac", "class_name": "RelatedNodeInfo"}, {"node_id": "86f4ee88-f22b-43f3-8b26-6b9adcd62338", "node_type": "1", "metadata": {}, "hash": "8a41ba59a6b48e17ce697608183ac1653d4e318ff4ef574cf5eafce6f0745b85", "class_name": "RelatedNodeInfo"}]}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "text": "2017. Improve software quality through practicing DevOps. In 2017 Seventeenth International Conference on Advances in ICT for Emerging Regions (ICTer), 1\u20136. [35] Alexandra Posoldova. 2020. Machine Learning Pipelines: From Research to Production. IEEE POTENTIALS (2020). [36] Cedric Renggli, Luka Rimanic, Nezihe Merve G\u00fcrel, Bojan Karla\u0161, Wentao Wu, and Ce Zhang. 2021. A Data Quality-Driven View of MLOps. 1 (2021), 1\u201312. Retrieved from http://arxiv.org/abs/2102.07750 [37] Winston W. Royce. 1970. Managing the Development of Large Software Systems. (1970). [38] Martin R\u00fctz. 2019. DEVOPS: A SYSTEMATIC LITERATURE REVIEW. Inf. Softw. Technol. (2019). [39] Ulrike Schultze and Michel Avital. 2011. Designing interviews to generate rich data for information systems research. Inf. Organ. 21, 1 (2011), 1\u201316. DOI:https://doi.org/10.1016/j.infoandorg.2010.11.001 [40] Ola Spjuth, Jens Frid, and Andreas Hellander. 2021. The machine learning life cycle and the cloud: implications for drug discovery. Expert Opin. Drug Discov. 00, 00 (2021), 1\u20139. DOI:https://doi.org/10.1080/17460441.2021.1932812 \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n [41] Damian A. Tamburri. 2020. Sustainable MLOps: Trends and Challenges. Proc. - 2020 22nd Int. Symp. Symb. Numer. Algorithms Sci. Comput. SYNASC 2020 (2020), 17\u201323.", "start_char_idx": 0, "end_char_idx": 1300, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b": {"__data__": {"id_": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "eb98d67a-da22-4edc-89a6-87b01366fbb2", "node_type": "1", "metadata": {}, "hash": "6831905fd949aad8976148e99af9472147f2205b51e548c5c44dcbabfefb02b9", "class_name": "RelatedNodeInfo"}, {"node_id": "65312112-b538-45c4-a0e0-bbc7f9e2a1f7", "node_type": "1", "metadata": {}, "hash": "75ddc7cfdeca181c76775caa85dac878b038bbb761703d8abf71b9270ce53070", "class_name": "RelatedNodeInfo"}, {"node_id": "65424a7f-5f0d-4be8-805b-f7fbc6415655", "node_type": "1", "metadata": {}, "hash": "6b80d7308c3b8a7bca7620f59572499bdd21b1cbb26d02612b8bef3366fb0625", "class_name": "RelatedNodeInfo"}, {"node_id": "770ea4ef-7db9-4018-be0d-939c6d6d5e75", "node_type": "1", "metadata": {}, "hash": "59b391f463c2083197d112dbaf3ba19dfc0e49244afd207b76040813689b4fc7", "class_name": "RelatedNodeInfo"}, {"node_id": "3945c568-a2b6-4c94-a898-ca0f073ba23f", "node_type": "1", "metadata": {}, "hash": "ebf152627efdd4c7fb4544e3a884be96b70869be8291707632c17edb0ec52ccb", "class_name": "RelatedNodeInfo"}, {"node_id": "2ea3a0a4-db4a-48b2-ab4d-73e7fbdbcd1d", "node_type": "1", "metadata": {}, "hash": "ab7f7b4899570b9244f28c77639876484fd2560a9bda0388c4bdf469acbeebf9", "class_name": "RelatedNodeInfo"}]}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "text": "Comput. SYNASC 2020 (2020), 17\u201323. DOI:https://doi.org/10.1109/SYNASC51798.2020.00015 [42] Chandrasekar Vuppalapati, Anitha Ilapakurti, Karthik Chillara, Sharat Kedari, and Vanaja Mamidi. 2020. Automating Tiny ML Intelligent Sensors DevOPS Using Microsoft Azure. Proc. - 2020 IEEE Int. Conf. Big Data, Big Data 2020 (2020), 2375\u20132384. DOI:https://doi.org/10.1109/BigData50022.2020.9377755 [43] Jane Webster and Richard Watson. 2002. Analyzing the Past to Prepare for the Future: Writing a Literature Review. MIS Q. 26, 2 (2002), xiii\u2013xxiii. DOI:https://doi.org/10.1.1.104.6570 [44] Chaoyu Wu, E. Haihong, and Meina Song. 2020. An Automatic Artificial Intelligence Training Platform Based on Kubernetes. ACM Int. Conf. Proceeding Ser. (2020), 58\u201362. DOI:https://doi.org/10.1145/3378904.3378921 [45] Geum Seong Yoon, Jungsu Han, Seunghyung Lee, and Jong Won Kim. 2020. DevOps Portal Design for SmartX AI Cluster Employing Cloud-Native Machine Learning Workflows. Springer International Publishing. DOI:https://doi.org/10.1007/978-3-030-39746-3_54 [46] Yue Zhou, Yue Yu, and Bo Ding. 2020. Towards MLOps: A Case Study of ML Pipeline Platform. Proc. - 2020 Int. Conf. Artif. Intell. Comput. Eng. ICAICE 2020 (2020), 494\u2013500. DOI:https://doi.org/10.1109/ICAICE51518.2020.00102    \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  Appendix Table 1.", "start_char_idx": 1266, "end_char_idx": 2641, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f20524c-21f3-4cca-8645-a5e54a1fe9c5": {"__data__": {"id_": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7698b87b-8d6c-4899-aa44-22795ccb7b33", "node_type": "1", "metadata": {}, "hash": "2dee3f1955d92ec6d5a4408de300deb48034466ed6ff605f713e2bf88ceaef79", "class_name": "RelatedNodeInfo"}, {"node_id": "940bb3fa-5e21-4d5c-b22c-505d38ee2ace", "node_type": "1", "metadata": {}, "hash": "2f8b2e55064538770b12907cf4fbcaa2b5d1027ad44db12b49138b9adbd8c156", "class_name": "RelatedNodeInfo"}, {"node_id": "0b90ad7e-5a41-4f0e-b029-70451bcbe8fc", "node_type": "1", "metadata": {}, "hash": "0a9d73db736f35b53b7d9e456b3aae36493f17dfd9e61aa893922d4fa82b3574", "class_name": "RelatedNodeInfo"}, {"node_id": "38c78570-11ab-41f9-a69e-b19a39338335", "node_type": "1", "metadata": {}, "hash": "eb57ccba75d30684a935f4d97c0c74e77a680622c60140b8280beb2c622698b3", "class_name": "RelatedNodeInfo"}, {"node_id": "ef078c9c-afed-4edd-acc6-2bde4561d073", "node_type": "1", "metadata": {}, "hash": "0d65e17fc11a29e4a47d4c1f8190387570ea840987e895998ed123098d3037f8", "class_name": "RelatedNodeInfo"}, {"node_id": "723caaa0-5ed9-49e4-82b7-71921282a571", "node_type": "1", "metadata": {}, "hash": "4b6e87ed7853eea8f79fe98633155b5208843c74ccc2705e1da594ccd69d4795", "class_name": "RelatedNodeInfo"}]}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "text": "List of evaluated technologies  Technology Name Description Sources Open-source examples TensorFlow Extended TensorFlow Extended (TFX) is a configuration framework providing libraries for each of the tasks of an end-to-end ML pipeline. Examples are data validation, data distribution checks, model training, and model serving. [7,10,26,46] [\u03b4, \u03b8]  Airflow Airflow is a task and workflow orchestration tool, which can also be used for ML workflow orchestration. It is also used for orchestrating data engineering jobs. Tasks are executed according to directed acyclic graphs (DAGs). [26,40,41] [\u03b1, \u03b2, \u03b6, \u03b7] Kubeflow Kubeflow is a Kubernetes-based end-to-end ML platform. Each Kubeflow component is wrapped into a container and orchestrated by Kubernetes. Also, each task of an ML workflow pipeline is handled with one container. [26,35,40,41,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b6, \u03b7, \u03b8]   MLflow MLflow is an ML platform that allows for the management of the ML lifecycle end-to-end. It provides an advanced experiment tracking functionality, a model registry, and model serving component. [11,32,35] [\u03b1, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8]   Commercial examples Databricks managed MLflow The Databricks platform offers managed services based on other cloud providers\u2019 infrastructure, e.g., managed MLflow. [26,32,35,40] [\u03b1, \u03b6] Amazon CodePipeline Amazon CodePipeline is a CI/CD automation tool to facilitate the build, test, and delivery steps. It also allows one to schedule and manage the different stages of an ML pipeline. [18] [\u03b3] Amazon SageMaker With SageMaker, Amazon AWS offers an end-to-end ML platform. It provides, out-of-the-box, a feature store, orchestration with SageMaker Pipelines, and model serving with SageMaker endpoints. [7,11,18,24,35] [\u03b1, \u03b2, \u03b3, \u03b6, \u03b8]  Azure DevOps Pipelines Azure DevOps Pipelines is a CI/CD automation tool to facilitate the build, test, and delivery steps. It also allows one to schedule and manage the different stages of an ML pipeline.", "start_char_idx": 2642, "end_char_idx": 4584, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a110f60a-18c0-4758-9856-6998878bc107": {"__data__": {"id_": "a110f60a-18c0-4758-9856-6998878bc107", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9570f67f-24c1-4375-8cef-3d21e8424125", "node_type": "1", "metadata": {}, "hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "aed1f523-7c63-4220-82e1-62967df4ee0e", "node_type": "1", "metadata": {}, "hash": "2d4dba7c360038c462b62e37f060c9da0dc776cb80bd7249b2a4e7c013e5c4b4", "class_name": "RelatedNodeInfo"}, {"node_id": "07f7368b-2a21-49eb-8d75-34d079492665", "node_type": "1", "metadata": {}, "hash": "2bd57d63170e3c3dde7cd021f6c84713c6f0b4bf589cada20b768fe7e237bd80", "class_name": "RelatedNodeInfo"}, {"node_id": "50ef89ce-ee76-4f86-ba32-1e0ce0d58eaf", "node_type": "1", "metadata": {}, "hash": "06a63c2afaf4ce95833fee09f7af8ea6e7671f9919460db1c9d8ca8e30c582d7", "class_name": "RelatedNodeInfo"}, {"node_id": "ca092f8f-3ef8-4958-84a5-a0c8acea722b", "node_type": "1", "metadata": {}, "hash": "1ed9d64d71106e14f60c018721e965e73f1f930c2476f5b32a135e4086a62af3", "class_name": "RelatedNodeInfo"}, {"node_id": "2fcef97f-0f57-42c3-bb08-d3a29f982e95", "node_type": "1", "metadata": {}, "hash": "056a4eccc5ae2e6b4533f5b7be68f1e86206d00499b39680db298fea42c28157", "class_name": "RelatedNodeInfo"}]}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "text": "It also allows one to schedule and manage the different stages of an ML pipeline. [18,42] [\u03b3, \u03b5] Azure ML Microsoft Azure offers, in combination with Azure DevOps Pipelines and Azure ML, an end-to-end ML platform. [6,24,25,35,42] [\u03b1, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8] \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n GCP - Vertex AI GCP offers, along with Vertex AI, a fully managed end-to-end platform. In addition, they offer a managed Kubernetes cluster with Kubeflow as a service. [25,35,40,41] [\u03b1, \u03b3, \u03b4, \u03b6, \u03b8] IBM Cloud Pak for Data (IBM Watson Studio) IBM Cloud Pak for Data combines a list of software in a package that offers data and ML capabilities. [41] [\u03b3]  Table 2. List of interview partners Interviewee pseudonym Job Title Years of experience with DevOps Years of experience with ML Industry Company Size (number of employees) Alpha (\u03b1) Senior Data Platform Engineer  3 4 Sporting Goods / Retail 60,000 Beta (\u03b2) Solution architect / Specialist for ML and AI 6 10 IT Services / Cloud Provider / Cloud Computing 25,000 Gamma (\u03b3) AI Architect / Consultant  5 7 Cloud Provider 350,000 Delta (\u03b4) Technical Marketing & Manager in ML / AI 10 5 Cloud Provider 139,995 Epsilon (\u03b5) Technical Architect - Data & AI 1 2 Cloud Provider 160,000 Zeta (\u03b6) ML engineering Consultant 5 6 Consulting Company 569,000 Eta (\u03b7) Engineering Manager in AI / Senior Deep Learning Engineer  10 10 Conglomerate (multi-industry) 400,000 Theta (\u03b8) ML Platform Product Lead 8 10 Music / audio streaming 6,500  \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n   Figure 5.", "start_char_idx": 4503, "end_char_idx": 6064, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9570f67f-24c1-4375-8cef-3d21e8424125": {"__data__": {"id_": "9570f67f-24c1-4375-8cef-3d21e8424125", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f", "node_type": "1", "metadata": {}, "hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "69a1468a-bf0d-466f-a014-bb02feb1a75c", "node_type": "1", "metadata": {}, "hash": "ff45bd585244e3f3a592093395ed073c53cd2d47576b35bbcf524e8b9baa3028", "class_name": "RelatedNodeInfo"}, {"node_id": "7f01b877-d71e-444a-8c59-64630095215f", "node_type": "1", "metadata": {}, "hash": "c8090d0b1c55f1ba0d8f9d16e626428122a1c02d304c9355bbdd2fb573856a13", "class_name": "RelatedNodeInfo"}]}, "hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "text": "Intersection of disciplines of the MLOps paradigm \n22/04/22MachineLearningSoftwareEngineering\nData EngineeringMLOpsCD4MLML Model\nData\n1CI/CDPipeline CodeDevOps\n\n1\nLearning under Concept Drift: A Review\nJie Lu, Fellow, IEEE, Anjin Liu, Member, IEEE, Fan Dong, Feng Gu, Jo \u02dcao Gama, and Guangquan Zhang\nAbstract \u2014Concept drift describes unforeseeable changes in the underlying distribution of streaming data over time. Concept drift\nresearch involves the development of methodologies and techniques for drift detection, understanding and adaptation. Data analysis\nhas revealed that machine learning in a concept drift environment will result in poor learning results if the drift is not addressed.", "start_char_idx": 6065, "end_char_idx": 6760, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c232982-940f-4368-aa32-de082a86d3e3": {"__data__": {"id_": "7c232982-940f-4368-aa32-de082a86d3e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "cba71f56-26a3-4e6e-9f7c-5b150e86f8e0", "node_type": "1", "metadata": {}, "hash": "5bc6a00e13b096015220532dbd3684d343b2518be102a68c293d28b4d2a4f918", "class_name": "RelatedNodeInfo"}, {"node_id": "84fbb92e-5a96-4320-a956-f4ef22be3715", "node_type": "1", "metadata": {}, "hash": "30fce98d52144dfdd7e3f0d172b3e683363e68055ee4d6789f116ed858115353", "class_name": "RelatedNodeInfo"}, {"node_id": "81a50b6e-0411-4e6d-8534-52a74e0a0546", "node_type": "1", "metadata": {}, "hash": "ee96e5d579bffe11cc5ac7d15310562125cff87309a51c3241effb1824dc0a56", "class_name": "RelatedNodeInfo"}, {"node_id": "62389c86-bb6b-4ba5-826e-3d23fcb3d30b", "node_type": "1", "metadata": {}, "hash": "70b9c172d2d2c736c32f50bce28f9ebe5bc082b464dc2fcceca1f96dd25f34d5", "class_name": "RelatedNodeInfo"}, {"node_id": "ddeb5938-2f62-4b78-9a62-e6a8319a0c88", "node_type": "1", "metadata": {}, "hash": "6defbfe5faa4b8973794f8df30d2fad5dfd3eb8a33e77556d31657f4f70567d0", "class_name": "RelatedNodeInfo"}]}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "text": "To help\nresearchers identify which research topics are signi\ufb01cant and how to apply related techniques in data analysis tasks, it is necessary\nthat a high quality, instructive review of current research developments and trends in the concept drift \ufb01eld is conducted. In addition,\ndue to the rapid development of concept drift in recent years, the methodologies of learning under concept drift have become\nnoticeably systematic, unveiling a framework which has not been mentioned in literature. This paper reviews over 130 high quality\npublications in concept drift related research areas, analyzes up-to-date developments in methodologies and techniques, and\nestablishes a framework of learning under concept drift including three main components: concept drift detection, concept drift\nunderstanding, and concept drift adaptation. This paper lists and discusses 10 popular synthetic datasets and 14 publicly available\nbenchmark datasets used for evaluating the performance of learning algorithms aiming at handling concept drift. Also, concept drift\nrelated research directions are covered and discussed. By providing state-of-the-art knowledge, this survey will directly support\nresearchers in their understanding of research developments in the \ufb01eld of learning under concept drift.\nIndex Terms \u2014concept drift, change detection, adaptive learning, data streams\n!\n1 I NTRODUCTION\nGOVERNMENTS and companies are generating huge\namounts of streaming data and urgently need ef\ufb01cient\ndata analytics and machine learning techniques to sup-\nport them making predictions and decisions. However, the\nrapidly changing environment of new products, new mar-\nkets and new customer behaviors inevitably results in the\nappearance of concept drift problem. Concept drift means\nthat the statistical properties of the target variable, which the\nmodel is trying to predict, change over time in unforeseen\nways [1]. If the concept drift occurs, the induced pattern of\npast data may not be relevant to the new data, leading to\npoor predictions and decision outcomes. The phenomenon\nof concept drift has been recognized as the root cause of\ndecreased effectiveness in many data-driven information\nsystems such as data-driven early warning systems and\ndata-driven decision support systems. In an ever-changing\nand big data environment, how to provide more reliable\ndata-driven predictions and decision facilities has become a\ncrucial issue.\nConcept drift prob lem existsinmany real-world situa-\ntions.", "start_char_idx": 0, "end_char_idx": 2479, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09": {"__data__": {"id_": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "748996c0-df81-4ea4-845a-4f45ff0a5ffc", "node_type": "1", "metadata": {}, "hash": "caf3f5dd971143447f49b1d2b010d8c3b4db28af5d75fdd4ce926f62887c4233", "class_name": "RelatedNodeInfo"}, {"node_id": "6e345121-7b60-487d-b52c-b1e83f90dbd2", "node_type": "1", "metadata": {}, "hash": "3d3216af2a85463ec7fece604a1ca0e48261d5d178be7e2923b8f18fa56e8aa9", "class_name": "RelatedNodeInfo"}, {"node_id": "5cbeb82e-4b5c-42ee-8720-d886dce28696", "node_type": "1", "metadata": {}, "hash": "4a8a80b2e4ffe3c2466a2d51a18cbca435e05af24ff953165864c5a8e30c9433", "class_name": "RelatedNodeInfo"}, {"node_id": "6a997008-01b3-4220-966d-e6162d01f4a9", "node_type": "1", "metadata": {}, "hash": "6cf677b579e33b1043329d7ca9061055e5f338c77099dc5a5526f4208ed6ae21", "class_name": "RelatedNodeInfo"}, {"node_id": "311e00f4-52f9-426d-ab60-02dc6c173f4e", "node_type": "1", "metadata": {}, "hash": "bbc51b55c76d8f9812a8da460614464116cde7641508d69ce73ff0d7cc0bdcc7", "class_name": "RelatedNodeInfo"}]}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "text": "Concept drift prob lem existsinmany real-world situa-\ntions. Anexamplecanbeseen inthechanges ofbehaviorin\nmobilephone usage, asshown inFig.1.From thebars inthis\n\ufb01gure, thetime percentagedistribution ofthemobile phone\nusagepattern haschanged from \u201cAu dioCall\u201d to\u201cCam era\u201d\nand then to\u201cMo bile Internet\u201d over thepast two decades.\nRecent attractive research in the \ufb01eld of concept drift\ntargets more challenging problems, i.e., how to accurately\ndetect concept drift in unstructured and noisy datasets [2],\n[3], how to quantitatively understand concept drift in a\nexplainable way [4], [5], and how to effectively react to drift\nby adapting related knowledge [6], [7].\nSolving these challenges endows prediction and\ndecision-making with the adaptability in an uncertain envi-\nronment. Conventional research related to machine learning\nhas been signi\ufb01cantly improved by introducing concept\ndrift techniques in data science and arti\ufb01cial intelligence in\n0.00%20.00%40.00%60.00%80.00%100.00%\n2000 - 20052005 - 20102010 - 20152015 - NowAudio CallText MessageMultimediaCameraMobile InternetFig. 1. Concept drift in mobile phone usage (data used in \ufb01gure are for\ndemonstration only)\ngeneral, and in pattern recognition and data stream mining\nin particular. These new studies enhance the effectiveness of\nanalogical and knowledge reasoning in an ever-changing\nenvironment. A new topic is formed during this devel-\nopment: adaptive data-driven prediction/decision systems.\nIn particular, concept drift is a highly prominent and sig-\nni\ufb01cant issue in the context of the big data era because\nthe uncertainty of data types and data distribution is an\ninherent nature of big data.\nConventional machine learning has two main compo-\nnents: training/learning and prediction. Research on learn-\ning under concept drift presents three new components:\ndrift detection (whether or not drift occurs), drift under-\nstanding (when, how, where it occurs) and drift adaptation\n(reaction to the existence of drift) as shown in Fig. 2. These\nwill be discussed in Section 3-5.", "start_char_idx": 2419, "end_char_idx": 4463, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "054fed5b-36d2-43da-aa06-ae481e91c1d5": {"__data__": {"id_": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "78a60409-748a-4389-bb04-17d778acc523", "node_type": "1", "metadata": {}, "hash": "2b01fd536c701b8da5286bb61ca85b9b99e2f1d52b9d6c1ea724c6113d31d6ff", "class_name": "RelatedNodeInfo"}, {"node_id": "0883a13e-53b7-43f4-a827-f1caa7f523c0", "node_type": "1", "metadata": {}, "hash": "30ec7584c646fd94a0c49ff893a488df437ee6278c394232c15035ab9eb63b6e", "class_name": "RelatedNodeInfo"}, {"node_id": "e4d48728-9c7d-4eec-a6f7-ece4bc1f93f2", "node_type": "1", "metadata": {}, "hash": "f5757496664ced4dce95b54940b77be1dbc4d3146a250c5c19a5d425e91fe864", "class_name": "RelatedNodeInfo"}, {"node_id": "c37fcfac-e84f-4814-b17e-7cb612f14b1c", "node_type": "1", "metadata": {}, "hash": "bcb3ac093add167c0157ddd9229c78b645d68541b31e831019e8df9ab465f220", "class_name": "RelatedNodeInfo"}, {"node_id": "6a04c896-bba2-48c0-84f4-d6edcf349507", "node_type": "1", "metadata": {}, "hash": "2fd05176ad48ef9334402034d600a0b4eecb64038a905283cd2f230380926de1", "class_name": "RelatedNodeInfo"}]}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "text": "2. These\nwill be discussed in Section 3-5.\nIn literature, a detailed concept drift survey paper [8]\nwas published in 2014 but intentionally left certain sub-\nproblems of concept drift to other publications, such as the\ndetails ofthedata distribution change (P(X)) as mentioned\nin their Section 2.1. In 2015, another comprehensive survey\npaper [9] was published, which surveys and gives tutorial\nof both the established and the state-of-the-art approaches.\nIt provides a hybrid-view about concept drift from twoarXiv:2004.05785v1  [cs.LG]  13 Apr 2020\n\n2\nTraining and LearningPredictionConceptDriftAdaptationConceptDrift UnderstandingUpdateStreamDataConceptDrift DetectionAdriftdetectedNodriftdetected\nFig. 2. Framework for handling concept drift in machine learning. Please\nnote thatsome meth odscandoconcept driftdetectionandconcept drift\nunderstand ingsimultaneously.\nprimary perspectives, active and passive. Both survey pa-\npers are comprehensive and can be a good introduction\nto concept drift researching. How ever, many new publica-\ntions have become avail able inthelast three years, even a\nnew category ofdrift detection meth ods hasarisen, named\nmultiplehypoth esistests drift detection. It is necessary to\nreview the past research focuses and give the most recent\nresearch trends about concept drift, which is one of the main\ncontribution of this survey paper.\nBesides these two publications, four related survey pa-\npers [6], [7], [10], [11] have also provided valuable insights\ninto how to address concept drift, but their speci\ufb01c research\nfocus is only on data stream learning, rather than analyz-\ning concept drift adaptation algorithms and understand-\ning concept drift. Speci\ufb01cally, paper [7] focuses on data\nreduction for stream learning incorporating concept drift,\nwhile [6] only focuses on investigating the development in\nlearning ensembles for data stream learning in a dynamic\nenvironment. [11] concerns the evolution of data stream\nclustering, and [10] focuses on investigating the current and\nfuture trends of data stream learning.", "start_char_idx": 4421, "end_char_idx": 6478, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e043331c-76f3-4333-9839-e0485251b84e": {"__data__": {"id_": "e043331c-76f3-4333-9839-e0485251b84e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06", "node_type": "1", "metadata": {}, "hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ad6d5608-ca39-43eb-9a4e-3d009cb736bb", "node_type": "1", "metadata": {}, "hash": "8c0f56fa5543e97776ca4f0c82043cf38bead4295a84384abd7ebe37c21fc1be", "class_name": "RelatedNodeInfo"}, {"node_id": "88af895f-79a3-4d28-be8e-87e2ae1ee3e4", "node_type": "1", "metadata": {}, "hash": "b4dd60d598a4c38acc4c42197d92f687b8f8c1aa5a1516e1fe51b2c5e09707d1", "class_name": "RelatedNodeInfo"}, {"node_id": "bd464783-b7ef-45e8-a5e9-2501bd330b71", "node_type": "1", "metadata": {}, "hash": "d0ee95de7a3c006824aa82589bc1088f776e7c5986ab9c4870f572db04bd7b63", "class_name": "RelatedNodeInfo"}, {"node_id": "37b83dcf-29ac-42a0-a7b9-21cdb632743b", "node_type": "1", "metadata": {}, "hash": "0fc4ddadbc56ebf79ea845cb229411b46fc5c459d7d9f1eb98fc2dbe601c3d76", "class_name": "RelatedNodeInfo"}, {"node_id": "f1e2ae35-a5fd-4405-a687-435321d65707", "node_type": "1", "metadata": {}, "hash": "ec7381534eb2835c5f91929b83c4091a162a8c43377a275fac0eb980ce7dbd45", "class_name": "RelatedNodeInfo"}]}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "text": "There is therefore a\ngap in the current literature that requires a fuller picture\nof established and the new emerged research on concept\ndrift; a comprehensive review of the three major aspects\nof concept drift: concept drift detection, understanding and\nadaptation, as shown in Fig. 2; and a discussion about the\nnew trend of concept drift research.\nThe selection of references in this survey paper was\nperformed according to the following steps:\nStep 1. Publication database: Science Direct, ACM Digital\nLibrary, IEEE Xplore and SpringerLink.\nStep 2. Preliminary screening of articles: The \ufb01rst search\nwas based on keywords. The articles were then selected\nas references if they 1) present new theory, algorithm or\nmethodology in the area of concept drift, or 2) report a\nconcept drift application.\nStep 3. Result \ufb01ltering for articles: The articles selected\nin Step 2 were divided into three groups: concept drift\ndetection, understanding, and adaptation. The references in\neach group were \ufb01ltered again, based on 1) Time: published\nmainly within the last 10 years, or 2) Impact: published in\nhigh quality journals/conferences or having high citations.\nStep 4. Dataset selection: To help readers test their re-\nsearch results, this paper lists popular datasets and their\ncharacteristics, the dataset providers, and how each dataset\ncan be used.\nOn completion of this process, 137 research articles, 10\nwidely used synthetic datasets for evaluating the perfor-\nmance of learning algorithms dealing with concept drift,\nand 14 publicly available and widely used real-world\ndatasets were listed for discussion.\nThe main contributions of this paper are:1) It perceptively summarizes concept drift research\nachievements and clusters the research into three cat-\negories: concept drift detection, understanding and\nadaptation, providing a clear framework for concept\ndrift research development (Fig. 2);\n2) It proposes a new component, concept drift under-\nstanding, for retrieving information about the status of\nconcept drift in aspects of when, how, and where.", "start_char_idx": 6479, "end_char_idx": 8538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82d4131a-dd97-4e60-9cef-a3d325b5bf06": {"__data__": {"id_": "82d4131a-dd97-4e60-9cef-a3d325b5bf06", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "44195252-acf9-4acb-9103-1128599dba42", "node_type": "1", "metadata": {}, "hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b6e54add-e37f-4f79-9631-c4e851276857", "node_type": "1", "metadata": {}, "hash": "8ba5304c1f5bd6364c33c689316ac28d41b578cc7376d1fa0966e4bbbd2a2ad0", "class_name": "RelatedNodeInfo"}, {"node_id": "75fdbcf3-c634-4f5a-9813-742beb539cba", "node_type": "1", "metadata": {}, "hash": "57b83be8e6a6967dedeb5994b97ca1933f022a2a29ed16c05bd49ee833ac542e", "class_name": "RelatedNodeInfo"}]}, "hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "text": "This\nalso creates a connection between drift detection and\ndrift adaptation;\n3) It uncovers several very new concept drift techniques,\nsuch as active learning under concept drift and fuzzy\ncompetence model-based drift detection, and identi\ufb01es\nrelated research involving concept drift;\n4) It systematically examines two sets of concept drift\ndatasets, Synthetic datasets and Real-world datasets,\nthrough multiple dimensions: dataset description,\navailability, suitability for type of drift, and existing\napplications;\n5) It suggests several emerging research topics and poten-\ntial research directions in this area.\nThe remainder of this paper is structured as follows.\nIn Section 2, the de\ufb01nitions of concept drift are given\nand discussed.", "start_char_idx": 8539, "end_char_idx": 9278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82deaf68-4a9e-463f-ba6d-bbf2bf79068d": {"__data__": {"id_": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a139793c-f41e-4034-9329-ba8027448489", "node_type": "1", "metadata": {}, "hash": "21be413fac85bc2441d2950a7c5663fb1361d8a31129df4ed6258436ce7a10ca", "class_name": "RelatedNodeInfo"}, {"node_id": "b84cf7ed-6563-4ef5-8f17-e46f84f1f1d4", "node_type": "1", "metadata": {}, "hash": "8ab198a08e2d220653ad0f94cc66e280111489511337ca572e81b559478fac99", "class_name": "RelatedNodeInfo"}, {"node_id": "99a7d8b7-dea2-4b36-b361-22726e9d6ab3", "node_type": "1", "metadata": {}, "hash": "c546d2b97f72134ecf41430163a183fe6d9fb5ea81ca2393c89cd8de494d188c", "class_name": "RelatedNodeInfo"}, {"node_id": "0a757b4f-27b4-4815-ab07-91e1f863e5ea", "node_type": "1", "metadata": {}, "hash": "b72749080e488caa60384e4bcde1048bf59f464570b61340f6446d370440af58", "class_name": "RelatedNodeInfo"}, {"node_id": "f211b5b6-4e8d-4502-aa93-86ea66d74dc5", "node_type": "1", "metadata": {}, "hash": "89b2b7b1a99ee177676835f9d709bfafc4713aed9e624baf6a0f7c6b5327561c", "class_name": "RelatedNodeInfo"}]}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "text": "Section 3 presents research methods and\nalgorithms in concept drift detection. Section 4 discusses\nresearch developments in concept drift understanding. Re-\nsearch results on drift adaptation (concept drift reaction) are\nreported in Section 5. Section 6 presents evaluation systems\nand related datasets used to test concept drift algorithms.\nSection 7 summaries related research concerning the concept\ndrift problem. Section 8 presents a comprehensive analysis\nof main \ufb01ndings and future research directions.\n2 P ROBLEM DESCRIPTION\nThis section \ufb01rst gives the formal de\ufb01nition and the sources\nof concept drift in Section 2.1. Then, in Section 2.2, the\ncommonly de\ufb01ned types of concept drift are introduced.\n2.1 Concept drift de\ufb01nition and the sources\nConcept drift is a phenomenon in which the statistical prop-\nerties of a target domain change over time in an arbitrary\nway [3]. It was \ufb01rst proposed by [12] who aimed to point\nout that noise data may turn to non-noise information at\ndifferent time. These changes might be caused by changes\nin hidden variables which cannot be measured directly [4].\nFormally, concept drift is de\ufb01ned as follows:\nGiven a time period [0,t], a set of samples, de-\nnoted asS0,t={d0,...,dt}, wheredi= (Xi,yi)is\none observation (or a data instance), Xiis the fea-\nture vector, yiis the label, and S0,tfollows a certain\ndistribution F0,t(X,y).Concept drift occurs attimes -\ntampt+ 1,ifF0,t(X,y)\u0338=Ft+1,\u221e(X,y),denoted as\n\u2203t:Pt(X,y)\u0338=Pt+1(X,y)[2], [8], [13], [14].\nConcept drift has also been de\ufb01ned by various authors\nusing alternative names, such as dataset shift [15] or concept\nshift [1].", "start_char_idx": 0, "end_char_idx": 1617, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6691f0b-8062-4071-a412-2655ff6353c7": {"__data__": {"id_": "c6691f0b-8062-4071-a412-2655ff6353c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "1bacfb2e-54ab-4fbd-8919-073ac4fee14b", "node_type": "1", "metadata": {}, "hash": "f48c8d7a409c7f0c048f8c710b97254391c9102c875794489192fcfc1f89d7c7", "class_name": "RelatedNodeInfo"}, {"node_id": "bb513908-4dcf-4847-a40a-841cb05f958c", "node_type": "1", "metadata": {}, "hash": "58c577f64bff4beac14844f726dc7558549e555b502f80c950277d27c5af2570", "class_name": "RelatedNodeInfo"}, {"node_id": "96860bce-6b4b-4bb2-9d51-0061ac9a25fc", "node_type": "1", "metadata": {}, "hash": "4d505db25d5fa4e79e141af28af023408a62325928ddc3340eedebc4d994f6b7", "class_name": "RelatedNodeInfo"}, {"node_id": "b6e19b57-9b42-4a23-b4cd-aa4173c67352", "node_type": "1", "metadata": {}, "hash": "944f628cc9261c10fc5fee370126bd5fc95a753066a7fd8527e4959f108afd49", "class_name": "RelatedNodeInfo"}, {"node_id": "3e76224c-f86e-4e55-81b0-9d22f11fb5ee", "node_type": "1", "metadata": {}, "hash": "9521a49d25e726c71c0af03b0a038deeca3da008cdab39757e2b19ac5a7f42a5", "class_name": "RelatedNodeInfo"}]}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "text": "Other related terminologies were introduced in\n[16]\u2019s work, the authors proposed that concept drift or shift\nis only one subcategory of dataset shift and the dataset\nshift is consists of covariate shift, prior probability shift and\n\n3\nx1x1x2x2\nx1x1x2x2 Pt(X) drift\nPt(y|X)  remains\ndata distribution at time t data distribution at time t+1\nx1x1x2x2\nx1x1x2x2Pt(X)\nPt(y|X)  drift\ndata distribution at time t data distribution at time t+1x1x1x2x2\nx1x1x2x2 Pt(y|X)  drift\nPt(X) remains\ndata distribution at time t data distribution at time t+1\nTwo dimensional \ndata X={x1, x2} \nwith two class label \ny={y0, y1} label y0 at time t\nlabel y1 at time t\nlabel y0 at time t\nlabel y1 at time tlabel y0 at time t\nlabel y1 at time t\nlabel y0 at time t\nlabel y1 at time t(a) Source  I (b) Source  II\n(c) Source III\nFig. 3. Three sources of concept drift\nconcept shift. These de\ufb01nitions clearly stated the research\nscope of each research topics. However, since concept drift is\nusually associated with covariate shift and prior probability\nshift, and an increasing number of publications [2], [8], [13],\n[14] refer to the term \u201dconcept drift\u201d as the problem in\nwhich\u2203t:Pt(X,y)\u0338=Pt+1(X,y). Therefore, we apply the\nsame de\ufb01nition of concept drift in this survey. Accordingly,\nconcept drift at time tcan be de\ufb01ned as the change of\njoint probability of Xandyat timet.", "start_char_idx": 1618, "end_char_idx": 2966, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c19038e-ee4a-4c6a-98de-106902cc08e7": {"__data__": {"id_": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "84f15230-8f5d-4cd7-a73f-6f5a48e1cdb9", "node_type": "1", "metadata": {}, "hash": "89b08c5e9e17b81c3478a0854c187b1921075c755c8803516bc2696c5f8037b8", "class_name": "RelatedNodeInfo"}, {"node_id": "9bcecdd7-150c-4362-9436-57a931a59efa", "node_type": "1", "metadata": {}, "hash": "a41b29041f2fcce817f6393655317d898e62d1d7dcfb86bbf3c3036a30e5e908", "class_name": "RelatedNodeInfo"}, {"node_id": "524c17d3-1318-4944-9caa-e86e167f989b", "node_type": "1", "metadata": {}, "hash": "41f806d0c53c61c136d3babfde74eb5dfaa527d0a04472b06a90f67e4c1171d7", "class_name": "RelatedNodeInfo"}, {"node_id": "afacf485-f5aa-4cd5-87c5-a593fb8fc08b", "node_type": "1", "metadata": {}, "hash": "2d225b9c2c9cbc1eefd60de2c06b04f62b32856cc147596a3eec74621a1df68a", "class_name": "RelatedNodeInfo"}]}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "text": "Since the joint\nprobability Pt(X,y)can be decomposed into two parts as\nPt(X,y) =Pt(X)\u00d7Pt(y|X), concept drift can be triggered\nby three sources:\n\u2022Source I :Pt(X)\u0338=Pt+1(X)whilePt(y|X) =\nPt+1(y|X), that is, the research focus is the drift in\nPt(X)whilePt(y|X)remains unchanged. Since Pt(X)\ndrift does not affect the decision boundary, it has also\nbeen considered as virtual drift [7], Fig. 3(a).\n\u2022Source II :Pt(y|X)\u0338=Pt+1(y|X)whilePt(X) =\nPt+1(X)whilePt(X)remains unchanged. This drift\nwill cause decision boundary change and lead to learn-\ning accuracy decreasing, which is also called actual drift,\nFig. 3(b).\n\u2022Source III : mixture of Source I and Source II, namely\nPt(X)\u0338=Pt+1(X)andPt(y|X)\u0338=Pt+1(y|X). Concept\ndrift focus on the drift of both Pt(y|X)andPt(X),\nsince both changes convey important information about\nlearning environment Fig. 3(c).\nFig. 3 demonstrates how these sources differ from each\nother in a two-dimensional feature space. Source I is feature\nspace drift, and Source II is decision boundary drift. In\nmany real-world applications, Source I and Source II occur\ntogether, which creates Source III.\n2.2 The types of concept drift\nCommonly, concept drift can be distinguished as four types\n[8] as shown in Fig. 4:\nResearch into concept drift adaptation in Types 1-3 fo-\ncuses on how to minimize the drop in accuracy and achieve\nthe fastest recovery rate during the concept transformation\nprocess. In contrast, the study of Type 4 drift emphasizes\nthe use of historical concepts, that is, how to \ufb01nd the best\nmatched historical concepts with the shortest time. The new\nconcept may suddenly, incrementally, or gradually reoccur.\nTo better demonstrate the differences between these\ntypes, the term \u201cintermediate concept\u201d was introduced by\n[8] to describe the transformation between concepts.", "start_char_idx": 2967, "end_char_idx": 4771, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "765b53cf-7565-4d78-9d06-f5b49b92ad62": {"__data__": {"id_": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b074dca-a7b5-44e5-a3df-e0f548a256ca", "node_type": "1", "metadata": {}, "hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2b425d7e-e5b2-43c4-91c4-e413758dfe0f", "node_type": "1", "metadata": {}, "hash": "4b8cfb583477884c6e64e4b9072ea892edcb1528a61d8a9e9176c346364358bf", "class_name": "RelatedNodeInfo"}, {"node_id": "8ed72ded-7ebb-46e6-a73e-e9a943d25ff9", "node_type": "1", "metadata": {}, "hash": "b50bad1982aaf32535bc6fe452ee6776b8706291e06237830d65e7c2a32423ce", "class_name": "RelatedNodeInfo"}, {"node_id": "376ef81a-65d9-46d5-9cb2-6b268a22b204", "node_type": "1", "metadata": {}, "hash": "d5739e4b206ce5f25d704f65e18ef306190e548366570ad332438c098c7aad1f", "class_name": "RelatedNodeInfo"}, {"node_id": "f153a87d-c188-45a6-89ac-390f1bc4d48b", "node_type": "1", "metadata": {}, "hash": "d3ab7300e3f8ccb31f815431c70c5f5354672bda732db93f3c557aa6b43e1fd8", "class_name": "RelatedNodeInfo"}, {"node_id": "5577ddcf-d70a-4b99-b7df-5d992f138553", "node_type": "1", "metadata": {}, "hash": "b9b98bd1cc57675633c47444914ad9ca93bd0e4041e5a116da04b5315469a250", "class_name": "RelatedNodeInfo"}]}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "text": "As\nmentioned by [4], a concept drift may not only take place\nSuddenDrift:Anewconceptoccurswithinashorttime.\nDatadistributionTimeGradualDrift:Anewconceptgraduallyreplacesanoldoneoveraperiodoftime.\nDatadistributionTimeIncrementalDrift:Anoldconceptincrementallychangestoanewconceptoveraperiodoftime.\nDatadistributionTimeReoccurringConcepts:Anoldconceptmayreoccuraftersometime.\nDatadistributionTimeFig. 4. An example of concept drift types.\nat an exact timestamp, but may also last for a long period.\nAs a result, intermediate concepts may appear during the\ntransformation as one concept (starting concept) changes to\nanother (ending concept). An intermediate concept can be\na mixture of the starting concept and the ending concept,\nlike the incremental drift, or one of the starting or ending\nconcept, such as the gradual drift.\n3 C ONCEPT DRIFT DETECTION\nThis section focuses on summarizing concept drift detection\nalgorithms. Section 3.1 introduces a typical drift detection\nframework. Then, Section 3.2 systematically reviews and\ncategorizes drift detection algorithms according to their im-\nplementation details for each component in the framework.\nAt last, Section 3.3 lists the state-of-the-art drift detection al-\ngorithms with comparisons of their implementation details.\n3.1 A general framework for drift detection\nDrift detection refers to the techniques and mechanisms\nthat characterize and quantify concept drift via identifying\nchange points or change time intervals [17]. A general\nframework for drift detection contains four stages, as shown\nin Fig. 5.\nStage 1 (Data Retrieval) aims to retrieve data chunks\nfrom data streams. Since a single data instance cannot carry\nenough information to infer the overall distribution [2],\nknowing how to organize data chunks to form a meaningful\npattern or knowledge is important in data stream analysis\ntasks [7].\nStage 2 (Data Modeling) aims to abstract the retrieved\ndata and extract the key features containing sensitive infor-\nmation, that is, the features of the data that most impact\na system if they drift. This stage is optional, because it\nmainly concerns dimensionality reduction, or sample size\nreduction, to meet storage and online speed requirements\n[4].", "start_char_idx": 4772, "end_char_idx": 6989, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b074dca-a7b5-44e5-a3df-e0f548a256ca": {"__data__": {"id_": "2b074dca-a7b5-44e5-a3df-e0f548a256ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "node_type": "1", "metadata": {}, "hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "009f5a73-a8af-4a0b-aa41-a1e07008165c", "node_type": "1", "metadata": {}, "hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "class_name": "RelatedNodeInfo"}]}, "hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "text": "Stage 3 (Test Statistics Calculation) is the measurement of\ndissimilarity, or distance estimation. It quanti\ufb01es the sever-\nity of the drift and forms test statistics for the hypothesis\ntest. It is considered to be the most challenging aspect of\nconcept drift detection. The problem of how to de\ufb01ne an\naccurate and robust dissimilarity measurement is still an\nopen question.", "start_char_idx": 6990, "end_char_idx": 7363, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8a473ca-f564-47fe-bd55-7f6f66a1c437": {"__data__": {"id_": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "38dad7ef-6574-49af-9aa8-6c7d173eb5ad", "node_type": "1", "metadata": {}, "hash": "7795bd802afe6f01187ccc7d39b6e70d08e4da4eea05028cdd303813f42c83a0", "class_name": "RelatedNodeInfo"}, {"node_id": "f4be7bf4-d5e9-419a-bf13-308b1a4d04c5", "node_type": "1", "metadata": {}, "hash": "c8ee4503327fd1443083ef53829eb403787b6dacdbe772be23ddc26a650c1175", "class_name": "RelatedNodeInfo"}, {"node_id": "cf48e7ea-2fd7-4988-b4fd-7b34e174bf8a", "node_type": "1", "metadata": {}, "hash": "2dcdd8b33e853b760491a9e6b2c0ae383a7d18281602bbb7906f581dd4e2396d", "class_name": "RelatedNodeInfo"}, {"node_id": "5de52c00-221a-4a60-a3b5-3b93bbd53930", "node_type": "1", "metadata": {}, "hash": "2270247434eb1a1fb8149c0bf6bbb5e21b86e44cb929494b0c803b0a1b4b08de", "class_name": "RelatedNodeInfo"}, {"node_id": "85378cce-603f-4964-b2fb-6994fc2751e0", "node_type": "1", "metadata": {}, "hash": "c5b77cbfd99951bc5316c00c2766ec9a698ed654a04ae081cf069e3fd3afc9a0", "class_name": "RelatedNodeInfo"}]}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "text": "A dissimilarity measurement can also be\n\n4\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......Historical DataNew DataStage 1: Data Retrieval data stream time line \nAbstracted Data Model (New)Abstracted DataModel (Historical)Stage 2 (optional): Data ModelingHistorical DataNew DataDissimilarity MeasurementStage 3: Test Statistics CalculationDissimilarity Significance TestStage 4: Hypothesis Test (Statistical Bounds)\nFig. 5. An overall framework for concept drift detection\nused in clustering evaluation [11], and to determine the\ndissimilarity between sample sets [18].\nStage 4 (Hypothesis Test) uses a speci\ufb01c hypothesis test\nto evaluate the statistical signi\ufb01cance of the change observed\nin Stage 3, or the p-value. They are used to determine\ndrift detection accuracy by proving the statistical bounds\nof the test statistics proposed in Stage 3. Without Stage\n4, the test statistics acquired in Stage 3 are meaningless\nfor drift detection, because they cannot determine the drift\ncon\ufb01dence interval, that is, how likely it is that the change\nis caused by concept drift and not noise or random sample\nselection bias [3]. The most commonly used hypothesis tests\nare: estimating the distribution of the test statistics [19],\n[20], bootstrapping [21], [22], the permutation test [3], and\nHoeffding\u2019s inequality-based bound identi\ufb01cation [23].\nIt is also worth to mention that, without Stage 1, the\nconcept drift detection problem can be considered as a two-\nsample test problem which examines whether the popula-\ntion of two given sample sets are from the same distribution\n[18]. In other words, any multivariate two-sample test is an\noption that can be adopted in Stages 2-4 to detect concept\ndrift [18]. However, in some cases, the distribution drift may\nnot be included in the target features, therefore the selection\nof the target feature will affect the overall performance of\na learning system and is a critical problem in concept drift\ndetection [24].", "start_char_idx": 0, "end_char_idx": 1956, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a78d9801-10ce-40f5-90fc-4051935c1c3b": {"__data__": {"id_": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "a2ace353-6b5a-4656-bfa8-9b00d255ab81", "node_type": "1", "metadata": {}, "hash": "02eb2f073dd3d183f0f28a65c1b37420bf7aa6b0b5a8e761b2652570e5ba2cb7", "class_name": "RelatedNodeInfo"}, {"node_id": "fe7fb1d1-8389-4a3c-aabd-50f7633b81bf", "node_type": "1", "metadata": {}, "hash": "d032e0a0c7e0a1ce49fca3ad051de9963cd4589b42ae59638446242591ce03b5", "class_name": "RelatedNodeInfo"}, {"node_id": "292f08cf-acab-4303-ae18-212c0a7e662b", "node_type": "1", "metadata": {}, "hash": "46ea8d177c0b1a561ba33b14486103c98478d877b430133c3fe85c71d2f8e715", "class_name": "RelatedNodeInfo"}, {"node_id": "dd134712-a875-427c-a4f4-40928b64e25c", "node_type": "1", "metadata": {}, "hash": "e5541ad3d2a9dd2e478fa4bbc8adf69df6bdca2889ffac20ecd954e0bcff4176", "class_name": "RelatedNodeInfo"}]}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "text": "3.2 Concept drift detection algorithms\nThis section surveys drift detection methods and algo-\nrithms, which are classi\ufb01ed into three categories in terms\nof the test statistics they apply.\n3.2.1 Error rate-based drift detection\nPLearner error rate-based drift detection algorithms form\nthe largest category of algorithms. These algorithms focus\non tracking changes in the online error rate of base classi-\n\ufb01ers. If an increase or decrease of the error rate is proven to\nbe statistically signi\ufb01cant, an upgrade process (drift alarm)\nwill be triggered.\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......Historical DataNew DataFig. 6. Landmark time window for drift detection. The starting point of\nthe window is \ufb01xed, while the end point of the window will be extended\nafter a new data instance has been received.\nOne of the most-referenced concept drift detection algo-\nrithms is the Drift Detection Method (DDM) [20]. It was\nthe \ufb01rst algorithm to de\ufb01ne the warning level and drift\nlevel for concept drift detection. In this algorithm, Stage\n1 is implemented by a landmark time window, as shown\nin Fig. 6. When a new data instance become available for\nevaluation, DDM detects whether the overall online error\nrate within the time window has increased signi\ufb01cantly.\nIf the con\ufb01dence level of the observed error rate change\nreaches the warning level, DDM starts to build a new learner\nwhile using the old learner for predictions. If the change\nreached the drift level, the old learner will be replaced\nby the new learner for further prediction tasks. To acquire\nthe online error rate, DDM needs a classi\ufb01er to make the\npredictions. This process converts training data to a learning\nmodel, which is considered as the Stage 2 (Data Modeling).\nThe test statistics in Stage 3 constitute the online error rate.\nThe hypothesis test, Stage 4, is conducted by estimating\nthe distribution of the online error rate and calculating the\nwarning level and drift threshold.", "start_char_idx": 1957, "end_char_idx": 3911, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df015e01-533e-4c7f-bed8-1c62a7660f60": {"__data__": {"id_": "df015e01-533e-4c7f-bed8-1c62a7660f60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2476ded5-8c65-4c82-9cf7-4e70b129fda1", "node_type": "1", "metadata": {}, "hash": "c210cf7a18cfa53491b75beab7ac946036042eeded3b54af18c1c209d26e48f9", "class_name": "RelatedNodeInfo"}, {"node_id": "4fa2fadb-ae8c-4610-b60f-76dc92123353", "node_type": "1", "metadata": {}, "hash": "585b02f47c5d607bc0c7d478acc0a6afd2a166093807f4e9b623e92bdb2ad78f", "class_name": "RelatedNodeInfo"}, {"node_id": "80206edf-53fd-4a16-ac99-f51c4d6d1e7a", "node_type": "1", "metadata": {}, "hash": "626141d8da2a07f188ddc0e694f5a0106b11210202f06b23dc07b1a5626f7d42", "class_name": "RelatedNodeInfo"}, {"node_id": "c1c1fc32-bb11-4eb8-9cdc-7548fd5e73cf", "node_type": "1", "metadata": {}, "hash": "6b857040ced43a9ed8b3ea04699606228df556299353d9ab9de8a8b0e4fc09a8", "class_name": "RelatedNodeInfo"}, {"node_id": "b25ddbac-0143-4838-bd9e-ec5129dfb1d8", "node_type": "1", "metadata": {}, "hash": "92221ba31ed035d01e80da9f5be25adfdca1ba0ac744b0f3699344c170dce8ab", "class_name": "RelatedNodeInfo"}]}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "text": "Similar implementations have been adopted and applied\nin the Learning with Local Drift Detection (LLDD) [25],\nEarly Drift Detection Method (EDDM) [26], Heoffding\u2019s\ninequality based Drift Detection Method (HDDM) [23],\nFuzzy Windowing Drift Detection Method (FW-DDM) [5],\nDynamic Extreme Learning Machine (DELM) [27]. LLDD\nmodi\ufb01es Stages 3 and 4, dividing the overall drift detection\nproblem into a set of decision tree node-based drift detection\nproblems; EDDM improves Stage 3 of DDM using the\ndistance between two correct classi\ufb01cations to improve the\nsensitivity of drift detection; HDDM modi\ufb01es Stage 4 using\nHoeffding\u2019s inequality to identify the critical region of a\ndrift; FW-DDM improves Stage 1 of DDM using a fuzzy\ntime window instead of a conventional time window to\naddress the gradual drift problem; DEML does not change\nthe DDM detection algorithm but uses a novel base learner,\nwhich is a single hidden layer feedback neural network\ncalled Extreme Learning Machine (ELM) [28] to improve\nthe adaptation process after a drift has been con\ufb01rmed.\nEWMA for Concept Drift Detection (ECDD) [29] takes ad-\nvantage of the error rate to detect concept drift. ECDD\nemploys the EWMA chart to track changes in the error rate.\nThe implementation of Stages 1-3 of ECDD is the same\nas for DDM, while Stage 4 is different. ECDD modi\ufb01es\nthe conventional EWMA chart using a dynamic mean \u02c6p0,t\ninstead of the conventional static mean p0, where \u02c6p0,tis the\nestimated online error rate within time [0,t], andp0implies\nthe theoretical error rate when the learner was initially built.\nAccordingly, the dynamic variance can be calculated by\n\u03c32\nZt= \u02c6p0,t(1\u2212\u02c6p0,t)\u221a\n\u03bb\n2\u2212\u03bb(1\u2212(1\u2212\u03bb)2t)where\u03bbcontrols\nhow much weight is given to more recent data as opposed\nto older data, and \u03bb= 0.2is recommended by the authors.", "start_char_idx": 3912, "end_char_idx": 5707, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20f35ed4-76d5-4170-ba0e-d1cd49ad268c": {"__data__": {"id_": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab1258f7-6968-4bc2-aa6f-2be71e1b0781", "node_type": "1", "metadata": {}, "hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7be33ac1-ed56-4410-bfd9-3036bec55876", "node_type": "1", "metadata": {}, "hash": "be017adf9648abed359c7704e291be1bae3d6619f4ccf33e5b520b4056cc0920", "class_name": "RelatedNodeInfo"}, {"node_id": "4219af62-5e12-4118-8568-f68e67c1ef7d", "node_type": "1", "metadata": {}, "hash": "f79a691f8255cc1021ee57b093f28a13738b623aa177f4e90cd3ac1aa6671717", "class_name": "RelatedNodeInfo"}, {"node_id": "18d2d7ec-3be2-419b-87f9-d13b161411c8", "node_type": "1", "metadata": {}, "hash": "d74f1464664f9610f56ae20cba9d438194d42e235ec91340b833b06a10ad74fd", "class_name": "RelatedNodeInfo"}, {"node_id": "d4d42589-937e-43e0-b715-3f4cd06ecedd", "node_type": "1", "metadata": {}, "hash": "c79beb699a5fa784a35dc36daf9ffcf3aaae36052b2e7376c3fd87a0231d1493", "class_name": "RelatedNodeInfo"}, {"node_id": "421d5d5f-ae92-4d16-a74b-04955f99b689", "node_type": "1", "metadata": {}, "hash": "136ea6753bf529719d4a0d2d6204e516d569ad640049af9c4eb0afee38994c39", "class_name": "RelatedNodeInfo"}, {"node_id": "fc41a6ac-8f25-4926-a478-cca9612a8a41", "node_type": "1", "metadata": {}, "hash": "6253702052bf05c69c74e41aef78966354adc68bdb7f54fa58f61e5fb09451a8", "class_name": "RelatedNodeInfo"}, {"node_id": "b247b6ca-fa94-432c-a2a9-b73a8a30c7e2", "node_type": "1", "metadata": {}, "hash": "246aafa4e5105d15a437058a00a82f897e1c890e505e23fcc8110057e53d27dc", "class_name": "RelatedNodeInfo"}]}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "text": "5\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......New DataHistorical Data\nFig. 7. Two time windows for concept drift detection. The New Data\nwindow has to be de\ufb01ned by the user.\nAlso, when the test statistic of the conventional EWMA\nchart isZt>\u02c6p0,t+ 0.5L\u03c3Zt, ECDD will report a concept\ndrift warning; when Zt>\u02c6p0,t+L\u03c3Zt, ECDD will report a\nconcept drift. The control limits Lis given by the authors\nthrough experimental evaluation.\nIn contrast to DDM and other similar algorithms, Sta-\ntistical Test of Equal Proportions Detection (STEPD) [30]\ndetects error rate change by comparing the most recent\ntime window with the overall time window, and for each\ntimestamp, there are two time windows in the system, as\nshown in Fig. 7. The size of the new window must be\nde\ufb01ned by the user. According to [30], the test statistic\n\u03b8STEPD conforms to standard normal distribution, denoted\nas\u03b8STEPD\u223cN (0,1). The signi\ufb01cance level of the warning\nlevel and the drift level were suggested as \u03b1w= 0.05and\n\u03b1d= 0.003 respectively. As a result, the warning threshold\nand drift threshold can be easily calculated.\nAnother popular two-time window-based drift detection\nalgorithm is ADaptive WIN dowing (ADWIN) [31]. Unlike\nSTEPD, ADWIN does not require users to de\ufb01ne the size\nof the compared windows in advance; it only needs to\nspecify the total size nof a \u201csuf\ufb01ciently large\u201d window\nW. It then examines all possible cuts of Wand computes\noptimal sub-window sizes nhistandnnewaccording to the\nrate of change between the two sub-windows whistandwnew.\nThe test statistic is the difference of the two sample means\n\u03b8ADWIN =|\u02c6\u00b5hist\u2212\u02c6\u00b5new|. An optimal cut is found when the\ndifference exceeds a threshold with a prede\ufb01ned con\ufb01dence\ninterval\u03b4.", "start_char_idx": 5709, "end_char_idx": 7427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab1258f7-6968-4bc2-aa6f-2be71e1b0781": {"__data__": {"id_": "ab1258f7-6968-4bc2-aa6f-2be71e1b0781", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2", "node_type": "1", "metadata": {}, "hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9df99e41-deca-4ff6-926b-093b90ca3a86", "node_type": "1", "metadata": {}, "hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "class_name": "RelatedNodeInfo"}]}, "hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "text": "The author proved that both the false positive rate\nand false negative rate are bounded by \u03b4. It is worth noting\nthat many concept drift adaptation methods/algorithms in\nthe literature are derived from or combined with ADWIN,\nsuch as [32]\u2013[35]. Since their drift detection methods are\nimplemented with almost the same strategy, we will not\ndiscuss them in detail.", "start_char_idx": 7428, "end_char_idx": 7791, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba89739c-936a-4a98-8eca-5a7a68aa46d6": {"__data__": {"id_": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "18c81449-2c53-4343-9de3-7685e7a945a9", "node_type": "1", "metadata": {}, "hash": "5f8b33a76cc4befd48f225ff60a27d80d3098cd019cd4fda920547419c078275", "class_name": "RelatedNodeInfo"}, {"node_id": "3583da8e-d7f3-4bbb-9a1d-28c342b525da", "node_type": "1", "metadata": {}, "hash": "b9227edf55acf8dc367f946ca7054ee2c7be0a0fe3f199ab0d75c91b33ecf4af", "class_name": "RelatedNodeInfo"}, {"node_id": "1655881b-f265-4dc3-925b-904c584e1f82", "node_type": "1", "metadata": {}, "hash": "78a882b8569d401d0ed6c4a56994aa048b9ea6fb86d27b3118ce7633e6179c81", "class_name": "RelatedNodeInfo"}, {"node_id": "7912cc16-945d-4284-9ecb-2eb6ce729e03", "node_type": "1", "metadata": {}, "hash": "9e837cb5cc5c43e7f92de0a51f9e5e7aabd2562d0c525b4f1909b46cef7ca8fa", "class_name": "RelatedNodeInfo"}]}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "text": "3.2.2 Data Distribution-based Drift Detection\nThe second largest category of drift detection algorithms is\ndata distribution-based drift detection. Algorithms of this\ncategory use a distance function/metric to quantify the\ndissimilarity between the distribution of historical data and\nthe new data. If the dissimilarity is proven to be statistically\nsigni\ufb01cantly different, the system will trigger a learning\nmodel upgradation process. These algorithms address con-\ncept drift from the root sources, which is the distribution\ndrift. Not only can they accurately identify the time of drift,\nthey can also provide location information about the drift.\nHowever, these algorithms are usually reported as incurring\nhigher computational cost than the algorithms mentioned\nin Section 3.2.1 [2]. In addition, these algorithms usually\nrequire users to prede\ufb01ne the historical time window and\nnew data window. The commonly used strategy is two\nsliding windows with the historical time window \ufb01xed\nTwo windows at timestamp: t+6Dt+11......Historical DataNew Data...Dt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Dt+11...Historical DataNew DataTwo windows at timestamp: t+7DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Fig. 8. Two sliding time windows, of \ufb01xed size. The Historical Data\nwindow will be \ufb01xed while the New Data window will keep moving.\nwhile sliding the new data window [3], [22], [36], as shown\nin Fig. 8.\nAccording to the literature, the \ufb01rst formal treatment\nof change detection in data streams was proposed by [37].", "start_char_idx": 0, "end_char_idx": 1556, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "038d6614-5edc-4833-a36d-2cf1d74802e9": {"__data__": {"id_": "038d6614-5edc-4833-a36d-2cf1d74802e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4611b322-6f35-421e-9a52-a313c6079dc8", "node_type": "1", "metadata": {}, "hash": "343c88ebcc90569ba7a4c81cbc9aa891a344183ac6c9d3a97498ddf74adc0872", "class_name": "RelatedNodeInfo"}, {"node_id": "596cedd6-c530-4af3-b5db-cb6e05345f6d", "node_type": "1", "metadata": {}, "hash": "f57068b611e1bcfc3050f78ef8bded5bfe9dddf77599519aba7d58feb68ee6fe", "class_name": "RelatedNodeInfo"}, {"node_id": "0831e5c4-84b9-4ec6-a383-0cfb49a329ff", "node_type": "1", "metadata": {}, "hash": "f37370562ba5c9c320bbdf490601245f979bea3de00381263b7a0f9a7e7e1fac", "class_name": "RelatedNodeInfo"}, {"node_id": "7461f993-a9b2-4119-87de-15a9b58d135d", "node_type": "1", "metadata": {}, "hash": "8cc85fd9c6934845ffa04f44575fb772564678ad454545b86945d381f7fad715", "class_name": "RelatedNodeInfo"}]}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "text": "In their study, the authors point out that the most natural\nnotion of distance between distributions is total variation,\nas de\ufb01ned by: TV(P1,P2) = 2supE\u2208\u03b5|P1(E)\u2212P2(E)|or\nequivalently, when the distribution has the density func-\ntionsf1andf2,distL1=\u222b|f1(x)\u2212f2(x)|dx. This provides\npractical guidance on the design of a distance function\nfor distribution discrepancy analysis. Accordingly, [37] pro-\nposed a family of distances, called Relativized Discrepancy\n(RD). The authors also present the signi\ufb01cance level of the\ndistance according to the number of data instances. The\nbounds on the probabilities of missed detections and false\nalarms are theoretically proven, using Chernoff bounds and\nthe Vapnik-Chervonenkis dimension. The authors of [37] do\nnot propose novel high-dimensional friendly data models\nfor Stage 2 (data modeling); instead, they stress that a\nsuitable model choice is an open question.\nAnother typical density-based drift detection algorithm\nis the Information-Theoretic Approach (ITA) [22]. The in-\ntuitive idea underlying this algorithm is to use kdqTree to\npartition the historical and new data (multi-dimensional)\ninto a set of bins, denoted as A,and then use Kullback-\nLeibler divergence to quantify the difference of the density\n\u03b8ITAin each bin. The hypothesis test applied by ITA is\nbootstrapping by merging Whist,WnewasWalland resam-\npling asW\u2032hist,W\u2032new to recompute the \u03b8\u2217\nITA. Once the\nestimated probability P(\u03b8\u2217\nITA\u2265\u03b8ITA)<1\u2212\u03b1, concept drift\nis con\ufb01rmed, where \u03b1is the signi\ufb01cant level controlling the\nsensitivity of drift detection.", "start_char_idx": 1557, "end_char_idx": 3121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7126d10f-33d9-4f69-a95d-4663f4e18b92": {"__data__": {"id_": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c68847af-dd34-4ef6-9343-8fd25b5f421d", "node_type": "1", "metadata": {}, "hash": "651325bb6e47fcd6d2be9db47bb2e02e29c1945d2aef53d24e9f5344ab3e644e", "class_name": "RelatedNodeInfo"}, {"node_id": "82d6ed69-4dc2-4406-b7c3-6ceb5c7455c5", "node_type": "1", "metadata": {}, "hash": "9a9af9913c08ba924f2aeb0c981f50ade6caab087a5d07acde0dcace74dec22a", "class_name": "RelatedNodeInfo"}, {"node_id": "c0bd485b-8372-4438-8b5f-6c44f424141a", "node_type": "1", "metadata": {}, "hash": "7e0c124855cca22870606cc2c7400a136e56376789367df4f52e15387ae3e1a4", "class_name": "RelatedNodeInfo"}, {"node_id": "6165b090-90c4-4fb5-bd6a-d01fb82ef377", "node_type": "1", "metadata": {}, "hash": "f1fdba7d3285730e37be73544cc99b0d04083b1b1129e09ce51dc64621bbe874", "class_name": "RelatedNodeInfo"}, {"node_id": "830d4ce9-cac9-423e-9548-0ff427dac856", "node_type": "1", "metadata": {}, "hash": "64b729b0fe2e9a77212e98b2c0a4e4408fd4a5b1b4a2e15cf1e4ea468ae81cd3", "class_name": "RelatedNodeInfo"}]}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "text": "Similar distribution-based drift detection meth-\nods/algorithms are: Statistical Change Detection for multi-\ndimensional data (SCD) [38], Competence Model-based\ndrift detection (CM) [2], a prototype-based classi\ufb01cation\nmodel for evolving data streams called SyncStream [36],\nPCA -based change detection frame work (PCA -CD) [39],\nEqual Density Estimation (EDE) [40], Least Squares Density\nDifference-based Change Detection Test (LSDD-CDT)\n[21], Incremental version of LSDD-CDT (LSDD-INC) [41]\nand Local Drift Degree-based Density Synchronized Drift\nAdaptation (LDD-DSDA) [4].\n3.2.3 Multiple Hypothesis Test Drift Detection\nMultiple hypothesis test drift detection algorithms apply\nsimilar techniques to those mentioned in the previous two\ncategories. The novelty of these algorithms is that they use\nmultiple hypothesis tests to detect concept drift in different\n\n6\nTest Statistic \u03b81Hypothesis Test H1Test Statistic \u03b82Hypothesis Test H2Test Statistic \u03b8zHypothesis Test Hz......Stage 3Stage 4Detection ResultsWhist and Wnewdetect drift based on z hypothesis test \nFig. 9. Parallel multiple hypothesis test drift detection.\nways. These algorithms can be divided into two groups:\n1) parallel multiple hypothesis tests; and 2) hierarchical\nmultiple hypothesis tests.\nThe idea of parallel multiple hypothesis drift detection\nalgorithm is demonstrated in Fig. 9. According to the liter-\nature, Just-In-Time adaptive classi\ufb01ers (JIT) [19] is the \ufb01rst\nalgorithm that set multiple drift detection hypothesis in this\nway. The core idea of JIT is to extend the CUSUM chart,\nknown as the Computational Intelligence-based CUSUM\ntest (CI-CUSUM), to detect the mean change in the features\ninterested by learning systems. The authors of [19], gave the\nfollowing four con\ufb01gurations for the drift detection target.\nCon\ufb01g1: the features extracted by Principal Component\nAnalysis (PCA), which removes eigenvalues whose sum\nis below a threshold, e.g. 0.001. Con\ufb01g2: PCA extracted\nfeatures plus one generic component of the original features\nxi; Con\ufb01g3: detects the drift in each xiindividually.", "start_char_idx": 3122, "end_char_idx": 5195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cef8d741-5446-4507-8d14-60ce39224714": {"__data__": {"id_": "cef8d741-5446-4507-8d14-60ce39224714", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "247961f8-fee5-4ba0-9112-6fd68356d38c", "node_type": "1", "metadata": {}, "hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "58376796-ba93-4601-8a86-791f0ad4b85b", "node_type": "1", "metadata": {}, "hash": "a9cc918e3e06f5af414227369d471946490183a3f2da3481f03371ee7bed155d", "class_name": "RelatedNodeInfo"}, {"node_id": "32f87a88-6dd9-4ff9-869a-a465bcc1610e", "node_type": "1", "metadata": {}, "hash": "f898be165084820b5068d63c0cf42d12857d656827ef32f785e0a73ec9679036", "class_name": "RelatedNodeInfo"}, {"node_id": "58d8aa90-c64b-4ada-8274-d89efa13986e", "node_type": "1", "metadata": {}, "hash": "83274c1add4ec46600e7d5645f5ed42880b278f0680616a724015a8f97610867", "class_name": "RelatedNodeInfo"}, {"node_id": "ce66c3b1-747d-440c-b127-a28657981a60", "node_type": "1", "metadata": {}, "hash": "5a5a8cbe86cfc9be53cce25ffd632490bf7abdfab40d43ff3ccdb4d590f0d264", "class_name": "RelatedNodeInfo"}]}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "text": "Con\ufb01g4:\ndetects drift in all possible combinations of the feature space\nxi. The authors stated that Con\ufb01g2 is the preferred setting\nfor most situations, according to their experimentation, and\nalso mentioned that Con\ufb01g1 may have a high missing rate,\nCon\ufb01g3 suffers from a high false alarm rate, and Con\ufb01g4\nhas exponential computational complexity. The same drift\ndetection strategy has also been applied in [42]\u2013[45] for\nconcept drift adaptation.\nSimilar implementations have been applied in Linear\nFour Rate drift detection (LFR) [46], which maintains and\ntracks the changes in True Positive rate (TP), True Negative\nrate (TN), False Positive rate (FP) and False Negative rate\n(FN) in an online manner. The drift detection process also\nincludes warning and drift levels.\nAnother parallel multiple hypothesis drift detection al-\ngorithm is three-layer drift detection, based on Information\nValue and Jaccard similarity (IV-Jac) [47]. IV-Jac aims to\nindividually address the label drift Pt(y)Layer I, feature\nspace drift Pt(X)Layer II, and decision boundary drift\nPt(y|X)Layer III. It extracts the Weight of Evidence (WoE)\nand Information Value (IV) from the available data and\nthen detects whether a signi\ufb01cant change exists between\nthe WoE and IV extracted from WhistandWnewby mea-\nsuring the contribution to the label for a feature value.\nThe hypothesis test thresholds are prede\ufb01ned parameters\n\u03b8Pt(y)=\u03b8Pt(X)=\u03b8Pt(X|y)= 0.5by default, which are\nchosen empirically.\nEnsembleofDetectors (e-Detector) [48] proposed tode-\ntect concept drift viaensembleofheterogeneous drift de-\ntector.The authors consider two drift detectors arehomo-\ngeneous asifthey areequiv alent in\ufb01ndingconcept drifts,\notherwise they areheterogeneous.", "start_char_idx": 5196, "end_char_idx": 6916, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "247961f8-fee5-4ba0-9112-6fd68356d38c": {"__data__": {"id_": "247961f8-fee5-4ba0-9112-6fd68356d38c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "node_type": "1", "metadata": {}, "hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "05f7b91a-c82d-4f09-987d-1354483ab246", "node_type": "1", "metadata": {}, "hash": "68387e1bfaffec9e485c8ec666328c57fe0853689123a390a7232f9117ceffb2", "class_name": "RelatedNodeInfo"}, {"node_id": "9d6f4d52-e242-490a-9cf5-c42b4652ca38", "node_type": "1", "metadata": {}, "hash": "8d00a5a435a6dc1835148d207b8ec3b206ed5986d5d71376d92bfbc2c693b44f", "class_name": "RelatedNodeInfo"}]}, "hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "text": "e-Detectorgroups homo-\ngeneous drift detectors viaadiversitymeasure ment, named\nDetection Layer: Standard Drift Detection Algorithms that have low drift delay rate and low computational costValidation Layer: Depend on the detection layerStage 3Stage 4Detection ResultsWhist and WnewTest Statistic \u03b8detectHypothesis Test HdetectTest Statistic \u03b8validHypothesis Test HvalidFig. 10. Hierarchical multiple hypothesis test drift detection.\ndiversity vector.Foreach group, itselect theone with the\nsmall estcoef\ufb01cient offailureasthebase detectortoform\ntheensemble.e-Detectorreports concept drift followingthe\nearly -\ufb01nd-early -report rule, which means nomatterwhich\nbase detectordetect adrift, thee-Detectorreports adrift.\nSimilarstrat egyhasbeen applied indrift detection ensemble\n(DDE) [49].\nHierarchical drift detection is an emerging drift detec-\ntion category that has a multiple veri\ufb01cation schema.", "start_char_idx": 6917, "end_char_idx": 7814, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1cd7a41-58a4-42dd-bd35-6459226f65f9": {"__data__": {"id_": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "99b9f47a-12dc-439e-aa80-dd27bf4271ac", "node_type": "1", "metadata": {}, "hash": "299bae0d210d27f49487d6749a111c9803afddfa84ddac8077ce173405ece2ad", "class_name": "RelatedNodeInfo"}, {"node_id": "baf39b75-3a17-4802-baef-b7e1ce3b34cd", "node_type": "1", "metadata": {}, "hash": "15f7174969d35e1d296af418f7d7cb56299907dcb876b7774fc988ea09540030", "class_name": "RelatedNodeInfo"}, {"node_id": "7b2900d2-e341-4ba4-8e0f-f5b37a0f0189", "node_type": "1", "metadata": {}, "hash": "a38618686e8f832734bbd79cff418b31695288a1218d95e3262fe1fc3e035634", "class_name": "RelatedNodeInfo"}, {"node_id": "4fee084c-0639-46d9-8d25-69b264362404", "node_type": "1", "metadata": {}, "hash": "cdbc70bb8595b053293094462c0631ba26deccc06a37f4fb70f6df9a45787153", "class_name": "RelatedNodeInfo"}]}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "text": "The\nalgorithms in this category usually detect drift using an\nexisting method, called the detection layer, and then apply\nan extra hypothesis test, called the validation layer, to obtain\na second validation of the detected drift in a hierarchical\nway. The overall work\ufb02ow is shown in Fig. 10.\nAccording to the claim made by [50], Hierarchical\nChange-Detection Tests (HCDTs) is the \ufb01rst attempt to\naddress concept drift using a hierarchical architecture. The\ndetection layer can be any existing drift detection method\nthat has a low drift delay rate and low computational\nburden. The validation layer will be activated and deacti-\nvated based on the results returned by the detection layer.\nThe authors recommend two strategies for designing the\nvalidation layer: 1) estimating the distribution of the test\nstatistics by maximizing the likelihood; 2) adapting an ex-\nisting hypothesis test, such as the Kolmogorov-Smirnov test\nor the Cramer-Von Mises test.\nHierarchical Linear Four Rate (HLFR) [51] is another\nrecently proposed hierarchical drift detection algorithm. It\napplies the drift detection algorithm LFR as the detection\nlayer. Once a drift is con\ufb01rmed by the detection layer,\nthe validation layer will be triggered. The validation layer\nof HLFR is simply a zero-one loss, denoted as E, over\nthe ordered train-test split. If the estimated zero-one loss\nexceeds a prede\ufb01ned threshold, \u03b7= 0.01, the validation\nlayer will con\ufb01rm the drift and report to the learning system\nto trigger a model upgradation process.\nTwo-Stage Multivariate Shift-Detection based on EWMA\n(TSMSD-EWMA) [52] has a very similar implementation,\nhowever, the authors do not claim that their method is a\nhierarchy-based algorithm.", "start_char_idx": 0, "end_char_idx": 1707, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7": {"__data__": {"id_": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6fbe5bec-3181-49fc-b8ee-0409e2fe711a", "node_type": "1", "metadata": {}, "hash": "efddc6ea25acaf7ec77c6870f76358dba47fee102be9b4eb09e09b37929062e7", "class_name": "RelatedNodeInfo"}, {"node_id": "3e5e6fd3-3312-4969-8cb8-b2b72bdb2534", "node_type": "1", "metadata": {}, "hash": "6ee4d2500447b6f260d290064b9c97793d35ff662bc671cac24168adeacd1627", "class_name": "RelatedNodeInfo"}, {"node_id": "2cd6dacb-6650-4cdd-8270-d44e5512be62", "node_type": "1", "metadata": {}, "hash": "4be169a7e46786c2f10c1977d40fa39754a4d426c6ef6f520be19f28b10a6c8d", "class_name": "RelatedNodeInfo"}, {"node_id": "03ad6a5a-adac-4ac9-ab29-cee87b82a128", "node_type": "1", "metadata": {}, "hash": "e3fa46eee04cae91960601f46db2b03d69033d052708627a1bfbb585151f8354", "class_name": "RelatedNodeInfo"}]}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "text": "HierarchicalHypoth esisTestingwith Clas si\ufb01cation Un-\ncertainty (HHT -CU) and HierarchicalHypoth esisTesting\nwith Attribute -wise \u201dGood ness -of-\ufb01t\u201d (HHT -AG) aretwo\ndrift detection algorithms based onrequest and rever ify\nstrat egy [53].ForHHT -CU, thedetection layer isahypothe -\nsestest based onHeoffding\u2019s inequal itythat mon itoring\nthechange oftheclassi\ufb01cation uncertainty measure ment.\nThe validation layer isapermutation testthat evaluates the\nchange ofthezero -one loss ofthelearner. ForHHT -AG, the\n\n7\ndetection layer isconducted based onKolmogorov -Smirnov\n(KS) test foreach feature distribution. Then HHT -AG vali-\ndate thepotentialdrift points byrequiringtrue labels ofdata\nthat come fromwnew,and perform ingdindependent two-\ndimen sional (2D) KStest with each feature-labelbivariate\ndistribution. Com pare toother drift detection algorithms,\nHHT -AG can handle concept drift with less true labels,\nwhich makes itmore pow erfulwhen deal ing with high\nveri\ufb01cation latency.\n3.3 Summary of concept drift detection meth-\nods/algorithms\nTABLE 1 lists the most popular concept drift detection meth-\nods/algorithms against the general framework summarized\nin Section 3.1 (Fig. 5). Acomparative study oneight popular\ndrift detection meth odscanbefound in[54].\n4 C ONCEPT DRIFT UNDERSTANDING\nDrift understanding refers to retrieving concept drift infor-\nmation about \u201cWhen\u201d (the time at which the concept drift\noccurs and how long the drift lasts), \u201cHow\u201d (the severity\n/degree of concept drift), and \u201cWhere\u201d (the drift regions\nof concept drift). This status information is the output of\nthe drift detection algorithms, and is used as input for drift\nadaptation.\n4.1 The time of concept drift occurs (When)\nThe most basic function of drift detection is to identify\nthe timestamp when a drift occurs.", "start_char_idx": 1708, "end_char_idx": 3510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73223af2-f20f-400d-bb4f-268ff7815ad0": {"__data__": {"id_": "73223af2-f20f-400d-bb4f-268ff7815ad0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "445abe43-0764-45c1-ac2a-0b48e1c2c6b0", "node_type": "1", "metadata": {}, "hash": "7612350369c09d099a9133a8dd513540ccf9c0b4cb7e81f2b35e97025e86de6a", "class_name": "RelatedNodeInfo"}, {"node_id": "4907c2ac-f351-4641-a06c-11e130800742", "node_type": "1", "metadata": {}, "hash": "ed85be2ea5f02af7ca7eb831bb03fd31430e670a95edf745af5e9f62c10e0d72", "class_name": "RelatedNodeInfo"}, {"node_id": "298354ba-52ce-4105-817f-f17c74376cca", "node_type": "1", "metadata": {}, "hash": "c9b48538610bf8c0fef0514431d19ada3abfa1643499bc950cad786edee5a86c", "class_name": "RelatedNodeInfo"}, {"node_id": "d1a5df0d-bd6f-4aba-8423-9f43e5951535", "node_type": "1", "metadata": {}, "hash": "632f87ed174acc53bbc89fdd5ece61c21a420d1b555713edab10b303e2308bb8", "class_name": "RelatedNodeInfo"}, {"node_id": "5ec5c673-098b-4472-9067-ff417c82a766", "node_type": "1", "metadata": {}, "hash": "4c0f561c6b1a808eda78763cdfead573b6b9491a2848e1de7566c1c3fb3d6b30", "class_name": "RelatedNodeInfo"}]}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "text": "Recalling the de\ufb01nition\nof concept drift\u2203t:Pt(X,y)\u0338=Pt+1(X,y), the variable t\nrepresents the time at which a concept drift occurs. In drift\ndetection methods/algorithms, an alarm signal is used to\nindicate whether the concept drift has or has not occurred or\nnot at the current timestamp. It is also a signal for a learning\nsystem to adapt to a new concept. Accurately identifying\nthe time a drift occurs is critical to the adaptation process\nof a learning system; a delay or a false alarm will lead to\nfailure of the learning system to track new concepts.\nA drift alarm usually has a statistical guarantee with a\nprede\ufb01ned false alarm rate. Error rate-based drift detection\nalgorithms monitor the performance of the learning system,\nbased on statistical process control. For example, DDM\n[20] sends a drift signal when the learning accuracy of\nthe learner drops below a prede\ufb01ned threshold, which is\nchosen by the three-sigma rule [55]. ECCD [29] reports a\ndrift when the online error rate exceeds the control limit\nof EWMA. Most data distribution-based drift detection\nalgorithms report a drift alarm when two data samples\nhave a statistically signi\ufb01cant difference. PCA-based drift\ndetection [36] outputs a drift signal when the p-value of\nthe generalized Wilcoxon test statistic Wl\nBFis signi\ufb01cantly\nlarge. The method in [3] con\ufb01rms that a drift has occurred by\nverifying whether the empirical competence-based distance\nis signi\ufb01cantly large through permuataion test.\nTaking into account the various drift types, concept drift\nunderstanding needs to explore the start time point, the\nchange period, and the end time point of concept drift.\nAnd these time information could be useful input for the\nadaptation process of the learning system. However the\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Dt+12Dt+11...DatadistributionTimeStart time of  concept driftTime the drift alarm is triggeredEnd time of  concept driftPeriod of  concept drift changeSeverity of  concept driftFig. 11.", "start_char_idx": 3511, "end_char_idx": 5498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01daae07-70a6-43ed-8896-0418267bbd6a": {"__data__": {"id_": "01daae07-70a6-43ed-8896-0418267bbd6a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86ef810a-d22d-4f17-befc-4f97dd8d22d2", "node_type": "1", "metadata": {}, "hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "62765de9-8293-4372-96bd-87dc74359ceb", "node_type": "1", "metadata": {}, "hash": "f1fd2f61be3446822ecccb9a204745084a5133fdd36f8ad7cc67ae92728b80f9", "class_name": "RelatedNodeInfo"}, {"node_id": "d07c02d2-96f1-4a98-8a25-ddd7941c1f9c", "node_type": "1", "metadata": {}, "hash": "b1ebc2e50130c73038cfd66bfb7249f7ea887b0a09815004c39b97fec61f17e2", "class_name": "RelatedNodeInfo"}, {"node_id": "74c9a4e1-2b02-4f49-9256-965662bd0939", "node_type": "1", "metadata": {}, "hash": "99833c1362d5c72a360f2033d976f9880a65bf3ff33c151dfa0014e551751830", "class_name": "RelatedNodeInfo"}, {"node_id": "cd23d1c1-8d17-4b8a-ab9d-f19be8da2a9f", "node_type": "1", "metadata": {}, "hash": "1946bc54712187baff34b5cab73d9a7f29d8616a59d4912c2c7af41b6c86c743", "class_name": "RelatedNodeInfo"}, {"node_id": "8d0744a7-668b-4b09-8336-56b024e6edd3", "node_type": "1", "metadata": {}, "hash": "da6872dc746974fb7760f6cbe20e5c898dd784c95b69417d9524df9061afae2a", "class_name": "RelatedNodeInfo"}]}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "text": "11. An example of the occurrence time and the severity of concept\ndrift. One incremental drift starts to change at t+ 1and ends at t+ 5.\nThe other sudden drift occurs between t+ 9andt+ 10 . The severity of\nthese two concept drifts ( Dt+1-Dt+5andDt+9-Dt+10) is marked with\nbrackets.\ndrift timestamp alert in existing drift detection algorithms\nis delayed compared to the actual drifting timestamp, since\nmost drift detectors require a minimum number of new data\nto evaluate the status of the drift, as shown in Fig. 11. The\nemergence time of the new concept is therefore still vague.\nSome concept drift detection algorithms such as DDM [20],\nEDDM [26], STEPD [30], and HDDM [23], trigger a warning\nlevel to indicate a drift may have occurred. The threshold\nused to trigger warning level is a relaxed condition of the\nthreshold used for the drift level; for example, the warning\nlevel is set p-value to 95% or 2\u03c3, and the drift level is set\np-value to 99% or 3\u03c3. The data accumulated between the\nwarning level and the drift level are used as the training set\nfor updating a learning model.\n4.2 The severity of concept drift (How)\nThe severity of concept drift refers to using a quanti\ufb01ed\nvalue to measure the similarity between the new concept\nand the previous concept, as shown in Fig. 11. Formally,\nthe severity of concept drift can be represented as \u2206 =\n\u03b4(Pt(X,y),Pt+1(X,y)), where\u03b4is a function to measure the\ndiscrepancy of two data distributions, and tis the timestamp\nwhen the concept drift occurred. \u2206usuallyisanon-negative\nvalue indicatingthesever ityofconcept drift. The greater the\nvalue of\u2206,thelarger thesever ityoftheconcept drift is.\nIn general, error rate-based drift detection cannot di-\nrectly measure the severity of concept drift, because it\nmainly focuses on monitoring the performance of the learn-\ning system, not the changes in the concept itself. However,\nthe degree of decrease in learning accuracy can be used as\nan indirect measurement to indicate the severity of concept\ndrift.", "start_char_idx": 5495, "end_char_idx": 7498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86ef810a-d22d-4f17-befc-4f97dd8d22d2": {"__data__": {"id_": "86ef810a-d22d-4f17-befc-4f97dd8d22d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ffee4c09-1050-4acf-b72a-55be7a5da663", "node_type": "1", "metadata": {}, "hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "930db822-b155-4a9a-8d53-8eab621e98b6", "node_type": "1", "metadata": {}, "hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "class_name": "RelatedNodeInfo"}]}, "hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "text": "If learning accuracy has dropped signi\ufb01cantly when\ndrift is observed, this indicates that the new concept is\ndifferent from the previous one.", "start_char_idx": 7499, "end_char_idx": 7640, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04be5b4c-ca50-4ba0-9f46-155a04b68c78": {"__data__": {"id_": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "cf66fd5c-d762-4aff-8db9-e1013fa74219", "node_type": "1", "metadata": {}, "hash": "26154d9a0fbc0bdd5206352a0d0e98bb18cd50c30d7bc95091b770fd2bd6c6a4", "class_name": "RelatedNodeInfo"}, {"node_id": "7019b8a6-f42f-4837-919e-32b27c76498a", "node_type": "1", "metadata": {}, "hash": "ed6bf47b7b65c96ef62f4ed8c2e43e21bc42d5a20a6ce4ca7087b4c58e308a4d", "class_name": "RelatedNodeInfo"}, {"node_id": "55a511d7-d7a3-4c0d-b287-6766efcaac5f", "node_type": "1", "metadata": {}, "hash": "5f8b32d9063e270b4d4b4bcb1456a812c8cc4230adc68b6575fbb05c05875ef3", "class_name": "RelatedNodeInfo"}, {"node_id": "12924ba1-b6c6-4f92-80f3-a291388fe8b0", "node_type": "1", "metadata": {}, "hash": "a60c8a1113a272e0f1b89963562a290892717dc53596062f57486b019a11f912", "class_name": "RelatedNodeInfo"}, {"node_id": "e4565393-4c62-450a-af8f-b69ea991326d", "node_type": "1", "metadata": {}, "hash": "8ebd5750b4f2198e804501d1fe5a0fb26d828dfb5aa039a9dacfe8361bc61203", "class_name": "RelatedNodeInfo"}]}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "text": "For example, the severity\nof concept drift could be re\ufb02ected by the difference be-\ntweenpiandpminin [20], [27] ,denoted as\u2206\u223cpi\u2212pmin;\nthe difference between overall accuracy \u02c6phistand recent\naccuracy \u02c6pnew in [30] ,expressed as\u2206\u223c\u02c6pnew\u2212\u02c6phist; and\nthe difference between test statistics in the former window\nE[\u02c6Xcut]and test statistics in the later window E[\u02c6Yi\u2212cut][23],\ndenoted as\u2206\u223cE[\u02c6Yi\u2212cut]\u2212E[\u02c6Xcut]. However, the meaning\nof these differences is not discussed in existing publications.\nThe ability of error rate-based drift detection to output the\nseverity of concept drift is still vague.\nData distribution-based drift detection methods can di-\nrectly quantify the severity of concept drift since the mea-\nsurement used to compare two data samples already re\ufb02ects\nthe difference. For example, [37] employed arelaxation ofthe\ntotalvariation distancedA(S1,S2)to measure the difference\n\n8\nTABLE 1\nSummary of drift detection algorithms\nCategory Algorithms Stage 1 Stage 2 Stage 3 Stage 4\nError\nrate-basedDDM [20] Landmark Learner Online error rate Distribution estimation\nEDDM [26] Landmark Learner Online error rate Distribution estimation\nFW-DDM [5] Landmark Learner Online error rate Distribution estimation\nDEML [27] Landmark Learner Online error rate Distribution estimation\nSTEPD [30] Prede\ufb01nedwhist,wnew Learner Error rate difference Distribution estimation\nADWIN [31] Auto cutwhist,wnew Learner Error rate difference Hoeffding\u2019s Bound\nECDD [29] Landmark Learner Online error rate EWMA Chart\nHDDM [23] Landmark Learner Online error rate Hoeffding\u2019s Bound\nLLDD [25] Landmark, or sliding whist,\nwnewDecision trees Tree node error rate Hoeffding\u2019s Bound\nData\ndistribution-\nbasedkdqTree [22] Fixedwhist, Slidingwnew kdqTree KL divergence Bootstrapping\nCM [2], [3] Fixedwhist,", "start_char_idx": 0, "end_char_idx": 1777, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c01acb18-9f36-4e8d-b563-46169bb6724a": {"__data__": {"id_": "c01acb18-9f36-4e8d-b563-46169bb6724a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e165a9d8-d1e9-4534-99da-de8081928cd8", "node_type": "1", "metadata": {}, "hash": "2f5ae090549015aa4dabc702fd49ee0893522d7b511082efea633dbb7bd61261", "class_name": "RelatedNodeInfo"}, {"node_id": "0ea7aa75-1dd5-409b-9538-cab43ef61517", "node_type": "1", "metadata": {}, "hash": "7e313631f7eb0c2dcf1f38425815840f275d0a14084255f12afa338ecd06b4a5", "class_name": "RelatedNodeInfo"}, {"node_id": "0281183b-80e2-4daa-8552-0d6cc5e8c484", "node_type": "1", "metadata": {}, "hash": "905009a7bdac6b1e7e2e2c6377479956edddeb1f501f0da08bfd7f047ef1b776", "class_name": "RelatedNodeInfo"}, {"node_id": "4f32007a-9d77-4d55-a937-57acdecfbf03", "node_type": "1", "metadata": {}, "hash": "7bb29931679a7e2d0a6f43b1273fd7ef7cebe166d93a84ec3f52dd8d3e956503", "class_name": "RelatedNodeInfo"}]}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "text": "[3] Fixedwhist, Slidingwnew Competence model Competence distance Permutation test\nRD [37] Fixedwhist, Slidingwnew KS structure Relativized Discrepancy VC-Dimension\nSCD [38] Fixedwhist, Slidingwnew kernel density estima-\ntorlog-likelihood Distribution estimation\nEDE [40] Fixedwhist, Slidingwnew Nearest neighbor Density scale Permutation test\nSyncStream [36] Fixedwhist, Slidingwnew PCA P-Tree Wilcoxon test\nPCA -CD [39] Fixedwhist,Slidingwnew PCA Change -Score Page -Hink leytest\nLSDD-CDT [21] Fixedwhist, Slidingwnew Learner Relative difference Distribution estimation\nLSDD-INC [41] Fixedwhist, Slidingwnew Learner Relative difference Distribution estimation\nLDD-DSDA [4] Fixedwhist, Slidingwnew k-nearest neighbor Local drift degree Distribution estimation\nMultiple\nHypothesis\nTestsJIT [19] Landmark Selected features 4 con\ufb01gurations Distribution estimation\nLFR [46] Landmark Learner TP , TN, FP , FN Distribution estimation\nThree-layer [47] Sliding both whist,wnew Learner P(y),P(X),P(X|y) Distribution estimation\ne-Detector[48] depends onbase detector depends depends depends\nDDE [49] depends onbase detector depends depends depends\nTSMSD-EWMA [52] Landmark Learner Online error rate EWMA Chart\nHCDTs [50] Landmark Depending on layers Depending on layers Depending on layer\nHLFR [51] Landmark Learner TP , TN, FP , FN Distribution estimation\nHHT -CU[53] Land mark Learner Clas si\ufb01cation uncertainty Layer -IHoeffding\u2019s Bound,\nLayer -IIPermutation Test\nHHT -AG[53] Fixedwhist,Slidingwnew N/A KS statis ticon each at-\ntributeLayer -IKStest, Layer -II2D\nKStest\nbetween two data distributions. [3] proposed acompetence -\nbased empiricaldistancedCB(S1,S2)to show the difference\nbetween two data samples.", "start_char_idx": 1762, "end_char_idx": 3465, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe322443-9f9c-4894-9d41-59040db525c0": {"__data__": {"id_": "fe322443-9f9c-4894-9d41-59040db525c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "5ae5b141-e04a-42b6-9a34-1ed37340cd7e", "node_type": "1", "metadata": {}, "hash": "b681cfd65513331d4a87aab02fbd90cb8ece5594071192b2a54c7c6fd2327f8b", "class_name": "RelatedNodeInfo"}, {"node_id": "3fb53d68-7a58-4c8a-8bf4-87e2dfe04b0a", "node_type": "1", "metadata": {}, "hash": "0dc76cffc28122f6d6b6c05bbea9d2c915b1cbc3ab62b6def0b31fb583d66060", "class_name": "RelatedNodeInfo"}, {"node_id": "b8a36283-6d70-45ba-8bf3-5d325f530264", "node_type": "1", "metadata": {}, "hash": "dd274d8f62dbe055fa698d44b7c681111931cf05d1511322c692f93bcfd4bd6d", "class_name": "RelatedNodeInfo"}, {"node_id": "b818744a-6f81-4afc-91d1-9fa195615bd4", "node_type": "1", "metadata": {}, "hash": "5d6636b82e342b54ee98b0b59d884770f47903d1c82c02721e635ee6c9b68545", "class_name": "RelatedNodeInfo"}, {"node_id": "e9d49e08-7c21-4e9a-81c8-ac4cc2e0e4c3", "node_type": "1", "metadata": {}, "hash": "4330dcb8a215de869a539e630dada08254ff8c71fd41360c7e22ea7648ba25bc", "class_name": "RelatedNodeInfo"}]}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "text": "Other drift detection meth-\nods have used information-theoretic distance; for example,\nKullback-Leibler divergenceD(W1||W2), also called relative\nentropy, was used in the study reported in [22]. The range of\nthese distances is [0,1]. The greater the distance, the larger\nthe severity of the concept drift is. The distance \u201c1\u201d means\nthat a new concept is different from the pervious one, while\nthe distance \u201c0\u201d means that two data concepts are identical.\nThe test statis tic\u03b4used in [38] gives an extremely small\nnegative value if the new concept is quite different from\nthe previous concept. The degree of concept drift in [36] is\nmeasured by the resulting p-value of thetest statis ticWl\nBF\nand thede\ufb01nedAngle (Dt,Dt+1)oftwo datasetsDtand\nDt+1.\nThe severity of concept drift can be used as a guideline\nfor choosing drift adaptation strategies. For example, if the\nseverity of drift in a classi\ufb01cation task is low, the decision\nboundary may not move much in the new concept. Thus,\nadjusting the current learner by incremental learning will\nbe adequate. In contrast, if the severity of the concept drift\nis high, the decision boundary could change signi\ufb01cantly,\ntherefore discarding the old learner and retraining a new\none could be better than incrementally updating the old\nlearner. We would like to mention that, even though some\nresearches have promoted the ability to describe and quan-\ntify the severity of the detected drift, this information is not\nyet widely utilized in drift adaptation.\n012345678910\n012345678910012345678910\n012345678910(a) Data at time t\n012345678910\n012345678910012345678910\n012345678910(b) Data at time t+1\n012345678910\n012345678910012345678910\n012345678910(c) Data in drift re-\ngions\nFig. 12. An example of the drift regions of concept drift.\n4.3 The drift regions of concept drift (Where)\nThe drift regions of concept drift are the regions of con\ufb02ict\nbetween a new concept and the previous concept.", "start_char_idx": 3466, "end_char_idx": 5396, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48f44036-107f-419f-bf8f-f4ccc9bf8839": {"__data__": {"id_": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0292a66-da79-4af5-aef1-d6c1049174ee", "node_type": "1", "metadata": {}, "hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "46c6dbc8-05f0-410c-9e0f-c2b8fbf4f6dd", "node_type": "1", "metadata": {}, "hash": "2ded58b6fdfba7af4749141eb248877b249237fa01342ec04db1e6c8aa63b238", "class_name": "RelatedNodeInfo"}, {"node_id": "d84281b7-94af-4a97-a42a-c7598800476e", "node_type": "1", "metadata": {}, "hash": "608ad6f082a17f5ebf58d76db0d30c16ab85311b839060d349eebc98187e9536", "class_name": "RelatedNodeInfo"}, {"node_id": "8a39292f-9ff0-4566-825a-68968d95bd8f", "node_type": "1", "metadata": {}, "hash": "b0574451bbcbb586ef0cc086667ef173f0d95ca33f828dbedc9936dc1bc51820", "class_name": "RelatedNodeInfo"}, {"node_id": "09596724-639b-4b6d-b242-42c3a2cafc9b", "node_type": "1", "metadata": {}, "hash": "6d87ba164b5c54dc9a92d908d04234b5b47e64db0e6aff272fac5d762ef055c0", "class_name": "RelatedNodeInfo"}, {"node_id": "03715c56-d486-42e1-84c6-ee545c04b46d", "node_type": "1", "metadata": {}, "hash": "9e72bf8d333ecb5e4558c89275e0f90ea44703af33c9ed4b54da1dddae68cd17", "class_name": "RelatedNodeInfo"}]}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "text": "Drift re-\ngions are located by \ufb01nding regions in data feature spaceX\nwherePt(X,y)andPt+1(X,y)have signi\ufb01cant difference.\nTo illustrate this, we give an example of a classi\ufb01cation task\nin Fig. 12. The data used in this task are uniformly sampled\nin the range of [0,10]2. The left sub-\ufb01gure is the data sample\naccumulated at time t, where the decision boundary is\nx1+x2= 8. The middle sub-\ufb01gure is the data accumulated\nat timet+ 1, where the decision boundary is x1+x2= 9.\nIntuitively, data located in regions 8\u2264x1+x2<9have\ndifferent classes in time tand timet+ 1, since the decision\nboundary has changed. The right sub-\ufb01gure shows the data\nlocated in the drift regions.\nThe techniques to identify drift regions are highly de-\npendent on the data model used in the drift detection\n\n9\nmethods/algorithms. Paper [25] detected drift data in lo-\ncal regions of the instance space by using online error-\nrate inside the inner-nodes of a decision tree. The whole\ndata feature space is partitioned by decision tree. Each\nleaf of this decision tree corresponds to a hyper-rectangle\nin the data feature space. All leaf nodes contain a drift\ndetector. When the leaf nodes are alerted to a drift, the\ncorresponding hyper-rectangles indicate the regions of drift\nin the data feature space. Similar to [25], [22] utilized the\nnodes of the kdq-tree with Kulldorff\u2019s spatial scan statistic\nto identify the regions in which data had changed the\nmost. Once a drift has been reported, Kulldorff\u2019s statistic\nmeasures how the two datasets differ only with respect\nto the region associated with the leaf node of the kdq-tree .\nThe leaf nodes with the greater statistical value of show\nthe drift regions. [2] highlighted the most severe regions\nof concept drift through top- p-competence areas. Utilizing\ntheRelatedSets of the competence model, the data feature\nspace is partitioned by a set of overlapping hyperspheres.", "start_char_idx": 5397, "end_char_idx": 7293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0292a66-da79-4af5-aef1-d6c1049174ee": {"__data__": {"id_": "d0292a66-da79-4af5-aef1-d6c1049174ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "node_type": "1", "metadata": {}, "hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d83e2f28-88c6-4a87-9b48-bb0f5bc45f57", "node_type": "1", "metadata": {}, "hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "class_name": "RelatedNodeInfo"}]}, "hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "text": "The RelatedSet -based empirical distance de\ufb01nes the distance\nbetween two datasets on a particular hypersphere. The drift\nregions are identi\ufb01ed by the corresponding hyperspheres\nwith large empirical distance at top p% level. [4] identi\ufb01ed\ndrift regions by monitoring the discrepancy in the regional\ndensity of data, which is called the local drift degree.", "start_char_idx": 7294, "end_char_idx": 7648, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "286425d5-d677-4a41-a64e-26f6ad3a0da6": {"__data__": {"id_": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "949e6d23-0b8c-4597-84fa-6cadb6b1f450", "node_type": "1", "metadata": {}, "hash": "343bc47ae239ca56301a8fc41c7e8d9a599b8b41aea317f497a10d4c494bb165", "class_name": "RelatedNodeInfo"}, {"node_id": "ef8c56a3-8282-44dd-9671-1d4cc3215316", "node_type": "1", "metadata": {}, "hash": "a68ad720545f634ddc914d6490ea87ca4d157440a4f7ebc0966532fd9c2c2f02", "class_name": "RelatedNodeInfo"}, {"node_id": "9f49097b-ab25-4492-93ab-f0cfdcd6012b", "node_type": "1", "metadata": {}, "hash": "9138f20e4853ce839adb1c50dfa963ab2e515e679a6aa5d699b68eacdb6424d8", "class_name": "RelatedNodeInfo"}]}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "text": "A local\nregion with a corresponding increase or decrease in density\nwill be highlighted as a critical drift region.\nLocating concept drift regions bene\ufb01ts drift adaptation.\nPaper [56] pointed out that even if the concept of the entire\ndataset drifts, there are regions of the feature space that\nwill remain stable signi\ufb01cantly longer than other regions.\nIn an ensemble scenario, the old learning models of stable\nregions could still be useful for predicting data instances\nlocated within stable regions, or data instances located in\ndrift regions could be used to build a more updated current\nmodel. The authors of [3] also pointed out that identifying\ndrift regions can help in recognizing obsolete data that\ncon\ufb02ict with current concepts and distinguish noise data\nfrom novel data. In their later research [2], they utilized top-\np-competence areas to edit cases in a case-based reasoning\nsystem for fast new concept switching. One step in their\ndrift adaptation is to remove con\ufb02ict instances. To preserve\nas many instances of a new concept as possible, they only\nremove obsolete con\ufb02ict instances which are outside the\ndrift regions. LDD-DSDA [4] utilized drift regions as an\ninstance selection strategy to construct a training set that\ncontinually tracked a new concept.\n4.4 Summary of drift understanding\nWe summarize concept drift detection algorithms according\nto their ability to identify when, how, and where concept\ndrift occurs, as shown in TABLE 2.", "start_char_idx": 0, "end_char_idx": 1461, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d81d190-519d-4621-ae61-0c46ca4d50a9": {"__data__": {"id_": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b15067b8-789f-449e-8f51-43b4378cf77b", "node_type": "1", "metadata": {}, "hash": "31564e2aff30afb34064b8266d3a2c1ee4666f4b8d99ca5fdbf89c9e92961740", "class_name": "RelatedNodeInfo"}, {"node_id": "8d42cf75-f774-4a70-a495-fa66f170ff51", "node_type": "1", "metadata": {}, "hash": "9c50679c49f07ba963012967798c298c835f06433378436ddccafce7773d06ed", "class_name": "RelatedNodeInfo"}, {"node_id": "0d2f4d0c-c688-40b4-8a95-952e2e15bfc0", "node_type": "1", "metadata": {}, "hash": "e4673feeb58b1aa5d3d0427b33e75ae10c1a335e8dbda2ded03c30413c0fa76d", "class_name": "RelatedNodeInfo"}, {"node_id": "0fbc2e46-da9e-467a-aa38-cfc6de24c614", "node_type": "1", "metadata": {}, "hash": "ebdea23d5542065c9a40a60c9d82c5c0774eaf6dad8ae4d8ee9b216422b3d880", "class_name": "RelatedNodeInfo"}, {"node_id": "f65629cc-8205-4271-aab4-5a4312022559", "node_type": "1", "metadata": {}, "hash": "d3780ca81f3fd1c6a91a1808bcae404fcd0601d10c141f9c408305e1f45d281e", "class_name": "RelatedNodeInfo"}]}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "text": "All drift detection al-\ngorithms can identify the occurrence time of concept drift\n(when), and most data distribution-based drift detection\nalgorithms can also measure the severity of concept drift\n(how) through the test statistics, but only a few algorithms\nhave the ability to locate drift regions (where).TABLE 2\nSummary of drift understanding for drift detection algorithms\nCategory Algorithms When How Where\nError rate-based DDM [20]\u221a\nEDDM [26]\u221a\nFW-DDM [5]\u221a\nDEML [27]\u221a\nSTEPD [30]\u221a\nADWIN [31]\u221a\nECDD [29]\u221a\nHDDM [23]\u221a\nLLDD [25]\u221a\u221a\nData distribution-\nbasedkdqTree [22]\u221a\u221a\u221a\nCM [2], [3]\u221a\u221a\u221a\nRD [37]\u221a\u221a\nSCD [38]\u221a\u221a\nEDE [40]\u221a\nSyncStream [36]\u221a\u221a\nPCA -CD [39]\u221a\u221a\nLSDD-CDT [21]\u221a\nLSDD-INC [41]\u221a\nLDD-DSDA [4]\u221a\u221a\u221a\nMultiple\nhypothesis testsJIT [19]\u221a\nLFR [46]\u221a\nThree-layer drift detection [47]\u221a\ne-Detector[48]\u221a\nDDE [49]\u221a\nEWMA [52]\u221a\nHCDTs [50]\u221a\nHLFR [51]\u221a\nHHT -CU[53]\u221a\nHHT -AG[53]\u221a\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptOld modelDrift detected and retrainNew model\nFig. 13. A new model is trained with latest data to replace the old model\nwhen a concept drift is detected.\n5 D RIFT ADAPTATION\nThis section focuses on strategies for updating existing\nlearning models according to the drift, which is known as\ndrift adaptation or reaction.", "start_char_idx": 1462, "end_char_idx": 2727, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e4e24c5-2f32-40a1-94f6-95f45665d27a": {"__data__": {"id_": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d5eda6e2-08a9-44cf-9885-ab55bb7e9632", "node_type": "1", "metadata": {}, "hash": "8097fcd526c92389b2d3c7432dc85acbbe660cb9b0ebb54de4324b32845028f8", "class_name": "RelatedNodeInfo"}, {"node_id": "11f6cf1e-4bc8-4cab-bc97-8f6e9dfc9de1", "node_type": "1", "metadata": {}, "hash": "41d23e4293dfa47cd6e584210ebd392edd91b9c6f665ae71de155d2bf5c21233", "class_name": "RelatedNodeInfo"}, {"node_id": "c882face-3ddd-46d4-857e-ea76dd01afb4", "node_type": "1", "metadata": {}, "hash": "6d7fcd2fa5b488ae5cc714223a2c79d74e04c7f8f644a6f35ca033ad7456f354", "class_name": "RelatedNodeInfo"}, {"node_id": "bfaf903b-a589-43f6-9961-b11ba89b8854", "node_type": "1", "metadata": {}, "hash": "3acde2ed73d925a07953dbb2cbd4a5be1770e92d896eb80a83a940cb5de410f5", "class_name": "RelatedNodeInfo"}, {"node_id": "1968188e-7731-4e04-8ebf-c5c07fe83736", "node_type": "1", "metadata": {}, "hash": "3ecbc55187597677bac06a7f23fd81b4241ebc2d3f1ce12fbfe4833a09e99bda", "class_name": "RelatedNodeInfo"}]}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "text": "There are three main groups\nof drift adaptation methods, namely simple retraining, en-\nsemble retraining and model adjusting, that aim to handle\ndifferent types of drift.\n5.1 Training new models for global drift\nPerhaps the most straightforward way of reacting to concept\ndrift is to retrain a new model with the latest data to replace\nthe obsolete model, as shown in Fig. 13. An explicit concept\ndrift detector is required to decide when to retrain the model\n(see Section 3 on drift detection). A window strategy is\noften adopted in this method to preserve the most recent\ndata for retraining and/or old data for distribution change\ntest. Paired Learners [57] follows this strategy and uses two\nlearners: the stable learner and the reactive learner . If the stable\nlearner frequently misclassi\ufb01es instances that the reactive\nlearner correctly classi\ufb01es, a new concept is detected and\nthe stable learner will be replaced with the reactive learner.\nThis method is simple to understand and easy to implement,\nand can be applied at any point in the data stream.\n\n10\nWhen adopting a window-based strategy, a trade-off\nmust be made in order to decide an appropriate window\nsize. A small window can better re\ufb02ect the latest data\ndistribution, but a large window provides more data for\ntraining a new model. A popular window scheme algorithm\nthat aims to mitigate this problem is ADWIN [31]. Unlike\nmost earlier works, it does not require the user to guess\na \ufb01xed size of the windows being compared in advance;\ninstead, it examines all possible cuts of the window and\ncomputes optimal sub-window sizes according to the rate\nof change between the two sub-windows. After the optimal\nwindow cut has been found, the window containing old\ndata is dropped and a new model can be trained with the\nlatest window data.\nInstead of directly retraining the model, researchers\nhave also attempted to integrate the drift detection process\nwith the retraining process for speci\ufb01c machine learning\nalgorithms. DELM [27] extends the traditional ELM algo-\nrithm with the ability to handle concept drift by adaptively\nadjusting the number of hidden layer nodes.", "start_char_idx": 2728, "end_char_idx": 4863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8759913d-865c-4f74-9d55-3017e37d91b4": {"__data__": {"id_": "8759913d-865c-4f74-9d55-3017e37d91b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "372f1532-8ef2-4a7b-96c2-e0da12bcb1d3", "node_type": "1", "metadata": {}, "hash": "953895b08fe740c88d49dea6ffd258a248e04cfe076ad42a8a9ecfbc51ee9807", "class_name": "RelatedNodeInfo"}, {"node_id": "39fa2e1a-4513-4125-be6d-a3fbec3c5391", "node_type": "1", "metadata": {}, "hash": "96f3c6f4c61ea61c3a180f18c8615d9e04f50ad8d82d44026c31463a536fa9d7", "class_name": "RelatedNodeInfo"}, {"node_id": "bd84b8ba-f308-4d3c-922f-a63d059a2657", "node_type": "1", "metadata": {}, "hash": "b68077e84bb9d3031cf75f4f91fd337528b4fd7a83e5d186b0d0d3069ad8fb33", "class_name": "RelatedNodeInfo"}, {"node_id": "3f1acae8-83f4-4cef-9f27-6fdeb5bee113", "node_type": "1", "metadata": {}, "hash": "a74f6edf97584292f2d3c7c83db773fda4890c0a468e960f3c87e2cc3ed041bd", "class_name": "RelatedNodeInfo"}, {"node_id": "4bc13663-1e09-4ea3-ac6e-6798c452a91b", "node_type": "1", "metadata": {}, "hash": "656f913f0cef2200ca88c7456941159a0e34ac9940339fba2936be04e1daae48", "class_name": "RelatedNodeInfo"}]}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "text": "When the\nclassi\ufb01cation error rate increases \u2014 which could indicate\nthe emergence of a concept drift \u2014 more nodes are added to\nthe network layers to improve its approximation capability.\nSimilarly, FP-ELM [58] is an ELM-extended method that\nadapts to drift by introducing a forgetting parameter to the\nELM model. A parallel version of ELM-based method [59]\nhas also been developed for high-speed classi\ufb01cation tasks\nunder concept drift. OS-ELM [60] is another online learning\nensemble of repressor models that integrates ELM using an\nordered aggregation (OA) technique, which overcomes the\nproblem of de\ufb01ning the optimal ensemble size.\nInstance-based lazy learners for handling concept drift\nhave also been studied intensively. The Just-in-Time adaptive\nclassi\ufb01er [19], [42] is such a method which follows the\n\u201ddetect and update model\u201d strategy. For drift detection,\nit extends the traditional CUSUM test [61] to a pdf-free\nform. This detection method is then integrated with a kNN\nclassi\ufb01er [42]. When a concept drift is detected, old instances\n(more than the last Tsamples) are removed from the case\nbase. In later work, the authors of [11], [45] extended this\nalgorithm to handle recurrent concepts by computing and\ncomparing current concept to previously stored concepts.\nNEFCS [2] is another kNN-based adaptive model. A compe-\ntence model-based drift detection algorithm [3] was used to\nlocate drift instances in the case base and distinguish them\nfrom noise instances and a redundancy removal algorithm,\nStepwise Redundancy Removal (SRR), was developed to\nremove redundant instances in a uniform way, guaranteeing\nthat the reduced case base would still preserve enough\ninformation for future drift detection.\n5.2 Model ensemble for recurring drift\nIn the case of recurring concept drift, preserving and reusing\nold models can save signi\ufb01cant effort to retrain a new\nmodel for recurring concepts. This is the core idea of using\nensemble methods to handle concept drift. Ensemble meth-\nods have received much attention in stream data mining\nresearch community in recent years. Ensemble methods\ncomprise a set of base classi\ufb01ers that may have different\ntypes or different parameters.", "start_char_idx": 4864, "end_char_idx": 7049, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24": {"__data__": {"id_": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "node_type": "1", "metadata": {}, "hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "f9aed1e6-edab-4f5a-be13-9a85b0d806f3", "node_type": "1", "metadata": {}, "hash": "c832ed2ae0f14a1807c8062adf0d56d34a26b9fab59eb8436a255b4b2c47b1c3", "class_name": "RelatedNodeInfo"}, {"node_id": "1f530631-fe7e-4ea1-8957-97936e95ff1e", "node_type": "1", "metadata": {}, "hash": "824d6dd1b51dff20d7998680a027afec90566ba0ddae927594644cb53a7c252a", "class_name": "RelatedNodeInfo"}, {"node_id": "6b510875-83ce-4659-a050-bfa0ef8ef3d6", "node_type": "1", "metadata": {}, "hash": "3a0f2d876b6c5891c2073ad063d7b6130e06320655aedb94d0eb3de9b73ee291", "class_name": "RelatedNodeInfo"}]}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "text": "The output of each base\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptEnsembleAdd new model to ensemble...Fig. 14. A new base classi\ufb01er is added to the ensemble when a concept\ndrift occurs.\nclassi\ufb01er is combined using certain voting rules to predict\nthe newly arrived data. Many adaptive ensemble methods\nhave been developed that aim to handle concept drift by\nextending classical ensemble methods or by creating speci\ufb01c\nadaptive voting rules. An example is shown in Fig. 14,\nwhere new base classi\ufb01er is added to the ensemble when\nconcept drift occurs.\nBagging, Boosting and Random Forests are classical\nensemble methods used to improve the performance of\nsingle classi\ufb01ers. They have all been extended for handling\nstreaming data with concept drift. An online version of the\nbagging method was \ufb01rst proposed in [62] which uses each\ninstance only once to simulate the batch mode bagging.", "start_char_idx": 7050, "end_char_idx": 7977, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40ebd08c-c34a-4c09-baa6-4fa729a72959": {"__data__": {"id_": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "b8efd933-7dbb-4d34-ab3e-d033f9cdc242", "node_type": "1", "metadata": {}, "hash": "228d1c7ebfdcdf7b38d7e0725cc6334c194cfca04010539d6aa12ffcf4266361", "class_name": "RelatedNodeInfo"}, {"node_id": "d8520a7f-84a4-4e0e-8e83-a4634470a5f8", "node_type": "1", "metadata": {}, "hash": "15d83c23f7ac09220f2064521f5d84f9bfa4d1b03f0ae918119b4b80a046d15a", "class_name": "RelatedNodeInfo"}, {"node_id": "00c645fe-b22b-4a55-820b-bad248c0f88a", "node_type": "1", "metadata": {}, "hash": "6a8146886f6b5ada2a2c95a61e66fcd7a55bfd212392dc4741d3c1cc890b6d6e", "class_name": "RelatedNodeInfo"}, {"node_id": "beb6abd4-79be-40f9-aa24-6e1db2c45118", "node_type": "1", "metadata": {}, "hash": "932441036570d0c0a49744595db777ddffea0b7f09ce74d95a93cffc5dde46d5", "class_name": "RelatedNodeInfo"}, {"node_id": "5177bd74-e433-45c8-9640-f64fab7455aa", "node_type": "1", "metadata": {}, "hash": "0a809ea9245ff0341483d40162f3307a3cb9a21194a572af9d89f609d5cb99ff", "class_name": "RelatedNodeInfo"}]}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "text": "In a later study [63], this method was combined with the\nADWIN drift detection algorithm [31] to handle concept\ndrift. When a concept drift is reported, the newly proposed\nmethod, called Leveraging Bagging, trains a new classi\ufb01er\non the latest data to replace the existing classi\ufb01er with the\nworst performance. Similarly, an adaptive boosting method\nwas developed in [64] which handles concept drift by moni-\ntoring prediction accuracy using a hypothesis test, assuming\nthat classi\ufb01cation errors on non-drifting data should follow\nGaussian distribution. In a recent work [35], the Adaptive\nRandom Forest (ARF) algorithm was proposed, which ex-\ntends the random forest tree algorithm with a concept drift\ndetection method, such as ADWIN [31], to decide when to\nreplace an obsolete tree with a new one. A similar work can\nbe found in [65], which uses Hoeffding bound to distinguish\nconcept drift from noise within decision trees.\nBesides extending classical methods, many new ensem-\nble methods have been developed to handle concept drift\nusing novel voting techniques. Dynamic Weighted Majority\n(DWM) [66] is such an ensemble method that is capable of\nadapting to drifts with a simple set of weighted voting rules.\nIt manages base classi\ufb01ers according to the performance\nof both the individual classi\ufb01ers and the global ensemble.\nIf the ensemble misclassi\ufb01es an instance, DWM will train\na new base classi\ufb01er and add it to ensemble. If a base\nclassi\ufb01er misclassi\ufb01es an instance, DWM reduces its weight\nby a factor. When the weight of a base classi\ufb01er drops\nbelow a user de\ufb01ned threshold, DWM removes it from\nthe ensemble. The drawback of this method is that the\nadding classi\ufb01er process may be triggered too frequently,\nintroducing performance issues on some occasions, such as\nwhen gradual drift occurs. A well-known ensemble method,\nLearn++NSE [67], mitigates this issue by weighting base\nclassi\ufb01ers according to their prediction error rate on the\nlatest batch of data.", "start_char_idx": 0, "end_char_idx": 1969, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70": {"__data__": {"id_": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9846b948-028e-4d12-aea1-8b41f55638d4", "node_type": "1", "metadata": {}, "hash": "11b00e1237fc4e3a5e40bac849ea2091226173e1acb865b36ca03ece5a78383e", "class_name": "RelatedNodeInfo"}, {"node_id": "8d80cdbf-7524-46fb-9a3d-34c75c0bf1c5", "node_type": "1", "metadata": {}, "hash": "75de22b90e2fb51ce4c59c577748cb06d80281acc9047a6ea3b64e8e5300850f", "class_name": "RelatedNodeInfo"}, {"node_id": "264fe587-7d33-448d-804e-e163e7c9de53", "node_type": "1", "metadata": {}, "hash": "1fc8c7cc8f0f103b306b2f52b9f1fb56986cb328cc867bce0019175a843505c9", "class_name": "RelatedNodeInfo"}, {"node_id": "c507d608-441c-4d1a-9709-baa02505ac28", "node_type": "1", "metadata": {}, "hash": "30b67eeb43c9b48c46f7420e3e48f042c0d669ca2c511331357bafa34b9083a9", "class_name": "RelatedNodeInfo"}, {"node_id": "cb30bb4d-a47a-414b-9c79-d9cad1b89dc8", "node_type": "1", "metadata": {}, "hash": "6ddbc3df3502dea8552166429eef0fd33b505ab0b2ebf07f8cc5aeb587d9de0f", "class_name": "RelatedNodeInfo"}]}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "text": "If the error rate of the youngest classi\ufb01er\nexceeds 50%, a new classi\ufb01er will be trained based on\nthe latest data. This method has several other bene\ufb01ts: it\n\n11\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptDrift detected in subregionPartially update model\nFig. 15. A decision tree node is replaced with a new one as its perfor-\nmance deteriorates when a concept drift occurs in a subregion.\ncan easily adopt almost any base classi\ufb01er algorithm; it\ndoes not store history data, only the latest batch of data,\nwhich it only uses once to train a new classi\ufb01er; and it\ncan handle sudden drift, gradual drift, and recurrent drift\nbecause underperforming classi\ufb01ers can be reactivated or\ndeactivated as needed by adjusting their weights. Other\nvoting strategies than standard weighted voting have also\nbeen applied to handle concept drift. Examples include\nhierarchical ensemble structure [68], [69], short term and\nlong term memory [13], [70] and dynamic ensemble sizes\n[71], [72].\nA number of research efforts have been made that focus\non developing ensemble methods for handling concept drift\nof certain types. Accuracy Update Ensemble (AUE2) [73]\nwas proposed with an emphasis on handling both sudden\ndrift and gradual drift equally well. It is a batch mode\nweighted voting ensemble method based on incremental\nbase classi\ufb01ers. By doing re-weighting, the ensemble is\nable react quickly to sudden drift. All classi\ufb01ers are also\nincrementally trained with the latest data, which ensures\nthat the ensemble evolves with gradual drift. The Optimal\nWeights Adjustment (OWA) method [74] achieves the same\ngoal by building ensembles using both weighted instances\nand weighted classi\ufb01ers for different concept drift types.\nThe authors of [75] considered a special case of concept drift\n\u2014 class evolution \u2014 the phenomenon of class emergence\nand disappearance. Recurring concepts are handled in [76],\n[77], which monitor concept information to decide when to\nreactivate previously stored obsolete models.", "start_char_idx": 1970, "end_char_idx": 4002, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ee1d53d-6569-48f0-9eec-f32d9b4affe4": {"__data__": {"id_": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "59c32184-e5e4-4649-ac3e-1a303bcbcd1f", "node_type": "1", "metadata": {}, "hash": "e9a926607fe6b2330d94400e79782aab4425bf325a490ea750f1b9242cf4400e", "class_name": "RelatedNodeInfo"}, {"node_id": "04e05e96-e8ac-42d2-83b9-ab87641b140b", "node_type": "1", "metadata": {}, "hash": "c19bc036004060dc18b77187e7429294648285617fdafb8bd234103c9f80f6d8", "class_name": "RelatedNodeInfo"}, {"node_id": "0233cb17-25cb-4233-b6d7-c129b1ad5395", "node_type": "1", "metadata": {}, "hash": "a7fef0ee01a3c081cd1d52841d5472222c60aaf210ab3d757d4cc56c2cde74ca", "class_name": "RelatedNodeInfo"}, {"node_id": "b1d24b2b-7c49-4cdf-b6be-a01329053673", "node_type": "1", "metadata": {}, "hash": "5eb42b2f35fda77c7d622af0cba109069cd3b41e4850b3ebd084b066ec8e2935", "class_name": "RelatedNodeInfo"}, {"node_id": "35198889-328a-4933-a4e4-47bef39cf559", "node_type": "1", "metadata": {}, "hash": "ee64ce79076c9a4f31081e51a7d531cbd8fba759e1679146a66aff3cafaea37e", "class_name": "RelatedNodeInfo"}]}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "text": "[78] is another\nmethod that handles recurring concepts by re\ufb01ning the\nconcept pool to avoid redundancy.\n5.3 Adjusting existing models for regional drift\nAn alternative to retraining an entire model is to develop\na model that adaptively learns from the changing data.\nSuch models have the ability to partially update themselves\nwhen the underlying data distribution changes, as shown\nin Fig. 15. This approach is arguably more ef\ufb01cient than\nretraining when the drift only occurs in local regions. Many\nmethods in this category are based on the decision tree\nalgorithm because trees have the ability to examine and\nadapt to each sub-region separately.\nIn a foundational work [79], an online decision tree\nalgorithm, called VeryFastDecision Tree classi\ufb01er (VFDT)\nwas proposed, which is especially tailored for high speed\ndata streams. It uses Hoeffding bound to limit the num-\nber of instances required for node splitting. This method\nhas become very popular because of its several distinct\nadvantages: 1) it only needs to process each instance once\nand does not store instances in memory or disk; 2) thetree itself only consumes a small amount of space and\ndoes not grow with the number of instances it processes\nunless there is new information in the data; 3) the cost of\ntree maintenance is very low. An extended version, called\nCVFDT [80], was later proposed to handle concept drift. In\nCVFDT, a sliding window is maintained to hold the latest\ndata. An alternative sub-tree is trained based on the window\nand its performance is monitored. If the alternative sub-\ntree outperforms its original counterpart, it will be used for\nfuture prediction and the original obsolete sub-tree will be\npruned. VFDTc [81] is another attempt to make improve-\nments to VFDT with several enhancements: the ability to\nhandle numerical attributes; the application of naive Bayes\nclassi\ufb01ers in tree leaves and the ability to detect and adapt to\nconcept drift. Two node-level drift detection methods were\nproposed based on monitoring differences between a node\nand its sub-nodes. The \ufb01rst method uses classi\ufb01cation error\nrate and the second directly checks distribution difference.\nWhen a drift is detected on a node, the node becomes a leaf\nand its descending sub-tree is removed.", "start_char_idx": 4003, "end_char_idx": 6262, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f904eeb7-5f38-4ded-9b6e-82f4d2986316": {"__data__": {"id_": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b038c328-0caa-4be1-99bd-e9e4bceb30b5", "node_type": "1", "metadata": {}, "hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "8dccb543-77f3-46f3-a5c5-44072861b5d7", "node_type": "1", "metadata": {}, "hash": "3e2e7554c31324315e942f2098cd07af5914ab8983609c4d88854b402cd20dae", "class_name": "RelatedNodeInfo"}, {"node_id": "29195ba9-e065-431a-8dd8-a8e519cad023", "node_type": "1", "metadata": {}, "hash": "99b00c7babeb942fd31a9e3b15a3673537ccaec7add4d5256c981a61c3f7415b", "class_name": "RelatedNodeInfo"}, {"node_id": "a22e57da-699a-4823-94ea-c3bb70232920", "node_type": "1", "metadata": {}, "hash": "8a4e4ee19462831bbe75a09906e744a12c59350409722abcdcc211ea113d3e25", "class_name": "RelatedNodeInfo"}, {"node_id": "6ac06141-9f97-4548-ad07-3650a62157bc", "node_type": "1", "metadata": {}, "hash": "33546d9722994b5010cb9f31c320b4a9053204b01ddcca6d0c9db341e70eeb6f", "class_name": "RelatedNodeInfo"}, {"node_id": "a48e7990-1575-4b80-8df3-6e725e4c6f17", "node_type": "1", "metadata": {}, "hash": "c7735e28fc125bcb8c26e2946419dd872395ce9eac1917140e7c525c91e9a90b", "class_name": "RelatedNodeInfo"}]}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "text": "Later work [82],\n[83] further extended VFDTc using an adaptive leaf strategy\nthat chooses the best classi\ufb01er from three options: majority\nvoting, Naive Bayes and Weighted Naive Bayes.\nDespite the success of VFDT, recent studies [84], [85]\nhave shown that its foundation, the Hoeffding bound, may\nnot be appropriate for the node splitting calculation because\nthe variables it computes, the information gain, are not\nindependent. A new online decision tree model [86] was\ndeveloped based on an alternative impurity measure. The\npaper shows that this measure also re\ufb02ects concept drift\nand can be used as a replacement measure in CVFDT. In the\nsame spirit, another decision tree algorithm (IADEM-3) [87]\naims to rectify the use of Hoeffding bound by computing\nthe sum of independent random variables, called relative\nfrequencies . The error rate of sub-trees are monitored to\ndetect drift and are used for tree pruning.\n6 E VALUATION , DATASETS AND BENCHMARKS\nSection 6.1 discusses the evaluation systems used for learn-\ning algorithms handling concept drift. Section 6.2 introduces\nsynthetic datasets, which used to simulate speci\ufb01c and\ncontrollable types of concept drift. Section 6.3 describes real-\nworld datasets, which used to test the overall performance\nin a real-life scenario.\n6.1 Evaluation Systems\nThe evaluation systems is an important part for learning\nalgorithms. Some evaluation methodologies used in learn-\ning under concept drift have been mentioned in [8]. We\nenrich this previous research by reviewing the evaluation\nsystems from three aspects: 1) validation methodology, 2)\nevaluation metrics, and 3) statistical signi\ufb01cance, and each\nevaluation is followed by its computation equation and\nusage introduction.\nValidation methodology refers to the procedure for a\nlearning algorithm to determine which data instances are\nused as the training set and which are used as the testing\nset. There are three procedures peculiar to the evaluation\nfor learning algorithms capable of handling concept drift:\n\n12\n1)holdout , 2)prequential , and 3) controlled permutation .", "start_char_idx": 6263, "end_char_idx": 8341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b038c328-0caa-4be1-99bd-e9e4bceb30b5": {"__data__": {"id_": "b038c328-0caa-4be1-99bd-e9e4bceb30b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c62c6e18-cf27-4921-8752-3833e7f12467", "node_type": "1", "metadata": {}, "hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7fbbb742-7b71-454d-a50c-9eeb048ea353", "node_type": "1", "metadata": {}, "hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "class_name": "RelatedNodeInfo"}]}, "hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "text": "In the\nscenario of a dataset involving concept drift, holdout should\nfollow the rule: when testing a learning algorithm at time\nt, the holdout set represents exactly the same concept at\nthat timet. Unfortunately, it is only applied on synthetic\ndatasets with prede\ufb01ned concept drift times. Prequential is\na popular evaluation scheme used in streaming data.", "start_char_idx": 8342, "end_char_idx": 8698, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19": {"__data__": {"id_": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4cf9f21e-0c30-4c8f-b0bf-521eba867bba", "node_type": "1", "metadata": {}, "hash": "0d4008dc5c31837d03bed2894766d385002834f8f1664769317bf6831a9dee2d", "class_name": "RelatedNodeInfo"}, {"node_id": "5af83030-6aad-4126-a9ef-b0bc77aa540f", "node_type": "1", "metadata": {}, "hash": "94b1ff59d8cfc963c120cee133510c47174cecaef49ef61d2b6801de7abab89f", "class_name": "RelatedNodeInfo"}, {"node_id": "407b390a-e65c-4c34-8f94-c244910b8997", "node_type": "1", "metadata": {}, "hash": "2dca47d10b577fc5e12ce6dbc2f7d9a4ef6eec2e4eeb91dddc8102edabd79546", "class_name": "RelatedNodeInfo"}]}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "text": "Prequential is\na popular evaluation scheme used in streaming data. Each\ndata instance is \ufb01rst used to test the learning algorithm, and\nthen to train the learning algorithm. This scheme has the\nadvantage that there is no need to know the drift time of\nconcepts, and it makes maximum use of the available data.\nThe prequential error is computed based on an accumulated\nsum of a loss function between the prediction and observed\nlabel:S=\u2211n\nt=1f(\u02c6yt,yt). There are three prequential error\nrate estimates: a landmark window (interleaved-test-then-\ntrain), a sliding window, and a forgetting mechanism [88].\nControlled permutation [89] runs multiple test datasets in\nwhich the data order has been permutated in a controlled\nway to preserve the local distribution, which means that\ndata instances that were originally close to one another in\ntime need to remain close after a permutation. Controlled\npermutation reduces the risk that their prequential evalua-\ntion may produce biased results for the \ufb01xed order of data\nin a sequence.\nEvaluation metrics for datasets involving concept drift\ncould be selected from traditional accuracy measures, such\nas precision/recall in retrieval tasks, mean absolute scaled\nerror in regression, or root mean square error in recom-\nmender systems.", "start_char_idx": 0, "end_char_idx": 1275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c09e34d-5c80-4675-ba51-9da9b2de6e68": {"__data__": {"id_": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "f55f0f60-ffb4-4a71-9221-4c60f592eb60", "node_type": "1", "metadata": {}, "hash": "b090f405157b33bd61e2b3eac786fbfdbf7c968d60f8cc3905395d471417a4c7", "class_name": "RelatedNodeInfo"}, {"node_id": "bc9bc022-2a29-4cf5-9fd8-e1d050157557", "node_type": "1", "metadata": {}, "hash": "a23ae669f593dabe9afa9b61cf4ff9e5feeee7efc618bc5e359b93a16518c84a", "class_name": "RelatedNodeInfo"}, {"node_id": "aa0ff2e3-a3c3-4127-b732-e218bac3e714", "node_type": "1", "metadata": {}, "hash": "2425c5f94b2f67e811b9b57409dab51b3025739a2d4db6d32fe33a5262bcf901", "class_name": "RelatedNodeInfo"}, {"node_id": "ee21da57-786a-4b89-968d-023f598575c6", "node_type": "1", "metadata": {}, "hash": "75c4bd33b05babc5c7de6ccc6d3855dad726e3ecfd09b159f39b73e116bc559f", "class_name": "RelatedNodeInfo"}, {"node_id": "b43f1625-a2ce-4867-a68b-f9def6e36d22", "node_type": "1", "metadata": {}, "hash": "94f10d8109e3e5d65f202b401c9f727317d54dc4640cad98b25914a391f6a801", "class_name": "RelatedNodeInfo"}]}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "text": "In addition to that, the following measures\nshould be examined: 1) RAM-hours [90] for the computation\ncost of the mining process; 2) Kappa statistic \u03ba=p\u2212pran\n1\u2212pran[91] for classi\ufb01cation taking into account class imbalance,\nwherepis the accuracy of the classi\ufb01er under consideration\n(reference classi\ufb01er) and pranis the accuracy of the random\nclassi\ufb01er; 3) Kappa-Temporal statistic \u03baper=p\u2212pper\n1\u2212pper[92] for the\nclassi\ufb01cation of streaming data with temporal dependence,\nwherepperis the accuracy of the persistent classi\ufb01er (a clas-\nsi\ufb01er that predicts the same label as previously observed);\n4)Combined Kappa statistic \u03ba+=\u221a\nmax(0,\u03ba) max(0,\u03baper)\n[92], which combines the \u03baand\u03baperby taking the geometric\naverage; 5) Prequential AUC [93]; and 6)theAveraged Nor-\nmalized Area Under theCurve (NAUC) values forPreci-\nsion-Range curve and Recall-Range curve [53], for the clas-\nsi\ufb01cation of streaming data involving concept drift. Apart\nfrom evaluating the performance of learning algorithms, the\naccuracy of the concept drift detection method/algorithm\ncan be accessed according to the following criteria: 1) true\ndetection rate , 2)false detection rate , 3)miss detection rate , and\n4) delay of detection [22].\nStatistical signi\ufb01cance is used to compare learning algo-\nrithms on achieved error rates. The three most frequently\nused statistical tests for comparing two learning algorithms\n[94], [95] are: 1) McNemar test [96]: denote the number\nof data instances misclassi\ufb01ed by the \ufb01rst classi\ufb01er and\ncorrectly classi\ufb01ed by the second classi\ufb01er by a, and denote\nbin the opposite way. The McNemar statistic is computed\nasM=sign(a\u2212b)\u00d7(a\u2212b)2/(a+b)to test whether\ntwo classi\ufb01ers perform equally well.", "start_char_idx": 1276, "end_char_idx": 2968, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5867d46-56e8-4485-9627-2dbf45487f95": {"__data__": {"id_": "e5867d46-56e8-4485-9627-2dbf45487f95", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ba76b114-43a2-4950-919f-e3e3dbcbf86a", "node_type": "1", "metadata": {}, "hash": "4998138dc72e5f433ad539d032f527658aa2e3cc98caf6a52dc4efeccd84969c", "class_name": "RelatedNodeInfo"}, {"node_id": "87ec7b4b-2729-4e67-805c-62426258728b", "node_type": "1", "metadata": {}, "hash": "a7fde4bbaf8b08d5bf369d47cd80bfd4e7be2e7cff1cb45d6bcda57b60f7ffd9", "class_name": "RelatedNodeInfo"}, {"node_id": "edecd0b1-9066-4f98-976c-a0c894554643", "node_type": "1", "metadata": {}, "hash": "fff8ee168d4d9ebaf61acfce9b62d1cdea9c186fac5f71109ec6e8ec955e688a", "class_name": "RelatedNodeInfo"}, {"node_id": "a2094ca8-69c8-4279-a4b8-54d7016a3a67", "node_type": "1", "metadata": {}, "hash": "f6312d7979379ada688985137586fe13afb3d7abf6bdb436c669204590b634f4", "class_name": "RelatedNodeInfo"}, {"node_id": "206b0777-a998-4b40-b119-d4cbdb335f45", "node_type": "1", "metadata": {}, "hash": "6db029f78a8ead2ed988154986ebebf937d9a85c90c6e592e097e7227b5a424d", "class_name": "RelatedNodeInfo"}, {"node_id": "dc7a2dc9-58ee-478d-b945-e409383334f6", "node_type": "1", "metadata": {}, "hash": "ace761c221c96444987af040d57073d07a11178146f961624cd75d7542fd124c", "class_name": "RelatedNodeInfo"}]}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "text": "The test follows the\n\u03c72distribution; 2) Sign test: for Ndata instances, denote\nthe number of data instances misclassi\ufb01ed by the \ufb01rstclassi\ufb01er and correctly classi\ufb01ed by the second classi\ufb01er by\nBand the number of ties by T. Conduct one-sided sign\ntest by computing p=\u2211N\u2212T\nk=B(N\u2212T\nk)0.5k\u00d70.5N\u2212T\u2212k. If\npless than a signi\ufb01cant level, then the second classi\ufb01er\nis better than the \ufb01rst classi\ufb01er. and 3) Wilcoxon\u2019s sign-\nrank test: For testing two classi\ufb01ers on Ndatasets, let xi,1\nandxi,2(i= 1,...,N )denote the measurements. The\nnumber of ties is TandNr=N\u2212T. The test statistic\nW=\u2211Nr\ni=1(sign(xi,1\u2212xi,2)\u00d7Ri)whereRiis the rank\nordered by|xi,1\u2212xi,2|increasingly. Two classi\ufb01ers perform\nequally is rejected if |W|> W critical,Nr(two-sided), where\nWcritical,Nrcan be acquired from the statistical table. All\nthree tests are non-parametric. The Nemenyi test [97] is\nused to compare more than two learning algorithms. It is\nan appropriate test for comparing all learning algorithms\nwith multiple datasets, based on the average rank of algo-\nrithms over all datasets. The Nemenyi test consists of the\nfollowing: two classi\ufb01ers are performing differently if the\ncorresponding average ranks differ by at least the critical\ndifference CD =q\u03b1\u221a\nk(k+ 1)/6N, wherekis the number\nof learners, Nis the number of datasets, and critical values\nq\u03b1are based on the Studentized range statistic divided by\u221a\n2. Other tests can be used to compare learning algorithms\nwith a control algorithm [97].\n6.2 Synthetic datasets\nWe list several widely used synthetic datasets for evaluat-\ning the performance of learning algorithms dealing with\nconcept drift.", "start_char_idx": 2969, "end_char_idx": 4592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "117be70c-93da-4351-b313-0892a4bff3a0": {"__data__": {"id_": "117be70c-93da-4351-b313-0892a4bff3a0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "node_type": "1", "metadata": {}, "hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d752f7e7-ab5f-41a9-a2a8-1f39f8338397", "node_type": "1", "metadata": {}, "hash": "5b45258da08f98f85afc640332f6074873026c1f29f9f9dec28b784ebbc980df", "class_name": "RelatedNodeInfo"}, {"node_id": "2cc40d4c-d959-41be-b8a7-d569a48eccae", "node_type": "1", "metadata": {}, "hash": "20e382513e0295f363cdb640a79b7ac0a41013bdd51ecbe19e9b4e3289dc076c", "class_name": "RelatedNodeInfo"}, {"node_id": "5bbe7983-9422-4e77-ace4-24d65ac0f7f3", "node_type": "1", "metadata": {}, "hash": "8eb4814f5eca3980e6d1987339f86ce8af0e1179e33fd5ae7690f0323be11de0", "class_name": "RelatedNodeInfo"}, {"node_id": "425efa9e-e1c3-49e7-a1e6-4c777f2a5177", "node_type": "1", "metadata": {}, "hash": "3bcd7b3a82f5e1eb0affcd4b8a5f92f6015b57f01b458aec85c79a0e700670e6", "class_name": "RelatedNodeInfo"}, {"node_id": "3f8c1072-d305-4515-bbef-30cf55df4a4b", "node_type": "1", "metadata": {}, "hash": "4b912061bb6336b81fd4231a0b6d438b7dc2cef2e54b9241fc1881dd1b507778", "class_name": "RelatedNodeInfo"}]}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "text": "Since data instances are generated by prede-\n\ufb01ned rules and speci\ufb01c parameters, a synthetic dataset is\na good option for evaluating the performance of learning\nalgorithms in different concept drift scenarios. The dataset\nprovider, the number of instances (#Insts.), the number\nof attributes (#Attrs.), the number of classes (#Cls.), types\nof drift (Types), sources of drift (Sources), and used by\nreferences, are listed in TABLE 3.\n6.3 Real-world datasets\nIn this section, we collect several publicly available real-\nworld datasets, including real-world datasets with syn-\nthetic drifts. The dataset provider, the number of instances\n(#Insts.), the number of attributes (#Attrs.), the number\nof classes (#Cls.), and used by references, are shown in\nTABLE 4.\nMost ofthese datasets contain temporalconcept drift\nspan ning over differentperiod range -e.g. daily (Sen sor\n[108]), seasonally (Elec tricity [109] )oryearly (Airlines\n[104], NOAA weather [67]).Othersinclude geograph ical\n(Cover type [106] )orcategorical(Poker -Hand [106] )concept\ndrift. Certain date sets, mainly text based, aretargetingat\nspeci\ufb01c drift types, such assudden drift (Email data [110] ),\ngradu raldrift (Spam assassincorpus [111] ),recurrent drift\n(Usenet [112]) ornovel class (KDDCup\u201999 [106] ,ECUE drift\ndataset 2[113] )\nThese datasets provide realisticbench mark forevaluat-\ningdiffernent concept drift handling meth ods. There are,\nhow ever, two limitations ofreal world data sets: 1)the\ngroud truth ofprecise start and end time ofdrifts isun-\nknown; 2)some real datasets may include mixed drift types.\nThese limitations make itdif\ufb01cult toevaluatemeth ods for\n\n13\nTABLE 3\nList of synthetic datasets for performance evaluation of learning under concept drift.\nDataset #Insts. #Attrs. #Cls.", "start_char_idx": 4593, "end_char_idx": 6360, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f2c2788-719b-4bf1-aed2-830e6802d26f": {"__data__": {"id_": "2f2c2788-719b-4bf1-aed2-830e6802d26f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "247470a6-5590-464a-b095-84bc71d0fa16", "node_type": "1", "metadata": {}, "hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "class_name": "RelatedNodeInfo"}]}, "hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "text": "Dataset #Insts. #Attrs. #Cls.", "start_char_idx": 0, "end_char_idx": 29, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bcb4d2c6-ed5d-4162-a657-83d89cdb751a": {"__data__": {"id_": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f2c2788-719b-4bf1-aed2-830e6802d26f", "node_type": "1", "metadata": {}, "hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "cbc35541-45d1-4477-894b-f311df75f13f", "node_type": "1", "metadata": {}, "hash": "2e446f98b2533164c98e4991285be8c6ecc9ccc1ac335c9374e2883df4851b5a", "class_name": "RelatedNodeInfo"}, {"node_id": "ffc320d3-fe79-4ea5-a290-024fac04f277", "node_type": "1", "metadata": {}, "hash": "bbaff95f32c5c95fe45557113df4adca45d80d9efc6aa16c14b8793513e2f2d3", "class_name": "RelatedNodeInfo"}, {"node_id": "e835e945-3306-40be-a0ac-552f586827a2", "node_type": "1", "metadata": {}, "hash": "28b91e96138145b4998274ef27af6cdc08b2614fa587737d5413239746bacdb0", "class_name": "RelatedNodeInfo"}, {"node_id": "735c94b6-9f76-4236-8a0d-eab7a60e6b80", "node_type": "1", "metadata": {}, "hash": "59d84ddb54f232aa1f6d7470b47017bfcc4dbbddc8867d6e996ef14010563274", "class_name": "RelatedNodeInfo"}, {"node_id": "72d079c8-6923-40f8-9643-69172452565a", "node_type": "1", "metadata": {}, "hash": "dbaea4fd261932b72e5bb9c4b77dc20361a97374769d11c3fad8ddfe602c97ec", "class_name": "RelatedNodeInfo"}]}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "text": "Dataset #Insts. #Attrs. #Cls. Types Sources Used by references\n1 STAGGER [1] Custom 3 2 Sudden II [20], [23], [27], [30], [41], [57], [65], [72], [87], [98],\n[99]\n2 SEA [100] Custom 3 2 Sudden II [2], [5], [13], [20], [27], [32], [35], [51], [57], [58],\n[63], [65], [67], [73], [76], [99]\u2013[102]\n3 Rotating hyperplane [80],\n[103]Custom 10 2 Gradual; Incremental II [2], [13], [21], [27], [30], [32], [35], [36], [41], [51],\n[58], [59], [63], [71]\u2013[73], [78], [80], [83], [87], [102]\n4 Random RBF [104] Custom Custom Custom Sudden; Gradual; Incre-\nmentalIII [13], [20], [21], [26], [27], [29], [30], [35], [41], [50],\n[63], [67], [72]\u2013[74], [87], [102], [105]\n5 Random Tree [79], [104] Custom Custom Custom Sudden; Reoccurring II [27], [35], [73], [82], [84]\u2013[87]\n6 LED [106] Custom 24 10 Sudden II [23], [27], [35], [63], [73], [81], [82], [87], [99], [102]\n7 Waveform [106] Custom 40 3 Sudden II [18], [27], [78], [81]\u2013[83], [87], [102]\n8 Sine [20] Custom 2 2 Sudden II [20], [21], [26], [29], [72], [107]\n9 Circle [20] Custom 2 2 Gradual III [20], [21], [26], [30], [41], [72], [101], [107]\n10 Rotating chessboard [67] Custom 2 2 Gradual II [13], [45], [51], [67], [107]\nunderstand ing the drift, and could introduce bias when\ncomparingdifferentmachine learn ingmod els.", "start_char_idx": 0, "end_char_idx": 1271, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92b7cae9-3fb6-43bb-af73-506d0da831d5": {"__data__": {"id_": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "da01ed74-b897-40c6-bea0-66e9c80aea3c", "node_type": "1", "metadata": {}, "hash": "9dafc5459e9c6ec0ec6e1f416c946600415570435fb00be35cdc08c2163112e5", "class_name": "RelatedNodeInfo"}, {"node_id": "6cbbc6fd-36c3-4b93-b59e-6b6f8bc3d58e", "node_type": "1", "metadata": {}, "hash": "51f49907a57fd7f07422eef37829a1ba14e7033d922f46e32a49e8dce46faa16", "class_name": "RelatedNodeInfo"}, {"node_id": "25311c55-52c7-4155-9b16-de76102aaf16", "node_type": "1", "metadata": {}, "hash": "35dcd9f3a8d9f6d0c758514af87c027d31fd6825fabd045e04f299a31b13b66f", "class_name": "RelatedNodeInfo"}, {"node_id": "9ab662f4-3dd7-4565-ae83-d8e6f4592435", "node_type": "1", "metadata": {}, "hash": "76a47f8d30eebff46ea7b1bd482d9a6930f6cc348cc9e50469aa926b65283d42", "class_name": "RelatedNodeInfo"}, {"node_id": "d2aa3467-c436-4697-8f27-716fc2ac1fe8", "node_type": "1", "metadata": {}, "hash": "621b16a6c91e25c1b0028ef78f230836dc8ace40e4e5606deff967e47804bb97", "class_name": "RelatedNodeInfo"}]}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "text": "7 T HECONCEPT DRIFT PROBLEM IN OTHER RE-\nSEARCH AREAS\nWe have observed that handling the concept drift problem is\nnot a standalone research subject but has a large number of\nindirect usage scenarios. In this section, we adopt this new\nperspective to review recent developments in other research\nareas that bene\ufb01t from handling the concept drift problem.\n7.1 Class imbalance\nClass imbalance is a common problem in stream data min-\ning in addition to concept drift. Research effort has been\nmade to develop effective learning algorithms to tackle\nboth problems at same time. [117] presented two ensemble\nmethods for learning under concept drift with imbalanced\nclass. The \ufb01rst method, Learn++.CDS, is extended from\nLearn++.NSE and combined with the Synthetic Minority\nclass Oversampling Technique (SMOTE). The second al-\ngorithm, Learn++.NIE, improves on the previous method\nby employing a different penalty constraint to prevent\nprediction accuracy bias and replacing SMOTE with bag-\nging to avoid oversampling. ESOS-ELM [118] is another\nensemble method which uses Online Sequential Extreme\nLearning Machine (OS-ELM) as a basic classi\ufb01er to improve\nperformance with class imbalanced data. A concept drift\ndetector is integrated to retrain the classi\ufb01er when drift\noccurs. The author then developed another algorithm [119],\nwhich is able to tackle multi-class imbalanced data with\nconcept drift. [120] proposed two learning algorithms OOB\nand UOB, which build an ensemble model to overcome\nthe class imbalance in real time through resampling and\ntime-decayed metrics. [121] developed an ensemble method\nwhich handles concept drift and class imbalance with addi-\ntional true label data limitation.\n7.2 Big data mining\nData mining in big data environments faces similar chal-\nlenges to stream data mining [122]: data is generated at\na fast rate (Velocity) and distribution uncertainty always\nexists in the data, which means that handling concept drift is\nalso crucial in big data applications. Additionally, scalabilityis an important consideration because in big data environ-\nments, a data stream may come in very large and potentially\nunpredictable quantities (Volume) and cannot be processed\nin a single computer server.", "start_char_idx": 1272, "end_char_idx": 3492, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2aab929-70c5-48cf-9267-5dcc12abf5ea": {"__data__": {"id_": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06fa7e6d-3d91-4114-8381-86e8e6a7b958", "node_type": "1", "metadata": {}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "72385497-f400-4454-998f-417428afd2e7", "node_type": "1", "metadata": {}, "hash": "3c7bd3782a49dabeca1cd22185b5b65af2fdabe9c5fd51cd31a35b479b2d932e", "class_name": "RelatedNodeInfo"}, {"node_id": "e5c69e11-f394-4208-afa1-7bed909c5773", "node_type": "1", "metadata": {}, "hash": "4be3aa8c27ed7a842da335bc6b9940ce676dbafb00796d81525d590da00da956", "class_name": "RelatedNodeInfo"}, {"node_id": "2365d4aa-87b8-426e-a4b3-3532842e4297", "node_type": "1", "metadata": {}, "hash": "77777757e9630437d596d7641e98221622498353cb6b3b72a91d103e2564abdb", "class_name": "RelatedNodeInfo"}, {"node_id": "199ed4b9-3388-4c28-a636-27765c600418", "node_type": "1", "metadata": {}, "hash": "3fca96003faf625f1d4202ce538a3a2d2f0449bdc9d26d802cc29198e09ac35c", "class_name": "RelatedNodeInfo"}, {"node_id": "7b893e1a-29ad-44b5-825a-07813c5345c8", "node_type": "1", "metadata": {}, "hash": "453140c6405aa226c2b4f5248ddd1ee72c9dffebffb4b9e2c8fa94aa44667b1f", "class_name": "RelatedNodeInfo"}]}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "text": "An attempt to handle concept\ndrift in a distributed computing environment was made\nby [123] in which an Online Map-Reduce Drift Detection\nMethod (OMR-DDM) was proposed, using the combined\nonline error rate of the parallel classi\ufb01cation algorithms to\nidentify the changes in a big data stream. A recent study\n[124] proposed another scalable stream data mining algo-\nrithm, called Micro-Cluster Nearest Neighbor (MC-NN),\nbased on nearest neighbor classi\ufb01er. This method extends\nthe original Micro-Cluster algorithm [125] to adapt to con-\ncept drift by monitoring classi\ufb01cation error. This micro-\ncluster algorithm was further extended to a parallel version\nusing the map-reduce technique in [126] and applied to\nsolve the label-drift classi\ufb01cation problem where class labels\nare not known in advance [127].\n7.3 Active learning and semi-supervised learning\nActive learning is based on the assumption that there is a\nlarge amount of unlabeled data but only a fraction of them\ncan be labeled by human effort. This is a common situation\nin stream data applications, which are often also subject to\nthe concept drift problem. [115] presented a general frame-\nwork that combines active learning and concept drift adap-\ntation. It \ufb01rst compares different instance-sampling strate-\ngies for labeling to guarantee that the labeling cost will be\nunder budget, and that distribution bias will be prevented.\nA drift adaptation mechanism is then adopted, based on the\nDDM detection method [20]. In [128], the authors proposed\na new active learning algorithm that primarily aims to\navoid bias in the sampling process of choosing instances\nfor labeling. They also introduced a memory loss factor to\nthe model, enabling it to adapt to concept drift.\nSemi-supervised learning concerns how to use limited\ntrue label data more ef\ufb01ciently by leveraging unsupervised\ntechniques. In this scenario, additional design effort is re-\nquired to handle concept drift. For example, in [129], the au-\nthors applied a Gaussian Mixture model to both labeled and\nunlabeled data, and assigned labels, which has the ability\nto adapt to gradual drift.", "start_char_idx": 3493, "end_char_idx": 5606, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06fa7e6d-3d91-4114-8381-86e8e6a7b958": {"__data__": {"id_": "06fa7e6d-3d91-4114-8381-86e8e6a7b958", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4858438f-5190-4c93-b4b7-21805f58f8ec", "node_type": "1", "metadata": {}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "class_name": "RelatedNodeInfo"}]}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "text": "Similarly, [99], [130], [131] are all\ncluster-based semi-supervised ensemble methods that aim\nto adapt to drift with limited true label data. The latter\n\n14\nTABLE 4\nList of real-world datasets for performance evaluation of learning under concept drift.\nDataset #Insts. #Attrs. #Cls.", "start_char_idx": 5607, "end_char_idx": 5889, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a": {"__data__": {"id_": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06fa7e6d-3d91-4114-8381-86e8e6a7b958", "node_type": "1", "metadata": {}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0313355c-dc51-46e5-9bdc-70efa141106f", "node_type": "1", "metadata": {}, "hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "129112fb-017d-4ebb-b230-dead7e443d9b", "node_type": "1", "metadata": {}, "hash": "9aca7ce67e75022b0b8881fb6ced75340f764c6afd5324e24efb6f9ae59e7059", "class_name": "RelatedNodeInfo"}, {"node_id": "44eba23e-468f-4311-a472-fbbb4d9a9c76", "node_type": "1", "metadata": {}, "hash": "251221ea580ad2069c735798431c5fb8b9d9f0b260bbbeb93f3bbec6ba1b16d4", "class_name": "RelatedNodeInfo"}, {"node_id": "208af18e-bb01-480f-8d6a-129091d1904e", "node_type": "1", "metadata": {}, "hash": "0ba595825feb1605b3bff77b352c4b6d2aadb983de37bb02279da30940a0dcd5", "class_name": "RelatedNodeInfo"}, {"node_id": "f11ceec4-f1c0-4ef1-9ae2-3d9419a99707", "node_type": "1", "metadata": {}, "hash": "fce514b7b491500adeea051b40623deb02ffae84aa169a8e6e8b00e6677424f5", "class_name": "RelatedNodeInfo"}, {"node_id": "e27e8184-7438-424d-aa2b-ce1c97362a36", "node_type": "1", "metadata": {}, "hash": "e34d2b88f7ba24e20d98398ec255f246f7decc0961b2975d146d26afaaa2b958", "class_name": "RelatedNodeInfo"}]}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "text": "Dataset #Insts. #Attrs. #Cls. Used by references\n1 Airlines [104] 539384 7 2 [4], [5], [35], [73], [102], [114], [115]\n2 Covertype [106] 581012 54 7 [13], [23], [35], [36], [59], [63], [73], [81]\u2013[83], [86], [87], [102], [115]\n3 Electricity [109] 45312 8 2 [4], [5], [13], [20], [23], [26], [29], [31], [35], [36], [57], [63], [72], [73], [78], [86], [87], [101],\n[102], [115]\n4 Poker-Hand [106] 1025010 10 10 [13], [32], [63], [73], [102]\n5 NOAA weather [67] 18159 8 2 [2], [4], [13], [67], [68], [78], [105]\n6 Sensor [108] 2219803 5 54 [36], [78]\n7 KDDCup\u201999 [106] 494021 41 23 [35], [47], [65], [69], [74], [84], [86], [99], [102]\n8 Usenet1 [112] 1500 99 2 [23], [51], [87]\n9 Usenet2 [112] 1500 99 2 [23], [87]\n10 Email data [110] 1500 913 2 [45], [76], [77]\n11 Spam data [110] 9324 499 2 [4], [5], [23], [36], [102], [116]\n12 Spam assassin corpus [111] 9324 39916 2 [4], [35], [76], [87]\n13 ECUE drift dataset 1 [113] 10983 287034 2 [2], [3]\n14 ECUE drift dataset 2 [113] 11905 166047 2 [2], [3]\nare also able to recognize recurring concepts.", "start_char_idx": 5860, "end_char_idx": 6906, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9657ce5e-dab7-41de-9a91-d7cd3df09f6b": {"__data__": {"id_": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0b267f96-67b2-4711-84c1-8b626d9fdef7", "node_type": "1", "metadata": {}, "hash": "6da1b24b10a244926f2fd90abdbefd2489f1f12cd1bc7106679e4a330cbe9a76", "class_name": "RelatedNodeInfo"}, {"node_id": "817e21c4-9867-407c-aadc-16dc3348ab47", "node_type": "1", "metadata": {}, "hash": "225dcae15445bcde92f3a3b957efbc25f143f8713fe99034c760ab0bcf60c7dc", "class_name": "RelatedNodeInfo"}, {"node_id": "5640b407-5048-485d-ad5c-b32b8e6fdfdd", "node_type": "1", "metadata": {}, "hash": "1fcf7be1705ee06a00eb3d34055b3da79f219f242f35614805bc254ab595ff21", "class_name": "RelatedNodeInfo"}, {"node_id": "c9fcd441-872c-4410-b07c-b90524b3a2dd", "node_type": "1", "metadata": {}, "hash": "9fcecb65a1ce76458850d861e7851f748c1402f66c83d9be957aab143dc7ff9c", "class_name": "RelatedNodeInfo"}]}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "text": "In [132], the\nauthor adopted a new perspective on the true label scarcity\nproblem by considering the true labeled data and unlabeled\ndata as two independent non-stationary data generating\nprocesses. Concept drift is handled asynchronously on these\ntwo streams. The SAND algorithm [133], [134] is another\nsemi-supervised adaptive method which detects concept\ndrift on cluster boundaries. There are also studies [90, 91]\nthat focus on adapting to concept drift in circumstances\nwhere true label data is completely unavailable.\n7.4 Decision Rules\nData-driven decision support systems need to be able to\nadapt to concept drift in order to make accurate decisions\nand decision rules is the main technique for this purpose.\n[102] proposed a decision rule induction algorithm, Very\nFast Decision Rules (VFDR), to effectively process stream\ndata. An extended version, Adaptive VFDR, was developed\nto handle concept drift by dynamically adding and remov-\ning decision rules according to their error rate which is mon-\nitored by drift detector. Instead of inducing rules from de-\ncision trees, [135] proposed another decision rule algorithm\nbased on PRISM [136] to directly induce rules from data.\nThis algorithm is also able to adapt to drift by monitoring\nthe performance of each rule on a sliding window of latest\ndata. [137] also developed an adaptive decision making\nalgorithm based on fuzzy rules. The algorithm includes a\nrule pruning procedure, which removes obsolete rules to\nadapt to changes, and a rule recal procedure to adapt to\nrecurring concepts.\nThis section by no means attempts to cover every re-\nsearch \ufb01eld in which concept drift handling is used. There\nare many other studies that also consider concept drift as a\ndual problem.", "start_char_idx": 0, "end_char_idx": 1738, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "758fa473-e100-43ca-8417-d815b23374f7": {"__data__": {"id_": "758fa473-e100-43ca-8417-d815b23374f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0b3ccc8b-de50-4899-a501-f923556fec33", "node_type": "1", "metadata": {}, "hash": "e2814e45a1c227470a5acd77e181a126a59ee2fa4b068c4f171be8372ed009e6", "class_name": "RelatedNodeInfo"}, {"node_id": "0af3c8ad-78cb-436c-83be-970f9d5a004c", "node_type": "1", "metadata": {}, "hash": "1004769447ecc4d5282d725ffb96d7f17392964f285c9173b3ac31fe08136adf", "class_name": "RelatedNodeInfo"}, {"node_id": "fbf6e4c1-fa5c-4332-a47c-b01ace58645e", "node_type": "1", "metadata": {}, "hash": "b045dfcd1344f4bb05d42e0ab49c18490c7a58b51048805250f96b64e645d2d8", "class_name": "RelatedNodeInfo"}, {"node_id": "dc87eb70-010f-4abe-9ad3-a78fd253a970", "node_type": "1", "metadata": {}, "hash": "5e5b4f6bf7b5e46adaf48834597e3415b0efbec5da308cd58d561246a82db0ba", "class_name": "RelatedNodeInfo"}, {"node_id": "dd5d52a9-7eab-4e29-bcad-57c285abc859", "node_type": "1", "metadata": {}, "hash": "e62df570ecb792c6d730c196b3e3d7d60cc15eb9c1d787f4a869f17ffb6634ac", "class_name": "RelatedNodeInfo"}]}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "text": "There\nare many other studies that also consider concept drift as a\ndual problem. For example, [138] is a dimension reduction\nalgorithm to separate classes based on least squares linear\ndiscovery analysis (LSLDA), which is then extended to\nadapt to drift; [139] considered the concept drift problem in\ntime series and developed an online explicit drift detection\nmethod by monitoring time series features; and [140] devel-\noped an incremental scaffolding classi\ufb01cation algorithm for\ncomplex tasks that also involve concept drift.8 C ONCLUSIONS :FINDINGS AND FUTURE DIREC -\nTIONS\nWe summarize the recent developments of concept drift\nresearch, and the following important \ufb01ndings can be ex-\ntracted:\n1) Error rate-based and data distribution-based drift de-\ntection methods are still playing a dominant role in con-\ncept drift detection research, while multiple hypothesis\ntest methods emerge in recent years;\n2) Regarding to concept drift understanding, all drift\ndetection methods can answer \u201cWhen\u201d, but very\nfew methods have the ability to answer \u201cHow\u201d and\n\u201cWhere\u201d;\n3) Adaptive models and ensemble techniques have played\nan increasingly important role in recent concept drift\nadaptation developments. In contrast, research of re-\ntraining models with explicit drift detection has slowed;\n4) Most existingdrift detection and adap tation algorithms\nassume theground true labelisavail able afterclassi\ufb01-\ncation/prediction, orextreme veri\ufb01cation latency. Very\nfew research has been conducted toaddress unsuper-\nvised orsemi -supervised drift detection and adap ta-\ntion.\n5) Some computational intelligence techniques, such as\nfuzzy logic, competence model, have been applied in\nconcept drift;\n6) There is no comprehensive analysis on real-world data\nstreams from the concept drift aspect, such as the drift\noccurrence time, the severity of drift, and the drift\nregions.\n7) An increasing number of other research areas have\nrecognized the importance of handling concept drift,\nespecially in big data community.\nBased on these \ufb01ndings, we suggest four new directions\nin future concept drift research:\n1) Drift detection research should not only focus on identi-\nfying drift occurrence time accurately, but also need to\nprovide the information of drift severity and regions.\nThese information could be utilized for better concept\ndrift adaptation.", "start_char_idx": 1658, "end_char_idx": 3999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41490dba-fd83-4981-bf70-93354e0968c8": {"__data__": {"id_": "41490dba-fd83-4981-bf70-93354e0968c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ba20e39e-9045-44b1-92a5-227727a1d13c", "node_type": "1", "metadata": {}, "hash": "ed2f03e5eb7a466394b4f0b08c50d359bc83290477c2928b0fcaef11743bc32f", "class_name": "RelatedNodeInfo"}, {"node_id": "7b400ad3-2b49-4973-b694-a974560f2600", "node_type": "1", "metadata": {}, "hash": "e9ecb6e74144f88445ef518bc249eb13321d1d33c3dddf8f202fe7a01eee325e", "class_name": "RelatedNodeInfo"}, {"node_id": "a9ac7ced-4418-4f35-a842-d8206fe1c6ea", "node_type": "1", "metadata": {}, "hash": "32783b887ebdd1662c650fb27ce9bc0116fc3fd6467d43502d71ce49002a6693", "class_name": "RelatedNodeInfo"}, {"node_id": "a9db3c62-3c95-43de-8ab8-19810e173553", "node_type": "1", "metadata": {}, "hash": "c3a806bedfa066b007044e35797e186cfcf63ffeb1a88a135ebbd1ffb24df801", "class_name": "RelatedNodeInfo"}, {"node_id": "884d37b3-abae-49d1-a9c7-b172847b38ad", "node_type": "1", "metadata": {}, "hash": "a0d6fd573f16484c8f7012a7cbda115d8881fa6d99f34ac7424b35597a3c6008", "class_name": "RelatedNodeInfo"}]}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "text": "These information could be utilized for better concept\ndrift adaptation.\n2) Inthereal-world scenario, thecost toacquire true label\ncould beexpensive, that is,unsupervised orsemi -su-\n\n15\npervised drift detection and adap tation could still be\npromis inginthefuture.\n3) A framework for selecting real-world data streams\nshould be established for evaluating learning algo-\nrithms handling concept drift.\n4) Research on effectively integrating concept drift han-\ndling techniques with machine learning methodologies\nfor data-driven applications is highly desired.\nWe hope this paper can provide researchers with state-\nof-the-art knowledge on concept drift research develop-\nments and provide guidelines about how to apply concept\ndrift techniques in different domains to support users in\nvarious prediction and decision activities.\nACKNOWLEDGMENTS\nThe work presented in this paper was supported by the\nAustralian Research Council (ARC) under discovery grant\nDP150101645. We signi\ufb01cantly thank Yiliao Song for her\nhelp in preparation of datasets and applications shown in\nSections 6.\nREFERENCES\n[1] G. Widmer and M. Kubat, \u201cLearning in the presence of concept\ndrift and hidden contexts,\u201d Machine Learning , vol. 23, no. 1, pp.\n69\u2013101, 1996.\n[2] N. Lu, J. Lu, G. Zhang, and R. Lopez de Mantaras, \u201cA concept\ndrift-tolerant case-base editing technique,\u201d Artif. Intell. , vol. 230,\npp. 108\u2013133, 2016.\n[3] N. Lu, G. Zhang, and J. Lu, \u201cConcept drift detection via compe-\ntence models,\u201d Artif. Intell. , vol. 209, pp. 11\u201328, 2014.\n[4] A. Liu, Y. Song, G. Zhang, and J. Lu, \u201cRegional concept drift\ndetection and density synchronized drift adaptation,\u201d in Proc.\n26th Int. Joint Conf. Arti\ufb01cial Intelligence . Accept, 2017, Conference\nProceedings.\n[5] A. Liu, G. Zhang, and J. Lu, \u201cFuzzy time windowing for gradual\nconcept drift adaptation,\u201d in Proc. 26th IEEE Int. Conf. Fuzzy\nSystems .", "start_char_idx": 3927, "end_char_idx": 5801, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "033b8ec2-c69f-4895-a660-e867b5e8e89d": {"__data__": {"id_": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657", "node_type": "1", "metadata": {}, "hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "899153c1-ceec-4038-9f80-55cfb59b264d", "node_type": "1", "metadata": {}, "hash": "85dee91fc80e4df9c71dc3c38736e6352df3c9e53ea7170ef76b1597072bb28e", "class_name": "RelatedNodeInfo"}, {"node_id": "750c52dd-d02e-4e0c-9ea4-2c5f7679478c", "node_type": "1", "metadata": {}, "hash": "5f3956c962a754640fc9803410f84abffa28ff4d1f72ec9422641af53864e4e7", "class_name": "RelatedNodeInfo"}, {"node_id": "05166966-4323-4b7c-8874-191148d608ee", "node_type": "1", "metadata": {}, "hash": "560dce65adf14b6c1a31c5e788e27c3731e90f484b7a878146f3defb15de7065", "class_name": "RelatedNodeInfo"}, {"node_id": "b4fc80a9-d649-461c-9f9c-bb4b12463205", "node_type": "1", "metadata": {}, "hash": "f896350414e78d27d41b92457c08e7e8560670a8a9897d4887cd5e2a0412610c", "class_name": "RelatedNodeInfo"}, {"node_id": "cc11d256-8d20-4c3a-9096-18abfea92a5d", "node_type": "1", "metadata": {}, "hash": "a3d0537c10bb8c3c909ef7b71843110d1682f7e7f9a9b4a1b2bcf8dd1b5a158f", "class_name": "RelatedNodeInfo"}, {"node_id": "95a6c95b-283e-4458-8199-dea6eac77548", "node_type": "1", "metadata": {}, "hash": "a4fc8853bde239048db4a908ef8709cac9aea14c57147000b753b0077866068b", "class_name": "RelatedNodeInfo"}]}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "text": "26th IEEE Int. Conf. Fuzzy\nSystems . IEEE, 2017, Conference Proceedings.\n[6] B. Krawczyk, L. L. Minku, J. Gama, J. Stefanowski, and M. Wo-\nniak, \u201cEnsemble learning for data stream analysis: A survey,\u201d\nInformation Fusion , vol. 37, pp. 132\u2013156, 2017.\n[7] S. Ram \u00b4\u0131rez-Gallego, B. Krawczyk, S. Garc \u00b4\u0131a, M. Wo \u00b4zniak, and\nF. Herrera, \u201cA survey on data preprocessing for data stream\nmining: Current status and future directions,\u201d Neurocomputing ,\nvol. 239, pp. 39\u201357, 2017.\n[8] J. Gama, I. \u02c7Zliobait \u02d9e, A. Bifet, M. Pechenizkiy, and A. Bouchachia,\n\u201cA survey on concept drift adaptation,\u201d ACM Comput. Surv. ,\nvol. 46, no. 4, pp. 1\u201337, 2014.\n[9] G. Ditzler, M. Roveri, C. Alippi, and R. Polikar, \u201cLearning in\nnonstationary environments: a survey,\u201d IEEE Comput. Intell. Mag. ,\nvol. 10, no. 4, pp. 12\u201325, 2015.\n[10] J. Gama, \u201cA survey on learning from data streams: current and\nfuture trends,\u201d Progress in Arti\ufb01cial Intelligence , vol. 1, no. 1, pp.\n45\u201355, 2012.\n[11] J. A. Silva, E. R. Faria, R. C. Barros, E. R. Hruschka, A. C. P . L.\nF. d. Carvalho, and J. Gama, \u201cData stream clustering: A survey,\u201d\nACM Comput. Surv. , vol. 46, no. 1, pp. 1\u201331, 2013.\n[12] J. C. Schlimmer and R. H. Granger Jr, \u201cIncremental learning from\nnoisy data,\u201d Machine learning , vol.", "start_char_idx": 5765, "end_char_idx": 7019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "102fb15d-28ac-47fe-ba84-f2a1fdcf1657": {"__data__": {"id_": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5add9bd3-150d-43c9-a561-6111b47ce200", "node_type": "1", "metadata": {}, "hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "fc107fb0-2378-4e0a-b49e-636936208833", "node_type": "1", "metadata": {}, "hash": "a8dcae3807e434b990ce1de496f00c1ca7208caa9048315458d014a1a98d2a4b", "class_name": "RelatedNodeInfo"}, {"node_id": "6030918b-685f-4118-80e3-cad90bb083c8", "node_type": "1", "metadata": {}, "hash": "3807ef97a9fdccc9e63c5c318ec78921fadab311c06e35fefa3ba22f7d59f906", "class_name": "RelatedNodeInfo"}]}, "hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "text": "1, no. 3, pp. 317\u2013354, 1986.\n[13] V . Losing, B. Hammer, and H. Wersing, \u201cKnn classi\ufb01er with self\nadjusting memory for heterogeneous concept drift,\u201d in Proc. 16th\nInt. Conf. Data Mining , 2016, Conference Proceedings, pp. 291\u2013\n300.\n[14] I. \u02c7Zliobait \u02d9e and J. Hollm \u00b4en, \u201cOptimizing regression models for\ndata streams with missing values,\u201d Machine Learning , vol. 99,\nno. 1, pp. 47\u201373, 2014.\n[15] S. Amos, \u201cWhen training and test sets are different: characteriz-\ning learning transfer,\u201d Dataset Shift in Machine Learning , pp. 3\u201328,\n2009.", "start_char_idx": 7020, "end_char_idx": 7558, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71018116-7d3f-4c49-98b6-e8b322aff129": {"__data__": {"id_": "71018116-7d3f-4c49-98b6-e8b322aff129", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3ce6a3a7-6b2a-47e7-8ff5-8b6b96763c03", "node_type": "1", "metadata": {}, "hash": "ee3f2bc7fd2a85d4a1a324f1a012d51ba0eeb395f598154bceeaef2592863f8e", "class_name": "RelatedNodeInfo"}, {"node_id": "df01db1e-4bf9-41ab-8d34-726c6e4dc2d2", "node_type": "1", "metadata": {}, "hash": "d5c140e5f5af70855ffbcee09eff540bca0c3823764e1fd54da2ce97e8438733", "class_name": "RelatedNodeInfo"}, {"node_id": "f1b1ada7-0833-4708-bff3-8a0f38e233bd", "node_type": "1", "metadata": {}, "hash": "0efca29a46781769def3f06e62904f096294d21ccb1a59b7d579af17688fbfe9", "class_name": "RelatedNodeInfo"}, {"node_id": "8e0c7ae6-f406-4716-9e4f-49a92443af3e", "node_type": "1", "metadata": {}, "hash": "f79dcb52adaa34fba4cbd411dc590851833d85819b335c9e1b63d4d04cabbd9b", "class_name": "RelatedNodeInfo"}, {"node_id": "bb90ec1a-01a5-43b3-a8d9-aa0a96b8b911", "node_type": "1", "metadata": {}, "hash": "62973d039ce55059dd6606544d0d32f3420200d9c7ed3dcd352429fbe60d3c8a", "class_name": "RelatedNodeInfo"}]}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "text": "3\u201328,\n2009.[16] J. G. Moreno-Torres, T. Raeder, R. Alaiz-Rodr \u00b4\u0131guez, N. V . Chawla,\nand F. Herrera, \u201cA unifying view on dataset shift in classi\ufb01ca-\ntion,\u201d Pattern Recognit. , vol. 45, no. 1, pp. 521\u2013530, 2012.\n[17] M. Basseville and I. V . Nikiforov, Detection of abrupt changes: theory\nand application . Prentice Hall Englewood Cliffs, 1993, vol. 104.\n[18] A. Dries and U. R \u00a8uckert, \u201cAdaptive concept drift detection,\u201d\nStatistical Analysis and Data Mining: The ASA Data Science Journal ,\nvol. 2, no. 5\u20136, pp. 311\u2013327, 2009.\n[19] C. Alippi and M. Roveri, \u201cJust-in-time adaptive classi\ufb01ers part i:\nDetecting nonstationary changes,\u201d IEEE Trans. Neural Networks ,\nvol. 19, no. 7, pp. 1145\u20131153, 2008.\n[20] J. Gama, P . Medas, G. Castillo, and P . Rodrigues, \u201cLearning with\ndrift detection,\u201d in Proc. 17th Brazilian Symp. Arti\ufb01cial Intelligence ,\nser. Lecture Notes in Computer Science. Springer, 2004, Book\nSection, pp. 286\u2013295.\n[21] L. Bu, C. Alippi, and D. Zhao, \u201cA pdf-free change detection\ntest based on density difference estimation,\u201d IEEE Trans. Neural\nNetworks Learn. Syst. , vol. PP , no. 99, pp. 1\u201311, 2016.\n[22] T. Dasu, S. Krishnan, S. Venkatasubramanian, and K. Yi, \u201cAn\ninformation-theoretic approach to detecting changes in multi-\ndimensional data streams,\u201d in Proc. Symp. the Interface of Statistics,\nComputing Science, and Applications . Citeseer, 2006, Conference\nProceedings, pp. 1\u201324.", "start_char_idx": 0, "end_char_idx": 1401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e0dba53-a54f-4c83-9669-5f0ef70c9877": {"__data__": {"id_": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "61324c0c-0e6e-43f0-aacd-04ac8c28a1c8", "node_type": "1", "metadata": {}, "hash": "ce69126a251312e57db20372aec093343dfdd1cffc4c5a5ea524dfb4218c3f9a", "class_name": "RelatedNodeInfo"}, {"node_id": "1aa02aa8-f4a1-4d40-bb41-fb192347f2d4", "node_type": "1", "metadata": {}, "hash": "91539fe3448674a241fb5d7387b4282c0b04bcbd0e0cff1a8415dbcb7913a1aa", "class_name": "RelatedNodeInfo"}, {"node_id": "aaa3d8b2-e7d3-44eb-b6df-60253c59d6fe", "node_type": "1", "metadata": {}, "hash": "51b3a4278a1b6ab1c80012672c2ef21bd58a29ab8dcf8256daa4dd29463d9b41", "class_name": "RelatedNodeInfo"}, {"node_id": "5ae8c366-22e6-479b-bace-c2691f626c34", "node_type": "1", "metadata": {}, "hash": "1e06e88465c9228692e2f9b7d56eac1b1b480177933b380ad0af6ba386440c1c", "class_name": "RelatedNodeInfo"}, {"node_id": "e32f504e-f8f4-406a-80c8-b57fce425a9e", "node_type": "1", "metadata": {}, "hash": "6715b991841ad808f0bc135f89c1b9b5e1662c31d77a78700421dd21394156d7", "class_name": "RelatedNodeInfo"}]}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "text": "Citeseer, 2006, Conference\nProceedings, pp. 1\u201324.\n[23] I. Frias-Blanco, J. d. Campo-Avila, G. Ramos-Jimenez, R. Morales-\nBueno, A. Ortiz-Diaz, and Y. Caballero-Mota, \u201cOnline and\nnon-parametric drift detection methods based on hoeffding\u2019s\nbounds,\u201d IEEE Trans. Knowl. Data Eng. , vol. 27, no. 3, pp. 810\u2013\n823, 2015.\n[24] M. Yamada, A. Kimura, F. Naya, and H. Sawada, \u201cChange-point\ndetection with feature selection in high-dimensional time-series\ndata,\u201d in Proc. 23rd Int. Joint Conf. Arti\ufb01cial Intelligence , 2013,\nConference Proceedings, pp. 1827\u20131833.\n[25] J. Gama and G. Castillo, \u201cLearning with local drift detection,\u201d\ninProc. 2nd Int. Conf. Advanced Data Mining and Applications .\nSpringer, 2006, Conference Proceedings, pp. 42\u201355.\n[26] M. Baena-Garc \u00b4\u0131a, J. del Campo- \u00b4Avila, R. Fidalgo, A. Bifet,\nR. Gavald `a, and R. Morales-Bueno, \u201cEarly drift detection\nmethod,\u201d in Proc. 4th Int. Workshop Knowledge Discovery from Data\nStreams , 2006, Conference Paper.\n[27] S. Xu and J. Wang, \u201cDynamic extreme learning machine for\ndata stream classi\ufb01cation,\u201d Neurocomputing , vol. 238, pp. 433\u2013449,\n2017.\n[28] G.-B. Huang, Q.-Y. Zhu, and C.-K. Siew, \u201cExtreme learning ma-\nchine: Theory and applications,\u201d Neurocomputing , vol. 70, no. 1\u20133,\npp. 489\u2013501, 2006.\n[29] G. J. Ross, N. M. Adams, D. K. Tasoulis, and D. J. Hand, \u201cExpo-\nnentially weighted moving average charts for detecting concept\ndrift,\u201d Pattern Recognit. Lett. , vol.", "start_char_idx": 1352, "end_char_idx": 2774, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746": {"__data__": {"id_": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "f2af8361-1340-4f58-88a3-fbc8574c4573", "node_type": "1", "metadata": {}, "hash": "6e2c1ea274715942bab3d80586ea31b6fd3fda947275af6a7ac6caa1d549ce52", "class_name": "RelatedNodeInfo"}, {"node_id": "88b5c8eb-19dd-4394-aec7-47845f494aff", "node_type": "1", "metadata": {}, "hash": "5a0ab0e4e9afacf9bd5f9c10f46af32c548d583b70067ea08b504ebba6f61dfa", "class_name": "RelatedNodeInfo"}, {"node_id": "ecafdc72-a12e-40c9-9424-9a3a7ab764f6", "node_type": "1", "metadata": {}, "hash": "4dda3c2bd4d9e0d8891fea183cfe9fc418989f11461328c92b603c3791e7b92a", "class_name": "RelatedNodeInfo"}, {"node_id": "e64a049a-bfbe-4967-996e-b3db7d363465", "node_type": "1", "metadata": {}, "hash": "7d24f4538193becf193a87bf1d33ca7e789c68df32ed88466733c506c8def182", "class_name": "RelatedNodeInfo"}, {"node_id": "0da46959-7b8e-4ab4-9599-117826b1390f", "node_type": "1", "metadata": {}, "hash": "78b23feb340d8d6386e1fee1b13ef461f34c8fa6a43af4e0e024436749694280", "class_name": "RelatedNodeInfo"}]}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "text": "Lett. , vol. 33, no. 2, pp. 191\u2013198, 2012.\n[30] K. Nishida and K. Yamauchi, \u201cDetecting concept drift using\nstatistical testing,\u201d in Proc. 10th Int. Conf. Discovery Science , V . Cor-\nruble, M. Takeda, and E. Suzuki, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2007, Conference Proceedings, pp.\n264\u2013269.\n[31] A. Bifet and R. Gavald `a, \u201cLearning from time-changing data with\nadaptive windowing,\u201d in Proc. 2007 SIAM Int. Conf. Data Mining ,\nvol. 7. SIAM, 2007, Conference Proceedings, p. 2007.\n[32] \u2014\u2014, \u201cAdaptive learning from evolving data streams,\u201d in Proc.\n8th Int. Symp. Intelligent Data Analysis . Springer, 2009, Confer-\nence Proceedings, pp. 249\u2013260.\n[33] A. Bifet, G. Holmes, B. Pfahringer, and R. Gavald `a, \u201cImproving\nadaptive bagging methods for evolving data streams,\u201d in Proc.\n1st Asian Conf. Machine Learning , ser. Lecture Notes in Computer\nScience, Z.-H. Zhou and T. Washio, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2009, Book Section, pp. 23\u201337.\n[34] A. Bifet, G. Holmes, B. Pfahringer, R. Kirkby, and R. Gavald `a,\n\u201cNew ensemble methods for evolving data streams,\u201d in Proc. 15th\nACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining .\nACM, 2009, Conference Proceedings, pp. 139\u2013148.\n[35] H. M. Gomes, A. Bifet, J. Read, J. P . Barddal, F. Enembreck,\nB. Pfharinger, G. Holmes, and T. Abdessalem, \u201cAdaptive random\nforests for evolving data stream classi\ufb01cation,\u201d Machine Learning ,\n2017.", "start_char_idx": 2762, "end_char_idx": 4188, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b": {"__data__": {"id_": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "node_type": "1", "metadata": {}, "hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "89512852-1182-4b47-bc53-3122513474f5", "node_type": "1", "metadata": {}, "hash": "0f5b08fdad11455042c91c0323e028c98f5b68e45b08dbeea758ba69076518e1", "class_name": "RelatedNodeInfo"}, {"node_id": "d6850b1b-5167-44af-bcb7-198006c02e6d", "node_type": "1", "metadata": {}, "hash": "c8e71a6220631764acdf7a37134190cfe62e635f0f8d0538eae68a9a108898c6", "class_name": "RelatedNodeInfo"}, {"node_id": "152fb1e3-0732-4faa-95a2-47960a2e00d2", "node_type": "1", "metadata": {}, "hash": "b90a1c0ffa16a6f115481e545746932a983534ebcdd5c819a3893d8eb8e5d854", "class_name": "RelatedNodeInfo"}, {"node_id": "0bd414c6-e7bc-4793-9c72-f411cd5d8649", "node_type": "1", "metadata": {}, "hash": "20d2926e053b292ff24f86e5033712f95b2939b448c9576a6cafd25edb19f436", "class_name": "RelatedNodeInfo"}, {"node_id": "bc0e4385-952f-4591-8849-e56b51033304", "node_type": "1", "metadata": {}, "hash": "09aad9e14554a581a5d768fecd48ccdb47cf19c1dd54e8c5a7a0a2a6393334f2", "class_name": "RelatedNodeInfo"}]}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "text": "[36] J. Shao, Z. Ahmadi, and S. Kramer, \u201cPrototype-based learning\non concept-drifting data streams,\u201d in Proc. 20th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . 2623609: ACM,\n2014, Conference Proceedings, pp. 412\u2013421.\n\n16\n[37] D. Kifer, S. Ben-David, and J. Gehrke, \u201cDetecting change in data\nstreams,\u201d in Proc. 30th Int. Conf. Very Large Databases , vol. 30.\nVLDB Endowment, 2004, Conference Proceedings, pp. 180\u2013191.\n[38] X. Song, M. Wu, C. Jermaine, and S. Ranka, \u201cStatistical change de-\ntection for multi-dimensional data,\u201d in Proc. 13th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . San Jose, Cali-\nfornia, USA: ACM, 2007, Conference Paper, pp. 667\u2013676.\n[39] A. A. Qahtan, B. Alharbi, S. Wang, and X. Zhang, \u201cA pca-based\nchange detection framework for multidimensional data streams,\u201d\ninProc. 21th Int. Conf. on Knowledge Discovery and Data Mining .\nACM, 2015, Conference Proceedings, pp. 935\u2013944.\n[40] F. Gu, G. Zhang, J. Lu, and C.-T. Lin, \u201cConcept drift detection\nbased on equal density estimation,\u201d in Proc. 2016 Int. Joint Conf.\nNeural Networks . IEEE, 2016, Conference Proceedings, pp. 24\u201330.\n[41] L. Bu, D. Zhao, and C. Alippi, \u201cAn incremental change detection\ntest based on density difference estimation,\u201d IEEE Transactions on\nSystems, Man, and Cybernetics: Systems , vol. PP , no. 99, pp. 1\u201313,\n2017.\n[42] C. Alippi and M. Roveri, \u201cJust-in-time adaptive classi\ufb01ers part\nii: designing the classi\ufb01er,\u201d IEEE Trans. Neural Networks , vol. 19,\nno. 12, pp. 2053\u20132064, 2008.", "start_char_idx": 4189, "end_char_idx": 5696, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f4f51f1-20fa-4a33-bd94-092bc7dedce4": {"__data__": {"id_": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4ce469bf-d6aa-49a7-a1c3-ee0d8589b35f", "node_type": "1", "metadata": {}, "hash": "505a35cdd9368afef58e44e30ed776071dbc884454d577ad300b3db99bbbe367", "class_name": "RelatedNodeInfo"}, {"node_id": "bdcb4de0-34d7-409a-adad-9997fd007040", "node_type": "1", "metadata": {}, "hash": "339c39487d48e8ce6d4b5d619a976474f56f6c4f53aafe59dd0ed13ac46fc1ce", "class_name": "RelatedNodeInfo"}, {"node_id": "90104d1a-d890-4c41-9600-4621fb626cc2", "node_type": "1", "metadata": {}, "hash": "bc1b9bc9f287f5c200f1e862bbcab00eec80d11c30d97e1af13fb17d651b606a", "class_name": "RelatedNodeInfo"}, {"node_id": "ea8d1ba2-f3a5-4175-b7ac-4e88f26d4731", "node_type": "1", "metadata": {}, "hash": "7960167552c37dff6e1a9b045177c8ae7ea97931a1bc4f235238620b8f4e975d", "class_name": "RelatedNodeInfo"}, {"node_id": "e95c7d35-f964-409e-a8f4-90dd8ce5e869", "node_type": "1", "metadata": {}, "hash": "ab677a9a8a520d2f13a4b78a4be84c3e975ad3e75b025439e019c196f1652440", "class_name": "RelatedNodeInfo"}]}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "text": "19,\nno. 12, pp. 2053\u20132064, 2008.\n[43] C. Alippi, G. Boracchi, and M. Roveri, \u201cA just-in-time adaptive\nclassi\ufb01cation system based on the intersection of con\ufb01dence\nintervals rule,\u201d Neural Networks , vol. 24, no. 8, pp. 791\u2013800, 2011.\n[44] \u2014\u2014, \u201cJust-in-time ensemble of classi\ufb01ers,\u201d in Proc. 2012 Int. Joint\nConf. Neural Networks . IEEE, 2012, Conference Proceedings, pp.\n1\u20138.\n[45] \u2014\u2014, \u201cJust-in-time classi\ufb01ers for recurrent concepts,\u201d IEEE Trans.\nNeural Networks Learn. Syst. , vol. 24, no. 4, pp. 620\u2013634, 2013.\n[46] W. Heng and Z. Abraham, \u201cConcept drift detection for streaming\ndata,\u201d in Proc. 2015 Int. Joint Conf. Neural Networks , 2015, Confer-\nence Proceedings, pp. 1\u20139.\n[47] Y. Zhang, G. Chu, P . Li, X. Hu, and X. Wu, \u201cThree-layer concept\ndrifting detection in text data streams,\u201d Neurocomputing , vol. 260,\npp. 393\u2013403, 2017.\n[48] L. Du, Q. Song, L. Zhu, and X. Zhu, \u201cA selective detector en-\nsemble for concept drift detection,\u201d The Computer Journal , vol. 58,\nno. 3, pp. 457\u2013471, 2014.\n[49] B. I. F. Maciel, S. G. T. C. Santos, and R. S. M. Barros, \u201cA\nlightweight concept drift detection ensemble,\u201d in Proc. 27th IEEE\nInt. Conf. on Tools with Arti\ufb01cial Intelligence . IEEE, 2015, pp. 1061\u2013\n1068.\n[50] C. Alippi, G. Boracchi, and M. Roveri, \u201cHierarchical change-\ndetection tests,\u201d IEEE Trans. Neural Networks Learn. Syst. , vol. 28,\nno. 2, pp.", "start_char_idx": 0, "end_char_idx": 1352, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a839281-2706-409a-888e-df6840026818": {"__data__": {"id_": "4a839281-2706-409a-888e-df6840026818", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "8e43140e-f019-489e-8e9e-93446a8b9739", "node_type": "1", "metadata": {}, "hash": "8d4061bd09fb81957100322a5f8921b63237b35c68d3b0b19d15eea7395f0b49", "class_name": "RelatedNodeInfo"}, {"node_id": "8aee8d52-9f0b-4c4a-bd0c-8f96848febb9", "node_type": "1", "metadata": {}, "hash": "89023de0b908cfcab08cabbcd92de52ef8bf1bd81e2867d6c3c65627dc6d1d38", "class_name": "RelatedNodeInfo"}, {"node_id": "e069f4af-c478-4f39-9ec6-b643cb5c7f7e", "node_type": "1", "metadata": {}, "hash": "25bc611fc5a04ea21a556d69019050a53394242de0b870951d5b068047032aff", "class_name": "RelatedNodeInfo"}, {"node_id": "96d9305d-a936-4f84-8f8e-78529b1619ce", "node_type": "1", "metadata": {}, "hash": "08b92a25862dc9bc177dc56602c2ff66ceb814239ef99a312a90f70ff30d97f5", "class_name": "RelatedNodeInfo"}, {"node_id": "976557b7-0f70-4ec1-8ead-18a3346cbdc6", "node_type": "1", "metadata": {}, "hash": "1c4a4f188cc560f287abe104f670d43822262210899ef092f060b91ab7036327", "class_name": "RelatedNodeInfo"}, {"node_id": "eb6b1a07-d4c8-4e59-9312-e25971548c88", "node_type": "1", "metadata": {}, "hash": "5d11ee8c645347814780f33689ac430e34eb186effe11942f44247ac974786c1", "class_name": "RelatedNodeInfo"}]}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "text": "Syst. , vol. 28,\nno. 2, pp. 246\u2013258, 2017.\n[51] S. Yu and Z. Abraham, \u201cConcept drift detection with hierarchical\nhypothesis testing,\u201d in Proc. 2017 SIAM Int. Conf. Data Mining .\nSIAM, 2017, Conference Proceedings, pp. 768\u2013776.\n[52] H. Raza, G. Prasad, and Y. Li, \u201cEwma model based shift-detection\nmethods for detecting covariate shifts in non-stationary environ-\nments,\u201d Pattern Recognit. , vol. 48, no. 3, pp. 659\u2013669, 2015.\n[53] S. Yu, X. Wang, and J. C. Principe, \u201cRequest-and-reverify: Hi-\nerarchical hypothesis testing for concept drift detection with\nexpensive labels,\u201d arXiv preprint arXiv:1806.10131 , 2018.\n[54] P . M. Gonc \u00b8alves Jr, S. G. de Carvalho Santos, R. S. Barros, and\nD. C. Vieira, \u201cA comparative study on concept drift detectors,\u201d\nExpert Systems with Applications , vol. 41, no. 18, pp. 8144\u20138156,\n2014.\n[55] F. Pukelsheim, \u201cThe three sigma rule,\u201d The American Statistician ,\nvol. 48, no. 2, pp. 88\u201391, 1994.\n[56] A. Tsymbal, M. Pechenizkiy, P . Cunningham, and S. Puuronen,\n\u201cDynamic integration of classi\ufb01ers for handling concept drift,\u201d\nInformation Fusion , vol. 9, no. 1, pp. 56\u201368, 2008.\n[57] S. H. Bach and M. Maloof, \u201cPaired learners for concept drift,\u201d\ninProc. 8th Int. Conf. Data Mining , 2008, Conference Proceedings,\npp. 23\u201332.\n[58] D. Liu, Y. Wu, and H. Jiang, \u201cFp-elm: An online sequential learn-\ning algorithm for dealing with concept drift,\u201d Neurocomputing ,\nvol. 207, pp.", "start_char_idx": 1325, "end_char_idx": 2732, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "592f8b4c-f9db-4e89-9887-fa499ba1c34c": {"__data__": {"id_": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "7c5a91d7-1a95-4fbb-99fe-9fa82e352cce", "node_type": "1", "metadata": {}, "hash": "c28235ea9027a5c61e155851b2044208929aa7ba3aa7df9a52f7ae383a233597", "class_name": "RelatedNodeInfo"}, {"node_id": "5bdad8b6-1144-4e70-a437-30d6df914586", "node_type": "1", "metadata": {}, "hash": "93f533181347cdc659bce397160d35011344e2733f81163783694455745a39cd", "class_name": "RelatedNodeInfo"}, {"node_id": "03f75a1d-74f6-49e3-b850-666037ea6aab", "node_type": "1", "metadata": {}, "hash": "67a4113ad6fc19ad65e3285b2fb894a29a0de14214ea3d083acf6e240f81b71c", "class_name": "RelatedNodeInfo"}, {"node_id": "424a2ab5-5827-4ca4-a740-bf377b35ce4a", "node_type": "1", "metadata": {}, "hash": "f651754369fbff21475b2db8f17e0231590b6e42a9b10003e613d584736327d3", "class_name": "RelatedNodeInfo"}, {"node_id": "4e95a2a2-2d94-4f94-8185-9da4062c6e05", "node_type": "1", "metadata": {}, "hash": "0b65a292d06f8bed2d15a4ef9037a2ecfb9cc51ef29f74a685b8d44a19e9a920", "class_name": "RelatedNodeInfo"}]}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "text": "207, pp. 322\u2013334, 2016.\n[59] D. Han, C. Giraud-Carrier, and S. Li, \u201cEf\ufb01cient mining of high-\nspeed uncertain data streams,\u201d Applied Intelligence , vol. 43, no. 4,\npp. 773\u2013785, 2015.\n[60] S. G. Soares and R. Ara \u00b4ujo, \u201cAn adaptive ensemble of on-line\nextreme learning machines with variable forgetting factor for\ndynamic system prediction,\u201d Neurocomputing , vol. 171, pp. 693\u2013\n707, 2016.[61] B. F. J. Manly and D. Mackenzie, \u201cA cumulative sum type of\nmethod for environmental monitoring,\u201d Environmetrics , vol. 11,\nno. 2, pp. 151\u2013166, 2000.\n[62] N. C. Oza and S. Russell, \u201cExperimental comparisons of online\nand batch versions of bagging and boosting,\u201d in Proc. 7th ACM\nSIGKDD Int. Conf. Knowledge Discovery and Data Mining . 502565:\nACM, 2001, Conference Proceedings, pp. 359\u2013364.\n[63] A. Bifet, G. Holmes, and B. Pfahringer, \u201cLeveraging bagging for\nevolving data streams,\u201d in Proc. 2010 Joint European Conf. Machine\nLearning and Knowledge Discovery in Databases . Springer, 2010,\nConference Proceedings, pp. 135\u2013150.\n[64] F. Chu and C. Zaniolo, \u201cFast and light boosting for adaptive\nmining of data streams,\u201d in Proc. 8th Paci\ufb01c-Asia Conf. Knowledge\nDiscovery and Data Mining , H. Dai, R. Srikant, and C. Zhang,\nEds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2004, Book\nSection, pp. 282\u2013292.\n[65] P . Li, X. Wu, X. Hu, and H. Wang, \u201cLearning concept-drifting data\nstreams with random ensemble decision trees,\u201d Neurocomputing ,\nvol. 166, pp. 68\u201383, 2015.", "start_char_idx": 2724, "end_char_idx": 4183, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ad6e96c-a7b2-404a-954c-69f11cae2210": {"__data__": {"id_": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ff46e2e-66c3-447f-a174-7b41b24625aa", "node_type": "1", "metadata": {}, "hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "c86b4d12-84da-4b85-b7e0-895dcb136999", "node_type": "1", "metadata": {}, "hash": "98ce584368753a705085bc02e49f79e86c59b9fdff932b7ceadd92da7bc8783a", "class_name": "RelatedNodeInfo"}, {"node_id": "69e91903-7f52-4044-b0b1-6b432028a2af", "node_type": "1", "metadata": {}, "hash": "2dd43f8412d9d532c4d4e1dbe297eb3decabd5977a261b54d063147746b5da88", "class_name": "RelatedNodeInfo"}, {"node_id": "d6ca450b-3669-4b99-bf18-fed73e9af305", "node_type": "1", "metadata": {}, "hash": "a4e9b7aeca1ea4b993cfc6056c934f205494ca036364201c41021526977a940d", "class_name": "RelatedNodeInfo"}, {"node_id": "f860c5a1-9b8d-4c23-a0b0-e844522a71bb", "node_type": "1", "metadata": {}, "hash": "7003c40f25eb3202db9bb2ffcad46de891f6aed386e79440e335f21a58cdedb7", "class_name": "RelatedNodeInfo"}, {"node_id": "02d00b49-20ca-4877-b8f8-a07ddc45664f", "node_type": "1", "metadata": {}, "hash": "5cda34cf5a76f67cea2835e3e925d548e077e19c93b103f07ca427b60a15d5dd", "class_name": "RelatedNodeInfo"}]}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "text": "166, pp. 68\u201383, 2015.\n[66] J. Z. Kolter and M. A. Maloof, \u201cDynamic weighted majority:\nAn ensemble method for drifting concepts,\u201d Journal of Machine\nLearning Research , 2007.\n[67] R. Elwell and R. Polikar, \u201cIncremental learning of concept drift\nin nonstationary environments,\u201d IEEE Trans. Neural Networks ,\nvol. 22, no. 10, pp. 1517\u201331, 2011.\n[68] X.-C. Yin, K. Huang, and H.-W. Hao, \u201cDe2: Dynamic ensemble of\nensembles for learning nonstationary data,\u201d Neurocomputing , vol.\n165, pp. 14\u201322, 2015.\n[69] P . Zhang, J. Li, P . Wang, B. J. Gao, X. Zhu, and L. Guo, \u201cEnabling\nfast prediction for ensemble models on data streams,\u201d in Proc.\n17th ACM SIGKDD Int. Conf. Knowledge Discovery and Data Min-\ning. San Diego, California, USA: ACM, 2011, Conference Paper,\npp. 177\u2013185.\n[70] Y. Xu, R. Xu, W. Yan, and P . Ardis, \u201cConcept drift learning with\nalternating learners,\u201d in Proc. 2017 Int. Joint Conf. Neural Networks ,\n2017, Conference Proceedings, pp. 2104\u20132111.\n[71] L. Pietruczuk, L. Rutkowski, M. Jaworski, and P . Duda, \u201cA\nmethod for automatic adjustment of ensemble size in stream\ndata mining,\u201d in Proc. 2016 Int. Joint Conf. Neural Networks , 2016,\nConference Proceedings, pp. 9\u201315.\n[72] S.-C. You and H.-T. Lin, \u201cA simple unlearning framework for\nonline learning under concept drifts,\u201d in Proc. 20th Paci\ufb01c-Asia\nConf. Knowledge Discovery and Data Mining . Springer, 2016,\nConference Proceedings, pp. 115\u2013126.", "start_char_idx": 4162, "end_char_idx": 5572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ff46e2e-66c3-447f-a174-7b41b24625aa": {"__data__": {"id_": "7ff46e2e-66c3-447f-a174-7b41b24625aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "node_type": "1", "metadata": {}, "hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4c928c2b-b1c1-40cf-88ad-d66433cc001c", "node_type": "1", "metadata": {}, "hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "class_name": "RelatedNodeInfo"}]}, "hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "text": "Springer, 2016,\nConference Proceedings, pp. 115\u2013126.\n[73] D. Brzezinski and J. Stefanowski, \u201cReacting to different types of\nconcept drift: The accuracy updated ensemble algorithm,\u201d IEEE\nTrans. Neural Networks Learn. Syst. , vol. 25, no. 1, pp. 81\u201394, 2014.\n[74] P . Zhang, X. Zhu, and Y. Shi, \u201cCategorizing and mining concept\ndrifting data streams,\u201d in Proc.", "start_char_idx": 5520, "end_char_idx": 5878, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1eed079-9caa-44ce-9d84-8b1a0103b79b": {"__data__": {"id_": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "93ed0e5a-31d7-4102-a580-11f1245fac0d", "node_type": "1", "metadata": {}, "hash": "3c58f92fd448808554b896fdd619911d13e6da61da1c3e364c3bbaf0eb384cdd", "class_name": "RelatedNodeInfo"}, {"node_id": "ec807fbc-2203-4589-bc82-842cf1acf8f2", "node_type": "1", "metadata": {}, "hash": "393da4dd5ddeec32e0916536b7be1d5e8dbffed0de93a151682c7c73937ec77f", "class_name": "RelatedNodeInfo"}, {"node_id": "9bfa1245-e0a5-42d6-b68d-fde4fc3483fd", "node_type": "1", "metadata": {}, "hash": "b5b72c856eaa9cd75c3d842a1bde2559513a7dd83978df415091f89344a52562", "class_name": "RelatedNodeInfo"}, {"node_id": "8b443132-4cd6-41b6-ba25-2a0f7dd49978", "node_type": "1", "metadata": {}, "hash": "6479e19747b225b5bd2cbfd9e724db88aeee659f15059792eb6f60e59add8be3", "class_name": "RelatedNodeInfo"}, {"node_id": "f0fcbe42-23c4-481c-ac6f-2c6915c9c671", "node_type": "1", "metadata": {}, "hash": "381bfb0ce49cb9e0a07099807797566d5c107c3fa5f42fdf59490fa52aa5d065", "class_name": "RelatedNodeInfo"}]}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "text": "14th ACM SIGKDD Int. Conf.\nKnowledge Discovery and Data Mining . Las Vegas, Nevada, USA:\nACM, 2008, Conference Paper, pp. 812\u2013820.\n[75] Y. Sun, K. Tang, L. L. Minku, S. Wang, and X. Yao, \u201cOnline en-\nsemble learning of data streams with gradually evolved classes,\u201d\nIEEE Trans. Knowl. Data Eng. , vol. 28, no. 6, pp. 1532\u20131545, 2016.\n[76] J. Gama and P . Kosina, \u201cRecurrent concepts in data streams\nclassi\ufb01cation,\u201d Knowledge and Information Systems , vol. 40, no. 3,\npp. 489\u2013507, 2013.\n[77] J. B. Gomes, M. M. Gaber, P . A. Sousa, and E. Menasalvas,\n\u201cMining recurring concepts in a dynamic feature space,\u201d IEEE\nTrans. Neural Networks Learn. Syst. , vol. 25, no. 1, pp. 95\u2013110, 2014.\n[78] Z. Ahmadi and S. Kramer, \u201cModeling recurring concepts in data\nstreams: a graph-based framework,\u201d Knowledge and Information\nSystems , 2017.\n[79] P . Domingos and G. Hulten, \u201cMining high-speed data streams,\u201d\ninProc. 6th ACM SIGKDD Int. Conf. Knowledge Discovery and Data\nMining . ACM, 2000, Conference Proceedings, pp. 71\u201380.\n[80] G. Hulten, L. Spencer, and P . Domingos, \u201cMining time-changing\ndata streams,\u201d in Proc. 7th ACM SIGKDD Int. Conf. Knowledge\nDiscovery and Data Mining . San Francisco, California: ACM, 2001,\nConference Paper, pp. 97\u2013106.\n[81] J. Gama, R. Rocha, and P . Medas, \u201cAccurate decision trees for\nmining high-speed data streams,\u201d in Proc. 9th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . ACM, 2003,\nConference Proceedings, pp. 523\u2013528.", "start_char_idx": 0, "end_char_idx": 1455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "486d82ff-8fd9-4f72-b068-68d25d163ab2": {"__data__": {"id_": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "acfd1bfc-93f7-4912-8d94-c393f029bbc3", "node_type": "1", "metadata": {}, "hash": "a6732db30935a3cd24810b44cf67325702dde5aa29870cd2c2ac35504826fcbe", "class_name": "RelatedNodeInfo"}, {"node_id": "e6108209-4ec6-412f-9697-25c4aecbaf24", "node_type": "1", "metadata": {}, "hash": "e9dc7d771e977f71265c1a3b840d15ca41af2076f80c7f691f3bcfbf401b8c9a", "class_name": "RelatedNodeInfo"}, {"node_id": "86576e66-548e-4fcf-80d0-8eadb593d04e", "node_type": "1", "metadata": {}, "hash": "1c265a8d0108abffb7e01b03323befbf4a6b7c674709d970f5e9bd3587a8eb09", "class_name": "RelatedNodeInfo"}, {"node_id": "db619cbd-5285-45a0-9854-2030f19d26e4", "node_type": "1", "metadata": {}, "hash": "edc755b4f7adc33bf5422ab2a274135cd1b133592037fdfac36f445389a02e1e", "class_name": "RelatedNodeInfo"}, {"node_id": "1444c19c-dfc3-4861-bf0b-2f37be86596b", "node_type": "1", "metadata": {}, "hash": "08c815443b496245bef33a6b4e4bd43162402864b37e7d126fc9f13a0d7eb633", "class_name": "RelatedNodeInfo"}]}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "text": "ACM, 2003,\nConference Proceedings, pp. 523\u2013528.\n[82] H. Yang and S. Fong, \u201cIncrementally optimized decision tree\nfor noisy big data,\u201d in Proc. 1st Int. Workshop Big Data, Streams\nand Heterogeneous Source Mining Algorithms, Systems, Programming\n\n17\nModels and Applications . Beijing, China: ACM, 2012, Conference\nPaper, pp. 36\u201344.\n[83] \u2014\u2014, \u201cCountering the concept-drift problems in big data by\nan incrementally optimized stream mining model,\u201d Journal of\nSystems and Software , vol. 102, pp. 158\u2013166, 2015.\n[84] L. Rutkowski, M. Jaworski, L. Pietruczuk, and P . Duda, \u201cDecision\ntrees for mining data streams based on the gaussian approxima-\ntion,\u201d IEEE Trans. Knowl. Data Eng. , vol. 26, no. 1, pp. 108\u2013119,\n2014.\n[85] L. Rutkowski, L. Pietruczuk, P . Duda, and M. Jaworski, \u201cDecision\ntrees for mining data streams based on the mcdiarmid\u2019s bound,\u201d\nIEEE Trans. Knowl. Data Eng. , vol. 25, no. 6, pp. 1272\u20131279, 2013.\n[86] L. Rutkowski, M. Jaworski, L. Pietruczuk, and P . Duda, \u201cA new\nmethod for data stream mining based on the misclassi\ufb01cation\nerror,\u201d IEEE Trans. Neural Networks Learn. Syst. , vol. 26, no. 5, pp.\n1048\u20131059, 2015.\n[87] I. Fr \u00b4\u0131as-Blanco, J. d. Campo- \u00b4Avila, G. Ramos-Jim \u00b4enez, A. C. P .\nL. F. Carvalho, A. Ortiz-D \u00b4\u0131az, and R. Morales-Bueno, \u201cOnline\nadaptive decision trees based on concentration inequalities,\u201d\nKnowledge-Based Systems , vol. 104, pp. 179\u2013194, 2016.", "start_char_idx": 1408, "end_char_idx": 2792, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e": {"__data__": {"id_": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d81af57c-bde2-44f2-bad9-a4ee6ab6a5e3", "node_type": "1", "metadata": {}, "hash": "a53710475024dbc8a03b84e48d8e473b8db75b643d25d6a3d2c423c7a61d4569", "class_name": "RelatedNodeInfo"}, {"node_id": "8579fa3c-a903-4ee4-8cf1-697b2a19600a", "node_type": "1", "metadata": {}, "hash": "94645181f4465e9795acc02e60c33d60a25b067105c845ecc29e778b7c365f3e", "class_name": "RelatedNodeInfo"}, {"node_id": "7aa1ef7e-349d-4b8f-9bc5-c9231783e76b", "node_type": "1", "metadata": {}, "hash": "66b24ffe0f7062b372922f3d4e539eb2d1b24c0be982361c4b0beaf32c1e95b0", "class_name": "RelatedNodeInfo"}, {"node_id": "fe617144-b71a-41d0-8c0f-4f340a10ef3b", "node_type": "1", "metadata": {}, "hash": "1a54ffd9349cbb0f5f26eaf1e44bae2636d6dff61c0e8f9127011943aac06720", "class_name": "RelatedNodeInfo"}, {"node_id": "1eed3301-c4f0-4c0e-b8b9-56cd39a3f26c", "node_type": "1", "metadata": {}, "hash": "3c48df1ab405caeb1dfbe83c612ead36c724e5a1a26f2b693cbbf2d89344d964", "class_name": "RelatedNodeInfo"}]}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "text": "104, pp. 179\u2013194, 2016.\n[88] J. Gama, R. Sebasti \u02dcao, and P . P . Rodrigues, \u201cOn evaluating stream\nlearning algorithms,\u201d Machine Learning , vol. 90, no. 3, pp. 317\u2013\n346, 2012.\n[89] I. \u02c7Zliobait \u02d9e, \u201cControlled permutations for testing adaptive learn-\ning models,\u201d Knowledge and Information Systems , vol. 39, no. 3, pp.\n565\u2013578, 2014.\n[90] A. Bifet, G. Holmes, B. Pfahringer, and E. Frank, \u201cFast perceptron\ndecision tree learning from evolving data streams,\u201d in Proc. 14th\nPaci\ufb01c-Asia Conf. Knowledge Discovery and Data Mining , M. J. Zaki,\nJ. X. Yu, B. Ravindran, and V . Pudi, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2010, Book Section, pp. 299\u2013310.\n[91] J. Cohen, \u201cA coef\ufb01cient of agreement for nominal scales,\u201d Edu-\ncational and Psychological Measurement , vol. 20, no. 1, pp. 37\u201346,\n1960.\n[92] I. \u02c7Zliobait \u02d9e, A. Bifet, J. Read, B. Pfahringer, and G. Holmes,\n\u201cEvaluation methods and decision theory for classi\ufb01cation of\nstreaming data with temporal dependence,\u201d Machine Learning ,\nvol. 98, no. 3, pp. 455\u2013482, 2015.\n[93] D. Brzezinski and J. Stefanowski, \u201cPrequential auc for classi\ufb01er\nevaluation and drift detection in evolving data streams,\u201d in\nProc. 3rd Int. Workshop New Frontiers in Mining Complex Patterns ,\nA. Appice, M. Ceci, C. Loglisci, G. Manco, E. Masciari, and Z. W.\nRas, Eds. Cham: Springer International Publishing, 2014, Book\nSection, pp. 87\u2013101.", "start_char_idx": 2769, "end_char_idx": 4150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf902940-188d-41da-8edf-5cb7c4fe0db2": {"__data__": {"id_": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "023d29ba-27f7-4516-bd02-a7ed63efbdb0", "node_type": "1", "metadata": {}, "hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "bd879fd3-5892-4fa0-b561-9954b2357839", "node_type": "1", "metadata": {}, "hash": "7cecdca9f6c4dc1f9ef38ab73f98a84c61a11e919e565a2f5060cfd62eb37f34", "class_name": "RelatedNodeInfo"}, {"node_id": "51f100c6-bbb1-4446-893b-2ef926a5aeee", "node_type": "1", "metadata": {}, "hash": "fed44462eac519514f2e5667d0dafbf89043a7353abd85c30303b7725fd5291c", "class_name": "RelatedNodeInfo"}, {"node_id": "33363cf8-3b22-4d3a-9fc4-656af0a2e069", "node_type": "1", "metadata": {}, "hash": "258b5065ced10b163f510ae9051abaef9e7aca82bc7853b3f744f9624ac60d9e", "class_name": "RelatedNodeInfo"}, {"node_id": "afe8d503-ee44-427a-980b-7ebb09312817", "node_type": "1", "metadata": {}, "hash": "f831af489ce23a6dd4bebe61e6ac8aa126a5a7875d7c97ac450061f66b8c09e4", "class_name": "RelatedNodeInfo"}, {"node_id": "bd75d102-fd78-4d0e-9071-100c906c8375", "node_type": "1", "metadata": {}, "hash": "c77240164c55bcc01150c14aab2698394d9dcea909556056d0c731b572daef53", "class_name": "RelatedNodeInfo"}]}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "text": "87\u2013101.\n[94] A. Bifet, G. d. F. Morales, J. Read, G. Holmes, and B. Pfahringer,\n\u201cEf\ufb01cient online evaluation of big data stream classi\ufb01ers,\u201d in\nProc. 21th ACM SIGKDD Int. Conf. Knowledge Discovery and Data\nMining . Sydney, NSW, Australia: ACM, 2015, Conference Paper,\npp. 59\u201368.\n[95] N. Japkowicz and M. Shah, Evaluating learning algorithms: a clas-\nsi\ufb01cation perspective . Cambridge University Press, 2011.\n[96] Q. McNemar, \u201cNote on the sampling error of the difference\nbetween correlated proportions or percentages,\u201d Psychometrika ,\nvol. 12, no. 2, pp. 153\u2013157, 1947.\n[97] J. Dem \u02c7sar, \u201cStatistical comparisons of classi\ufb01ers over multiple\ndata sets,\u201d Journal of Machine Learning Research , vol. 7, no. Jan, pp.\n1\u201330, 2006.\n[98] J. Z. Kolter and M. A. Maloof, \u201cUsing additive expert ensembles\nto cope with concept drift,\u201d in Proc. 22nd Int. Conf. Machine\nLearning . Bonn, Germany: ACM, 2005, Conference Paper, pp.\n449\u2013456.\n[99] X. Wu, P . Li, and X. Hu, \u201cLearning from concept drifting data\nstreams with unlabeled data,\u201d Neurocomputing , vol. 92, pp. 145\u2013\n155, 2012.\n[100] W. N. Street and Y. Kim, \u201cA streaming ensemble algorithm (sea)\nfor large-scale classi\ufb01cation,\u201d in Proc. Seventh ACM Int. Conf.\nKnowledge Discovery and Data Mining . 502568: ACM, 2001,\nConference Proceedings, pp. 377\u2013382.\n[101] R. Fok, A. An, and X. Wang, \u201cMining evolving data streams with\nparticle \ufb01lters,\u201d Comput. Intell. , vol. 33, no. 2, pp. 147\u2013180, 2017.\n[102] P .", "start_char_idx": 4143, "end_char_idx": 5586, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "023d29ba-27f7-4516-bd02-a7ed63efbdb0": {"__data__": {"id_": "023d29ba-27f7-4516-bd02-a7ed63efbdb0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "518c38b4-975f-4b87-b4c5-89fbc4364837", "node_type": "1", "metadata": {}, "hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0cac29b7-e2ac-422d-a79e-1a5cd820371d", "node_type": "1", "metadata": {}, "hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "class_name": "RelatedNodeInfo"}]}, "hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "text": "2, pp. 147\u2013180, 2017.\n[102] P . Kosina and J. Gama, \u201cVery fast decision rules for classi\ufb01cation\nin data streams,\u201d Data Mining and Knowledge Discovery , vol. 29,\nno. 1, pp. 168\u2013202, 2015.\n[103] H. Wang, W. Fan, P . S. Yu, and J. Han, \u201cMining concept-\ndrifting data streams using ensemble classi\ufb01ers,\u201d in Proc.", "start_char_idx": 5555, "end_char_idx": 5863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1a85d97-1755-4790-a02b-51408d0d5e1d": {"__data__": {"id_": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "760ab3dc-bad8-4987-95b0-de4a55c06d84", "node_type": "1", "metadata": {}, "hash": "eceb3147cfcce4367efc731bcc090141ae8a084b99e34af77e97b6e25558d076", "class_name": "RelatedNodeInfo"}, {"node_id": "0662f6ab-37d0-4c11-acbd-fe91bf9c0809", "node_type": "1", "metadata": {}, "hash": "5340c4fdb4687da368777c069bda003924561114d69a49b5a934fa06666572d2", "class_name": "RelatedNodeInfo"}, {"node_id": "e5f646c6-b89f-499b-ad98-0cd5dddfd498", "node_type": "1", "metadata": {}, "hash": "30653398bfe3d7599522fee6fb601dcf02b7f10698d40e87b0751bbee7c0371a", "class_name": "RelatedNodeInfo"}, {"node_id": "98e48856-29bc-4b1c-9908-1a66dc7cd2b6", "node_type": "1", "metadata": {}, "hash": "ed005981a46edfc38e58348748df4359090f43910ac641eb0a468afb1c552ea2", "class_name": "RelatedNodeInfo"}, {"node_id": "1581c45f-1ce1-45a6-a9b4-502d887717d0", "node_type": "1", "metadata": {}, "hash": "6216ae19b5ec217d4150640c0b4140dc77520c264e1d9f231b50e64f93280bac", "class_name": "RelatedNodeInfo"}]}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "text": "9th\nACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining .\nWashington, D.C.: ACM, 2003, Conference Paper, pp. 226\u2013235.[104] A. Bifet, G. Holmes, R. Kirkby, and B. Pfahringer, \u201cMoa: Massive\nonline analysis,\u201d Journal of Machine Learning Research , vol. 99, pp.\n1601\u20131604, 2010.\n[105] V . M. Souza, D. F. Silva, J. Gama, and G. E. Batista, \u201cData\nstream classi\ufb01cation guided by clustering on nonstationary en-\nvironments and extreme veri\ufb01cation latency,\u201d in Proceedings of the\n2015 SIAM International Conference on Data Mining . SIAM, 2015,\npp. 873\u2013881.\n[106] M. Lichman, \u201cUCI machine learning repository,\u201d 2013. [Online].\nAvailable: http://archive.ics.uci.edu/ml\n[107] M. Harel, S. Mannor, R. El-Yaniv, and K. Crammer, \u201cConcept drift\ndetection through resampling,\u201d in Proc. 31st Int. Conf. Machine\nLearning , 2014, Conference Proceedings, pp. 1009\u20131017.\n[108] X. Zhu, \u201cStream data mining repository,\u201d 2010. [Online].\nAvailable: http://www.cse.fau.edu/ \u223cxqzhu/stream.html\n[109] M. Harries and N. S. Wales, \u201cSplice-2 comparative evaluation:\nElectricity pricing,\u201d 1999.\n[110] I. Katakis, G. Tsoumakas, and I. Vlahavas, \u201cTracking recurring\ncontexts using ensemble classi\ufb01ers: an application to email \ufb01lter-\ning,\u201d Knowledge and Information Systems , vol. 22, no. 3, pp. 371\u2013\n391, 2009.\n[111] I. Katakis, G. Tsoumakas, E. Banos, N. Bassiliades, and I. Vla-\nhavas, \u201cAn adaptive personalized news dissemination system,\u201d\nJournal of Intelligent Information Systems , vol. 32, no. 2, pp. 191\u2013212,\n2008.", "start_char_idx": 0, "end_char_idx": 1493, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "49a086c2-e996-4c17-b97a-f1bf32a56730": {"__data__": {"id_": "49a086c2-e996-4c17-b97a-f1bf32a56730", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "adf3b340-ff37-4119-8f7d-aa175d699573", "node_type": "1", "metadata": {}, "hash": "02fb9149d980aec130284480a526c247498c8c189cc3e9e5867e026af6899606", "class_name": "RelatedNodeInfo"}, {"node_id": "a0594055-0291-4b8d-b06f-e683ebfc6eb0", "node_type": "1", "metadata": {}, "hash": "139f9a5c20a65793c4ee19de171296acf206c21535ca968ed1baca7105894efd", "class_name": "RelatedNodeInfo"}, {"node_id": "dc5a2814-a49c-4e25-b2ce-6b120be9b004", "node_type": "1", "metadata": {}, "hash": "8bd7e09b64fa700d36bef1156c283cb5944da092b7023817439da66611524946", "class_name": "RelatedNodeInfo"}, {"node_id": "917dc646-917d-4ef4-a872-30e4733c6eda", "node_type": "1", "metadata": {}, "hash": "52e9c04f594b2b9ab417ce6acb64c9278ecb7a159a313ca2b0f75c33dfe6835d", "class_name": "RelatedNodeInfo"}, {"node_id": "a9c9e96b-ac8e-4792-a2a9-8fe5751d0070", "node_type": "1", "metadata": {}, "hash": "35745004525797bb262b15ff3b21d5ae543a1a6099640d46883056fda30ccba7", "class_name": "RelatedNodeInfo"}, {"node_id": "df584730-6f71-4326-a464-f2a79d424261", "node_type": "1", "metadata": {}, "hash": "1be1b67be42eb18c470e79103b68e6a71e6184f0980f5d5c8ff7f74feefad223", "class_name": "RelatedNodeInfo"}]}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "text": "32, no. 2, pp. 191\u2013212,\n2008.\n[112] I. Katakis, G. Tsoumakas, and I. P . Vlahavas, \u201cAn ensemble of\nclassi\ufb01ers for coping with recurring contexts in data streams,\u201d\nin18th European Conf. Arti\ufb01cial Intelligence , 2008, Conference\nProceedings, pp. 763\u2013764.\n[113] S. J. Delany, P . Cunningham, A. Tsymbal, and L. Coyle, \u201cA case-\nbased technique for tracking concept drift in spam \ufb01ltering,\u201d\nKnowledge-Based Systems , vol. 18, no. 4\u20135, pp. 187\u2013195, 2005.\n[114] L.-Y. Wang, C. Park, K. Yeon, and H. Choi, \u201cTracking concept drift\nusing a constrained penalized regression combiner,\u201d Comput.\nStat. Data Anal. , vol. 108, pp. 52\u201369, 2017.\n[115] I. Zliobaite, A. Bifet, B. Pfahringer, and G. Holmes, \u201cActive learn-\ning with drifting streaming data,\u201d IEEE Trans. Neural Networks\nLearn. Syst. , vol. 25, no. 1, pp. 27\u201339, 2014.\n[116] G. Song, Y. Ye, H. Zhang, X. Xu, R. Y. K. Lau, and F. Liu, \u201cDy-\nnamic clustering forest: An ensemble framework to ef\ufb01ciently\nclassify textual data stream with concept drift,\u201d Information Sci-\nences , vol. 357, pp. 125\u2013143, 2016.\n[117] G. Ditzler and R. Polikar, \u201cIncremental learning of concept drift\nfrom streaming imbalanced data,\u201d IEEE Trans. Knowl. Data Eng. ,\nvol. 25, no. 10, pp. 2283\u20132301, 2013.\n[118] B. Mirza, Z. Lin, and N. Liu, \u201cEnsemble of subset online sequen-\ntial extreme learning machine for class imbalance and concept\ndrift,\u201d Neurocomputing , vol. 149, pp. 316\u2013329, 2015.", "start_char_idx": 1464, "end_char_idx": 2873, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc1f2e92-67ca-49d2-9274-264bd6ceba8d": {"__data__": {"id_": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "8c2c0f53-3fca-4464-87cd-ef3c6dd2a1cf", "node_type": "1", "metadata": {}, "hash": "10a4b23560f1a1e0eb087e78f334b39f7125d8510899db398ebd1284f48c5b79", "class_name": "RelatedNodeInfo"}, {"node_id": "a46ed202-5920-4523-ac4a-044596af0b1f", "node_type": "1", "metadata": {}, "hash": "ac1d6c0cfd23d7353492ef31c39968b38da0f299c68218d2940b92a6aee4691b", "class_name": "RelatedNodeInfo"}, {"node_id": "f5165dc2-c00b-4f59-905e-92e42344d9f2", "node_type": "1", "metadata": {}, "hash": "4d87855f6f9b45535c54592ad115d6b9ce49de2924d35f27b6d06d0464ebbeb8", "class_name": "RelatedNodeInfo"}, {"node_id": "4095a970-83d0-4977-b672-03a5ee4bf29c", "node_type": "1", "metadata": {}, "hash": "13286103113f787f0f03b3cd7bbf8bc02a830af2325fbfa2b3261c9a58db373c", "class_name": "RelatedNodeInfo"}, {"node_id": "dabf316c-bca1-4ff6-877d-33a95ebfee9c", "node_type": "1", "metadata": {}, "hash": "7c66499cccff96f0537191e9afca2ed0adb4aa33c85fb548c91d419e8848e543", "class_name": "RelatedNodeInfo"}]}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "text": "149, pp. 316\u2013329, 2015.\n[119] B. Mirza and Z. Lin, \u201cMeta-cognitive online sequential extreme\nlearning machine for imbalanced and concept-drifting data clas-\nsi\ufb01cation,\u201d Neural Networks , vol. 80, pp. 79\u201394, 2016.\n[120] S. Wang, L. L. Minku, and X. Yao, \u201cResampling-based ensemble\nmethods for online class imbalance learning,\u201d IEEE Trans. Knowl.\nData Eng. , vol. 27, no. 5, pp. 1356\u20131368, 2015.\n[121] E. Arabmakki and M. Kantardzic, \u201cSom-based partial labeling of\nimbalanced data stream,\u201d Neurocomputing , vol. 262, pp. 120\u2013133,\n2017.\n[122] A. Katal, M. Wazid, and R. H. Goudar, \u201cBig data: Issues, chal-\nlenges, tools and good practices,\u201d in Proc. 6th Int. Conf. Contempo-\nrary Computing (IC3) , 2013, Conference Proceedings, pp. 404\u2013409.\n[123] A. Andrzejak and J. B. Gomes, \u201cParallel concept drift detection\nwith online map-reduce,\u201d in Proc. 12th Int. Conf. Data Mining\nWorkshops , 2012, Conference Proceedings, pp. 402\u2013407.\n[124] M. Tennant, F. Stahl, O. Rana, and J. B. Gomes, \u201cScalable real-\ntime classi\ufb01cation of data streams with concept drift,\u201d Future\nGeneration Computer Systems , vol. 75, pp. 187\u2013199, 2017.\n[125] C. C. Aggarwal, J. Han, J. Wang, and P . S. Yu, \u201cA framework\nfor clustering evolving data streams,\u201d in Proc. 29th Int. Conf. Very\nLarge Databases , vol. 29. VLDB Endowment, 2003, Conference\nProceedings, pp. 81\u201392.", "start_char_idx": 2850, "end_char_idx": 4185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "061cf19f-4851-4338-b880-7c346585665a": {"__data__": {"id_": "061cf19f-4851-4338-b880-7c346585665a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0", "node_type": "1", "metadata": {}, "hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "29ce92f9-9155-4c64-99f7-8f82ed2f0c63", "node_type": "1", "metadata": {}, "hash": "20222007dbab4dbce54b9d03f5719c7757273d2b7bbe1f7758e9ad47cdb408f0", "class_name": "RelatedNodeInfo"}, {"node_id": "53e2ecb7-130f-4d60-9175-a0ebe43e8e34", "node_type": "1", "metadata": {}, "hash": "cdbb4ee47b7da407e7a977bd8d24a9a33d0b62ffbcdffad5c882ac1e2797695d", "class_name": "RelatedNodeInfo"}, {"node_id": "edaa2893-4940-4994-8b7e-2c597655f043", "node_type": "1", "metadata": {}, "hash": "8add82a6a83dab10cef45dd7ded70b437d2c7d4e97be55893b9753a0ac309046", "class_name": "RelatedNodeInfo"}, {"node_id": "143182ef-ddfb-4560-a032-705e6fde4139", "node_type": "1", "metadata": {}, "hash": "b98dbbecff3b41b26fc7062aefffd8bce3d11757d37975644d0e14e8d97ea3fd", "class_name": "RelatedNodeInfo"}, {"node_id": "7e787cfd-c004-46ba-b116-aeac1d32dd56", "node_type": "1", "metadata": {}, "hash": "bfa597ec1596742b989e5baee61f1087394883f38e68e21d4cc3df858c4ec8fd", "class_name": "RelatedNodeInfo"}, {"node_id": "2b40c0a5-7d80-4308-8e21-dd8fecade17a", "node_type": "1", "metadata": {}, "hash": "fe7bcfea85cceac71997167417df07e9e00b74f26e52fd36be73f6c026bcc616", "class_name": "RelatedNodeInfo"}]}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "text": "81\u201392.\n[126] X. Song, H. He, S. Niu, and J. Gao, \u201cA data streams analysis\nstrategy based on hoeffding tree with concept drift on hadoop\nsystem,\u201d in Proc. 4th Int. Conf. Advanced Cloud and Big Data , 2016,\nConference Proceedings, pp. 45\u201348.\n[127] V . Nguyen, T. D. Nguyen, T. Le, S. Venkatesh, and D. Phung,\n\u201cOne-pass logistic regression for label-drift and large-scale clas-\n\n18\nsi\ufb01cation on distributed systems,\u201d in Proc. 16th Int. Conf. Data\nMining , 2016, Conference Proceedings, pp. 1113\u20131118.\n[128] W. Chu, M. Zinkevich, L. Li, A. Thomas, and B. Tseng, \u201cUnbi-\nased online active learning in data streams,\u201d in Proc. 17th ACM\nSIGKDD Int. Conf. Knowledge Discovery and Data Mining . San\nDiego, California, USA: ACM, 2011, Conference Paper, pp. 195\u2013\n203.\n[129] G. Ditzler and R. Polikar, \u201cSemi-supervised learning in non-\nstationary environments,\u201d in Proc. 2011 Int. Joint Conf. Neural\nNetworks , 2011, Conference Proceedings, pp. 2741\u20132748.\n[130] M. J. Hosseini, A. Gholipour, and H. Beigy, \u201cAn ensemble\nof cluster-based classi\ufb01ers for semi-supervised classi\ufb01cation of\nnon-stationary data streams,\u201d Knowledge and Information Systems ,\nvol. 46, no. 3, pp. 567\u2013597, 2015.\n[131] P . Zhang, X. Zhu, J. Tan, and L. Guo, \u201cClassi\ufb01er and cluster\nensembles for mining concept drifting data streams,\u201d in Proc.\n10th Int. Conf. Data Mining , 2010, Conference Proceedings, pp.\n1175\u20131180.", "start_char_idx": 4179, "end_char_idx": 5555, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0": {"__data__": {"id_": "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "node_type": "1", "metadata": {}, "hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "0cdde2dc-4363-47f0-ab09-47253342e4cc", "node_type": "1", "metadata": {}, "hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "class_name": "RelatedNodeInfo"}]}, "hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "text": "Data Mining , 2010, Conference Proceedings, pp.\n1175\u20131180.\n[132] S. Chandra, A. Haque, L. Khan, and C. Aggarwal, \u201cAn adaptive\nframework for multistream classi\ufb01cation,\u201d in Proc. 25th ACM Int.\non Conf. Information and Knowledge Management . Indianapolis,\nIndiana, USA: ACM, 2016, Conference Paper, pp. 1181\u20131190.", "start_char_idx": 5497, "end_char_idx": 5807, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "887429f5-c9a2-4122-863f-4c37531d3f24": {"__data__": {"id_": "887429f5-c9a2-4122-863f-4c37531d3f24", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "e67b4801-9484-4dc0-96ad-cfe1f18c8dd4", "node_type": "1", "metadata": {}, "hash": "0249d50abb9fc850abaee1a9e7348052e17bc3570b06d28995f03c7894c8215d", "class_name": "RelatedNodeInfo"}, {"node_id": "c70222fb-2a36-436f-8c3e-00d9002feab5", "node_type": "1", "metadata": {}, "hash": "4778f6465655bd91f40c23e0e746307d870530b0a3fdeb8ec5eb8e57826dfe2e", "class_name": "RelatedNodeInfo"}, {"node_id": "119219ef-12ed-4523-b337-cef03a4cf927", "node_type": "1", "metadata": {}, "hash": "ab87ba8a6c859bbf1851f786a2e767e21d1c89cef64e55b3030666fdb2971e68", "class_name": "RelatedNodeInfo"}, {"node_id": "081054ee-1681-4c38-977a-2a8419734e4e", "node_type": "1", "metadata": {}, "hash": "f748a4621d3db5b60067e6444a5129e95a5e5959ce9b1e83ff1ff5378870018e", "class_name": "RelatedNodeInfo"}, {"node_id": "dec5ccf3-dd6b-46bb-80a1-1da492d3aa0c", "node_type": "1", "metadata": {}, "hash": "f785f692cbde6d6dfdccb3fac790f8ac1e83e955e1bca5ab89014ae1d6205472", "class_name": "RelatedNodeInfo"}, {"node_id": "99aacfaf-ddc2-486b-8846-dd49c5609382", "node_type": "1", "metadata": {}, "hash": "b2b5c289fb16bf55895ab706880674733cedd40d982ae0fa83c2c00b098e7985", "class_name": "RelatedNodeInfo"}]}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "text": "1181\u20131190.\n[133] A. Haque, L. Khan, M. Baron, B. Thuraisingham, and C. Aggar-\nwal, \u201cEf\ufb01cient handling of concept drift and concept evolution\nover stream data,\u201d in Proc. 32nd Int. Conf. Data Engineering , 2003,\nConference Proceedings, pp. 481\u2013492.\n[134] A. Haque, L. Khan, and M. Baron, \u201cSand: Semi-supervised adap-\ntive novel class detection and classi\ufb01cation over data stream,\u201d in\n30th AAAI Conf. Arti\ufb01cial Intelligence , 2016, Conference Proceed-\nings, pp. 1652\u20131658.\n[135] T. Le, F. Stahl, M. M. Gaber, J. B. Gomes, and G. D. Fatta, \u201cOn\nexpressiveness and uncertainty awareness in rule-based classi\ufb01-\ncation for data streams,\u201d Neurocomputing , vol. 265, pp. 127\u2013141,\n2017.\n[136] J. Cendrowska, \u201cPrism: An algorithm for inducing modular\nrules,\u201d Int. J. Man Mach. Stud. , vol. 27, no. 4, pp. 349\u2013370, 1987.\n[137] M. Pratama, S. G. Anavatti, M. Joo, and E. D. Lughofer, \u201cpclass:\nAn effective classi\ufb01er for streaming examples,\u201d IEEE Trans. Fuzzy\nSyst. , vol. 23, no. 2, pp. 369\u2013386, 2015.\n[138] Y.-R. Yeh and Y.-C. F. Wang, \u201cA rank-one update method for least\nsquares linear discriminant analysis with concept drift,\u201d Pattern\nRecognit. , vol. 46, no. 5, pp. 1267\u20131276, 2013.\n[139] R. C. Cavalcante, L. L. Minku, and A. L. I. Oliveira, \u201cFedd: Fea-\nture extraction for explicit concept drift detection in time series,\u201d\ninProc. 2016 Int. Joint Conf. Neural Networks , 2016, Conference\nProceedings, pp.", "start_char_idx": 0, "end_char_idx": 1397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b38cd3a5-fac3-448d-acd2-099d8717ec2d": {"__data__": {"id_": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "52016b04-4c70-47d4-9d2c-e7c2538f4c63", "node_type": "1", "metadata": {}, "hash": "8e26eed09201e53461e5ca168fabc14d5307574c70d22039b18a850ffdd51116", "class_name": "RelatedNodeInfo"}, {"node_id": "c455c1e8-4309-4815-80d0-4ee929c020fa", "node_type": "1", "metadata": {}, "hash": "f9a035e1b59729012a615e1ca2309056f71ea548a29531ba7b1b72af090d5b6f", "class_name": "RelatedNodeInfo"}, {"node_id": "b0b22db5-c229-4aac-9050-b9db66700a80", "node_type": "1", "metadata": {}, "hash": "10cb88290a4d3cceb68ecd24e61f59609f7b5467c49ef73f3d5a901e18d8cc23", "class_name": "RelatedNodeInfo"}, {"node_id": "63646112-5667-45d1-aa8b-5aede7171646", "node_type": "1", "metadata": {}, "hash": "2b964bfec8409127b650e89cec2e2c1783c4a01a4f286377b623164cc7f9354d", "class_name": "RelatedNodeInfo"}, {"node_id": "59092e12-9918-4a9d-8590-08b864b5bfab", "node_type": "1", "metadata": {}, "hash": "02eb94cb20e647a70b86b0b88c4f30db29292f3f43c563b1df376905308e68ba", "class_name": "RelatedNodeInfo"}]}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "text": "Joint Conf. Neural Networks , 2016, Conference\nProceedings, pp. 740\u2013747.\n[140] M. Pratama, J. Lu, E. Lughofer, G. Zhang, and S. Anavatti, \u201cScaf-\nfolding type-2 classi\ufb01er for incremental learning under concept\ndrifts,\u201d Neurocomputing , vol. 191, pp. 304\u2013329, 2016.\nJie Lu is a Distinguished Professor, Director of\nCentre for Arti\ufb01cial Intelligence, and Associate\nDean Research with in the Faculty of Engineer-\ning and Information Technology at the University\nof Technology Sydney. Her research interests lie\nin the area of decision support systems, concept\ndrift, fuzzy transfer learning, and recommender\nsystems. She has published 10 research books\nand 400 papers, won 8 Australian Research\nCouncil discovery grants and 20 other grants.\nShe serves as Editor-In-Chief for KBS and IJCIS,\nand delivered 16 keynotes in international conferences.\nAnjin Liu is a Postdoctoral Research Associate\nin the A/DRsch Centre for Arti\ufb01cial Intelligence,\nFaculty of Engineering and Information Technol-\nogy, University of Technology Sydney. He re-\nceived the BIT degree (Honour) at the Univer-\nsity of Sydney in 2012. His research interests\ninclude concept drift detection, adaptive data\nstream learning, multi-stream learning, machine\nlearning and big data analytics\nFan Dong is Research Fellow of Centre for\nArti\ufb01cial Intelligence, University of Technology\nSydney. He received the dual Ph.D. degree from\nUniversity of Technology Sydney and Beijing In-\nstitute of Technology in 2018. His research in-\nterests include concept drift detection, adaptive\nlearning under concept drift and data stream\nmining.\nFeng Gu is a Ph.D. candidate at the Faculty\nof Engineering and Information Technology, the\nUniversity of Technology Sydney, NSW, Aus-\ntralia. He received bachelors degree of soft-\nware engineering at Zhejiang University, China,\nin 2012. His research interests include stream\ndata mining, adaptive learning under concept\ndrift and evolving data.\nJo\u02dcao Gama is an Associate Professor at the\nUniversity of Porto, Portugal.", "start_char_idx": 1334, "end_char_idx": 3342, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1818727a-8d16-4427-b43b-67ac4c435ba3": {"__data__": {"id_": "1818727a-8d16-4427-b43b-67ac4c435ba3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "6d7c066a-606e-4f19-891d-1b83ce1cea6c", "node_type": "1", "metadata": {}, "hash": "e898898c65f4b913cd8f614ed5df19dc1d1f8556be1b9a54a3407b3999769457", "class_name": "RelatedNodeInfo"}, {"node_id": "4ba1f78c-2f58-4007-8836-f6a66c3d33d1", "node_type": "1", "metadata": {}, "hash": "4b5884f36c1d684203be4edef8bae343e016682abaf488caf48149f6d0c15ea1", "class_name": "RelatedNodeInfo"}, {"node_id": "514c6494-afdb-448d-b909-f4d7271be72a", "node_type": "1", "metadata": {}, "hash": "55b7d0bd53a56245107afde3e6722fcae3e29de04703e16285e2ee79b2da25c1", "class_name": "RelatedNodeInfo"}, {"node_id": "85caeb35-23b1-44f2-ba5e-616266c9529f", "node_type": "1", "metadata": {}, "hash": "314eac99dd88f1f0fd63ab558452dd4afcfcd9971934d02d2d0c0b83d74d8a12", "class_name": "RelatedNodeInfo"}, {"node_id": "47078f24-35b5-4877-a4b0-b5723e3975d2", "node_type": "1", "metadata": {}, "hash": "1effe649257b02d9187eaf1813f46df72f9b90c05c32f3a5c0bf5b1eb93ced32", "class_name": "RelatedNodeInfo"}]}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "text": "Jo\u02dcao Gama is an Associate Professor at the\nUniversity of Porto, Portugal. He is also a senior\nresearcher and member of the board of directors\nof the Laboratory of Arti\ufb01cial Intelligence and\nDecision Support (LIAAD), a group belonging\nto INESC Porto. He serves as the member of\nthe Editorial Board of Machine Learning Journal,\nData Mining and Knowledge Discovery, Intelli-\ngent Data Analysis and New Generation Com-\nputing. His main research interest is in knowl-\nedge discovery from data streams and evolving\ndata. He has published more than 200 papers and a recent book on\nKnowledge Discovery from Data Streams. He has extensive publications\nin the area of data stream learning.\nGuangquan Zhang is an Associate Professor,\nand the Director of Decision System and e-\nService Intelligence (DeSI) lab with in the Centre\nfor Arti\ufb01cial Intelligence, in the Faculty of Engi-\nneering and Information Technology at the Uni-\nversity of Technology Sydney. His main research\ninterests lie in the area of uncertain information\nprocessing, fuzzy decision making, concept drift\nand fuzzy transfer learning. He has published\n4 monographs and over 400 papers in refer-\need journals, conference proceedings and book\nchapters. He has won 7 Australian Research Council discovery grants\nand guest edited many special issues for international journals.\n\nLive Metrics: Monitor and diagnose with 1-\nsecond latency\nArticle \u202208/11/2023\nMonitor your live, in-production web application by using Live Metrics (also known as QuickPulse) from\nApplication Insights . You can select and filter metrics and performance counters to watch in real time,\nwithout any disturbance to your service. Y ou can also inspect stack traces from sample failed requests\nand exceptions. T ogether with Profiler  and Snapshot Debugger , Live Metrics provides a powerful and\nnoninvasive diagnostic tool for your live website.\nWith Live Metrics, you can:\nValidate a fix while it's released by watching performance and failure counts.\nWatch the effect of test loads and diagnose issues live.\nFocus on particular test sessions or filter out known issues by selecting and filtering the metrics you\nwant to watch.\nGet exception traces as they happen.\nExperiment with filters to find the most relevant KPIs.\nMonitor any Windows performance counter live.\nEasily identify a server that's having issues and filter all the KPI/live feed to just that server.", "start_char_idx": 3268, "end_char_idx": 5666, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b13fcdee-3284-4435-8c91-eeede1e1019c": {"__data__": {"id_": "b13fcdee-3284-4435-8c91-eeede1e1019c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5f52ff2-4895-416a-a9e7-92222aeb2d2d", "node_type": "1", "metadata": {}, "hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "224ecdec-ba1c-424a-9a63-eae8150d8f57", "node_type": "1", "metadata": {}, "hash": "e148c70f2d36df24b6f8ad314ffc7666b8652c6f90b0848f2923eaf017aaeed7", "class_name": "RelatedNodeInfo"}, {"node_id": "f7c6172c-f875-48ff-be5d-0112297dbed1", "node_type": "1", "metadata": {}, "hash": "bdedae9c9d15293e8c95a416ceca3315a095aae0ad0d9d8183c5ac1f7379a491", "class_name": "RelatedNodeInfo"}, {"node_id": "022f46ac-061f-470f-9ce1-11830f6c4f68", "node_type": "1", "metadata": {}, "hash": "14685b78b85d4c5aa0d2d3c3ebc99dfbd239c5e56df70fb8cbb6c997e9dbf54a", "class_name": "RelatedNodeInfo"}, {"node_id": "33caff6d-abc7-41ad-aa10-bd37b07cb419", "node_type": "1", "metadata": {}, "hash": "6a631d048df7268d002bfbb5e68a5652f8bba6d19ebd4ffac2a05b7f4fec8d5a", "class_name": "RelatedNodeInfo"}]}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "text": "Live Metrics is currently supported for ASP.NET, ASP.NET Core, Azure Functions, Java, and Node.js apps.\uff17 Note\nLive Metrics only supports TLS 1.2. For more information, see Troubleshooting .\n\uf80a\n\uff17 Note\n\n1. Follow language-specific guidelines to enable Live Metrics:\nASP.NET : Live Metrics is enabled by default.\nASP.NET Core : Live Metrics is enabled by default.\n.NET/.NET Core Console/W orker : Live Metrics is enabled by default.\n.NET Applications: Enable using code .\nJava: Live Metrics is enabled by default.\nNode.js\n2. In the Azure portal , open the Application Insights resource for your app. Then open Live S tream.\n3. Secure the control channel  if you might use sensitive data like customer names in your filters.\nTo manually configure Live Metrics:\n1. Install the NuGet package Microsoft.ApplicationInsights.P erfCounterCollector .\n2. The following sample console app code shows setting up Live Metrics:The number of monitored server instances displayed by Live Metrics might be lower than the actual\nnumber of instances allocated for the application. This mismatch is because many modern web\nservers will unload applications that don't receive requests over a period of time to conserve\nresources. Because Live Metrics only counts servers that are currently running the application,\nservers that have already unloaded the process won't be included in that total.\nGet started\n\uff09 Impor tant\nTo enable Application Insights, ensure that it's activated in the Azure portal and your app is using a\nrecent version of the Application Insights  NuGet package. Without the NuGet package, some\ntelemetry is sent to Application Insights, but that telemetry won't show in Live Metrics.\n\uff17 Note\nOn March 31, 2025, support for instrumentation key ingestion will end. Instrumentation key\ningestion will continue to work, but we'll no longer provide updates or support for the feature.\nTransition t o connection strings  to take advantage of new cap abilities .\nEnable Live Metrics by using code for any .NET application\n\uff17 Note\nLive Metrics is enabled by default when you onboard it by using the recommended instructions for\n.NET applications.", "start_char_idx": 5667, "end_char_idx": 7799, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5f52ff2-4895-416a-a9e7-92222aeb2d2d": {"__data__": {"id_": "e5f52ff2-4895-416a-a9e7-92222aeb2d2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f183402-a660-4d3d-82ac-b45afaf73040", "node_type": "1", "metadata": {}, "hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "2f521dd4-71db-4575-8028-90af88df0807", "node_type": "1", "metadata": {}, "hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "class_name": "RelatedNodeInfo"}]}, "hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "text": "C#\nThe preceding sample is for a console app, but the same code can be used in any .NET applications. If\nany other telemetry modules are enabled to autocollect telemetry, it's important to ensure that the same\nconfiguration used for initializing those modules is used for the Live Metrics module..NET 6.0+\nusing Microsoft.ApplicationInsights;\nusing Microsoft.ApplicationInsights.Extensibility;\nusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n// Create a TelemetryConfiguration instance.", "start_char_idx": 7802, "end_char_idx": 8323, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0d27b83-4356-4776-98c7-64a1ea6683b5": {"__data__": {"id_": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "271a330f-407b-4c6c-91c7-d61c9ee679f9", "node_type": "1", "metadata": {}, "hash": "7ecd2d1b0184b9c5e1e069085b51c0295ae4d665622aabe685ed8406ae87b827", "class_name": "RelatedNodeInfo"}, {"node_id": "565be5de-f563-4cf8-a2f9-313311c80ec9", "node_type": "1", "metadata": {}, "hash": "4e12acfae832831572b40916d9e842aabc80fef610c14ba1155de9a310060a05", "class_name": "RelatedNodeInfo"}, {"node_id": "ba0d620a-34ca-41a8-b09e-5c46a94b7f39", "node_type": "1", "metadata": {}, "hash": "7de503e1b7ec91465d4b3a291991a694fc4e50ed242c7cf97cc2a592ac8a54b0", "class_name": "RelatedNodeInfo"}, {"node_id": "4307899f-093f-4bf0-8bcc-510368ee82fc", "node_type": "1", "metadata": {}, "hash": "b459c99e8c2dd4d806a84cd97d3d7cbe46733afa58d7afe6c05cd8755c8346da", "class_name": "RelatedNodeInfo"}, {"node_id": "8964e9cb-c2ae-443b-8e46-24e6aa6f3400", "node_type": "1", "metadata": {}, "hash": "63632f911c8705280ab5fd10ff6e575bb20af159db5fb4c7ca62ffe8b1884930", "class_name": "RelatedNodeInfo"}]}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "text": "TelemetryConfiguration config = TelemetryConfiguration.CreateDefault();\nconfig.InstrumentationKey = \"INSTRUMENTATION-KEY-HERE\" ;\nQuickPulseTelemetryProcessor quickPulseProcessor = null;\nconfig.DefaultTelemetrySink.TelemetryProcessorChainBuilder\n    .Use((next) =>\n    {\n        quickPulseProcessor = new QuickPulseTelemetryProcessor(next);\n        return quickPulseProcessor;\n    })\n    .Build();\nvar quickPulseModule = new QuickPulseTelemetryModule();\n// Secure the control channel.\n// This is optional, but recommended.\nquickPulseModule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" ;\nquickPulseModule.Initialize(config);\nquickPulseModule.RegisterTelemetryProcessor(quickPulseProcessor);\n// Create a TelemetryClient instance. It is important\n// to use the same TelemetryConfiguration here as the one\n// used to set up Live Metrics.\nTelemetryClient client = new TelemetryClient(config);\n// This sample runs indefinitely. Replace with actual application logic.\nwhile (true)\n{\n    // Send dependency and request telemetry.\n    // These will be shown in Live Metrics.\n    // CPU/Memory Performance counter is also shown\n    // automatically without any additional steps.\n    client.TrackDependency( \"My dependency\" , \"target\" , \"http://sample\" ,\n        DateTimeOffset.Now, TimeSpan.FromMilliseconds( 300), true);\n    client.TrackRequest( \"My Request\" , DateTimeOffset.Now,\n        TimeSpan.FromMilliseconds( 230), \"200\", true);\n    Task.Delay( 1000).Wait();\n}\nHow does Live Metrics differ from metrics explorer\nand Log Analytics?\n\uff89Expand table\n\nCapabilities Live Stream Metr ics explor er and Log Analy tics\nLatency Data displayed within one second. Aggregated over minutes.\nNo retention Data persists while it's on the chart and is then discarded. Data retained for 90 days.\nOn demand Data is only streamed while the Live Metrics pane is\nopen.Data is sent whenever the SDK is\ninstalled and enabled.\nFree There's no charge for Live S tream data. Subject to pricing .\nSampling All selected metrics and counters are transmitted. F ailures\nand stack traces are sampled.Events can be sampled .\nControl\nchannelFilter control signals are sent to the SDK. W e recommend\nyou secure this channel.Communication is one way, to the\nportal.", "start_char_idx": 0, "end_char_idx": 2223, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "888fe210-2bea-494c-938c-697d0feee64b": {"__data__": {"id_": "888fe210-2bea-494c-938c-697d0feee64b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "bfd9b9b8-386d-4c6b-afb0-052c9bd1e8f4", "node_type": "1", "metadata": {}, "hash": "9874214eb69c52b9eb8e811f42d96b55b13fb406643cd204b13a00098e025d3e", "class_name": "RelatedNodeInfo"}, {"node_id": "a05c137e-e96b-4d1c-b7ce-e0d9cd0b6999", "node_type": "1", "metadata": {}, "hash": "adade2dee394999b94741d7f7597fe6c5c1ce58485266af5b708b91391a790de", "class_name": "RelatedNodeInfo"}, {"node_id": "20ad5c14-7cdd-4520-b1a3-ccd98f4d5258", "node_type": "1", "metadata": {}, "hash": "8f873cd4237f4b67bec38b77829bf8cbfa5c0e262de44c9bf9c9177a66fcb48b", "class_name": "RelatedNodeInfo"}, {"node_id": "647ade5b-e48b-4ff5-88b5-9af529405bca", "node_type": "1", "metadata": {}, "hash": "a150741a26f96dc2e9cdd9b478a2a1882e9402fa7c940dc757787f0f9a42f5ad", "class_name": "RelatedNodeInfo"}, {"node_id": "aaf03444-b1ff-4534-86f7-c9ab1cdce027", "node_type": "1", "metadata": {}, "hash": "7a2f55228f902b5de2c460adf2dae8ff5d01387a99915c5ed701387d82808f91", "class_name": "RelatedNodeInfo"}]}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "text": "W e recommend\nyou secure this channel.Communication is one way, to the\nportal.\nThese capabilities are available with ASP.NET, ASP.NET Core, and Azure Functions (v2).\nYou can monitor custom KPI live by applying arbitrary filters on any Application Insights telemetry from\nthe portal. Select the filter control that shows when you mouse-over any of the charts. The following\nchart plots a custom Request  count KPI with filters on URL and Duration  attributes. V alidate your filters\nwith the stream preview section that shows a live feed of telemetry that matches the criteria you've\nspecified at any point in time.\nYou can monitor a value different from Count . The options depend on the type of stream, which could\nbe any Application Insights telemetry like requests, dependencies, exceptions, traces, events, or metrics.\nIt can also be your own custom measurement .Select and filter your metrics\n\uf80a\n\nAlong with Application Insights telemetry, you can also monitor any Windows performance counter.\nSelect it from the stream options and provide the name of the performance counter.\nLive Metrics are aggregated at two points: locally on each server and then across all servers. Y ou can\nchange the default at either one by selecting other options in the respective dropdown lists.\nBy default, the live feed of events shows samples of failed requests and dependency calls, exceptions,\nevents, and traces. Select the filter icon to see the applied criteria at any point in time.\nAs with metrics, you can specify any arbitrary criteria to any of the Application Insights telemetry types.\nIn this example, we're selecting specific request failures and events.\n\uf80a\nSample telemetry: Custom live diagnostic events\n\uf80a\n\uf80a\n\uff17 Note\n\nTo see the details of an item in the live feed, select it. Y ou can pause the feed either by selecting Pause  or\nby scrolling down and selecting an item. Live feed resumes after you scroll back to the top, or when you\nselect the counter of items collected while it was paused.\nIf you want to monitor a particular server role instance, you can filter by server. T o filter, select the server\nname under Servers.Currently, for exception message-based criteria, use the outermost exception message.", "start_char_idx": 2145, "end_char_idx": 4356, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "931b3ac7-e0bc-4048-bae7-99280cd861fe": {"__data__": {"id_": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "4baac2f7-d443-4120-8ff7-236b75532fc7", "node_type": "1", "metadata": {}, "hash": "59622896ce8f03ceabfca1ca8e2735d7bb20229f06c5b02dc86dbb0af008419b", "class_name": "RelatedNodeInfo"}, {"node_id": "7abe026d-0927-4b47-8840-a8199cf0198c", "node_type": "1", "metadata": {}, "hash": "13b0462bb432afe87919ccc5bcc88c9d3b67549b3d9378b278a6a7a8c462e589", "class_name": "RelatedNodeInfo"}, {"node_id": "1fc86cb7-8248-4d8c-a595-bf66a81d5bb7", "node_type": "1", "metadata": {}, "hash": "db05b89af0c0c987ef2b1408ef5f48ed99f0c45846db49e1482e7e9cb75a5404", "class_name": "RelatedNodeInfo"}, {"node_id": "409bb2c4-0948-4dd9-ba18-62418d783151", "node_type": "1", "metadata": {}, "hash": "4844c130bc43846fa37f81b4fd68f2b187d89aba622fb296dd2c04489de32a88", "class_name": "RelatedNodeInfo"}, {"node_id": "6c2dedae-1518-4699-9ed5-cc53f7a37422", "node_type": "1", "metadata": {}, "hash": "d515a71f2e6acaa6921948b43619886045ba475be05e079103aa2732f473dd32", "class_name": "RelatedNodeInfo"}]}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "text": "In the\npreceding example, to filter out the benign exception with an inner exception message (follows the\n\"<--\" delimiter) \"The client disconnected,\" use a message not-contains \"Error reading request\ncontent\" criteria.\n\uf80a\nFilter by server instance\n\nLive Metrics custom filters allow you to control which of your application's telemetry is streamed to the\nLive Metrics view in the Azure portal. The filters criteria are sent to the apps that are instrumented with\nthe Application Insights SDK. The filter value could potentially contain sensitive information, such as the\ncustomer ID. T o keep this value secured and prevent potential disclosure to unauthorized applications,\nyou have two options:\nRecommended:  Secure the Live Metrics channel by using Microsoft Entra authentication .\nLegacy (no longer r ecommended):  Set up an authenticated channel by configuring a secret API\nkey as explained in the \"Legacy option\" section.\nIt's possible to try custom filters without having to set up an authenticated channel. Select any of the\nfilter icons and authorize the connected servers. If you choose this option, you have to authorize the\n\uf80a\nSecure the control channel\n\uff17 Note\nOn September 30, 2025, API keys used to stream Live Metrics telemetry into Application Insights\nwill be retired. After that date, applications that use API keys won't be able to send Live Metrics data\nto your Application Insights resource. Authenticated telemetry ingestion for Live Metrics streaming\nto Application Insights will need to be done with Microsoft Entra authentication for Application\nInsights .\n\nconnected servers once every new session or whenever a new server comes online.\n1. Select the API Access  tab and then select Create API k ey.\n2. Select the Authenticat e SDK contr ol channel  checkbox and then select Generat e key.\uff12 Warning\nWe strongly discourage the use of unsecured channels and will disable this option six months after\nyou start using it. The Authorize connect ed ser vers dialog displays the date after which this option\nwill be disabled.\n\uf80a\nLegacy option: Create an API key\n\uf80a\n\nYou can add an API key to configuration for ASP.NET, ASP.NET Core, W orkerService, and Azure Functions\napps.\nIn the Program.cs  file, add the following namespace:\nC#\nThen add the following service registration:\nC#\nFor more information on how to configure ASP.NET Core applications, see Configuring telemetry\nmodules in ASP.NET Core .", "start_char_idx": 4357, "end_char_idx": 6771, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a279c2dc-fe53-4d26-9421-4e6a42a756d4": {"__data__": {"id_": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "292706ac-9541-457a-adf1-75cedb1e2873", "node_type": "1", "metadata": {}, "hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "3a5533a9-6f4f-4618-be7e-d083062391a4", "node_type": "1", "metadata": {}, "hash": "2d08a0fc81078d9e9432479b330666ce20ccd46699e83abf9bc31cba73ff49ca", "class_name": "RelatedNodeInfo"}, {"node_id": "289b6d2d-9c43-4d17-a25f-adfa083110c0", "node_type": "1", "metadata": {}, "hash": "763a78b661b417005fa25581a0c16774789e12b427dad1b5b2cde97019b325c1", "class_name": "RelatedNodeInfo"}, {"node_id": "979bd3a7-fcb5-4e5d-afc0-93d50aa7baef", "node_type": "1", "metadata": {}, "hash": "1ddc3ac44bcabeafb3eaf21fb25c2c16d93dc1a87d8ab30769ccd6527c0796b5", "class_name": "RelatedNodeInfo"}, {"node_id": "e7cb51e4-fedd-49ee-9563-a93742d2b22e", "node_type": "1", "metadata": {}, "hash": "080c291fd4c2365b955c6ef125a4933616c8c6b4d69b32b643c042415e7702f6", "class_name": "RelatedNodeInfo"}, {"node_id": "3084b59a-95c1-420e-93ee-c6faa5b1d94f", "node_type": "1", "metadata": {}, "hash": "a79adcd077426eedb9c60fca4f5d368fdd31578df4b106d17634024b227f2b0f", "class_name": "RelatedNodeInfo"}]}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "text": "For WorkerService  applications, follow these instructions.\nAdd the following namespace:\n\uf80a\nAdd an API key to configuration\n.NET 6.0+\nusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n// Existing code which includes services.AddApplicationInsightsTelemetry() to enable \nApplication Insights.\nbuilder.Services.ConfigureTelemetryModule<QuickPulseTelemetryModule> ((module, o) => \nmodule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" );\nWorkerSer vice\n\nC#\nNext, add the following line before the call services.AddApplicationInsightsTelemetryWorkerService:\nC#\nFor more information on how to configure W orkerService applications, see Configuring telemetry\nmodules in W orkerServices .\nFor Azure Functions apps (v2), you can secure the channel with an API key by using an environment\nvariable.\nCreate an API key from within your Application Insights resource and go to Settings  > Configuration  for\nyour Azure Functions app. Select New application setting , enter a name of\nAPPINSIGHTS_QUICKPULSEAUTHAPIKEY, and enter a value that corresponds to your API key.\nLanguage Basic metr ics Performance\nmetr icsCustom\nfilteringSample\ntelemetr yCPU split by\nprocess\n.NET Framework Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)\n.NET Core (target=.NET\nFramework)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)\n.NET Core (target=.NET\nCore)Supported\n(LTS)Supported* Supported\n(LTS)Supported\n(LTS)Not suppor ted\nAzure Functions v2 Supported Supported Supported Supported Not suppor ted\nJava Supported\n(V2.0.0+)Supported\n(V2.0.0+)Not\nsuppor tedSupported\n(V3.2.0+)Not suppor ted\nNode.js Supported\n(V1.3.0+)Supported\n(V1.3.0+)Not\nsuppor tedSupported\n(V1.3.0+)Not suppor ted\nPython Not suppor ted Not suppor ted Not\nsuppor tedNot suppor ted Not suppor ted\nBasic metrics include request, dependency, and exception rate. P erformance metrics (performance\ncounters) include memory and CPU.", "start_char_idx": 6772, "end_char_idx": 8724, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "292706ac-9541-457a-adf1-75cedb1e2873": {"__data__": {"id_": "292706ac-9541-457a-adf1-75cedb1e2873", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "18c5a06b-e2bf-4d40-9681-872357af305c", "node_type": "1", "metadata": {}, "hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "ecc1d12e-1ceb-4ab3-bd05-782a89dcbda7", "node_type": "1", "metadata": {}, "hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "class_name": "RelatedNodeInfo"}]}, "hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "text": "P erformance metrics (performance\ncounters) include memory and CPU. Sample telemetry shows a stream of detailed information for failedusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n    services.ConfigureTelemetryModule<QuickPulseTelemetryModule> ((module, o) => \nmodule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" );\nAzur e Functions apps\nSupported features table\n\uff89Expand table", "start_char_idx": 8657, "end_char_idx": 9069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "317db8cf-567f-4b3c-b8ea-8009f7fa17d8": {"__data__": {"id_": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "58637b14-f5b1-49c2-a46e-7a5882d3931b", "node_type": "1", "metadata": {}, "hash": "0d71a87bd34bef92e3b68d63cad5e34f2ce1ebd0664c462f5d61d025ed35d986", "class_name": "RelatedNodeInfo"}, {"node_id": "ebe7f81a-7bd6-42ea-a662-b9a33d1800a0", "node_type": "1", "metadata": {}, "hash": "e43d3f6a7c99e3860a67e9a0c4da4161c83ee74a43c40f5e8bd5aa8330dfcd7c", "class_name": "RelatedNodeInfo"}, {"node_id": "fd21d4b4-8b79-45dd-9d62-f86ccb9021df", "node_type": "1", "metadata": {}, "hash": "dfbe5f202aff013b9b73f5ef84c8793eca7457eca79774af44755ad11bf5f9c5", "class_name": "RelatedNodeInfo"}, {"node_id": "704e255e-48d6-4752-ac04-e1429b525c03", "node_type": "1", "metadata": {}, "hash": "f58cc1230a5ebf02579fa951cc8de274892ff8d0514abb82dea87c0a365b65fd", "class_name": "RelatedNodeInfo"}, {"node_id": "0e4e95bd-b2b1-415f-adfa-12952ba36a15", "node_type": "1", "metadata": {}, "hash": "20f43e549b6e44bc3c0258a919e06dd210adb6e5c7f050841347b4d663eef316", "class_name": "RelatedNodeInfo"}]}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "text": "requests and dependencies, exceptions, events, and traces.\nPerfCounters support varies slightly across versions of .NET Core that don't target the .NET Framework:\nPerfCounters metrics are supported when running in Azure App Service for Windows (ASP.NET\nCore SDK version 2.4.1 or higher).\nPerfCounters are supported when the app is running on any Windows machine for apps that target\n.NET Core LTS or higher.\nPerfCounters are supported when the app is running anywher e (such as Linux, Windows, app\nservice for Linux, or containers) in the latest versions, but only for apps that target .NET Core LTS\nor higher.\nLive Metrics uses different IP addresses than other Application Insights telemetry. Make sure those IP\naddresses  are open in your firewall. Also check that outgoing ports for Live Metrics  are open in the\nfirewall of your servers.\nAs described in the Azure TLS 1.2 migration announcement , Live Metrics now only supports TLS 1.2. If\nyou're using an older version of TLS, Live Metrics doesn't display any data. For applications based on\n.NET Framework 4.5.1, see Enable T ransport Layer Security (TLS) 1.2 on clients - Configuration Manager\nto support the newer TLS version.\n1. Verify that you're using the latest version of the NuGet package\nMicrosoft.ApplicationInsights.P erfCounterCollector .\n2. Edit the ApplicationInsights.config file:\nVerify that the connection string points to the Application Insights resource you're using.\nLocate the QuickPulseTelemetryModule configuration option. If it isn't there, add it.\nLocate the QuickPulseTelemetryProcessor configuration option. If it isn't there, add it.\nXML\n3. Restart the application.\nTroubleshooting\nMissing configuration for .NET\n<TelemetryModules >\n<Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.\nQuickPulse.QuickPulseTelemetryModule, Microsoft.AI.PerfCounterCollector\" />\n</TelemetryModules >\n<TelemetryProcessors >\n<Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.", "start_char_idx": 0, "end_char_idx": 1992, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90f0b9eb-2095-4048-afc8-4e3f0ab2e150": {"__data__": {"id_": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "d803567b-799f-4219-8871-7af21e6f2b3c", "node_type": "1", "metadata": {}, "hash": "7b4fb3940a10692eb152239af74af2c51e727b67079e539802781ed025dea6a0", "class_name": "RelatedNodeInfo"}, {"node_id": "742e7773-26df-49ac-afec-380c9fc0382d", "node_type": "1", "metadata": {}, "hash": "7c297cfab2aef14975765bbf4284e13ed0335b3023899e383b55623eaa81e873", "class_name": "RelatedNodeInfo"}, {"node_id": "2513ea6c-d55a-468f-9ce8-4e96bdee5b55", "node_type": "1", "metadata": {}, "hash": "118cee2d285640edb59be4d8e129a9dbfc2dfcea67f5c5a12edc59b9f314b1dc", "class_name": "RelatedNodeInfo"}, {"node_id": "102b4b64-e4b2-42ea-a347-3de4069e7ad2", "node_type": "1", "metadata": {}, "hash": "b865065351f46623eb7c8ae1588c5024bf21ebe317b523d90361fa79cccfaf30", "class_name": "RelatedNodeInfo"}, {"node_id": "3f0fa849-7ebd-46a9-a76e-b0771b99b1a3", "node_type": "1", "metadata": {}, "hash": "673921a1099c001cb04daff64045f40281833e26b4bd38047b9578e122d88a1a", "class_name": "RelatedNodeInfo"}]}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "text": "QuickPulse.QuickPulseTelemetryProcessor, Microsoft.AI.PerfCounterCollector\" />\n</TelemetryProcessors >\n\"Data is temporarily inaccessible\" status message\n\nWhen navigating to Live Metrics, you may see a banner with the status message: \"Data is temporarily\ninaccessible. The updates on our status are posted here https://aka.ms/aistatus  \"\nFollow the link to the Azure status page and check if there's an activate outage affecting Application\nInsights. V erify that firewalls and browser extensions aren't blocking access to Live Metrics if an outage\nisn't occurring. For example, some popular ad-blocker extensions block connections to\n*.monitor.azure.com. In order to use the full capabilities of Live Metrics, either disable the ad-blocker\nextension or add an exclusion rule for the domain *.livediagnostics.monitor.azure.com to your ad-\nblocker, firewall, etc.\nApplication Insights SDKs use a REST API to communicate with QuickPulse endpoints, which provide live\nmetrics for your web application. By default, the SDKs poll the endpoints once every five seconds to\ncheck if you are viewing the Live Metrics pane in the Azure portal.\nIf you open the Live Metrics pane, the SDKs switch to a higher frequency mode and send new metrics to\nQuickPulse every second. This allows you to monitor and diagnose your live application with 1-second\nlatency, but also generates more network traffic. T o restore normal flow of traffic, naviage away from the\nLive Metrics pane.\nMonitor usage with Application Insights\nUse Diagnostic Search\nProfiler\nSnapshot Debugger\nUnexpected large number of requests to\nlivediagnostics.monitor.azure.com\n\uff17 Note\nThe REST API calls made by the SDKs to QuickPulse endpoints are not tracked by Application\nInsights and do not affect your dependency calls or other metrics. However, you may see them in\nother network monitoring tools.\nNext steps\n\nTitle: Understanding the Technical Architecture of Alibaba Cloud's Recommender System\n\nAlibaba Cloud's technical expert, Aohai, delves into the fundamental concepts and intricate architecture of an enterprise-level recommender system in this comprehensive article.\n\n1) What Is a Recommender System?\n\nAohai elucidates the necessity and function of recommender systems in today's digital landscape. As online platforms expand, the challenge of connecting users with suitable products intensifies. Platforms like Taobao, hosting a myriad of products, grapple with this challenge.", "start_char_idx": 1993, "end_char_idx": 4432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d": {"__data__": {"id_": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bebb1407-bcb2-450b-9ad4-4192b4ae0a94", "node_type": "1", "metadata": {}, "hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "96f133f7-f4cf-4bb4-bebc-26b159f52c51", "node_type": "1", "metadata": {}, "hash": "8b35104d3b7ee1f1e04732b6a61e628347129767b674063d625d447be7e3ad20", "class_name": "RelatedNodeInfo"}, {"node_id": "d5b98590-4dce-4c67-a390-18305036ff73", "node_type": "1", "metadata": {}, "hash": "91e8d6819c9017fa91c9200cada9ff94a92ecc8c08cb4644db9de682f40446ea", "class_name": "RelatedNodeInfo"}, {"node_id": "b7477e7d-8975-4246-8fa1-5f9827fb179e", "node_type": "1", "metadata": {}, "hash": "37aba13362fcfd0e7736e2f9f762effa47493ed3f3e308bd55191463ac149447", "class_name": "RelatedNodeInfo"}, {"node_id": "64a04ed7-d2be-4dfa-8d6a-d2a89326aa83", "node_type": "1", "metadata": {}, "hash": "f31e312509fb4ac8f5499f9e10e7e2c485acc1ce7dead6a116c19bfcbe97cfe0", "class_name": "RelatedNodeInfo"}, {"node_id": "9c60dd06-ed3b-4626-a963-c78a9bcd8662", "node_type": "1", "metadata": {}, "hash": "3e612c37b5c24be695df8f1a4794273105b3de408bf3a634f41613845f31dcd4", "class_name": "RelatedNodeInfo"}]}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "text": "Platforms like Taobao, hosting a myriad of products, grapple with this challenge. Recommender systems address this by refining the matching of user information with item information, notably through query-based and feed streaming recommendations.\n\nThe system aligns user preferences with item properties. Query-based recommendations tailor item displays based on user preferences, such as color and price. In contrast, feed streaming recommendations, prevalent in apps like Hupu and Toutiao, curate content according to daily user preferences, leveraging machine learning models to understand both user inclinations and item attributes.\n\n1.2 Personalized Recommendation Process\n\nAohai offers a schematic overview of the recommendation process, emphasizing two pivotal modules: matching and ranking. The matching module filters items based on user preferences, while the ranking module refines these choices according to the user's specific inclinations. This efficient process ensures swift feedback within milliseconds, a critical factor in user engagement strategies.\n\nMoreover, Aohai emphasizes that a recommender system encompasses not just recommendation algorithms but also robust system engineering. Addressing performance and data storage issues is paramount, especially when deploying such a system in the cloud environment.\n\n2) Architecture of an Enterprise-level Recommender System\n\n2.1 Requirements for an Enterprise-level Recommender System\n\nAohai outlines four fundamental requirements for designing an enterprise-level recommender system. The architecture must cater to platforms with millions of users, facilitate extensive model training with large datasets, support algorithm plug-ins for flexibility, ensure high-performance feedback within milliseconds, and allow elastic resource scaling to optimize costs.\n\n2.2 Overall Architecture of a Recommender System\n\nThis section elucidates the architecture's layers, starting with the basic data layer encompassing user profiles, item data, behavior data, and comment data. Following data processing and storage, the system employs matching and ranking modules powered by various algorithms. A new policy filters and deduplicates recommendations before online deployment, culminating in the top-layer recommendation service.\n\n2.3 PAI-based Technical Architecture for a Recommender System\n\nAlibaba Cloud's technical implementation involves leveraging PAI technology. It begins with storing demo offline data in ApsaraDB RDS for MySQL, processing real-time behavior data via Apache Kafka, and using Flink for generating real-time data. Model training employs PAI algorithms, advocating cloud-native solutions for scalability. The final phase orchestrates matching, deduplication, ranking, and feedback to users, showcasing Alibaba Cloud's holistic technical architecture.", "start_char_idx": 4351, "end_char_idx": 7183, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bebb1407-bcb2-450b-9ad4-4192b4ae0a94": {"__data__": {"id_": "bebb1407-bcb2-450b-9ad4-4192b4ae0a94", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a", "node_type": "1", "metadata": {}, "hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "class_name": "RelatedNodeInfo"}, "5": [{"node_id": "9977e437-399b-4ee3-b728-f778151b33e0", "node_type": "1", "metadata": {}, "hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "class_name": "RelatedNodeInfo"}]}, "hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "text": "The article serves as a comprehensive guide, shedding light on the intricacies of Alibaba Cloud's advanced recommender system technology, blending cutting-edge algorithms with robust system engineering principles.", "start_char_idx": 7185, "end_char_idx": 7398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db3c733c-e5d2-4887-9248-9a57654e8d7c": {"__data__": {"id_": "db3c733c-e5d2-4887-9248-9a57654e8d7c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60aafb64-eda8-4dd1-80ff-e7ce8ac8e4d8", "node_type": "1", "metadata": {}, "hash": "3df3716b3795fd80b60c857f2d1f23e52b386b0a7aeb24e78f06f52675bc0076", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}}, "hash": "20391dd0c2e11eca0f2e5dbb1ff1f862da631f5ec95f0c2b1b86c2fb2129d72f", "text": "This page is the first page of the book with an eye-catching image to catch peoples attention. The image contains the words \u201cToy.ai\u201d.\n\nThis page is the introduction page. It explains that the topics the book will be covering is \u201cModel Deployment\u201d and it has been written by \u201cAssociate Professor Dr. Sergio Hernandez Marin\u201d. Also shows how it is a topic that is being taught by the \u201cNational University of Singapore\u201d.\n\nThis page gives the reader a quick reminder of \u201cThe Data Science Lifecycle Process\u201d.", "start_char_idx": 0, "end_char_idx": 502, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60aafb64-eda8-4dd1-80ff-e7ce8ac8e4d8": {"__data__": {"id_": "60aafb64-eda8-4dd1-80ff-e7ce8ac8e4d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db3c733c-e5d2-4887-9248-9a57654e8d7c", "node_type": "1", "metadata": {}, "hash": "20391dd0c2e11eca0f2e5dbb1ff1f862da631f5ec95f0c2b1b86c2fb2129d72f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ad76419-66d8-4320-87c7-068feb5c9fc6", "node_type": "1", "metadata": {}, "hash": "388e1844c11226b527b6e9cf8ef2a279ddaa7ba5a9cb971f5ea42ee5912137e6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}}, "hash": "3df3716b3795fd80b60c857f2d1f23e52b386b0a7aeb24e78f06f52675bc0076", "text": "This page gives the reader a quick reminder of \u201cThe Data Science Lifecycle Process\u201d. To be clear the steps in order are, Business Understanding, Data Acquisition and Understanding, Deployment, and Modelling. Now we will go through this steps in more detail. The Data Science Lifecycle Process begins by first establishing a strong Business Understanding of the project. This can be done by engaging with Business Stakeholders. Then you move on to Data Acquisition and Understanding step. After this you move on to the Deployment step. Here insights become available to users, developers, or systems.", "start_char_idx": 418, "end_char_idx": 1017, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ad76419-66d8-4320-87c7-068feb5c9fc6": {"__data__": {"id_": "2ad76419-66d8-4320-87c7-068feb5c9fc6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60aafb64-eda8-4dd1-80ff-e7ce8ac8e4d8", "node_type": "1", "metadata": {}, "hash": "3df3716b3795fd80b60c857f2d1f23e52b386b0a7aeb24e78f06f52675bc0076", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71ff6609-6393-45da-955b-ab58805ed2de", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}}, "hash": "388e1844c11226b527b6e9cf8ef2a279ddaa7ba5a9cb971f5ea42ee5912137e6", "text": "Here insights become available to users, developers, or systems. Finally, you can move on to modelling step. In the modelling step, you can socialize results or first insights. At any point you can go back track or go to another step depending on your needs.\n\nThis page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process.", "start_char_idx": 953, "end_char_idx": 1498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71ff6609-6393-45da-955b-ab58805ed2de": {"__data__": {"id_": "71ff6609-6393-45da-955b-ab58805ed2de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ad76419-66d8-4320-87c7-068feb5c9fc6", "node_type": "1", "metadata": {}, "hash": "388e1844c11226b527b6e9cf8ef2a279ddaa7ba5a9cb971f5ea42ee5912137e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bb12023-40d3-4864-8645-1bc6dcc45230", "node_type": "1", "metadata": {}, "hash": "88884bd86c88c55592e2ae98b074cff945e012c170704d2009edc0ca33ff73f1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "text": "Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case.", "start_char_idx": 1383, "end_char_idx": 2031, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bb12023-40d3-4864-8645-1bc6dcc45230": {"__data__": {"id_": "9bb12023-40d3-4864-8645-1bc6dcc45230", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71ff6609-6393-45da-955b-ab58805ed2de", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b185e45e-164d-455f-8fe4-4690a93afb42", "node_type": "1", "metadata": {}, "hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "class_name": "RelatedNodeInfo"}}, "hash": "88884bd86c88c55592e2ae98b074cff945e012c170704d2009edc0ca33ff73f1", "text": "Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation. Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set.", "start_char_idx": 2032, "end_char_idx": 2549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "189dfbdc-7077-4c4c-8b4b-6296a59ba4f4": {"__data__": {"id_": "189dfbdc-7077-4c4c-8b4b-6296a59ba4f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d453893d-f437-4111-9be7-ada682cb4f27", "node_type": "1", "metadata": {}, "hash": "22bbbc725f2f41b7d5fe02c35e4ab04c4212baad64058d3564b0a6c760b79ca3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}}, "hash": "464a908edb135df8680c780a4f5346864d1e233777600c78065962728ced98d8", "text": "Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions.", "start_char_idx": 0, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d453893d-f437-4111-9be7-ada682cb4f27": {"__data__": {"id_": "d453893d-f437-4111-9be7-ada682cb4f27", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "189dfbdc-7077-4c4c-8b4b-6296a59ba4f4", "node_type": "1", "metadata": {}, "hash": "464a908edb135df8680c780a4f5346864d1e233777600c78065962728ced98d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1bc011a6-a5e2-4d68-8814-258d2ee40d98", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}}, "hash": "22bbbc725f2f41b7d5fe02c35e4ab04c4212baad64058d3564b0a6c760b79ca3", "text": "Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.\n\nThe following explains the previous page: [This page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process.", "start_char_idx": 524, "end_char_idx": 1181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bc011a6-a5e2-4d68-8814-258d2ee40d98": {"__data__": {"id_": "1bc011a6-a5e2-4d68-8814-258d2ee40d98", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d453893d-f437-4111-9be7-ada682cb4f27", "node_type": "1", "metadata": {}, "hash": "22bbbc725f2f41b7d5fe02c35e4ab04c4212baad64058d3564b0a6c760b79ca3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2450f93-0a7f-41f6-be1c-415bb4f43ec3", "node_type": "1", "metadata": {}, "hash": "34cfcc691ee933162f14abfa1300aa4be7eb605ee1c202b6710b9fcf3a49516c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "text": "Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case.", "start_char_idx": 1066, "end_char_idx": 1714, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2450f93-0a7f-41f6-be1c-415bb4f43ec3": {"__data__": {"id_": "e2450f93-0a7f-41f6-be1c-415bb4f43ec3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bc011a6-a5e2-4d68-8814-258d2ee40d98", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1de88753-ad04-4f1d-a0b1-894b18979e2d", "node_type": "1", "metadata": {}, "hash": "17fd0af85a3ef5cf768c56128b95bbd98784e767ecfaa4eaaa03263d8eb06004", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}}, "hash": "34cfcc691ee933162f14abfa1300aa4be7eb605ee1c202b6710b9fcf3a49516c", "text": "Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation. Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too.", "start_char_idx": 1715, "end_char_idx": 2377, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1de88753-ad04-4f1d-a0b1-894b18979e2d": {"__data__": {"id_": "1de88753-ad04-4f1d-a0b1-894b18979e2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2450f93-0a7f-41f6-be1c-415bb4f43ec3", "node_type": "1", "metadata": {}, "hash": "34cfcc691ee933162f14abfa1300aa4be7eb605ee1c202b6710b9fcf3a49516c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "node_type": "1", "metadata": {}, "hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "class_name": "RelatedNodeInfo"}}, "hash": "17fd0af85a3ef5cf768c56128b95bbd98784e767ecfaa4eaaa03263d8eb06004", "text": "Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata.", "start_char_idx": 177, "end_char_idx": 490, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3719389-d4c5-488f-ba96-b89e814511ce": {"__data__": {"id_": "f3719389-d4c5-488f-ba96-b89e814511ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39f1b555-66c5-4599-a13e-3c7ab5522b1d", "node_type": "1", "metadata": {}, "hash": "e921b11706703ceaadcf4c243fb0b1154f69a5dc4a2ff723a21024cdfd0e3320", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}}, "hash": "58c524d74e2296458c8b70bd5b1cbd431702d27b439dbe8c920618ab37a5b7ba", "text": "Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.] Now on the current page we go through the architecture with the example of a Recommender System.", "start_char_idx": 0, "end_char_idx": 518, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39f1b555-66c5-4599-a13e-3c7ab5522b1d": {"__data__": {"id_": "39f1b555-66c5-4599-a13e-3c7ab5522b1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3719389-d4c5-488f-ba96-b89e814511ce", "node_type": "1", "metadata": {}, "hash": "58c524d74e2296458c8b70bd5b1cbd431702d27b439dbe8c920618ab37a5b7ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81f92843-a596-410e-98cd-9816257554be", "node_type": "1", "metadata": {}, "hash": "fb096e63e14b0f18aeafe5d67800173a0d34884a90678ab03b4b10377417a35c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}}, "hash": "e921b11706703ceaadcf4c243fb0b1154f69a5dc4a2ff723a21024cdfd0e3320", "text": "Now on the current page we go through the architecture with the example of a Recommender System. In this case offline data is user interactions (clickstream data, purchase history), user profiles (demographic data, behavioural data), item data and more. In the \u201cData Extraction and Analysis\u201d stage we can use APIs, web scrapping and Databases (DBs) to integrate relevant data. We can also conduct Explanatory Data Analysis and Data Segmentation.", "start_char_idx": 422, "end_char_idx": 867, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81f92843-a596-410e-98cd-9816257554be": {"__data__": {"id_": "81f92843-a596-410e-98cd-9816257554be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39f1b555-66c5-4599-a13e-3c7ab5522b1d", "node_type": "1", "metadata": {}, "hash": "e921b11706703ceaadcf4c243fb0b1154f69a5dc4a2ff723a21024cdfd0e3320", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93f3e011-cc40-4bd0-b97b-835b46e1b5ce", "node_type": "1", "metadata": {}, "hash": "28dd6f7fbe7afff5d87bc1fc977493d0c6b4d5bd90aad614182914b8e36e4ff7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}}, "hash": "fb096e63e14b0f18aeafe5d67800173a0d34884a90678ab03b4b10377417a35c", "text": "We can also conduct Explanatory Data Analysis and Data Segmentation. During Model Development, under data preparation we can first conduct feature engineering (eg: Number of interactions, item similarity, Click Through Rate (CTR)) and then we can split our data into Train, Validation, and Test. Under Model Training we can use collaborative filtering, content-based filtering as models, where we use mean square error (MSE), cross-entropy, Bayesian Personalized Ranking as Loss Functions. Finally, can use regularization to deal with over-fitting.", "start_char_idx": 799, "end_char_idx": 1347, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93f3e011-cc40-4bd0-b97b-835b46e1b5ce": {"__data__": {"id_": "93f3e011-cc40-4bd0-b97b-835b46e1b5ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81f92843-a596-410e-98cd-9816257554be", "node_type": "1", "metadata": {}, "hash": "fb096e63e14b0f18aeafe5d67800173a0d34884a90678ab03b4b10377417a35c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b0e1deb-7f33-4503-a7e1-c2e7d6142ea3", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}}, "hash": "28dd6f7fbe7afff5d87bc1fc977493d0c6b4d5bd90aad614182914b8e36e4ff7", "text": "Finally, can use regularization to deal with over-fitting. Under Model Evaluation and Validation can use Evaluation Metrics such as Mean Average Precision (MAP), precision, recall, etc. Use cross-validation to better evaluate the models and finally can also incorporate user feedback for a human perspective.\n\nThe following explains a page from a few pages ago: [This page introduces the user to \u201cData Science Architecture: A Structured Framework for Organizing, Managing, and Optimizing the DS process\u201d. DS stands for Data Science. Description: A structured framework is essential for organizing, managing, and optimizing the data science process.", "start_char_idx": 1289, "end_char_idx": 1937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b0e1deb-7f33-4503-a7e1-c2e7d6142ea3": {"__data__": {"id_": "8b0e1deb-7f33-4503-a7e1-c2e7d6142ea3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93f3e011-cc40-4bd0-b97b-835b46e1b5ce", "node_type": "1", "metadata": {}, "hash": "28dd6f7fbe7afff5d87bc1fc977493d0c6b4d5bd90aad614182914b8e36e4ff7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a65075ed-fc89-4453-b2b7-15b8b85b3b62", "node_type": "1", "metadata": {}, "hash": "60f9b4660e335f61750edaed64f0e1f82018a75505b70f500073467a92b7c600", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "text": "Description: A structured framework is essential for organizing, managing, and optimizing the data science process. The framework involves various steps that streamline the journey from data processing to model development and deployment. This structured approach ensures efficiency, accuracy, and reproducibility at every stage. Here is a breakdown of the key components: Offline data first undergoes \u201cData Extraction and Analysis\u201d where relevant data is integrated, and Exploratory Data Analysis is conducted on the data to analyse and summarise the data. Then this data is used to help us train models and choose the best model for our use case.", "start_char_idx": 1822, "end_char_idx": 2470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a65075ed-fc89-4453-b2b7-15b8b85b3b62": {"__data__": {"id_": "a65075ed-fc89-4453-b2b7-15b8b85b3b62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b0e1deb-7f33-4503-a7e1-c2e7d6142ea3", "node_type": "1", "metadata": {}, "hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "node_type": "1", "metadata": {}, "hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "class_name": "RelatedNodeInfo"}}, "hash": "60f9b4660e335f61750edaed64f0e1f82018a75505b70f500073467a92b7c600", "text": "Model Development consists of 3 components, Data Preparation, Model Training, and Model Evaluation and Validation.", "start_char_idx": 2471, "end_char_idx": 2585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26fb3c21-e301-46c8-b939-1559d59e5add": {"__data__": {"id_": "26fb3c21-e301-46c8-b939-1559d59e5add", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00d74b94-ce83-4615-97b0-7d3974d6cffa", "node_type": "1", "metadata": {}, "hash": "d79c7a91b9077d834e67f1d8d422b28893c0debae4a9ddae7b8a6f9ff271e3a9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}}, "hash": "688149212f192683bfeb8e245e64f08c33c870fde34044254ffcfc474a64192a", "text": "Data Preparation includes the cleaning of data, splitting of data into train, validation, and test data sets, transforming said data and conducting Feature Engineering. Model Training involves implementing several algorithms to train multiple models and then tuning hyperparameters of said models. Finally, Model Evaluation and Validation involves evaluating the models trained on the holdout test set. Evaluation should be done on a set of metrics to confirm model quality. Compare said models with some baseline model to gauge model quality too. Once this is done we should have a trained model ready for deployment.", "start_char_idx": 0, "end_char_idx": 618, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "00d74b94-ce83-4615-97b0-7d3974d6cffa": {"__data__": {"id_": "00d74b94-ce83-4615-97b0-7d3974d6cffa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26fb3c21-e301-46c8-b939-1559d59e5add", "node_type": "1", "metadata": {}, "hash": "688149212f192683bfeb8e245e64f08c33c870fde34044254ffcfc474a64192a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57ab904f-09bc-426f-bd9c-4518d639ec11", "node_type": "1", "metadata": {}, "hash": "3da84ef670b0093642107853be2c86c3f9b17d36be00c4c1010a25be8c94afb9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}}, "hash": "d79c7a91b9077d834e67f1d8d422b28893c0debae4a9ddae7b8a6f9ff271e3a9", "text": "Once this is done we should have a trained model ready for deployment. This model is the registered in a model registry (a repository used to store, and version trained ML models). Analogous to version control systems. Also stores metadata. Can now start serving the model. Deploy the validated model to a target environment for serving predictions. Can provide microservices using a REST API, can embed the model and can use it as a Batch Prediction System. This framework acts as a guide throughout the entire data science workflow, ensuring a systematic and efficient approach to handling projects.].", "start_char_idx": 548, "end_char_idx": 1151, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57ab904f-09bc-426f-bd9c-4518d639ec11": {"__data__": {"id_": "57ab904f-09bc-426f-bd9c-4518d639ec11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00d74b94-ce83-4615-97b0-7d3974d6cffa", "node_type": "1", "metadata": {}, "hash": "d79c7a91b9077d834e67f1d8d422b28893c0debae4a9ddae7b8a6f9ff271e3a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2062406c-eaa6-4b71-9d12-073ebdc471d4", "node_type": "1", "metadata": {}, "hash": "8a12d7b9e62f0b3ca61c291f87e8626e3d2016712e1ec8d9433acac1a65211e3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}}, "hash": "3da84ef670b0093642107853be2c86c3f9b17d36be00c4c1010a25be8c94afb9", "text": "Now this current page discusses why the architecture discussed on that page won\u2019t be feasible in a Business Setting. The following reasons are given: 1) Testing and Deployment Process: Manual, script-driven, and interactive process where every step is manual. Data scientists execute each step, including data analysis, data preparation, model training, and validation. 2) Disconnection Between ML and Operations: Data scientists create the model, and engineers handle deployment. Trained models are handed over to engineers for deployment as a prediction service.", "start_char_idx": 1152, "end_char_idx": 1716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2062406c-eaa6-4b71-9d12-073ebdc471d4": {"__data__": {"id_": "2062406c-eaa6-4b71-9d12-073ebdc471d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57ab904f-09bc-426f-bd9c-4518d639ec11", "node_type": "1", "metadata": {}, "hash": "3da84ef670b0093642107853be2c86c3f9b17d36be00c4c1010a25be8c94afb9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6aa4ed2-76c6-455d-9d89-ebbd0ddc6924", "node_type": "1", "metadata": {}, "hash": "764aa212e91f710dd297c5068868b34f93657f7da23932cdb4b37ef67648d239", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}}, "hash": "8a12d7b9e62f0b3ca61c291f87e8626e3d2016712e1ec8d9433acac1a65211e3", "text": "Trained models are handed over to engineers for deployment as a prediction service. 3) Infrequent Release Iterations: Assumes infrequent model changes, with new model versions deployed only a couple of times per year. 4) No Continuous Integration (CI): CI is not considered, as the process assumes few implementation changes. Testing is typically part of notebooks or script execution. 5) No Continuous Deployment (CD): CD is not considered, as frequent model version deployments are not part of the process.", "start_char_idx": 1633, "end_char_idx": 2141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6aa4ed2-76c6-455d-9d89-ebbd0ddc6924": {"__data__": {"id_": "b6aa4ed2-76c6-455d-9d89-ebbd0ddc6924", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2062406c-eaa6-4b71-9d12-073ebdc471d4", "node_type": "1", "metadata": {}, "hash": "8a12d7b9e62f0b3ca61c291f87e8626e3d2016712e1ec8d9433acac1a65211e3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "node_type": "1", "metadata": {}, "hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "class_name": "RelatedNodeInfo"}}, "hash": "764aa212e91f710dd297c5068868b34f93657f7da23932cdb4b37ef67648d239", "text": "6) Deployment Focus: The process is concerned only with deploying the trained model as a prediction service (e.g., a REST API microservice). 7) Lack of Active Performance Monitoring: The process does not track or log model predictions and actions, which are essential for detecting model performance degradation and other behavioral drifts.\n\nThis page discusses an example of a Architecture of a Recommender System from a Cloud Provider (Alibaba Cloud).", "start_char_idx": 2142, "end_char_idx": 2595, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a849b2b-eb0e-422f-9d4a-90e9c79e0b63": {"__data__": {"id_": "1a849b2b-eb0e-422f-9d4a-90e9c79e0b63", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b6e6fef-c16e-45b5-9065-29a29e35da32", "node_type": "1", "metadata": {}, "hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8b6e6fef-c16e-45b5-9065-29a29e35da32", "node_type": "1", "metadata": {}, "hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "class_name": "RelatedNodeInfo"}}, "hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "text": "This is to show how a more practical example of a Data Science Architecture that can be use in real life. In the realm of recommender systems, understanding the underlying architecture is pivotal. The following figure shows the underlying basic data layer.", "start_char_idx": 0, "end_char_idx": 256, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "125ab7cb-5757-4c1e-9325-711eea81eb90": {"__data__": {"id_": "125ab7cb-5757-4c1e-9325-711eea81eb90", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa59fd24-1234-4b08-9da9-820a3713cdb1", "node_type": "1", "metadata": {}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}}, "hash": "b2f1ca50778f5648f96ee97a0371307732a8914c4c040b346c769aaf50c9a73f", "text": "The following figure shows the underlying basic data layer. This layer contains user profile data, item data, behavior data, and comment data. The user profile data may be users' heights and weights, items they purchased, their purchase preferences, or their education background. The item data is the prices, colors, and origins of items. If the item is a video, the item data is the information of the video such as the video content and tags. The behavior data refers to the interaction between users and items.", "start_char_idx": 0, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa59fd24-1234-4b08-9da9-820a3713cdb1": {"__data__": {"id_": "fa59fd24-1234-4b08-9da9-820a3713cdb1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "125ab7cb-5757-4c1e-9325-711eea81eb90", "node_type": "1", "metadata": {}, "hash": "b2f1ca50778f5648f96ee97a0371307732a8914c4c040b346c769aaf50c9a73f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8632f10-ff2a-41c6-88c4-5f1fa6fcb83b", "node_type": "1", "metadata": {}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "text": "The behavior data refers to the interaction between users and items. For example, when a user watches a video, the user may add a like to the video, add the video to favorites, or pay for the video. These actions are all the user's behavior data. The comment data may involve third-party data and may not be available for every item on every platform. However, the user data, the item data, and the behavior data are essential. With the three types of data ready, we can move on to the data processing and storage layer.", "start_char_idx": 446, "end_char_idx": 966, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f8632f10-ff2a-41c6-88c4-5f1fa6fcb83b": {"__data__": {"id_": "f8632f10-ff2a-41c6-88c4-5f1fa6fcb83b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa59fd24-1234-4b08-9da9-820a3713cdb1", "node_type": "1", "metadata": {}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97362a6a-e2e1-4a8e-8522-b751704c6ab1", "node_type": "1", "metadata": {}, "hash": "f2a4de20681599a4f43a85a0ba213f47bce8390da85ab6983751a812ce4d2874", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "text": "In this layer, we can perform data processing, using feature engineering to identify user features, material features, and event features. Going forward is modeling based on these features. The entire recommendation process contains two important modules: matching and ranking. Multiple algorithms can run in parallel in the matching module, which is why this matching module is called the Multi-Channel Matching Module. Some possible matching algorithms include: Collaborative Filtering, ALS Matrix Factorization, Vector Matching and Sample Generation. Matching is followed by ranking. Many ranking algorithms are also available.", "start_char_idx": 967, "end_char_idx": 1597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97362a6a-e2e1-4a8e-8522-b751704c6ab1": {"__data__": {"id_": "97362a6a-e2e1-4a8e-8522-b751704c6ab1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8632f10-ff2a-41c6-88c4-5f1fa6fcb83b", "node_type": "1", "metadata": {}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e372769-c26b-4f53-b5e0-ace577df25bc", "node_type": "1", "metadata": {}, "hash": "278473d5daf2102bad66eb58fd9a3730528d94254f7bdde937dce5ca18fbeb58", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}}, "hash": "f2a4de20681599a4f43a85a0ba213f47bce8390da85ab6983751a812ce4d2874", "text": "Matching is followed by ranking. Many ranking algorithms are also available. These include PS-SMART, PS-LR, DeepFM, Sample Generation and more. The details of the matching and ranking algorithms are not in scope of topic. Next, you need to develop a new strategy. You must filter and deduplicate the recommendation results, perform A/B tests on the results, and try the operational strategies before you push the recommendations online. The top layer is the recommendation service, which can recommend an advertisement, a product, or a user.", "start_char_idx": 1521, "end_char_idx": 2062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e372769-c26b-4f53-b5e0-ace577df25bc": {"__data__": {"id_": "3e372769-c26b-4f53-b5e0-ace577df25bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97362a6a-e2e1-4a8e-8522-b751704c6ab1", "node_type": "1", "metadata": {}, "hash": "f2a4de20681599a4f43a85a0ba213f47bce8390da85ab6983751a812ce4d2874", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3fa3c67-6378-40d7-b277-211f27947ad4", "node_type": "1", "metadata": {}, "hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "class_name": "RelatedNodeInfo"}}, "hash": "278473d5daf2102bad66eb58fd9a3730528d94254f7bdde937dce5ca18fbeb58", "text": "For example, a social networking app can recommend users to let them follow each other. When you have such a recommendation architecture, some cloud services will be needed to make the architecture meet the four basic requirements on an enterprise-level recommender system. The most common practice is to build these modules based on cloud services and cloud ecosystems.", "start_char_idx": 2063, "end_char_idx": 2433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a51d814-c116-4700-97bc-4f304b4ff9be": {"__data__": {"id_": "5a51d814-c116-4700-97bc-4f304b4ff9be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49f80856-452b-4668-8b36-ab456465ed97", "node_type": "1", "metadata": {}, "hash": "4187134a8a9598155aed81e21f8f5ccfd8dbddd05199a212592a5bfbf84b4a1b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}}, "hash": "fadc2f40e7e89f7c0439eee3e23e5947a977425fad102a7068a38cda608dc989", "text": "The most common practice is to build these modules based on cloud services and cloud ecosystems.\n\nThe following explains the previous page: [This page discusses an example of a Architecture of a Recommender System from a Cloud Provider (Alibaba Cloud). This is to show how a more practical example of a Data Science Architecture that can be use in real life. In the realm of recommender systems, understanding the underlying architecture is pivotal. The following figure shows the underlying basic data layer. This layer contains user profile data, item data, behavior data, and comment data.", "start_char_idx": 0, "end_char_idx": 592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "49f80856-452b-4668-8b36-ab456465ed97": {"__data__": {"id_": "49f80856-452b-4668-8b36-ab456465ed97", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a51d814-c116-4700-97bc-4f304b4ff9be", "node_type": "1", "metadata": {}, "hash": "fadc2f40e7e89f7c0439eee3e23e5947a977425fad102a7068a38cda608dc989", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57b16b68-794d-4556-9da7-74970220240a", "node_type": "1", "metadata": {}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}}, "hash": "4187134a8a9598155aed81e21f8f5ccfd8dbddd05199a212592a5bfbf84b4a1b", "text": "This layer contains user profile data, item data, behavior data, and comment data. The user profile data may be users' heights and weights, items they purchased, their purchase preferences, or their education background. The item data is the prices, colors, and origins of items. If the item is a video, the item data is the information of the video such as the video content and tags. The behavior data refers to the interaction between users and items.", "start_char_idx": 510, "end_char_idx": 964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57b16b68-794d-4556-9da7-74970220240a": {"__data__": {"id_": "57b16b68-794d-4556-9da7-74970220240a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49f80856-452b-4668-8b36-ab456465ed97", "node_type": "1", "metadata": {}, "hash": "4187134a8a9598155aed81e21f8f5ccfd8dbddd05199a212592a5bfbf84b4a1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4162606d-72c8-47a0-a826-47440fed3056", "node_type": "1", "metadata": {}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "text": "The behavior data refers to the interaction between users and items. For example, when a user watches a video, the user may add a like to the video, add the video to favorites, or pay for the video. These actions are all the user's behavior data. The comment data may involve third-party data and may not be available for every item on every platform. However, the user data, the item data, and the behavior data are essential. With the three types of data ready, we can move on to the data processing and storage layer.", "start_char_idx": 896, "end_char_idx": 1416, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4162606d-72c8-47a0-a826-47440fed3056": {"__data__": {"id_": "4162606d-72c8-47a0-a826-47440fed3056", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57b16b68-794d-4556-9da7-74970220240a", "node_type": "1", "metadata": {}, "hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70c11c80-5067-46aa-9e94-2266016fac1e", "node_type": "1", "metadata": {}, "hash": "d4f2a2c543fa4dcf11876f2743f5346271c5cc0807d451471199337d6238e1fe", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "text": "In this layer, we can perform data processing, using feature engineering to identify user features, material features, and event features. Going forward is modeling based on these features. The entire recommendation process contains two important modules: matching and ranking. Multiple algorithms can run in parallel in the matching module, which is why this matching module is called the Multi-Channel Matching Module. Some possible matching algorithms include: Collaborative Filtering, ALS Matrix Factorization, Vector Matching and Sample Generation. Matching is followed by ranking. Many ranking algorithms are also available.", "start_char_idx": 1417, "end_char_idx": 2047, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70c11c80-5067-46aa-9e94-2266016fac1e": {"__data__": {"id_": "70c11c80-5067-46aa-9e94-2266016fac1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4162606d-72c8-47a0-a826-47440fed3056", "node_type": "1", "metadata": {}, "hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "node_type": "1", "metadata": {}, "hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "class_name": "RelatedNodeInfo"}}, "hash": "d4f2a2c543fa4dcf11876f2743f5346271c5cc0807d451471199337d6238e1fe", "text": "Matching is followed by ranking. Many ranking algorithms are also available. These include PS-SMART, PS-LR, DeepFM, Sample Generation and more. The details of the matching and ranking algorithms are not in scope of topic. Next, you need to develop a new strategy. You must filter and deduplicate the recommendation results, perform A/B tests on the results, and try the operational strategies before you push the recommendations online.", "start_char_idx": 1971, "end_char_idx": 2407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "55e30b8c-0512-400f-9a5e-04392a46d6ae": {"__data__": {"id_": "55e30b8c-0512-400f-9a5e-04392a46d6ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5075fc3b-bde7-49bf-ae26-e0e25fdaef6c", "node_type": "1", "metadata": {}, "hash": "30e080706974ed1e2a18f98add5bd62416430d9338f9bb390e5a45bac89543fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}}, "hash": "d3c827d6a12eba71f81d7618ee0148bff3bad1aff94c0acff86c0f7f00cd02cb", "text": "The top layer is the recommendation service, which can recommend an advertisement, a product, or a user. For example, a social networking app can recommend users to let them follow each other. When you have such a recommendation architecture, some cloud services will be needed to make the architecture meet the four basic requirements on an enterprise-level recommender system. The most common practice is to build these modules based on cloud services and cloud ecosystems.] Now the current page looks at the actual implementation of these ideas.", "start_char_idx": 0, "end_char_idx": 548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5075fc3b-bde7-49bf-ae26-e0e25fdaef6c": {"__data__": {"id_": "5075fc3b-bde7-49bf-ae26-e0e25fdaef6c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55e30b8c-0512-400f-9a5e-04392a46d6ae", "node_type": "1", "metadata": {}, "hash": "d3c827d6a12eba71f81d7618ee0148bff3bad1aff94c0acff86c0f7f00cd02cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1c46d10-1323-44e9-a98a-acb01f69c7cb", "node_type": "1", "metadata": {}, "hash": "38c68c1c1b6c6fe9525d10975d45f06a6b186bc8397e8882dc9d79f3fc0e3707", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}}, "hash": "30e080706974ed1e2a18f98add5bd62416430d9338f9bb390e5a45bac89543fd", "text": "Now the current page looks at the actual implementation of these ideas. We can store underlying basic data (user data, item data, comment data) in a database such as RDS MySQL or DRDS. To process some online behaviour data in real time, such as some clicks or follows, we can use Apache Kafka. At the data processing and storage level, can use Flink Real-Time computing to process data and generate real-time behaviour data. Can use Max Compute for feature engineering processes. The model training layer can be implemented using matching and ranking algorithms from Alibaba\u2019s Platform for AI (PAI).", "start_char_idx": 477, "end_char_idx": 1076, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1c46d10-1323-44e9-a98a-acb01f69c7cb": {"__data__": {"id_": "e1c46d10-1323-44e9-a98a-acb01f69c7cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5075fc3b-bde7-49bf-ae26-e0e25fdaef6c", "node_type": "1", "metadata": {}, "hash": "30e080706974ed1e2a18f98add5bd62416430d9338f9bb390e5a45bac89543fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45c9b2ed-58b4-4f03-97ff-46c923ed09cf", "node_type": "1", "metadata": {}, "hash": "1f9ef09b2b6b63c117181861813f8e3be4fbfbff9c985e54b3bde7a378306751", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}}, "hash": "38c68c1c1b6c6fe9525d10975d45f06a6b186bc8397e8882dc9d79f3fc0e3707", "text": "In such implementations it may make sense to adopt a cloud-native solution for the top-layer application to ensure resource and service elasticity. In the final phase where the recommendation system actually starts recommending to users, you can perform matching and then deduplicate the matching results to generate the final sample for ranking. Then the ranking results are fed back to the user.\n\nThe following page discusses the topic of Memento Deployment, where developed models and solutions are put into practical use to derive value from data. This is discussed via the following things that are done for deployment. Model Integration: Integrate ML models into the target system,", "start_char_idx": 1077, "end_char_idx": 1764, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "45c9b2ed-58b4-4f03-97ff-46c923ed09cf": {"__data__": {"id_": "45c9b2ed-58b4-4f03-97ff-46c923ed09cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1c46d10-1323-44e9-a98a-acb01f69c7cb", "node_type": "1", "metadata": {}, "hash": "38c68c1c1b6c6fe9525d10975d45f06a6b186bc8397e8882dc9d79f3fc0e3707", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b07d9b9-d883-4bda-af66-83369cbf9fb9", "node_type": "1", "metadata": {}, "hash": "ae61bc195fcdf484938059d0892dbf791376a57d1d2b86c2999dea2553e0e002", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}}, "hash": "1f9ef09b2b6b63c117181861813f8e3be4fbfbff9c985e54b3bde7a378306751", "text": "Model Integration: Integrate ML models into the target system, Scalability & Optimize: Ensure models can handle real-world loads, Monitor & Maintain: Continuously assess and maintain model performance, A/B Testing: Compare model performance through A/B tests, User Interface & Integrate: Integrate solutions with user interfaces, Security & Compliance: Ensure data security and regulatory compliance, Documentation: Provide comprehensive system documentation, User Training & Support: Train users and offer support for effective use, Feedback Loop: Establish a user feedback mechanism, Scale & Allocate: Monitor and scale resources as needed, Business Impact: Continuously assess the solution's impact on goals,", "start_char_idx": 1702, "end_char_idx": 2413, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b07d9b9-d883-4bda-af66-83369cbf9fb9": {"__data__": {"id_": "7b07d9b9-d883-4bda-af66-83369cbf9fb9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45c9b2ed-58b4-4f03-97ff-46c923ed09cf", "node_type": "1", "metadata": {}, "hash": "1f9ef09b2b6b63c117181861813f8e3be4fbfbff9c985e54b3bde7a378306751", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856", "node_type": "1", "metadata": {}, "hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "class_name": "RelatedNodeInfo"}}, "hash": "ae61bc195fcdf484938059d0892dbf791376a57d1d2b86c2999dea2553e0e002", "text": "Business Impact: Continuously assess the solution's impact on goals, Model Re-Training: Plan for periodic model updates.\n\nThis page discusses Model Serving Patterns. Essentially the page looks into Machine Learning (ML) Architecture Patterns for ML Model Operationalization.", "start_char_idx": 2345, "end_char_idx": 2619, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9fd3d57a-689b-48cf-89fe-1ac43363fd8b": {"__data__": {"id_": "9fd3d57a-689b-48cf-89fe-1ac43363fd8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59112c5b-af14-4204-a884-6adfc73e6b7e", "node_type": "1", "metadata": {}, "hash": "143c3cd34d548fdaf85282ca4653c3e9f4d0b09e4068d735faded81ca3200c71", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}}, "hash": "514b0977660358bff68155cc4fd3a34ba6e15ed2613fbe45ae504e86ed57a4e4", "text": "Essentially the page looks into Machine Learning (ML) Architecture Patterns for ML Model Operationalization. This is done via the use of a graph which shows that, if the Model Prediction is to be done on demand and the model learning is to be done offline then one should use Microservices and REST API. If the Model Prediction is to be done on demand and the model learning is to be done online then one should use Real-time streaming analysis and Online Learning. If the Model Prediction is to be done in Batches and the model learning is to be done online then one should use Automated ML.", "start_char_idx": 0, "end_char_idx": 592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59112c5b-af14-4204-a884-6adfc73e6b7e": {"__data__": {"id_": "59112c5b-af14-4204-a884-6adfc73e6b7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fd3d57a-689b-48cf-89fe-1ac43363fd8b", "node_type": "1", "metadata": {}, "hash": "514b0977660358bff68155cc4fd3a34ba6e15ed2613fbe45ae504e86ed57a4e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "596c5249-8745-4113-aaaa-aafc6f60dfa0", "node_type": "1", "metadata": {}, "hash": "903b34d4c31eed3440474e34f7b387d635d0dc82ca9c88abcfa37a53da6d63db", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}}, "hash": "143c3cd34d548fdaf85282ca4653c3e9f4d0b09e4068d735faded81ca3200c71", "text": "If the Model Prediction is to be done in Batches and the model learning is to be done offline then one should use Forecast and Batch Prediction. One thing to note is that services that need to be predicted on demand need to use Real-Time data whereas models that can be predicted in batches can use historical data. Finally, Models that can learn/trained offline are Static Learning whereas models that are to be trained online are said to be dynamic learning.\n\nThe following page discusses the topic of Machine Learning (ML) Model Serialization formats.", "start_char_idx": 593, "end_char_idx": 1147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "596c5249-8745-4113-aaaa-aafc6f60dfa0": {"__data__": {"id_": "596c5249-8745-4113-aaaa-aafc6f60dfa0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59112c5b-af14-4204-a884-6adfc73e6b7e", "node_type": "1", "metadata": {}, "hash": "143c3cd34d548fdaf85282ca4653c3e9f4d0b09e4068d735faded81ca3200c71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7716de20-bef5-4c15-a790-9dcc7f5b0071", "node_type": "1", "metadata": {}, "hash": "6ae182af8f9941c9a416e9c6451b1a590457768028c68f2a8b5a36ddb202b11e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}}, "hash": "903b34d4c31eed3440474e34f7b387d635d0dc82ca9c88abcfa37a53da6d63db", "text": "The following page discusses the topic of Machine Learning (ML) Model Serialization formats. This basically discusses how to create a format that can be distributed, the ML model must be both accessible and capable of running autonomously. There are two main formats that the page discusses, Language-Agnostic Exchange Formats and Vendor-Specific Exchange Formats.", "start_char_idx": 1055, "end_char_idx": 1419, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7716de20-bef5-4c15-a790-9dcc7f5b0071": {"__data__": {"id_": "7716de20-bef5-4c15-a790-9dcc7f5b0071", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "596c5249-8745-4113-aaaa-aafc6f60dfa0", "node_type": "1", "metadata": {}, "hash": "903b34d4c31eed3440474e34f7b387d635d0dc82ca9c88abcfa37a53da6d63db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa53c5fd-2f00-4f92-8097-02cd762e7ef4", "node_type": "1", "metadata": {}, "hash": "8b03c4899f07e07dcf30b5099d9e3e1accd721dd1017ad58116d19f3ecd40323", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}}, "hash": "6ae182af8f9941c9a416e9c6451b1a590457768028c68f2a8b5a36ddb202b11e", "text": "Language-Agnostic Exchange Formats: Amalgamation: Bundles model and code into one package for simple ML algorithms, PMML (Predictive Model Markup Language): Describes models in XML, but not all ML algorithms are supported, limited open-source usage due to licensing, PFA (Portable Format for Analytics): JSON format for executable scoring engines, needs a PFA-enabled environment and ONNX (Open Neural Network eXchange): Framework-independent format supported by tech giants, enables compatibility among various ML tools.", "start_char_idx": 1420, "end_char_idx": 1941, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa53c5fd-2f00-4f92-8097-02cd762e7ef4": {"__data__": {"id_": "aa53c5fd-2f00-4f92-8097-02cd762e7ef4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7716de20-bef5-4c15-a790-9dcc7f5b0071", "node_type": "1", "metadata": {}, "hash": "6ae182af8f9941c9a416e9c6451b1a590457768028c68f2a8b5a36ddb202b11e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "node_type": "1", "metadata": {}, "hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "class_name": "RelatedNodeInfo"}}, "hash": "8b03c4899f07e07dcf30b5099d9e3e1accd721dd1017ad58116d19f3ecd40323", "text": "Vendor-Specific Exchange Formats: Scikit-Learn: Saves models as pickled Python objects (.pkl), H2O: Converts models to POJO or MOJO, SparkML: Uses MLeap with runtime support for Spark, Scikit-learn, and Tensorflow, TensorFlow: Models saved as .pb (protocol buffer) files, PyTorch: Uses proprietary Torch Script as .pt files for C++, Keras: Saves models as .h5 files in HDF format and Apple Core ML: Proprietary .mlmodel format for iOS apps, requires conversion for models from other frameworks.", "start_char_idx": 1942, "end_char_idx": 2436, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc971e03-cd34-4d49-a07a-f8525022c66a": {"__data__": {"id_": "dc971e03-cd34-4d49-a07a-f8525022c66a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a2088a27-5fe6-416f-9e99-830391aa20e6", "node_type": "1", "metadata": {}, "hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a2088a27-5fe6-416f-9e99-830391aa20e6", "node_type": "1", "metadata": {}, "hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "class_name": "RelatedNodeInfo"}}, "hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "text": "The following page discusses the topic of Machine Learning Model Serving Taxonomy, essentially meaning the ways to integrate the ML model in a software system. There are a few different ways to integrate ML models that we will be looking at: Model-as-Dependency, Model-as-Service, Hybrid Model Serving, Precompute and Model On Demand.", "start_char_idx": 0, "end_char_idx": 334, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c63db16a-5671-4c84-a7ae-55210385c6c1": {"__data__": {"id_": "c63db16a-5671-4c84-a7ae-55210385c6c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e690edde-5105-4631-a9b8-5fb9ba9b805a", "node_type": "1", "metadata": {}, "hash": "890c5aadefba855a89c1b8af524330019878c4b992c753e57b5a6aa88d3ed921", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}}, "hash": "286af3f436c36d014c08e0123318264b96b880acb61bef19b9d597c3294f1996", "text": "In the case of model-as-dependency, the model service and versioning are together with the consuming application In this case, user has the model and can input directly and get predictions directly. Thus, the build & runtime are immediately available to user. In the case of Model-as-Service, service & versioning is independent from the consuming application. The compile and runtime are available through the use of REST API. Therefore, as the name suggests when users web app gets an input they need to feed to model, they send the input to the model via REST API and get the prediction back via said API.", "start_char_idx": 0, "end_char_idx": 608, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e690edde-5105-4631-a9b8-5fb9ba9b805a": {"__data__": {"id_": "e690edde-5105-4631-a9b8-5fb9ba9b805a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c63db16a-5671-4c84-a7ae-55210385c6c1", "node_type": "1", "metadata": {}, "hash": "286af3f436c36d014c08e0123318264b96b880acb61bef19b9d597c3294f1996", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b381ccf-a2e7-4a5c-ba81-1498484c4b68", "node_type": "1", "metadata": {}, "hash": "e8488350feaa8b729a1f9df97a93e8c09693bc6b01d2802a72bc7173dfe10a2f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}}, "hash": "890c5aadefba855a89c1b8af524330019878c4b992c753e57b5a6aa88d3ed921", "text": "In this case, the web interacts with a web app that sends inputs to the model which then sends the predictions back to the web app. Hybrid Model Serving also known as Federated Learning is the combination of the two former methods. Finally, for model on demand or precompute, service & versioning is also independent from the consuming application. In this case however, the model is only available at the runtime scope.\n\nThe following page discusses Machine Learning (ML) Deployment Strategies. The strategies discussed vary based on infrastructure.", "start_char_idx": 609, "end_char_idx": 1159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b381ccf-a2e7-4a5c-ba81-1498484c4b68": {"__data__": {"id_": "4b381ccf-a2e7-4a5c-ba81-1498484c4b68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e690edde-5105-4631-a9b8-5fb9ba9b805a", "node_type": "1", "metadata": {}, "hash": "890c5aadefba855a89c1b8af524330019878c4b992c753e57b5a6aa88d3ed921", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a443e7c-c9ba-452e-a008-ebaa4394ef83", "node_type": "1", "metadata": {}, "hash": "1499ebc7f9bc3adb7133a76f065bd2268c44147f39cb10c44683983e2555f8b9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}}, "hash": "e8488350feaa8b729a1f9df97a93e8c09693bc6b01d2802a72bc7173dfe10a2f", "text": "The strategies discussed vary based on infrastructure. We can either deploy our ML Model to Cloud instances or we can deploy our ML Model as a serverless function. Let us first discuss deployment of our ML Model to Cloud Instances. In this scenario, containerization is the usual way to deliver models, in which case Docker is the popular technology to use. It does not matter whether you are using it on-premises, the cloud, or a mix of the two. The containers can be managed using either Kubernetes or AWS Fargate.", "start_char_idx": 1105, "end_char_idx": 1621, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a443e7c-c9ba-452e-a008-ebaa4394ef83": {"__data__": {"id_": "1a443e7c-c9ba-452e-a008-ebaa4394ef83", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b381ccf-a2e7-4a5c-ba81-1498484c4b68", "node_type": "1", "metadata": {}, "hash": "e8488350feaa8b729a1f9df97a93e8c09693bc6b01d2802a72bc7173dfe10a2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb331bd7-dd37-4d71-b0cf-257c68c73927", "node_type": "1", "metadata": {}, "hash": "95c26fa84d8998a599905d3479a3bb2367b64ce9c66a98efae219d73eccc4a68", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}}, "hash": "1499ebc7f9bc3adb7133a76f065bd2268c44147f39cb10c44683983e2555f8b9", "text": "The containers can be managed using either Kubernetes or AWS Fargate. ML model functions are made available through a REST API, often made using Flask. Now let us discuss the deployment of ML Model as serverless functions. Cloud vendors provide ML platforms for deploying model (example: AWS Sagemaker, Google Cloud AI Platform, Azure ML Studio, and IDM Watson ML). Commercial cloud services like AWS Lambda and Google App Engine containerize ML models. Deploying a model as a serverless function means putting code and dependencies into .zip files with a single-entry point.", "start_char_idx": 1552, "end_char_idx": 2127, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb331bd7-dd37-4d71-b0cf-257c68c73927": {"__data__": {"id_": "bb331bd7-dd37-4d71-b0cf-257c68c73927", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a443e7c-c9ba-452e-a008-ebaa4394ef83", "node_type": "1", "metadata": {}, "hash": "1499ebc7f9bc3adb7133a76f065bd2268c44147f39cb10c44683983e2555f8b9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3", "node_type": "1", "metadata": {}, "hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "class_name": "RelatedNodeInfo"}}, "hash": "95c26fa84d8998a599905d3479a3bb2367b64ce9c66a98efae219d73eccc4a68", "text": "Then Azure Functions, AWS Lambda, and Google Cloud Functions manage these functions. The decision of which infrastructure to choose depends on cost, privacy of models and data and various other needs.\n\nThe following page discusses the importance of Optimizing ML Deployments with Machine Learning Operations (ML Ops).", "start_char_idx": 2128, "end_char_idx": 2445, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6859e6bf-998d-459f-b45a-4dfdde7ea1ca": {"__data__": {"id_": "6859e6bf-998d-459f-b45a-4dfdde7ea1ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14af1033-c053-4882-bb8c-8a22c85c9c0f", "node_type": "1", "metadata": {}, "hash": "a0fed716c4d9133fb9df4c3aa427083266117a091c375f0169b2253e8419b370", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}}, "hash": "92ec555ec6ed234f62fa44cf7a4d4a067625358a32cc56c7c65d06127bc72689", "text": "The page discusses how to establish best practices and tools to test, deploy, manage, and monitor ML models in real-world production. Only a small fraction of a real-world ML system is composed of the ML code. Technical Debt is real, there are shortcuts, suboptimal practices, or decisions made during the development and deployment of ML systems that can lead to long-term consequences, inefficiencies, and challenges.", "start_char_idx": 0, "end_char_idx": 419, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14af1033-c053-4882-bb8c-8a22c85c9c0f": {"__data__": {"id_": "14af1033-c053-4882-bb8c-8a22c85c9c0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6859e6bf-998d-459f-b45a-4dfdde7ea1ca", "node_type": "1", "metadata": {}, "hash": "92ec555ec6ed234f62fa44cf7a4d4a067625358a32cc56c7c65d06127bc72689", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e1a32e9-0f6b-4a12-b9be-78566fcabbf8", "node_type": "1", "metadata": {}, "hash": "a352b5c7a10923821a18690388a3bf6919d9eb990d8b26835f062f8cc5cae99e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}}, "hash": "a0fed716c4d9133fb9df4c3aa427083266117a091c375f0169b2253e8419b370", "text": "Here are a few reasons why it is ML Ops is important: [ML Ops is vital for adapting to changing factors in ML applications], [It speeds up model deployment, reducing wait times and delivering value], [ML systems face technical and compliance risks linked to data, code, and processes], [Lack of infrastructure, monitoring, or compliance can harm systems and reputation], [ML Ops enhances long-term performance and efficiency via automation], [ML Ops blends ModelOps, DataOps, and DevOps principles for stability and efficiency] and [DevOps manages software apps, while ML Ops excels in ML model and data management for peak performance].", "start_char_idx": 420, "end_char_idx": 1057, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e1a32e9-0f6b-4a12-b9be-78566fcabbf8": {"__data__": {"id_": "4e1a32e9-0f6b-4a12-b9be-78566fcabbf8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14af1033-c053-4882-bb8c-8a22c85c9c0f", "node_type": "1", "metadata": {}, "hash": "a0fed716c4d9133fb9df4c3aa427083266117a091c375f0169b2253e8419b370", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b77f9223-fd0f-4aa3-b6dc-366c66836370", "node_type": "1", "metadata": {}, "hash": "7cc56f1f81a5afd969bdba943d9c7ac7534570ea5ec0245a5b5e12f0c6e207a4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}}, "hash": "a352b5c7a10923821a18690388a3bf6919d9eb990d8b26835f062f8cc5cae99e", "text": "The following page discusses the Distinctions Between Deployment in the Data Science Lifecycle Process and Machine Learning Operations (MLOPs). The page compares the two in a table format. Each row compares Deployment in the Data Science Lifecycle Process vs. Deployment in MLOps. First row: [Timing of Deployment: Data Science Lifecycle: Occurs in the later stages of the project, post-model development and evaluation. MLOps: Spans the entire lifecycle of an ML model, from initial development to continuous maintenance in production.].", "start_char_idx": 1059, "end_char_idx": 1597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b77f9223-fd0f-4aa3-b6dc-366c66836370": {"__data__": {"id_": "b77f9223-fd0f-4aa3-b6dc-366c66836370", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e1a32e9-0f6b-4a12-b9be-78566fcabbf8", "node_type": "1", "metadata": {}, "hash": "a352b5c7a10923821a18690388a3bf6919d9eb990d8b26835f062f8cc5cae99e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79d9c03b-6e99-4fcb-8edc-7d8fffe3dd9f", "node_type": "1", "metadata": {}, "hash": "ba7d679180b4563e92a0efbf2d78d0172abbe9474fb5d2cdc2539a59d01e2e36", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}}, "hash": "7cc56f1f81a5afd969bdba943d9c7ac7534570ea5ec0245a5b5e12f0c6e207a4", "text": "Second row: [Focus of Deployment: Data Science Lifecycle: Focuses on transitioning a validated ML model from a research/development environment to production. MLOps: Emphasizes ongoing operationalization and management of ML models in production, ensuring reliability and scalability.]. Third row: [Tasks Involved: Data Science Lifecycle: Involves packaging the model, creating APIs, integration with data sources, and making it available for use. MLOps: Encompasses initial deployment, continuous monitoring, automated retraining, version control, integration with CI/CD pipelines, and addressing data or concept drift.]", "start_char_idx": 1598, "end_char_idx": 2219, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79d9c03b-6e99-4fcb-8edc-7d8fffe3dd9f": {"__data__": {"id_": "79d9c03b-6e99-4fcb-8edc-7d8fffe3dd9f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b77f9223-fd0f-4aa3-b6dc-366c66836370", "node_type": "1", "metadata": {}, "hash": "7cc56f1f81a5afd969bdba943d9c7ac7534570ea5ec0245a5b5e12f0c6e207a4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "444b87b8-602d-43ac-87b5-e43467864782", "node_type": "1", "metadata": {}, "hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "class_name": "RelatedNodeInfo"}}, "hash": "ba7d679180b4563e92a0efbf2d78d0172abbe9474fb5d2cdc2539a59d01e2e36", "text": "Fourth row: [Primary Goal: Data Science Lifecycle: Aims at making the model accessible for predictions or analysis in the production environment. MLOps: Focuses on ensuring effective and reliable functioning of the ML model in the real world, heavily relying on automation, monitoring, and maintenance.].", "start_char_idx": 2220, "end_char_idx": 2524, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4013eecd-6af1-4126-a353-3e354c4be33a": {"__data__": {"id_": "4013eecd-6af1-4126-a353-3e354c4be33a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffa3fd62-0326-4174-9326-f11256f22cc8", "node_type": "1", "metadata": {}, "hash": "ab350a8554c634a07d1f2c85ab383cb4227dde058af2d483b9da02e1d5059705", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}}, "hash": "e1a5e10fb60512ee23e44a098fcae129cddab41ce5ccef8c028e6c9144f82083", "text": "Fifth row: [Emphasis on Monitoring: Data Science Lifecycle: Limited to model evaluation and performance assessment before deployment. MLOps: Entails continuous monitoring throughout the model's operational life, tracking issues like data drift, concept drift, and model performance degradation.]. Sixth Row: [Performance Assessment: Data Science Lifecycle: Focuses on model evaluation metrics (accuracy, precision, recall, etc.) to determine if the model meets success criteria. MLOps: Extends beyond traditional metrics to include real-time monitoring of data quality, model latency, false positives/negatives, and alignment with business objectives.].", "start_char_idx": 0, "end_char_idx": 653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffa3fd62-0326-4174-9326-f11256f22cc8": {"__data__": {"id_": "ffa3fd62-0326-4174-9326-f11256f22cc8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4013eecd-6af1-4126-a353-3e354c4be33a", "node_type": "1", "metadata": {}, "hash": "e1a5e10fb60512ee23e44a098fcae129cddab41ce5ccef8c028e6c9144f82083", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c9f2743-ef3d-45bb-b4a4-89f093a6214a", "node_type": "1", "metadata": {}, "hash": "fc16175da2460a218ad4f98ecf555612d9e857bc3824f6c703481039ba3e807e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}}, "hash": "ab350a8554c634a07d1f2c85ab383cb4227dde058af2d483b9da02e1d5059705", "text": "The following page discusses the stages in Model Development and Deployment to ensure a systematic and controlled process for creating, testing, and deploying Machine Learning (ML) models. This is shown in a table format. [Stage 1] Experimentation. Purpose: Model development, algorithm exploration, hyperparameter tuning. Scope: Research and model development environment. Environment: Controlled research environment. [Stage 2] Test. Purpose: Verify model functionality and performance pre-production. Scope: Testing for issues and bugs isolated from production. Environment: Isolated testing environment. [Stage 3] Staging.", "start_char_idx": 655, "end_char_idx": 1281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c9f2743-ef3d-45bb-b4a4-89f093a6214a": {"__data__": {"id_": "0c9f2743-ef3d-45bb-b4a4-89f093a6214a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffa3fd62-0326-4174-9326-f11256f22cc8", "node_type": "1", "metadata": {}, "hash": "ab350a8554c634a07d1f2c85ab383cb4227dde058af2d483b9da02e1d5059705", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "535039fc-1ba6-4485-bd97-668b16f0585a", "node_type": "1", "metadata": {}, "hash": "6df15212bfc5c202638475d6c963cc3d6964267f3a18040695d84dcc8d2425a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}}, "hash": "fc16175da2460a218ad4f98ecf555612d9e857bc3824f6c703481039ba3e807e", "text": "Environment: Isolated testing environment. [Stage 3] Staging. Purpose: Test final version in an environment resembling production. Scope: Ensuring model works in a similar setup. Environment: Environment closely mirroring production. [Stage 4] Pre-Production. Purpose: Limited-scale testing before full-scale production release. Scope: Identify potential issues with a limited audience. Environment: Closer to production but with restrictions. [Stage 5] Production. Purpose: Live environment where the model actively serves its purpose. Scope: Operational phase delivering value to users.", "start_char_idx": 1220, "end_char_idx": 1808, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "535039fc-1ba6-4485-bd97-668b16f0585a": {"__data__": {"id_": "535039fc-1ba6-4485-bd97-668b16f0585a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c9f2743-ef3d-45bb-b4a4-89f093a6214a", "node_type": "1", "metadata": {}, "hash": "fc16175da2460a218ad4f98ecf555612d9e857bc3824f6c703481039ba3e807e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3996d7c9-619b-491c-8108-3367f691595e", "node_type": "1", "metadata": {}, "hash": "cfe1ca63f998eddc1bd3c5953d156fd580f4a340da18ac7a03eac68cbec36a9a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}}, "hash": "6df15212bfc5c202638475d6c963cc3d6964267f3a18040695d84dcc8d2425a8", "text": "Scope: Operational phase delivering value to users. Environment: Real-world, live production environment.\n\nThe following page discusses how MLOps Offers a Process with a Series of Iterative and Incremental Steps to Develop, Deploy, and Manage ML Models Effectively. It covers two different topics, Iterative-Incremental Development and Maturity of Automation: CI/CD Level of Automation. Iterative-Incremental Development has three broad phases, Design, Model Development and Operations. Design looks at requirements engineering, ML-use cases prioritization and Data availability check.", "start_char_idx": 1757, "end_char_idx": 2342, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3996d7c9-619b-491c-8108-3367f691595e": {"__data__": {"id_": "3996d7c9-619b-491c-8108-3367f691595e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "535039fc-1ba6-4485-bd97-668b16f0585a", "node_type": "1", "metadata": {}, "hash": "6df15212bfc5c202638475d6c963cc3d6964267f3a18040695d84dcc8d2425a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a3c7ec-b72f-420e-a583-c1107481c12c", "node_type": "1", "metadata": {}, "hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "class_name": "RelatedNodeInfo"}}, "hash": "cfe1ca63f998eddc1bd3c5953d156fd580f4a340da18ac7a03eac68cbec36a9a", "text": "Design looks at requirements engineering, ML-use cases prioritization and Data availability check. Model Development looks at Data Engineering, ML Model Engineering and Model Testing & Validation.  Operations looks at ML Model Deployment, CI/CD Pipelines and Monitoring & Triggering.", "start_char_idx": 2244, "end_char_idx": 2527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88931f80-f889-4a2c-a5f2-014daa4d0e22": {"__data__": {"id_": "88931f80-f889-4a2c-a5f2-014daa4d0e22", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "node_type": "1", "metadata": {}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbb69e8d-17ff-4235-b3a8-8335e2325f28", "node_type": "1", "metadata": {}, "hash": "ca1e003c124f03c05168e9ae43cb078e6ee67ae31a7d6d240876f67731df6eae", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "node_type": "1", "metadata": {}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "class_name": "RelatedNodeInfo"}}, "hash": "13e4c9dab536da3c4f0c5348d18084620f6a50327ca79922c74eb24b6861872c", "text": "Operations looks at ML Model Deployment, CI/CD Pipelines and Monitoring & Triggering. Maturity of Automation: CI/CD Level of Automation is described using a really detailed diagram. For a rapid and reliable update of the pipelines in production, you need a robust automated CI/CD system. This automated CI/CD system lets your data scientists rapidly explore new ideas around feature engineering, model architecture, and hyperparameters. They can implement these ideas and automatically build, test, and deploy the new pipeline components to the target environment.", "start_char_idx": 0, "end_char_idx": 564, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbb69e8d-17ff-4235-b3a8-8335e2325f28": {"__data__": {"id_": "dbb69e8d-17ff-4235-b3a8-8335e2325f28", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "node_type": "1", "metadata": {}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88931f80-f889-4a2c-a5f2-014daa4d0e22", "node_type": "1", "metadata": {}, "hash": "13e4c9dab536da3c4f0c5348d18084620f6a50327ca79922c74eb24b6861872c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "node_type": "1", "metadata": {}, "hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "class_name": "RelatedNodeInfo"}}, "hash": "ca1e003c124f03c05168e9ae43cb078e6ee67ae31a7d6d240876f67731df6eae", "text": "The following diagram shows the implementation of the ML pipeline using CI/CD, which has the characteristics of the automated ML pipelines setup plus the automated CI/CD routines. This MLOps setup includes the following components: Source control, Test and build services, Deployment services, Model registry, Feature store, ML metadata store & ML pipeline orchestrator.", "start_char_idx": 565, "end_char_idx": 935, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "684d71d1-a5d6-4b4e-bb76-6083a280b65d": {"__data__": {"id_": "684d71d1-a5d6-4b4e-bb76-6083a280b65d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7c4feec-57ed-4901-acaa-236586fe976f", "node_type": "1", "metadata": {}, "hash": "bc7c7d1595e6864f83a277549cf34accd779fc169a9de2c9244d3bd09df7fcd6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}}, "hash": "49b57bbfb97fc346d441a1416a1860e6223c285bf876549d80dcf3baa989be0e", "text": "The following page discusses The Complete Machine Learning (ML) Development Pipeline. This pipeline includes three levels where changes can occur: Data, ML Model, and Code. This means that in ML-based systems, the trigger for a build might be the combination of a code change, data change or model change. We will no go through ML Operations (MLOPs) Principles and see where how Data, ML Model, or Code can cause a change. Principle 1: Versioning, which is the tracking of ML models and data sets with version control systems.", "start_char_idx": 0, "end_char_idx": 526, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7c4feec-57ed-4901-acaa-236586fe976f": {"__data__": {"id_": "b7c4feec-57ed-4901-acaa-236586fe976f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "684d71d1-a5d6-4b4e-bb76-6083a280b65d", "node_type": "1", "metadata": {}, "hash": "49b57bbfb97fc346d441a1416a1860e6223c285bf876549d80dcf3baa989be0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfc0c368-b863-4300-b1c2-8b9e4a878106", "node_type": "1", "metadata": {}, "hash": "76f8820ac5a984a41228f033dfd387a71d602ee973f4df25b02b519f263648a7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}}, "hash": "bc7c7d1595e6864f83a277549cf34accd779fc169a9de2c9244d3bd09df7fcd6", "text": "Data: Encompasses Data preparation pipelines, Features store, Datasets, and Metadata. ML Model: Includes ML model training pipeline, ML model (object), Hyperparameters, and Experiment tracking. Code: Encompasses Application code and Configurations. Principle 2: Testing, which is ensuring the quality, reliability, and robustness of ML models and the systems built around them. Data: Covers Data Validation for error detection and Feature creation unit testing.", "start_char_idx": 527, "end_char_idx": 988, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dfc0c368-b863-4300-b1c2-8b9e4a878106": {"__data__": {"id_": "dfc0c368-b863-4300-b1c2-8b9e4a878106", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7c4feec-57ed-4901-acaa-236586fe976f", "node_type": "1", "metadata": {}, "hash": "bc7c7d1595e6864f83a277549cf34accd779fc169a9de2c9244d3bd09df7fcd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87c282a8-9c70-4382-9bd7-67ae4960c13b", "node_type": "1", "metadata": {}, "hash": "600c2bb4e12c3860337d293aaf1a7151fa1fe97f5c5815da707704a30fb7cb0e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}}, "hash": "76f8820ac5a984a41228f033dfd387a71d602ee973f4df25b02b519f263648a7", "text": "Data: Covers Data Validation for error detection and Feature creation unit testing. ML Model: Involves Unit testing for model specification, Integration testing for the ML model pipeline, Model validation before operationalization, ML model staleness testing in production, Testing model relevance and correctness, and testing non-functional requirements like security, fairness, and interpretability. Code: Encompasses Unit testing and Integration testing for the end-to-end pipeline. Principle 3: Automation, how to automate the complete ML-workflow steps. Data: Includes Data transformation, Feature creation and manipulation.", "start_char_idx": 905, "end_char_idx": 1534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87c282a8-9c70-4382-9bd7-67ae4960c13b": {"__data__": {"id_": "87c282a8-9c70-4382-9bd7-67ae4960c13b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfc0c368-b863-4300-b1c2-8b9e4a878106", "node_type": "1", "metadata": {}, "hash": "76f8820ac5a984a41228f033dfd387a71d602ee973f4df25b02b519f263648a7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e", "node_type": "1", "metadata": {}, "hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "class_name": "RelatedNodeInfo"}}, "hash": "600c2bb4e12c3860337d293aaf1a7151fa1fe97f5c5815da707704a30fb7cb0e", "text": "Data: Includes Data transformation, Feature creation and manipulation. ML Model: Comprises Data engineering pipeline, ML model training pipeline, and Hyperparameter/Parameter selection. Code: Involves ML model deployment with CI/CD and Application build.", "start_char_idx": 1464, "end_char_idx": 1718, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb3f2a26-9fde-4ee9-a559-6135e85d0d20": {"__data__": {"id_": "eb3f2a26-9fde-4ee9-a559-6135e85d0d20", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c9f35c6-7178-44df-875d-60d54fda49ee", "node_type": "1", "metadata": {}, "hash": "f35392a9e22dfe103b5bb9ab3201d1017901804b3a2018aed29539acb56eab11", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}}, "hash": "3166ff77dbfee0c7aaefa81ee63bd8bc574fc8e1aef3da6b016eea01efeafd4e", "text": "Code: Involves ML model deployment with CI/CD and Application build. Principle 4: Reproducibility, how every phase produces identical results given the same input. Data: Incorporates Backup data, Data versioning, Extract metadata, and Versioning of feature engineering. ML Model: Encompasses identical Hyperparameter tuning between dev and prod, Maintaining the same feature order, ensuring consistency in ensemble learning of ML models, and Documenting model pseudo-code.", "start_char_idx": 0, "end_char_idx": 472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c9f35c6-7178-44df-875d-60d54fda49ee": {"__data__": {"id_": "0c9f35c6-7178-44df-875d-60d54fda49ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb3f2a26-9fde-4ee9-a559-6135e85d0d20", "node_type": "1", "metadata": {}, "hash": "3166ff77dbfee0c7aaefa81ee63bd8bc574fc8e1aef3da6b016eea01efeafd4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4aae927c-0a32-4ab6-9a96-542bcfb1a2b7", "node_type": "1", "metadata": {}, "hash": "283b81914ae7a50e59462eab51def8542457fffb16c0de5f2bf018b37d49234d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}}, "hash": "f35392a9e22dfe103b5bb9ab3201d1017901804b3a2018aed29539acb56eab11", "text": "Code: Involves matching versions of dependencies in dev and prod, Consistent technical stack across dev and production environments, and providing reproducible results via container images or virtual machines. Principle 5: Deployment, transitioning from development/testing to production. Data: Involves using Feature store in both dev and prod environments. ML Model: Encompasses Containerization of the ML stack, REST API implementation, and Deployment on-premise, cloud, or edge environments. Code: Involves deployment strategies for on-premise, cloud, or edge settings.", "start_char_idx": 473, "end_char_idx": 1046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4aae927c-0a32-4ab6-9a96-542bcfb1a2b7": {"__data__": {"id_": "4aae927c-0a32-4ab6-9a96-542bcfb1a2b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c9f35c6-7178-44df-875d-60d54fda49ee", "node_type": "1", "metadata": {}, "hash": "f35392a9e22dfe103b5bb9ab3201d1017901804b3a2018aed29539acb56eab11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15d0ffde-810d-4887-a2fa-bcecdbe723e5", "node_type": "1", "metadata": {}, "hash": "b8190d6d22e9a45001a61c42dc82bed0812c360eeaa47d1b7dc5cd2594faab04", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}}, "hash": "283b81914ae7a50e59462eab51def8542457fffb16c0de5f2bf018b37d49234d", "text": "Code: Involves deployment strategies for on-premise, cloud, or edge settings. Principle 6: Monitoring, assuring everything performs as expected. Data: Includes tracking changes in Data distribution between training and serving data, and Monitoring disparities in training vs. serving features. ML Model: Covers ML model decay, Numerical stability, and Computational performance. Code: Encompasses assessing the predictive quality of the application on serving data.\n\nThe following page discusses how Machine Learning (ML) Requires Extensive Testing.", "start_char_idx": 969, "end_char_idx": 1518, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15d0ffde-810d-4887-a2fa-bcecdbe723e5": {"__data__": {"id_": "15d0ffde-810d-4887-a2fa-bcecdbe723e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4aae927c-0a32-4ab6-9a96-542bcfb1a2b7", "node_type": "1", "metadata": {}, "hash": "283b81914ae7a50e59462eab51def8542457fffb16c0de5f2bf018b37d49234d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15aa29ea-ec2a-4578-b626-6a27664aea57", "node_type": "1", "metadata": {}, "hash": "f66263c737817bae7a572d241fe9d56173b9b31c16338a12292ae71da3f1953a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}}, "hash": "b8190d6d22e9a45001a61c42dc82bed0812c360eeaa47d1b7dc5cd2594faab04", "text": "The following page discusses how Machine Learning (ML) Requires Extensive Testing. The behaviour of ML-based systems is challenging to predefine, as it relies on dynamic data characteristics and a multitude of model configuration choices. In general, when we have our code we first let it undergo ML Infrastructure Tests and Unit Tests. Then for our data, we conduct data tests and skew tests. After that we can proceed to model training where we conduct model tests and integration tests. Finally, when our system is running, we continue to run integration tests, and skew tests on our data.", "start_char_idx": 1436, "end_char_idx": 2028, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15aa29ea-ec2a-4578-b626-6a27664aea57": {"__data__": {"id_": "15aa29ea-ec2a-4578-b626-6a27664aea57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15d0ffde-810d-4887-a2fa-bcecdbe723e5", "node_type": "1", "metadata": {}, "hash": "b8190d6d22e9a45001a61c42dc82bed0812c360eeaa47d1b7dc5cd2594faab04", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e7183bf1-15a2-4b31-8742-869f779c113f", "node_type": "1", "metadata": {}, "hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "class_name": "RelatedNodeInfo"}}, "hash": "f66263c737817bae7a572d241fe9d56173b9b31c16338a12292ae71da3f1953a", "text": "At the same time, we monitor the data, prediction and system. The following points are necessary to take note when it comes to testing ML models. Feature and Data Tests: Validate data and feature schema/domain, Measure feature importance and Ensure policy compliance (e.g., GDPR).", "start_char_idx": 2029, "end_char_idx": 2309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c86cb95c-13ec-4155-bb8c-b9f920e6e8ba": {"__data__": {"id_": "c86cb95c-13ec-4155-bb8c-b9f920e6e8ba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0756c2c3-572c-4226-80e4-6b368dcc42bd", "node_type": "1", "metadata": {}, "hash": "24738a7b67ae03b4dc67fec4cc1abf674f65bf09f75421a5b67c92e149e66515", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}}, "hash": "3544f68aee3515401c4a1017964e820becea8d00f130d336b49af4fe809d3d66", "text": "Reliable Model Development: Correlate ML loss metrics with business impact, Test model staleness and retraining frequency, Compare ML model performance to baselines, use separate test sets for final evaluation, Address fairness, bias, and inclusion issues and implement conventional unit testing. ML Infrastructure Tests: ensure reproducibility in training, minimise non-determinism in training, test ML API usage and stress, check algorithmic correctness, integrate, and validate the full ML pipeline,  validate the model before serving and ensure consistency between training and serving environments.\n\nThe following page discusses the topic of Biased data using a scenario.", "start_char_idx": 0, "end_char_idx": 676, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0756c2c3-572c-4226-80e4-6b368dcc42bd": {"__data__": {"id_": "0756c2c3-572c-4226-80e4-6b368dcc42bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c86cb95c-13ec-4155-bb8c-b9f920e6e8ba", "node_type": "1", "metadata": {}, "hash": "3544f68aee3515401c4a1017964e820becea8d00f130d336b49af4fe809d3d66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d87cbf58-b3e3-431f-90d9-bf9152478ea9", "node_type": "1", "metadata": {}, "hash": "240b4ccd08551e993ae8347e374d07942cd62b19d193f3887348dbe5cd8f55fa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}}, "hash": "24738a7b67ae03b4dc67fec4cc1abf674f65bf09f75421a5b67c92e149e66515", "text": "The following page discusses the topic of Biased data using a scenario. Topic: Suspicious Loans and Biased Data in Loan Approvals. Scenario Description: In the realm of loan approvals, a concerning trend emerges where applicants from specific neighbourhoods consistently face rejection. This repetitive denial of loans is rooted in historical data riddled with biases against these very neighbourhoods. Issue: The loan approval model, guided by historical loan data, displays a clear prejudice against certain localities. The biases ingrained in this dataset unfairly disadvantage applicants from these neighbourhoods, leading to systematic and unjust loan denials.", "start_char_idx": 605, "end_char_idx": 1270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d87cbf58-b3e3-431f-90d9-bf9152478ea9": {"__data__": {"id_": "d87cbf58-b3e3-431f-90d9-bf9152478ea9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0756c2c3-572c-4226-80e4-6b368dcc42bd", "node_type": "1", "metadata": {}, "hash": "24738a7b67ae03b4dc67fec4cc1abf674f65bf09f75421a5b67c92e149e66515", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c49c9cce-17bd-4a03-8505-729997ae4656", "node_type": "1", "metadata": {}, "hash": "f39d770337ea38856ad66fa14041b9ec4b1eafbf9cadafb549aa616091cb5910", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}}, "hash": "240b4ccd08551e993ae8347e374d07942cd62b19d193f3887348dbe5cd8f55fa", "text": "Impact: The consequence of such biased data is the perpetuation of financial disparities. It not only hampers the prospects of deserving individuals seeking financial assistance but also deepens the existing societal divides by withholding opportunities based on geographic factors rather than the individual's creditworthiness. Challenges: Addressing this issue demands a nuanced approach. Simply relying on historical data without considering and rectifying the inherent biases can reinforce and perpetuate discriminatory practices. Resolution: Efforts should focus on recalibrating the loan approval model to mitigate biases and ensure fair assessment criteria.", "start_char_idx": 1271, "end_char_idx": 1935, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c49c9cce-17bd-4a03-8505-729997ae4656": {"__data__": {"id_": "c49c9cce-17bd-4a03-8505-729997ae4656", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d87cbf58-b3e3-431f-90d9-bf9152478ea9", "node_type": "1", "metadata": {}, "hash": "240b4ccd08551e993ae8347e374d07942cd62b19d193f3887348dbe5cd8f55fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cdde58b8-3042-4538-ab04-9348f0d82bc7", "node_type": "1", "metadata": {}, "hash": "499a547df128c145c64faff02beb578c12e4ebdf7ce7470e803cfc5f376b097c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}}, "hash": "f39d770337ea38856ad66fa14041b9ec4b1eafbf9cadafb549aa616091cb5910", "text": "Incorporating robust measures to counteract historical biases in the dataset is crucial to promote equitable lending practices. Implementing algorithms that actively identify and mitigate biases could significantly contribute to a more just and inclusive loan approval system.\n\nThe following page discusses the topic of Imbalanced data using a scenario. Topic: Challenges of Rare Disease Detection with Imbalanced Data. Scenario Overview: In the realm of healthcare, a predicament arises concerning a model designed for detecting a rare disease.", "start_char_idx": 1936, "end_char_idx": 2481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cdde58b8-3042-4538-ab04-9348f0d82bc7": {"__data__": {"id_": "cdde58b8-3042-4538-ab04-9348f0d82bc7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c49c9cce-17bd-4a03-8505-729997ae4656", "node_type": "1", "metadata": {}, "hash": "f39d770337ea38856ad66fa14041b9ec4b1eafbf9cadafb549aa616091cb5910", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0144dbce-80d3-4318-8ae5-5866f0330241", "node_type": "1", "metadata": {}, "hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "class_name": "RelatedNodeInfo"}}, "hash": "499a547df128c145c64faff02beb578c12e4ebdf7ce7470e803cfc5f376b097c", "text": "Despite boasting an impressive accuracy score, this model encounters significant difficulty in identifying instances of the rare disease within a population where only a mere 1 percentage of individuals are affected. Identified Issue: The primary hurdle stems from the nature of the dataset, there is an imbalance in the representation of the rare disease.", "start_char_idx": 2482, "end_char_idx": 2838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11e540b6-9f58-4845-b5f9-9bd38bf0d8d0": {"__data__": {"id_": "11e540b6-9f58-4845-b5f9-9bd38bf0d8d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "abde40db-9714-4cd1-bebc-c1d98c6323c0", "node_type": "1", "metadata": {}, "hash": "9c0deb8f051bee9115a54cea72fc25188aad727d389b7e900597c6e23648fb71", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}}, "hash": "4ec62737f936cdacdda6ad895550218fda2519d48a910f6391a29ae3b1511803", "text": "With such a minuscule percentage of the population affected by the condition, the model, while demonstrating high accuracy, struggles to effectively identify and classify instances of this rare ailment. Challenges Posed by Imbalanced Data: The imbalanced dataset poses a substantial challenge to the model's learning process. Its overwhelming focus on the majority class, representing the disease-free population, hampers its ability to grasp the intricate patterns and nuances associated with the rare disease. As a result, despite its overall high accuracy, the model fails to accurately pinpoint and classify instances of this critical condition.", "start_char_idx": 0, "end_char_idx": 649, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abde40db-9714-4cd1-bebc-c1d98c6323c0": {"__data__": {"id_": "abde40db-9714-4cd1-bebc-c1d98c6323c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11e540b6-9f58-4845-b5f9-9bd38bf0d8d0", "node_type": "1", "metadata": {}, "hash": "4ec62737f936cdacdda6ad895550218fda2519d48a910f6391a29ae3b1511803", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab5fa94c-4196-4994-beb7-0174f85b477b", "node_type": "1", "metadata": {}, "hash": "11f8ce3110cae7a28f5951fbd2d15212a1c4b41f5e82de5e4653f9146827b27a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}}, "hash": "9c0deb8f051bee9115a54cea72fc25188aad727d389b7e900597c6e23648fb71", "text": "Impact and Implications: The repercussions of this limitation are significant. Failure to effectively detect the rare disease translates to delayed diagnosis and treatment for those afflicted. In turn, this can have severe consequences on their health outcomes, potentially leading to exacerbated health conditions or even mortality due to delayed intervention. Resolving the Imbalance: Addressing this challenge requires strategic intervention. Techniques such as oversampling the minority class, synthetic data generation, or leveraging specialized algorithms designed to handle imbalanced datasets could potentially recalibrate the model's learning process.", "start_char_idx": 650, "end_char_idx": 1310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab5fa94c-4196-4994-beb7-0174f85b477b": {"__data__": {"id_": "ab5fa94c-4196-4994-beb7-0174f85b477b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abde40db-9714-4cd1-bebc-c1d98c6323c0", "node_type": "1", "metadata": {}, "hash": "9c0deb8f051bee9115a54cea72fc25188aad727d389b7e900597c6e23648fb71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa83d018-7c38-4aec-82ed-d81726fe2f49", "node_type": "1", "metadata": {}, "hash": "3918799c5f1d56724cfdfc3c0bb92a4586ef8582b0c89dec4dd8f1a3bb103ae8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}}, "hash": "11f8ce3110cae7a28f5951fbd2d15212a1c4b41f5e82de5e4653f9146827b27a", "text": "By providing a more balanced representation of the rare disease within the dataset, the model can be trained to better recognize and accurately classify instances of this critical condition.\n\nThe following page discusses the topic of Data Drift using a scenario. Topic: Addressing Traffic Jams Caused by Data Drift in Traffic Light Optimization. Scenario Description: Within a city's intricate traffic management system, an ML model was meticulously trained to streamline traffic flow by optimizing the timings of traffic lights. Initially, this model operated seamlessly, efficiently navigating vehicular movement.", "start_char_idx": 1311, "end_char_idx": 1926, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa83d018-7c38-4aec-82ed-d81726fe2f49": {"__data__": {"id_": "aa83d018-7c38-4aec-82ed-d81726fe2f49", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab5fa94c-4196-4994-beb7-0174f85b477b", "node_type": "1", "metadata": {}, "hash": "11f8ce3110cae7a28f5951fbd2d15212a1c4b41f5e82de5e4653f9146827b27a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c0ba5c4-71ee-4caf-ba7f-5f0ee137604e", "node_type": "1", "metadata": {}, "hash": "f5dcfe03c874b5f1326190fe146cd79a5ff3c5c8b0234c0171ef9d7fdf144250", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}}, "hash": "3918799c5f1d56724cfdfc3c0bb92a4586ef8582b0c89dec4dd8f1a3bb103ae8", "text": "Initially, this model operated seamlessly, efficiently navigating vehicular movement. However, an unexpected turn of events has occurred as traffic jams have started to emerge, contradicting the model's intended purpose. Identified Issue: The root cause behind this unforeseen disruption lies in what's known as 'data drift'. Over time, the environmental factors, traffic patterns, and behavioural dynamics of drivers have subtly shifted. These changes, unaccounted for in the model's initial training data, have led to a disparity between the model's predictions and the evolving real-time traffic conditions.", "start_char_idx": 1841, "end_char_idx": 2451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c0ba5c4-71ee-4caf-ba7f-5f0ee137604e": {"__data__": {"id_": "1c0ba5c4-71ee-4caf-ba7f-5f0ee137604e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa83d018-7c38-4aec-82ed-d81726fe2f49", "node_type": "1", "metadata": {}, "hash": "3918799c5f1d56724cfdfc3c0bb92a4586ef8582b0c89dec4dd8f1a3bb103ae8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "node_type": "1", "metadata": {}, "hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "class_name": "RelatedNodeInfo"}}, "hash": "f5dcfe03c874b5f1326190fe146cd79a5ff3c5c8b0234c0171ef9d7fdf144250", "text": "Data Drift and Its Implications: Data drift, the gradual deviation of new data from the original training data, poses a significant challenge. The model, designed to optimize traffic flow based on historical patterns, struggles to adapt to the evolving traffic dynamics.", "start_char_idx": 2452, "end_char_idx": 2722, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e4df545-6ba1-4bf2-bc56-84199d771183": {"__data__": {"id_": "4e4df545-6ba1-4bf2-bc56-84199d771183", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4f55450-8c58-4e2d-a99f-8c413350f21d", "node_type": "1", "metadata": {}, "hash": "8f617bf4d209167ca8fc09164c9a7c1650d3bb8064d1efd622490e11494c7bab", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}}, "hash": "fb40cd3aad769da672b56151d75f29e2628c891a226b9152a15631d66e17958e", "text": "Consequently, its recommendations for traffic light timings no longer align with the current traffic scenarios, inadvertently causing congestion and gridlocks instead of alleviating them. Impact and Mitigation: The ramifications of this mismatch between model predictions and actual traffic conditions are evident in the increasing traffic congestion, resulting in delays, frustration among commuters, and economic implications due to lost productivity. Resolving this issue necessitates recalibrating the model by incorporating mechanisms to detect and adapt to data drift.", "start_char_idx": 0, "end_char_idx": 574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4f55450-8c58-4e2d-a99f-8c413350f21d": {"__data__": {"id_": "b4f55450-8c58-4e2d-a99f-8c413350f21d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e4df545-6ba1-4bf2-bc56-84199d771183", "node_type": "1", "metadata": {}, "hash": "fb40cd3aad769da672b56151d75f29e2628c891a226b9152a15631d66e17958e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "429c52c1-8ff8-44ee-b26a-54cf6eb8adc4", "node_type": "1", "metadata": {}, "hash": "0798a09527aa64b6367d2dec802e50bfb004dcf0c20d8e122b13894f8e2cf065", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}}, "hash": "8f617bf4d209167ca8fc09164c9a7c1650d3bb8064d1efd622490e11494c7bab", "text": "Techniques involving continuous model retraining using updated datasets reflecting current traffic dynamics or implementing adaptive learning algorithms capable of adjusting to evolving patterns in real-time could aid in restoring the model's effectiveness.\n\nThe following page discusses the topic of Lack of generalization using a scenario. Topic: Addressing Breed Misclassification in Dog Image Classification Models. Scenario Overview: Within the domain of image classification, a model trained specifically on dog images encounters persistent misclassification issues, particularly with certain breeds of dogs. This puzzling discrepancy raises the question: why are these misclassifications occurring?", "start_char_idx": 575, "end_char_idx": 1280, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "429c52c1-8ff8-44ee-b26a-54cf6eb8adc4": {"__data__": {"id_": "429c52c1-8ff8-44ee-b26a-54cf6eb8adc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4f55450-8c58-4e2d-a99f-8c413350f21d", "node_type": "1", "metadata": {}, "hash": "8f617bf4d209167ca8fc09164c9a7c1650d3bb8064d1efd622490e11494c7bab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a98b628-84b0-47ac-9abf-12e8318dd00f", "node_type": "1", "metadata": {}, "hash": "65350e1c106f67b51bad5efdffcef26b1f0d483f25873918c7ce7ac857196b0d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}}, "hash": "0798a09527aa64b6367d2dec802e50bfb004dcf0c20d8e122b13894f8e2cf065", "text": "This puzzling discrepancy raises the question: why are these misclassifications occurring? Identified Issue: The primary culprit behind these recurrent misclassifications lies in the model's limited generalization capabilities. While proficient in recognizing and categorizing several dog breeds accurately, its failure to generalize across all breeds leads to misclassifications for certain specific breeds. Lack of Generalization and its Ramifications: The model's inability to generalize effectively across diverse features and characteristics present in various dog breeds significantly impacts its accuracy.", "start_char_idx": 1190, "end_char_idx": 1802, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a98b628-84b0-47ac-9abf-12e8318dd00f": {"__data__": {"id_": "7a98b628-84b0-47ac-9abf-12e8318dd00f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "429c52c1-8ff8-44ee-b26a-54cf6eb8adc4", "node_type": "1", "metadata": {}, "hash": "0798a09527aa64b6367d2dec802e50bfb004dcf0c20d8e122b13894f8e2cf065", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad955d23-c9da-4902-829b-4c43b4851a1f", "node_type": "1", "metadata": {}, "hash": "499552db6fa5b03974503f054b95cd08764b7edeb4d941755c4d21b4f62aa014", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}}, "hash": "65350e1c106f67b51bad5efdffcef26b1f0d483f25873918c7ce7ac857196b0d", "text": "Traits unique to specific breeds, such as subtle variations in fur texture, facial structures, or colour patterns, pose challenges for the model's generalized learning, resulting in misclassifications. Implications and Addressing the Shortcoming: The implications of this limitation are apparent in the mislabelling of dog breeds, potentially causing confusion in applications relying on accurate breed identification, such as veterinary diagnostics or pet-related services. Addressing this issue warrants augmenting the model's training data with a more comprehensive and diverse set of images encompassing a wider spectrum of dog breeds.", "start_char_idx": 1803, "end_char_idx": 2442, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad955d23-c9da-4902-829b-4c43b4851a1f": {"__data__": {"id_": "ad955d23-c9da-4902-829b-4c43b4851a1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a98b628-84b0-47ac-9abf-12e8318dd00f", "node_type": "1", "metadata": {}, "hash": "65350e1c106f67b51bad5efdffcef26b1f0d483f25873918c7ce7ac857196b0d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "311bd72d-5546-4502-bbab-baee387de6f3", "node_type": "1", "metadata": {}, "hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "class_name": "RelatedNodeInfo"}}, "hash": "499552db6fa5b03974503f054b95cd08764b7edeb4d941755c4d21b4f62aa014", "text": "Additionally, implementing techniques to enhance the model's generalization abilities, such as transfer learning from pre-trained models or incorporating regularization methods to reduce overfitting to specific breed features, could significantly improve its breed classification accuracy.\n\nThis page just says the word bonus and then shows a set of images. The first group of images show images that can be mistaken to be either dogs or donuts. The second group of images show images that can be mistaken to be either mop or dogs.", "start_char_idx": 2443, "end_char_idx": 2974, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd01ea58-a6eb-4b99-942a-3bef5880ac29": {"__data__": {"id_": "fd01ea58-a6eb-4b99-942a-3bef5880ac29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cd6114a1-4263-4f9d-a493-6307f278e827", "node_type": "1", "metadata": {}, "hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cd6114a1-4263-4f9d-a493-6307f278e827", "node_type": "1", "metadata": {}, "hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "class_name": "RelatedNodeInfo"}}, "hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "text": "The second group of images show images that can be mistaken to be either mop or dogs. The final group of images show images that can be mistaken to be either chicken wings or dogs.\n\nThe following page discusses the topic of concept drift using a scenario. Topic: Addressing Concept Drift Impacting E-commerce Recommendation Systems.", "start_char_idx": 0, "end_char_idx": 332, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbdb8738-24da-403f-9f5a-47a2f4d24695": {"__data__": {"id_": "cbdb8738-24da-403f-9f5a-47a2f4d24695", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f92e116-495b-451f-8551-96fe292765b9", "node_type": "1", "metadata": {}, "hash": "ba368a53304de339eb7e71d889e1a38541bdf5746296fbbfb51e2487cdaf930d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}}, "hash": "9b942a240550d5702850f39416215c7450450cfdc3c1891d85961a58830d4ee1", "text": "Topic: Addressing Concept Drift Impacting E-commerce Recommendation Systems. Scenario Overview: Within the realm of e-commerce, a once-efficient recommendation system on a website tailored to suggest products to users is experiencing a sudden decline in performance. What used to be an excellent tool for suggesting relevant items to users has recently started recommending unrelated products, coinciding with a noticeable drop in sales. Identified Issue: The underlying challenge behind this unexpected shift in recommendation quality lies in what's termed 'concept drift'.", "start_char_idx": 0, "end_char_idx": 574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f92e116-495b-451f-8551-96fe292765b9": {"__data__": {"id_": "9f92e116-495b-451f-8551-96fe292765b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbdb8738-24da-403f-9f5a-47a2f4d24695", "node_type": "1", "metadata": {}, "hash": "9b942a240550d5702850f39416215c7450450cfdc3c1891d85961a58830d4ee1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "886f38df-3047-4079-988e-5f9305f64a87", "node_type": "1", "metadata": {}, "hash": "308973e0b286bebdbe13e4d460f2ecac6a32edae7f353cd198b96f0a248fcdd0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}}, "hash": "ba368a53304de339eb7e71d889e1a38541bdf5746296fbbfb51e2487cdaf930d", "text": "The system, originally trained to comprehend user preferences and suggest relevant products, accordingly, is now grappling with changes in user behaviour or preferences that were not accounted for in its initial training data. Concept Drift and its Impact: The manifestation of concept drift presents a significant obstacle for the recommendation system. Shifts in user preferences, evolving trends, or changes in purchasing behaviour over time have led to a divergence between the system's understanding of user preferences and the current preferences of the user base. Consequently, the system's recommendations are no longer aligned with users' actual interests, resulting in a decline in sales.", "start_char_idx": 575, "end_char_idx": 1273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "886f38df-3047-4079-988e-5f9305f64a87": {"__data__": {"id_": "886f38df-3047-4079-988e-5f9305f64a87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f92e116-495b-451f-8551-96fe292765b9", "node_type": "1", "metadata": {}, "hash": "ba368a53304de339eb7e71d889e1a38541bdf5746296fbbfb51e2487cdaf930d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f99e99d-c4fb-43a5-918f-32210c4aeb65", "node_type": "1", "metadata": {}, "hash": "bd0306237fe0098dcff37280cd0ff8532a07df15574695b19dc07c1bef1690bf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}}, "hash": "308973e0b286bebdbe13e4d460f2ecac6a32edae7f353cd198b96f0a248fcdd0", "text": "Implications and Mitigation Strategies: The implications of concept drift are evident in the decreased sales figures, indicating a mismatch between the system's recommendations and user preferences. Mitigating this issue requires strategies focused on adapting the recommendation system to changing user preferences. Incorporating real-time feedback mechanisms to capture and adapt to evolving user preferences, leveraging dynamic learning algorithms capable of adjusting to shifting trends, or periodically retraining the model with updated data reflecting current user behaviours could help mitigate the impact of concept drift and restore the system's efficacy in suggesting relevant products to users.", "start_char_idx": 1274, "end_char_idx": 1979, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f99e99d-c4fb-43a5-918f-32210c4aeb65": {"__data__": {"id_": "0f99e99d-c4fb-43a5-918f-32210c4aeb65", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "886f38df-3047-4079-988e-5f9305f64a87", "node_type": "1", "metadata": {}, "hash": "308973e0b286bebdbe13e4d460f2ecac6a32edae7f353cd198b96f0a248fcdd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1dccd4d4-5e39-4fbb-9137-6f5daae99e57", "node_type": "1", "metadata": {}, "hash": "258f643c42b7d544a76e599ebe9e67337bc937551e09ecfe9226e3ba66332b3d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}}, "hash": "bd0306237fe0098dcff37280cd0ff8532a07df15574695b19dc07c1bef1690bf", "text": "The following page discusses the topic of Insufficient training using a scenario. Topic: Addressing Misclassification of Rare Endangered Species in Wildlife Conservation Models. Scenario Overview: In the domain of wildlife conservation, a dedicated organization employs a machine learning model to classify endangered animal species captured in camera trap images. However, the model consistently grapples with misclassifying rare and endangered species, prompting the question: what is causing these recurring misclassifications? Identified Issue: The prevailing issue leading to the misclassification of rare species stems from insufficient training data.", "start_char_idx": 1981, "end_char_idx": 2638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1dccd4d4-5e39-4fbb-9137-6f5daae99e57": {"__data__": {"id_": "1dccd4d4-5e39-4fbb-9137-6f5daae99e57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f99e99d-c4fb-43a5-918f-32210c4aeb65", "node_type": "1", "metadata": {}, "hash": "bd0306237fe0098dcff37280cd0ff8532a07df15574695b19dc07c1bef1690bf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df", "node_type": "1", "metadata": {}, "hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "class_name": "RelatedNodeInfo"}}, "hash": "258f643c42b7d544a76e599ebe9e67337bc937551e09ecfe9226e3ba66332b3d", "text": "While the model has been trained to identify and categorize various animal species, the limited representation or scarcity of data related to rare and endangered species hinders the model's ability to accurately recognize and classify these specific animals.", "start_char_idx": 2639, "end_char_idx": 2897, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fcc07ff-4cc2-4d47-9d3b-0275652d7d35": {"__data__": {"id_": "6fcc07ff-4cc2-4d47-9d3b-0275652d7d35", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69edbff8-8022-4d94-90f5-cc40985f8ea7", "node_type": "1", "metadata": {}, "hash": "281a3c9836f1c86031a2006eaac64d4b5d8ea7d21213a5a805908b54bb19b6f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}}, "hash": "f75361005be8605b1d7342d966b236566ed4e809f3468a4d43eef7a337ab5c45", "text": "Insufficient Training Data and its Impact: The dearth of comprehensive training data pertaining to rare species significantly impacts the model's learning process. Unique characteristics, nuanced features, or infrequent sightings of these rare species are inadequately represented in the training dataset. Consequently, the model lacks the requisite exposure to adequately discern and categorize these rare animals, leading to misclassifications. Implications and Strategies for Improvement: The implications of this challenge are profound within the realm of wildlife conservation.", "start_char_idx": 0, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69edbff8-8022-4d94-90f5-cc40985f8ea7": {"__data__": {"id_": "69edbff8-8022-4d94-90f5-cc40985f8ea7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fcc07ff-4cc2-4d47-9d3b-0275652d7d35", "node_type": "1", "metadata": {}, "hash": "f75361005be8605b1d7342d966b236566ed4e809f3468a4d43eef7a337ab5c45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73e32222-f0e0-4269-b211-076685392039", "node_type": "1", "metadata": {}, "hash": "5fe3fe62cf3a4676042763c24fb21ca066fed9b64bd6430eadc974569bc501e6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}}, "hash": "281a3c9836f1c86031a2006eaac64d4b5d8ea7d21213a5a805908b54bb19b6f5", "text": "Misclassifying rare and endangered species could result in a lack of accurate population assessments, potentially impacting conservation efforts and endangerment status assessments. To address this limitation, augmenting the training dataset with a more extensive and diverse collection of images featuring rare species is crucial. Additionally, employing techniques like transfer learning from related species or implementing specialized algorithms focusing on feature extraction from limited data could aid in enhancing the model's ability to accurately classify and identify these endangered animals within camera trap images.\n\nThe following page discusses the topic of Overfitting using a scenario. Topic: Addressing the Issue of Overfitting in Essay Grading Models.", "start_char_idx": 583, "end_char_idx": 1353, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73e32222-f0e0-4269-b211-076685392039": {"__data__": {"id_": "73e32222-f0e0-4269-b211-076685392039", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69edbff8-8022-4d94-90f5-cc40985f8ea7", "node_type": "1", "metadata": {}, "hash": "281a3c9836f1c86031a2006eaac64d4b5d8ea7d21213a5a805908b54bb19b6f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0db9774-7231-4d5c-bb50-30f9a87024c5", "node_type": "1", "metadata": {}, "hash": "87228fdeff8da75f0f6ede67542b425ca015a094709f1718815f83cb9b25135f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}}, "hash": "5fe3fe62cf3a4676042763c24fb21ca066fed9b64bd6430eadc974569bc501e6", "text": "Topic: Addressing the Issue of Overfitting in Essay Grading Models. Scenario Overview: In the realm of educational technology, an essay grading model designed to evaluate student essays encounters an unexpected hurdle. The model consistently assigns high scores to essays employing sophisticated vocabulary, yet lacking coherence and logical structure, prompting an investigation into the model's failure. Identified Issue: The primary issue leading to this discrepancy lies in the phenomenon known as 'overfitting'.", "start_char_idx": 1286, "end_char_idx": 1802, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0db9774-7231-4d5c-bb50-30f9a87024c5": {"__data__": {"id_": "f0db9774-7231-4d5c-bb50-30f9a87024c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73e32222-f0e0-4269-b211-076685392039", "node_type": "1", "metadata": {}, "hash": "5fe3fe62cf3a4676042763c24fb21ca066fed9b64bd6430eadc974569bc501e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b729654-7df3-4d7e-b24f-eada34b4b32c", "node_type": "1", "metadata": {}, "hash": "9b7da33d1adc4a8b2c6c72f1f93c51b20cf87f3fe1f85e5b4db5070255be651e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}}, "hash": "87228fdeff8da75f0f6ede67542b425ca015a094709f1718815f83cb9b25135f", "text": "The model, while adept at recognizing complex vocabulary and language intricacies, has become excessively focused on these superficial aspects without effectively gauging the coherence and substance of the essay's content. Overfitting and its Ramifications: Overfitting, where the model excessively tailors its predictions to the training data, has led to a skewed emphasis on superficial elements such as sophisticated vocabulary. Consequently, the model erroneously equates the usage of advanced language with essay quality, disregarding the fundamental aspects of coherence, logical flow, and relevance of content.", "start_char_idx": 1803, "end_char_idx": 2420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b729654-7df3-4d7e-b24f-eada34b4b32c": {"__data__": {"id_": "2b729654-7df3-4d7e-b24f-eada34b4b32c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0db9774-7231-4d5c-bb50-30f9a87024c5", "node_type": "1", "metadata": {}, "hash": "87228fdeff8da75f0f6ede67542b425ca015a094709f1718815f83cb9b25135f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "752a5b4a-9053-459e-9303-400144ec6f56", "node_type": "1", "metadata": {}, "hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "class_name": "RelatedNodeInfo"}}, "hash": "9b7da33d1adc4a8b2c6c72f1f93c51b20cf87f3fe1f85e5b4db5070255be651e", "text": "Implications and Strategies for Improvement: The implications of this limitation are evident in the inflated scores given to essays lacking substantive content, potentially misleading educators about students' actual writing proficiency. Addressing overfitting necessitates recalibrating the model's learning process.", "start_char_idx": 2421, "end_char_idx": 2738, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "920563dc-9066-498f-9dcc-82e44b79f387": {"__data__": {"id_": "920563dc-9066-498f-9dcc-82e44b79f387", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "684cf36d-59a3-4fca-a204-b610ccd31a78", "node_type": "1", "metadata": {}, "hash": "ce8bde214c3aa60347b980c6faa62b14e40b9e8a970eea82238a1e5dfdaa8911", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}}, "hash": "903daf663576ee2e41e0bc02b33b5d1e56cea0c9f0b4ad00ed2a4f557c78cfc5", "text": "Addressing overfitting necessitates recalibrating the model's learning process. Strategies such as diversifying the training dataset to encompass a broader range of well-structured essays, implementing regularization techniques to prevent the model from overly focusing on specific language nuances, or introducing features that assess coherence and logical progression within essays could significantly mitigate the impact of overfitting and enhance the model's ability to evaluate essays holistically.\n\nThe following page discusses a scenario. Title: Calling out Sick. In 2008, Google attempted to use search data to predict the flu, which could provide early insights into flu prevalence.", "start_char_idx": 0, "end_char_idx": 691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "684cf36d-59a3-4fca-a204-b610ccd31a78": {"__data__": {"id_": "684cf36d-59a3-4fca-a204-b610ccd31a78", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "920563dc-9066-498f-9dcc-82e44b79f387", "node_type": "1", "metadata": {}, "hash": "903daf663576ee2e41e0bc02b33b5d1e56cea0c9f0b4ad00ed2a4f557c78cfc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff330ddd-928b-4b0b-8ba5-79b8daaccf2d", "node_type": "1", "metadata": {}, "hash": "2370666b40fe0e54a9155f212c6e1b5e636ad22dd05548a50ebddae21f3e9aee", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}}, "hash": "ce8bde214c3aa60347b980c6faa62b14e40b9e8a970eea82238a1e5dfdaa8911", "text": "Google Flu Trends (GFT) claimed success but failed spectacularly during the 2013 flu season, missing by 140 percent. This was due Big Data hubris. The failure of GFT was due to opaque methods, vulnerability to overfitting, and not accounting for changes in search behaviour. The following are some of the mistakes. Noise Sensitivity: GFT's algorithm was sensitive to unrelated or noisy search terms. Failure to Filter Seasonal Terms: It didn't effectively filter out terms correlated due to seasonal trends.", "start_char_idx": 692, "end_char_idx": 1199, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff330ddd-928b-4b0b-8ba5-79b8daaccf2d": {"__data__": {"id_": "ff330ddd-928b-4b0b-8ba5-79b8daaccf2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "684cf36d-59a3-4fca-a204-b610ccd31a78", "node_type": "1", "metadata": {}, "hash": "ce8bde214c3aa60347b980c6faa62b14e40b9e8a970eea82238a1e5dfdaa8911", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "955b35d5-9116-413e-a537-2f5c87ff7782", "node_type": "1", "metadata": {}, "hash": "ecd450a407fba25c8ea4f21348ddd6e26a48b19c25a09028cf318144c39a1728", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}}, "hash": "2370666b40fe0e54a9155f212c6e1b5e636ad22dd05548a50ebddae21f3e9aee", "text": "Inadaptability to Search Behaviour Changes: GFT didn't adjust to changes in search behaviour. Limited incorporation of ground truth data.\n\nThe following page just says the following: Few Days Ago, A Scottish Football Club ICFTC Announced Something New.\n\nThe following page discusses the topic of Feature Engineering Issues using a scenario. Scenario: An intriguing puzzle plagues a popular music recommendation ap. It often suggests tunes completely unrelated to a user's musical preferences. The baffling question looms: What lies at the root of this curious mismatch?", "start_char_idx": 1200, "end_char_idx": 1769, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "955b35d5-9116-413e-a537-2f5c87ff7782": {"__data__": {"id_": "955b35d5-9116-413e-a537-2f5c87ff7782", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff330ddd-928b-4b0b-8ba5-79b8daaccf2d", "node_type": "1", "metadata": {}, "hash": "2370666b40fe0e54a9155f212c6e1b5e636ad22dd05548a50ebddae21f3e9aee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e9b3f5d-4ff8-44a8-b942-743e2980d288", "node_type": "1", "metadata": {}, "hash": "df995cf83f8587b878f6d8a24fa5a0c9739a3856c6e8071fc75a648ad5e9f45b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}}, "hash": "ecd450a407fba25c8ea4f21348ddd6e26a48b19c25a09028cf318144c39a1728", "text": "The baffling question looms: What lies at the root of this curious mismatch? Feature Engineering Issues: The heart of this discordance likely dwells within the intricacies of feature engineering. The algorithms powering the app might be stumbling upon a hurdle in accurately capturing the nuanced facets of a user's musical taste. It's conceivable that the extraction and representation of user preferences, perhaps in the form of latent features, fail to encapsulate the holistic essence of individual music inclinations. The app's algorithmic prowess could be inadvertently misled by inherent limitations in its ability to decipher the intricacies of user preferences.", "start_char_idx": 1693, "end_char_idx": 2363, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e9b3f5d-4ff8-44a8-b942-743e2980d288": {"__data__": {"id_": "7e9b3f5d-4ff8-44a8-b942-743e2980d288", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "955b35d5-9116-413e-a537-2f5c87ff7782", "node_type": "1", "metadata": {}, "hash": "ecd450a407fba25c8ea4f21348ddd6e26a48b19c25a09028cf318144c39a1728", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "node_type": "1", "metadata": {}, "hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "class_name": "RelatedNodeInfo"}}, "hash": "df995cf83f8587b878f6d8a24fa5a0c9739a3856c6e8071fc75a648ad5e9f45b", "text": "Unravelling this conundrum demands a deeper exploration into the structural aspects of feature engineering, potentially necessitating a recalibration of the algorithms to better encapsulate the diverse and evolving nature of musical tastes.\n\nThe following page shows a lemon decaying.", "start_char_idx": 2364, "end_char_idx": 2648, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e7bdc30-0af9-45bc-a287-6056115633aa": {"__data__": {"id_": "5e7bdc30-0af9-45bc-a287-6056115633aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b53eb3b-af91-4917-8ed5-878084216d35", "node_type": "1", "metadata": {}, "hash": "d5fdd631228774a9edd965030b343801de03205eb342a0a11a834d4a75e33434", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}}, "hash": "a4460a01dc7118fdf072bcfbbc214c234c5697da36ae1b503151c7d84cf37a3f", "text": "The following page shows a lemon decaying. This is to preface the next page that discusses Model Decay.\n\nThe following page discusses the topic of model decay. Title: Model Decay: The Inevitable Instability in ML in Production. This is a phenomenon where a ML model's performance degrades over time in a production environment. The following are the primary causes for this. Concept Drift: Changing data properties make model assumptions outdated. Data Staleness: Outdated training data mismatches current data distribution. Data Quality Issues: Deteriorating data quality or errors affect model performance.", "start_char_idx": 0, "end_char_idx": 608, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b53eb3b-af91-4917-8ed5-878084216d35": {"__data__": {"id_": "5b53eb3b-af91-4917-8ed5-878084216d35", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e7bdc30-0af9-45bc-a287-6056115633aa", "node_type": "1", "metadata": {}, "hash": "a4460a01dc7118fdf072bcfbbc214c234c5697da36ae1b503151c7d84cf37a3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27d2122a-59b3-49a7-8b91-82b8957b3f99", "node_type": "1", "metadata": {}, "hash": "6e6f8081e55e5f577911ee5be9f061c5421777dfb6bd9ceb3dbf1dd53d0fbb73", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}}, "hash": "d5fdd631228774a9edd965030b343801de03205eb342a0a11a834d4a75e33434", "text": "Data Quality Issues: Deteriorating data quality or errors affect model performance. Environmental Changes: Changes in the production environment impact model behaviour. Overfitting: Overoptimization for training data hinders generalization. Sample Bias: Non-representative training data affects model performance. Algorithm Drift: Outdated techniques lead to performance loss over time. Class Imbalance: Dominant classes bias the model, affecting minority classes. Regulatory Changes: Laws and privacy policies impact data collection and usage. Data Shifts: Unforeseen data distribution changes affect predictions.", "start_char_idx": 525, "end_char_idx": 1139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27d2122a-59b3-49a7-8b91-82b8957b3f99": {"__data__": {"id_": "27d2122a-59b3-49a7-8b91-82b8957b3f99", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b53eb3b-af91-4917-8ed5-878084216d35", "node_type": "1", "metadata": {}, "hash": "d5fdd631228774a9edd965030b343801de03205eb342a0a11a834d4a75e33434", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d941a78f-fd58-4d1c-8c46-f8c6e7c46142", "node_type": "1", "metadata": {}, "hash": "d9b43fe19c941b026d3855da108f97d91c7504b3d4f4125dfa706553819dce7b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}}, "hash": "6e6f8081e55e5f577911ee5be9f061c5421777dfb6bd9ceb3dbf1dd53d0fbb73", "text": "Data Shifts: Unforeseen data distribution changes affect predictions. Conclusion: Understanding the intricate web of factors contributing to Model Decay is paramount in crafting resilient ML systems. Addressing these causes requires a holistic approach encompassing adaptive algorithms, continual training with updated data, and a vigilant eye on evolving environmental and regulatory landscapes.\n\nThe following page discusses a case study: Dynamic Healthcare Demands Continuous Machine Learning (ML) Monitoring to Maintain Model Effectiveness. Focus: Predicting 30-day hospital readmissions \u2014 a critical problem in the U.S. healthcare landscape, driven by Medicare's Hospital Readmissions Reduction Program.", "start_char_idx": 1070, "end_char_idx": 1778, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d941a78f-fd58-4d1c-8c46-f8c6e7c46142": {"__data__": {"id_": "d941a78f-fd58-4d1c-8c46-f8c6e7c46142", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27d2122a-59b3-49a7-8b91-82b8957b3f99", "node_type": "1", "metadata": {}, "hash": "6e6f8081e55e5f577911ee5be9f061c5421777dfb6bd9ceb3dbf1dd53d0fbb73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b25611d8-5ec0-45e4-85df-181e37762f98", "node_type": "1", "metadata": {}, "hash": "10ebe8a3bc8a660434443a2a87835901671bd0ba7517920fef25a1f33f0ba858", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}}, "hash": "d9b43fe19c941b026d3855da108f97d91c7504b3d4f4125dfa706553819dce7b", "text": "healthcare landscape, driven by Medicare's Hospital Readmissions Reduction Program. Static Clinical Guidelines: Prevalent Stability: Clinical guidelines remain remarkably stable, Recommendations: Common practice is to review guidelines every two to three years, and Hospital Use: Hospitals often rely on older guidelines (e.g., LACE and HOSPITAL scores) for readmission predictions. Challenges for ML Models: Project Context: Developing predictive readmission models for hospitals, Model Degradation: Trained, optimized, and deployed models start degrading within two to three months, and Variation: Models change differently at various hospitals or even within hospital buildings.", "start_char_idx": 1695, "end_char_idx": 2376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b25611d8-5ec0-45e4-85df-181e37762f98": {"__data__": {"id_": "b25611d8-5ec0-45e4-85df-181e37762f98", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d941a78f-fd58-4d1c-8c46-f8c6e7c46142", "node_type": "1", "metadata": {}, "hash": "d9b43fe19c941b026d3855da108f97d91c7504b3d4f4125dfa706553819dce7b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a379e407-7360-45ed-8be5-8adf76f86e24", "node_type": "1", "metadata": {}, "hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "class_name": "RelatedNodeInfo"}}, "hash": "10ebe8a3bc8a660434443a2a87835901671bd0ba7517920fef25a1f33f0ba858", "text": "Consequences: Rapid Decline: Within three months of deploying new ML software, customer dissatisfaction arises due to declining prediction accuracy, and Scalability Challenge: Expanding to more hospitals exacerbates the problem.", "start_char_idx": 2377, "end_char_idx": 2605, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5606743-e8da-430d-87fb-31b964819a7d": {"__data__": {"id_": "d5606743-e8da-430d-87fb-31b964819a7d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25", "node_type": "1", "metadata": {}, "hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25", "node_type": "1", "metadata": {}, "hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "class_name": "RelatedNodeInfo"}}, "hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "text": "Root Causes: Real-World Interactions: ML models interact with real-world healthcare data, Impact of Data Changes: Changes in electronic health records, lab tests, and insurance types affect data fields and distributions, leading to prediction accuracy degradation, and Unnoticed Changes: These changes aren't traditional software updates or interface modifications, and often no one notifies the ML team.", "start_char_idx": 0, "end_char_idx": 404, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0132a31d-4acf-46ab-912a-6de3e4f91d6a": {"__data__": {"id_": "0132a31d-4acf-46ab-912a-6de3e4f91d6a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b54452e-1c6f-438e-bcea-40908e6b6adc", "node_type": "1", "metadata": {}, "hash": "7700069e6006d736936b21cba4c46de6302b8a5fdfed009078110416e36e15c8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}}, "hash": "8a6c5ca86ee7d945634f5222d30b121017dceb30edbf86183ecc9c88b3259495", "text": "Conclusion: The narrative of ML model decay within the healthcare sphere underscores the imperative need for vigilant monitoring, adaptive strategies, and a nuanced understanding of the intricate interactions between models and the ever-evolving healthcare landscape.\n\n\n\n\n\nThe following page discusses how Models Drifting Away from their Original Mission. The categories it discusses are sudden drifts, gradual drift, incremental drift, and reoccurring concepts. Sudden drift: A new concept occurs within a  short time. For example, In a financial fraud detection model, a sudden drift might occur when a new type of fraudulent transaction emerges that the model has never encountered before.", "start_char_idx": 0, "end_char_idx": 692, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b54452e-1c6f-438e-bcea-40908e6b6adc": {"__data__": {"id_": "3b54452e-1c6f-438e-bcea-40908e6b6adc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0132a31d-4acf-46ab-912a-6de3e4f91d6a", "node_type": "1", "metadata": {}, "hash": "8a6c5ca86ee7d945634f5222d30b121017dceb30edbf86183ecc9c88b3259495", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e4263d2-9b40-40b4-914a-0cd1a7aee46e", "node_type": "1", "metadata": {}, "hash": "48b35937e47c42a5ef746910d4a23a991f8b579f8e868bb355f3ce3d1a9bac1b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}}, "hash": "7700069e6006d736936b21cba4c46de6302b8a5fdfed009078110416e36e15c8", "text": "Gradual drift: a new concept gradually replaces and old one over a period of time. For example, in a weather forecasting model, gradual drift can happen when climate patterns change slowly over time. Incremental drift: an old concept incrementally changes to a new concept over a period of time. For example, In a stock price prediction model, incremental drift might occur as new data arrives daily. Reoccurring concepts: an old concept may reoccur after some time. For example, In social media, recurring concepts can emerge with the changing interests of users.\n\nThe following page discusses Model Monitoring.", "start_char_idx": 693, "end_char_idx": 1305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e4263d2-9b40-40b4-914a-0cd1a7aee46e": {"__data__": {"id_": "0e4263d2-9b40-40b4-914a-0cd1a7aee46e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b54452e-1c6f-438e-bcea-40908e6b6adc", "node_type": "1", "metadata": {}, "hash": "7700069e6006d736936b21cba4c46de6302b8a5fdfed009078110416e36e15c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "865c13c6-ef89-42bb-9cae-5e423014804c", "node_type": "1", "metadata": {}, "hash": "d7d61a50e10243e9cc316b7ebcb6eb0d552f9c9171f5d1da9c5f42af15e8ad7c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}}, "hash": "48b35937e47c42a5ef746910d4a23a991f8b579f8e868bb355f3ce3d1a9bac1b", "text": "The following page discusses Model Monitoring.  Title: Enters Model Monitoring. The idea is to continuously track the performance of Machine Learning (ML) models in a production environment to detect any potential issues that could have adverse business implications. This involves system health monitoring and model\u2019s performance monitoring. In system health monitoring, we monitor the following metrics specific to service requests: latency, throughput, error rates, etc. Also look at infrastructure utilization: CPU / GOU utilization, memory.", "start_char_idx": 1259, "end_char_idx": 1804, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "865c13c6-ef89-42bb-9cae-5e423014804c": {"__data__": {"id_": "865c13c6-ef89-42bb-9cae-5e423014804c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e4263d2-9b40-40b4-914a-0cd1a7aee46e", "node_type": "1", "metadata": {}, "hash": "48b35937e47c42a5ef746910d4a23a991f8b579f8e868bb355f3ce3d1a9bac1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d726394-76af-4fab-b702-48e4094b5286", "node_type": "1", "metadata": {}, "hash": "4104ac0718534ac2d90b58450d48c2ba75693b4574c1ee10d424ec771913a342", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}}, "hash": "d7d61a50e10243e9cc316b7ebcb6eb0d552f9c9171f5d1da9c5f42af15e8ad7c", "text": "Also look at infrastructure utilization: CPU / GOU utilization, memory. For the model\u2019s performance monitoring, the behaviour of ML systems is determined not only by predefined rules in the code but also by the learned model behaviour derived from data. Look at shifts in data distribution, training-serving skew, data quality problems, environmental changes, or shifts in consumer behaviour.\n\nThe following page discusses how in a Machine Learning (ML) System, we need to account for two extra components: data dependencies and the model itself. The page uses the example of the pandemic and how people\u2019s weird behaviour during the pandemic messed with AI model.", "start_char_idx": 1733, "end_char_idx": 2396, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d726394-76af-4fab-b702-48e4094b5286": {"__data__": {"id_": "2d726394-76af-4fab-b702-48e4094b5286", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "865c13c6-ef89-42bb-9cae-5e423014804c", "node_type": "1", "metadata": {}, "hash": "d7d61a50e10243e9cc316b7ebcb6eb0d552f9c9171f5d1da9c5f42af15e8ad7c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3", "node_type": "1", "metadata": {}, "hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "class_name": "RelatedNodeInfo"}}, "hash": "4104ac0718534ac2d90b58450d48c2ba75693b4574c1ee10d424ec771913a342", "text": "Therefore, the page explains how to monitor the model the following things should be tracked: Data Drift, Broken Pipelines, Schema Change, Data Outage, Underperformance Segments, Model Bias, Concept Drift and Model Accuracy.", "start_char_idx": 2397, "end_char_idx": 2621, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdb54770-d247-4fb9-99f1-153b7614c735": {"__data__": {"id_": "fdb54770-d247-4fb9-99f1-153b7614c735", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5feacdd8-04bc-4a05-ac72-b79269b0bd2c", "node_type": "1", "metadata": {}, "hash": "335f56892678983023e6dee63a6c4913cc8545c7dfa988b7922c903da1598155", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}}, "hash": "910f16e5fa85cc9ed3174cdff49fca505f19092c4cdb670f89fdcfb300988372", "text": "The following page discusses the benefits of monitoring systems. The benefits can be categorized into Operational Excellence, Reliability, and Governance. Operational Excellence can be broken down into Early Issue Detection, Cost Savings, and Quick Alerts. Early Issue Detection: [Identify problems with ML models and data early in their operation, allowing for timely intervention and issue resolution. This prevents disruptions and downtime.]. Cost Savings: [Monitoring resource usage and model performance helps allocate resources efficiently, cutting operational costs in model deployment]. Quick Alerts: [Notify relevant stakeholders when issues or anomalies occur, enabling swift responses and problem resolution].", "start_char_idx": 0, "end_char_idx": 720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5feacdd8-04bc-4a05-ac72-b79269b0bd2c": {"__data__": {"id_": "5feacdd8-04bc-4a05-ac72-b79269b0bd2c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdb54770-d247-4fb9-99f1-153b7614c735", "node_type": "1", "metadata": {}, "hash": "910f16e5fa85cc9ed3174cdff49fca505f19092c4cdb670f89fdcfb300988372", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9414dbd-9a0d-47c5-bb08-43666cc4965b", "node_type": "1", "metadata": {}, "hash": "4e2a3dfef0b08e3906f925458b4fd344d2245d4ba19f76fe51bb1b4b0aedb719", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}}, "hash": "335f56892678983023e6dee63a6c4913cc8545c7dfa988b7922c903da1598155", "text": "Reliability can be broken down into Improved Model Performance, Cleaner Data, and Continuous Improvement. Improved Model Performance: [Checks model performance metrics, such as accuracy, and provides insights to improve model accuracy, reliability, and predictive power]. Cleaner Data: [Identifies and addresses data quality issues, such as missing values or outliers, ensuring that data used for training and inference is of high quality and reliability]. Continuous Improvement: [Organizations can iteratively enhance models by retraining them with updated data, thus maintaining and improving their effectiveness over time].", "start_char_idx": 721, "end_char_idx": 1348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9414dbd-9a0d-47c5-bb08-43666cc4965b": {"__data__": {"id_": "f9414dbd-9a0d-47c5-bb08-43666cc4965b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5feacdd8-04bc-4a05-ac72-b79269b0bd2c", "node_type": "1", "metadata": {}, "hash": "335f56892678983023e6dee63a6c4913cc8545c7dfa988b7922c903da1598155", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0423aca6-0545-45bf-a490-c5747584bbfb", "node_type": "1", "metadata": {}, "hash": "11869159518893588344d585cc615af3bbe2454b903886487eed92553d88e599", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}}, "hash": "4e2a3dfef0b08e3906f925458b4fd344d2245d4ba19f76fe51bb1b4b0aedb719", "text": "Governance can be broken down into Business Success, Security & Compliance, and Model Interpretability. Business Success: [Connects model performance to key business metrics, allowing organizations to measure and optimize the real-world impact of their ML applications]. Security & Compliance: [Helps ensure that models follow regulatory rules and security standards, detecting and mitigating potential security threats, data breaches, and violations.]. Model Interpretability: [Often offer tools for interpreting and explaining predictions, boosting transparency, trust, and user understanding].\n\nThe following page discusses the Importance of Monitoring Key Performance Indicators (KPIs).", "start_char_idx": 1349, "end_char_idx": 2039, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0423aca6-0545-45bf-a490-c5747584bbfb": {"__data__": {"id_": "0423aca6-0545-45bf-a490-c5747584bbfb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9414dbd-9a0d-47c5-bb08-43666cc4965b", "node_type": "1", "metadata": {}, "hash": "4e2a3dfef0b08e3906f925458b4fd344d2245d4ba19f76fe51bb1b4b0aedb719", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4edec649-9468-4fd7-ad44-748ef80a8d73", "node_type": "1", "metadata": {}, "hash": "39a43b47136dc62d6aff715c2a775fec3e606bda1c0b57df0429799fbe3cf29e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}}, "hash": "11869159518893588344d585cc615af3bbe2454b903886487eed92553d88e599", "text": "The following page discusses the Importance of Monitoring Key Performance Indicators (KPIs). The following points are given. Quantifiable Assessment: A numeric measure of model performance for easy comparisons. Performance Tracking: Track performance changes over time, enabling timely interventions. Early Issues Detection: Identify issues like overfitting early for corrective action. Objective Benchmarking: Compare models and assess improvements. Performance Target: Set expectations and standards for model performance. Model Iteration and Improvement: Guide improvements in model development. Resource Allocation: Allocate resources efficiently based on KPI assessments.", "start_char_idx": 1947, "end_char_idx": 2623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4edec649-9468-4fd7-ad44-748ef80a8d73": {"__data__": {"id_": "4edec649-9468-4fd7-ad44-748ef80a8d73", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0423aca6-0545-45bf-a490-c5747584bbfb", "node_type": "1", "metadata": {}, "hash": "11869159518893588344d585cc615af3bbe2454b903886487eed92553d88e599", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "127e2699-ba49-4856-8a6d-7641c5a47611", "node_type": "1", "metadata": {}, "hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "class_name": "RelatedNodeInfo"}}, "hash": "39a43b47136dc62d6aff715c2a775fec3e606bda1c0b57df0429799fbe3cf29e", "text": "Resource Allocation: Allocate resources efficiently based on KPI assessments. Customer satisfaction and trust: Ensure customer trust and satisfaction with accurate predictions. Risk mitigation: Detect and mitigate risks associated with model failures. Ethical and Fairness considerations: Assess fairness and ethical considerations in model predictions.", "start_char_idx": 2546, "end_char_idx": 2899, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d371cae5-3a25-49ba-b3b7-86ea8cfc1b3d": {"__data__": {"id_": "d371cae5-3a25-49ba-b3b7-86ea8cfc1b3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fded7855-c023-4132-8501-abd549174769", "node_type": "1", "metadata": {}, "hash": "c56a8cd4ea28128cd83e56d0106612dcfb115c2288d7c4dc83bd696637c8c32a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}}, "hash": "21c5255d038661f7baa612e64c7b968d9fa6106c7c89794ea57ee40fa91aa619", "text": "Ethical and Fairness considerations: Assess fairness and ethical considerations in model predictions. Regulatory Compliance: Ensure compliance with legal and regulatory requirements. Business Impact: Understand the model's impact on business objectives.\n\nThe following page just has one quote: \"If someone reports close to 100 percent accuracy, they are either lying to you, made a mistake, forecasting the future with the future, predicting something with the same thing, or rigged the problem\" \u2013 Matthew Schneider.\n\nThe following page discusses how the availability of Ground Truth impacts the ease of monitoring ML models.", "start_char_idx": 0, "end_char_idx": 625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fded7855-c023-4132-8501-abd549174769": {"__data__": {"id_": "fded7855-c023-4132-8501-abd549174769", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d371cae5-3a25-49ba-b3b7-86ea8cfc1b3d", "node_type": "1", "metadata": {}, "hash": "21c5255d038661f7baa612e64c7b968d9fa6106c7c89794ea57ee40fa91aa619", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ae92522-126c-4449-91c1-f7621ce0a45e", "node_type": "1", "metadata": {}, "hash": "1482eac4b4665075fb9773a86919410408c6664f21272da04566059a734f77aa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}}, "hash": "c56a8cd4ea28128cd83e56d0106612dcfb115c2288d7c4dc83bd696637c8c32a", "text": "The following page discusses how the availability of Ground Truth impacts the ease of monitoring ML models. Ground truth refers to the accurate and reliable reference data or information that is used as a standard for evaluating the performance, accuracy, or quality of a system, model, or algorithm. Instant Ground Truth: Having access to accurate and reliable reference data as the same time as the algorithm's predictions. Makes monitoring and evaluating the performance of our model much easier. Examples: Face Recognition at Airport Security.", "start_char_idx": 518, "end_char_idx": 1065, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ae92522-126c-4449-91c1-f7621ce0a45e": {"__data__": {"id_": "3ae92522-126c-4449-91c1-f7621ce0a45e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fded7855-c023-4132-8501-abd549174769", "node_type": "1", "metadata": {}, "hash": "c56a8cd4ea28128cd83e56d0106612dcfb115c2288d7c4dc83bd696637c8c32a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b04d5b46-e351-4d23-88b6-f549f9f22c17", "node_type": "1", "metadata": {}, "hash": "bf5ee90c87eeb6e243ac8162d3bb042d86346f5b44886f9716ec187278993099", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}}, "hash": "1482eac4b4665075fb9773a86919410408c6664f21272da04566059a734f77aa", "text": "Examples: Face Recognition at Airport Security. Delayed Ground Truth: A situation where true and accurate outcomes or labels of a dataset are not available immediately or in real-time but are delayed in their availability. Examples: 1. Medical Diagnosis, 2. Stock Market Predictions. Absent Ground Truth: No or limited access to reference data for evaluating the performance of an algorithm. Examples: 1. Space Exploration, 2. Content moderation in emerging languages.\n\nThe following page discusses the challenges of delayed ground truth. Here are some reasons for delayed ground truth.", "start_char_idx": 1018, "end_char_idx": 1604, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b04d5b46-e351-4d23-88b6-f549f9f22c17": {"__data__": {"id_": "b04d5b46-e351-4d23-88b6-f549f9f22c17", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ae92522-126c-4449-91c1-f7621ce0a45e", "node_type": "1", "metadata": {}, "hash": "1482eac4b4665075fb9773a86919410408c6664f21272da04566059a734f77aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c752ef3e-6058-44aa-9a8e-289234dc1012", "node_type": "1", "metadata": {}, "hash": "ef7920af4df1617e6f6e71c0ec67af5c3a7538d843236e5ae642ed2711d366a4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}}, "hash": "bf5ee90c87eeb6e243ac8162d3bb042d86346f5b44886f9716ec187278993099", "text": "Here are some reasons for delayed ground truth. Data Collection and Reporting Lag: Impedes timely issue identification, risk of drift detection delays, reduced responsiveness, and slower model iteration. Human Involvement: Impedes timely issue identification, risk of drift detection delays, and slower model iteration. Natural Processes: Risk of drift detection delays and slower model iteration. Logistical Challenges: Impedes timely issue identification and slower model iteration. Regulatory and Compliance Requirements: Impedes timely issue identification, risk of drift detection delays, and slower model iteration.", "start_char_idx": 1557, "end_char_idx": 2178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c752ef3e-6058-44aa-9a8e-289234dc1012": {"__data__": {"id_": "c752ef3e-6058-44aa-9a8e-289234dc1012", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b04d5b46-e351-4d23-88b6-f549f9f22c17", "node_type": "1", "metadata": {}, "hash": "bf5ee90c87eeb6e243ac8162d3bb042d86346f5b44886f9716ec187278993099", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "node_type": "1", "metadata": {}, "hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "class_name": "RelatedNodeInfo"}}, "hash": "ef7920af4df1617e6f6e71c0ec67af5c3a7538d843236e5ae642ed2711d366a4", "text": "Data Transmission and Storage: Impedes timely issue identification, risk of drift detection delays, reduced responsiveness, and slower model iteration. Privacy and Security Considerations: Risk of drift detection delays, reduced responsiveness, and slower model iteration. Infrastructure and Technology Constraints: Risk of drift detection delays and reduced responsiveness. Sampling Frequency: Risk of drift detection delays and reduced responsiveness. Change in Data Sources: Impedes timely issue identification, risk of drift detection delays, and slower model iteration.", "start_char_idx": 2179, "end_char_idx": 2753, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "718de839-c6cd-4b80-96ae-723df437c85f": {"__data__": {"id_": "718de839-c6cd-4b80-96ae-723df437c85f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "348aca2f-2b7d-4075-a73c-7dd99279b3cc", "node_type": "1", "metadata": {}, "hash": "3f4f7a186c197799da5cfae21afceaff6f69b3ec6e9ae4e9e9d0564360dad4a9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}}, "hash": "497c05cee20cedea35bb6f5217d2308a9bdbd00435af051d3dd9f9697357f45c", "text": "The following page discusses Data Drift Detection using Kolmogorov-Smirnov Test. This test compares the maximum vertical distance between the CDFs of two datasets. The test statistic is the maximum absolute difference between the CDFs. For example, let us say that we want to evaluate the potential data drift in the distribution of \u2018Attack\u2019 attribute values within Pok\u00e9mon datasets originating from generation 1 and 2. To use this test we do the following steps. ECDF Construction: It constructs empirical cumulative distribution functions (ECDFs) from the data.", "start_char_idx": 0, "end_char_idx": 563, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "348aca2f-2b7d-4075-a73c-7dd99279b3cc": {"__data__": {"id_": "348aca2f-2b7d-4075-a73c-7dd99279b3cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "718de839-c6cd-4b80-96ae-723df437c85f", "node_type": "1", "metadata": {}, "hash": "497c05cee20cedea35bb6f5217d2308a9bdbd00435af051d3dd9f9697357f45c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "803bcf49-0b5c-49b5-8f43-fba6bc3505a6", "node_type": "1", "metadata": {}, "hash": "127e40960faf8ca55bdf3b8f50534d32ccaccb046fae800b1816bd344804ad29", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}}, "hash": "3f4f7a186c197799da5cfae21afceaff6f69b3ec6e9ae4e9e9d0564360dad4a9", "text": "ECDF Construction: It constructs empirical cumulative distribution functions (ECDFs) from the data. Calculating the KS Statistic (D): measures the maximum vertical difference between the two ECDFs. Hypothesis Testing: It tests whether the observed differences are statistically significant by comparing D to a critical value for a given significance level (e.g., alpha = 0.05). Interpretation: If D exceeds the critical value, it suggests different distributions, indicating data drift; if not, the distributions are considered similar.", "start_char_idx": 464, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "803bcf49-0b5c-49b5-8f43-fba6bc3505a6": {"__data__": {"id_": "803bcf49-0b5c-49b5-8f43-fba6bc3505a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "348aca2f-2b7d-4075-a73c-7dd99279b3cc", "node_type": "1", "metadata": {}, "hash": "3f4f7a186c197799da5cfae21afceaff6f69b3ec6e9ae4e9e9d0564360dad4a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00846d48-b058-4e12-89dc-84785a74dcd5", "node_type": "1", "metadata": {}, "hash": "0524e778e4b9a1beef45e73523ec13eee67314b82613237b1c9a8342791277a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}}, "hash": "127e40960faf8ca55bdf3b8f50534d32ccaccb046fae800b1816bd344804ad29", "text": "The following page discusses Data Drift Detection using Kullback-Leibler (KL) divergence. This method is Utilized to ensure that input or output data in production doesn\u2019t drastically change from a baseline. For example, let us say that we want to determine whether there has been a significant change in the distribution of Pok\u00e9mon types. This is how we use KL divergence, define two probability distributions, P and Q, that you want to compare. P represents the reference distribution, and Q is the distribution you want to measure against it.", "start_char_idx": 1002, "end_char_idx": 1547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "00846d48-b058-4e12-89dc-84785a74dcd5": {"__data__": {"id_": "00846d48-b058-4e12-89dc-84785a74dcd5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "803bcf49-0b5c-49b5-8f43-fba6bc3505a6", "node_type": "1", "metadata": {}, "hash": "127e40960faf8ca55bdf3b8f50534d32ccaccb046fae800b1816bd344804ad29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e83713dc-98ae-40c0-a5a3-5318450166c9", "node_type": "1", "metadata": {}, "hash": "1e901b7cbd9cd39d5ae2ab32d068d2d2f764eb5b6aabe8dda21bb62596481336", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}}, "hash": "0524e778e4b9a1beef45e73523ec13eee67314b82613237b1c9a8342791277a8", "text": "P represents the reference distribution, and Q is the distribution you want to measure against it. If the distributions are continuous, you might need to discretize them into bins. For each bin or unique value in the sample space, calculate the KL Divergence between the corresponding probabilities in P and Q: KL(P || Q) = P(x) * log(P(x) / Q(x)). Once the KL divergence for each bin is calculated sum the KL values calculated for each bin/value to obtain the overall KL Divergence.", "start_char_idx": 1449, "end_char_idx": 1932, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e83713dc-98ae-40c0-a5a3-5318450166c9": {"__data__": {"id_": "e83713dc-98ae-40c0-a5a3-5318450166c9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00846d48-b058-4e12-89dc-84785a74dcd5", "node_type": "1", "metadata": {}, "hash": "0524e778e4b9a1beef45e73523ec13eee67314b82613237b1c9a8342791277a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a", "node_type": "1", "metadata": {}, "hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "class_name": "RelatedNodeInfo"}}, "hash": "1e901b7cbd9cd39d5ae2ab32d068d2d2f764eb5b6aabe8dda21bb62596481336", "text": "A higher KL Divergence indicates a larger difference between the two distributions, while a lower value suggests a smaller difference.\n\nThe following page discusses Data Drift Detection using Population Stability Index (PSI). Essentially try and identify how much a population has shifted over time or between two different samples of a population in a single number.", "start_char_idx": 1933, "end_char_idx": 2300, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e211404-5347-4e34-8b8a-66e60cdee37f": {"__data__": {"id_": "6e211404-5347-4e34-8b8a-66e60cdee37f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "979d8852-deef-4e32-b16e-e3edfd902ebf", "node_type": "1", "metadata": {}, "hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "979d8852-deef-4e32-b16e-e3edfd902ebf", "node_type": "1", "metadata": {}, "hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "class_name": "RelatedNodeInfo"}}, "hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "text": "For example, let us say that we want to evaluate the potential drift in the distribution of 'Defence' attribute values within Pok\u00e9mon datasets originating from generation 1 and 7. This is how we test data drift detection using PSI, first collect two datasets: the original training dataset (development) and a newer dataset (validation) for monitoring. Divide the data into bins or intervals based on a relevant variable. Typically, use the same binning strategy for both development and validation datasets. Calculate the number of observations (counts) in each bin for both datasets.", "start_char_idx": 0, "end_char_idx": 585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67c7ce57-c84e-4347-a604-7fbd24d3d925": {"__data__": {"id_": "67c7ce57-c84e-4347-a604-7fbd24d3d925", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56246172-2064-47ad-8dee-5f36a84bc1b9", "node_type": "1", "metadata": {}, "hash": "5bee2dc0858a8e5ca3ff7fc61bfc19ac771a75a604bcc4468b9ae18e6f1b6993", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}}, "hash": "a7f7f6e7e26fda0384267df0a6485651d32fbca862b0d0381a7e0d32a40e5170", "text": "Calculate the number of observations (counts) in each bin for both datasets. Calculate percentage of observations in each bin relative to the total number of observations in the respective dataset. For each bin, compute, P_valid = Percentage observations in the validation dataset in a specification bin, P_dev = Positive percentage observations in the development dataset in the same bin, and PSI = sum[ (P_valid \u2013 P_dev) * ln(P_valid / P_dev) ]. Once P_valid, P_dev, and PSI are computed for each bin, add the PSI values for all bins to obtain an overall PSI score for the model.", "start_char_idx": 0, "end_char_idx": 581, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56246172-2064-47ad-8dee-5f36a84bc1b9": {"__data__": {"id_": "56246172-2064-47ad-8dee-5f36a84bc1b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67c7ce57-c84e-4347-a604-7fbd24d3d925", "node_type": "1", "metadata": {}, "hash": "a7f7f6e7e26fda0384267df0a6485651d32fbca862b0d0381a7e0d32a40e5170", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c54495cf-b4a9-4f03-9d64-ab60741f1433", "node_type": "1", "metadata": {}, "hash": "1594879604dcdd97d52c27a4060b4f9dd2e7c4b50a1f89af71689dac41de16ce", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}}, "hash": "5bee2dc0858a8e5ca3ff7fc61bfc19ac771a75a604bcc4468b9ae18e6f1b6993", "text": "A low PSI indicates stability, while a high PSI suggests a significant distributional shift. Thus, a low PSI means low data drift, whereas high PSI means high data drift.\n\nThe following page discusses different Detection Methods that can be used for either data drift detection or concept drift detection. I will now write down the different methods as such: \u2018Method: yes/yes\u2019 where the first yes or no is if the method can be used for data drift detection and the second yes or no is for if the method can be used for concept drift detection. First we look through statistical tests.", "start_char_idx": 582, "end_char_idx": 1166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c54495cf-b4a9-4f03-9d64-ab60741f1433": {"__data__": {"id_": "c54495cf-b4a9-4f03-9d64-ab60741f1433", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56246172-2064-47ad-8dee-5f36a84bc1b9", "node_type": "1", "metadata": {}, "hash": "5bee2dc0858a8e5ca3ff7fc61bfc19ac771a75a604bcc4468b9ae18e6f1b6993", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7d4af59-e7dc-4b38-adf7-71e75f3eff47", "node_type": "1", "metadata": {}, "hash": "20c690a3ba80698fab2305f3923eb358a97683951017ab69a21b37a26712041c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}}, "hash": "1594879604dcdd97d52c27a4060b4f9dd2e7c4b50a1f89af71689dac41de16ce", "text": "First we look through statistical tests. Kolmogorov-Smirnov Test: yes/no, Chi-Square Test: yes/no, Two-Sample T-Test: yes/no, Mann-Whitney U Test: yes/no, and KS-Statistic: yes/no. Next we look at Density Estimation methods. Kernel Density Estimation: yes/no, and Histogram-Based Methods: yes/no. Next we look at Distance-Based Methods.", "start_char_idx": 1126, "end_char_idx": 1462, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7d4af59-e7dc-4b38-adf7-71e75f3eff47": {"__data__": {"id_": "e7d4af59-e7dc-4b38-adf7-71e75f3eff47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c54495cf-b4a9-4f03-9d64-ab60741f1433", "node_type": "1", "metadata": {}, "hash": "1594879604dcdd97d52c27a4060b4f9dd2e7c4b50a1f89af71689dac41de16ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c74bb39b-a299-4315-87cd-57e881216bfb", "node_type": "1", "metadata": {}, "hash": "1edfd3ace231feeffe62bf230c0032f8cd176e020cebff683eba9e6025fc078a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}}, "hash": "20c690a3ba80698fab2305f3923eb358a97683951017ab69a21b37a26712041c", "text": "Next we look at Distance-Based Methods. Wasserstein Distance: yes/no, Jensen-Shannon Distance: yes/yes, Earth Mover's Distance: yes/no, Mahalanobis Distance: yes/no, and Kullback-Leibler Divergence: yes/yes. For Ensemble Methods: yes/yes. Next we will look at  Drift Detection Frameworks. Drift Detection with Apache Kafka: yes/yes, Scikit-Multiflow (Python library): no/yes, Drift-Detection Stream Plugins (MOA): no/yes.", "start_char_idx": 1423, "end_char_idx": 1844, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c74bb39b-a299-4315-87cd-57e881216bfb": {"__data__": {"id_": "c74bb39b-a299-4315-87cd-57e881216bfb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7d4af59-e7dc-4b38-adf7-71e75f3eff47", "node_type": "1", "metadata": {}, "hash": "20c690a3ba80698fab2305f3923eb358a97683951017ab69a21b37a26712041c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "26c87f96-fa3e-4816-b783-59e51995658c", "node_type": "1", "metadata": {}, "hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "class_name": "RelatedNodeInfo"}}, "hash": "1edfd3ace231feeffe62bf230c0032f8cd176e020cebff683eba9e6025fc078a", "text": "Next we will look at supervised learning methods. Supervised Learning: yes/yes, Use classification models to detect drift: no/no,  and Monitor model performance metrics: yes/yes. Next we look at unsupervised learning methods.", "start_char_idx": 1845, "end_char_idx": 2070, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0577199e-ba4f-4dd0-a938-17a606d65366": {"__data__": {"id_": "0577199e-ba4f-4dd0-a938-17a606d65366", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91f16057-f48a-4a89-9f86-ac8f7aa997f8", "node_type": "1", "metadata": {}, "hash": "8d8681bbbc032cf29f53ebd99c98bd336fd821007f421bf54e4445829b732fe7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}}, "hash": "945b746e6badfd199ec09b5e144b6acf77ceda1e6173bb741d6b73dd93ba7a51", "text": "Next we look at unsupervised learning methods. Unsupervised Learning: yes/yes, Clustering-Based Methods: yes/yes, and Outlier Detection Methods: yes/yes. Next we will look at time series analysis methods. Time Series Analysis: yes/yes, CUSUM (Cumulative Sum): yes/yes, Exponential Smoothing: yes/yes, and Time Series Forecasting Models: yes/yes. Finally, we look at domain-specific tests. Domain-Specific Tests: yes/yes, and Custom rules or heuristics: yes/yes.", "start_char_idx": 0, "end_char_idx": 461, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91f16057-f48a-4a89-9f86-ac8f7aa997f8": {"__data__": {"id_": "91f16057-f48a-4a89-9f86-ac8f7aa997f8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0577199e-ba4f-4dd0-a938-17a606d65366", "node_type": "1", "metadata": {}, "hash": "945b746e6badfd199ec09b5e144b6acf77ceda1e6173bb741d6b73dd93ba7a51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19d5896a-fc97-445d-8681-dfd116765743", "node_type": "1", "metadata": {}, "hash": "3f54e662a8037aeebbaa63ec7500f4fdc1f56452add11eabdab32e986481040c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}}, "hash": "8d8681bbbc032cf29f53ebd99c98bd336fd821007f421bf54e4445829b732fe7", "text": "The following page has two comic strips. The first comic strip is titled DOGBERT CONSULTS. There are three characters in this comic. Two humans and a dog. In the first panel the dog says, \u201cCustomer data is an asset that you can sell\u201d. In the second panel the says, \u201cIt\u2019s totally ethical because our customers would do the same thing to us if they could.\u201d. In the final panel, the dog says, \u201cIn phase one, we\u2019ll dehumanize the enemy by calling them \u2018DATA.\u2019\u201d.", "start_char_idx": 463, "end_char_idx": 920, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19d5896a-fc97-445d-8681-dfd116765743": {"__data__": {"id_": "19d5896a-fc97-445d-8681-dfd116765743", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91f16057-f48a-4a89-9f86-ac8f7aa997f8", "node_type": "1", "metadata": {}, "hash": "8d8681bbbc032cf29f53ebd99c98bd336fd821007f421bf54e4445829b732fe7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc47862e-791b-459e-89e3-c699f515a0b7", "node_type": "1", "metadata": {}, "hash": "8624652c6eb38d042e1898049bc7892972f2369c481c924a3545a5786b68abef", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}}, "hash": "3f54e662a8037aeebbaa63ec7500f4fdc1f56452add11eabdab32e986481040c", "text": "In the same panel, one of the humans says, \u201cSounds fair\u201d. In the second comic strip there are two human characters, one who is an employer and one who is the employee. In the first panel, the employee says, \u201cWe had a massive data breach, hackers got into the private data of all of our customers\u201d. In the second panel, the employer says, \u201cNo problem we\u2019ll issue a press release that says we\u2019re sorry and it will never happen again\u201d. In the final panel, the employee says, \u201cThat\u2019s what we said the last time three times it happened.\u201d.", "start_char_idx": 921, "end_char_idx": 1454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc47862e-791b-459e-89e3-c699f515a0b7": {"__data__": {"id_": "cc47862e-791b-459e-89e3-c699f515a0b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19d5896a-fc97-445d-8681-dfd116765743", "node_type": "1", "metadata": {}, "hash": "3f54e662a8037aeebbaa63ec7500f4fdc1f56452add11eabdab32e986481040c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9088077-e2a5-4e99-a4a1-1ecab2da78f1", "node_type": "1", "metadata": {}, "hash": "6b73e3c46aef6167a81b74b60c8b14fc8ee92c71241c5c70688904ea586dba10", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}}, "hash": "8624652c6eb38d042e1898049bc7892972f2369c481c924a3545a5786b68abef", "text": "In this same panel, the employer replies, \u201cOur strategy is to wear them down\u201d. These are supposed to preview the next page which discusses the data protection and privacy regulations around the world.\n\nThe following page discusses Global Data Protection and Privacy Regulation. This is done using an image that shows a world map with regulation and enforcement going from darker to lower shades of red for heavy, robust, moderate, and limited data regulations. A few countries are highlighted. Canada (Heavily Regulated): Digital Privacy Act reforming PIPEDA (Personal Information and Protection and Electronic Documents Act).", "start_char_idx": 1455, "end_char_idx": 2081, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9088077-e2a5-4e99-a4a1-1ecab2da78f1": {"__data__": {"id_": "c9088077-e2a5-4e99-a4a1-1ecab2da78f1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc47862e-791b-459e-89e3-c699f515a0b7", "node_type": "1", "metadata": {}, "hash": "8624652c6eb38d042e1898049bc7892972f2369c481c924a3545a5786b68abef", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "node_type": "1", "metadata": {}, "hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "class_name": "RelatedNodeInfo"}}, "hash": "6b73e3c46aef6167a81b74b60c8b14fc8ee92c71241c5c70688904ea586dba10", "text": "California (Heavily Regulated): CCPA (California Consumer Privacy Act).", "start_char_idx": 2082, "end_char_idx": 2153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d11a66c1-5a5a-4436-8e2e-95255d267a2d": {"__data__": {"id_": "d11a66c1-5a5a-4436-8e2e-95255d267a2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a256d415-64c3-4020-a7ce-1ad5879da92a", "node_type": "1", "metadata": {}, "hash": "a3e2c381811fa09c87df382ab80afef2bf3a1f0fbe6acc5acd6dc33c44e74ef9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}}, "hash": "568631821462678a3a888a96ad8c1a74538e8878ab24f44661481635be3c64ce", "text": "California (Heavily Regulated): CCPA (California Consumer Privacy Act). Brazil (Moderately Regulated): LGPD (General Data Protection Law). European Union (Heavily Regulated): ePrivacy Regulated and GDPR. South Africa (Moderately Regulated): POPIA (Protection of Personal Information Act). China (Heavily Regulated): PIS Standard (Personal Informatic Security Specification). India (Limited Regulation): PDPB (Person Data Protection Bill). New Zealand (Heavily Regulated): Privacy Bill 34-2.", "start_char_idx": 0, "end_char_idx": 490, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a256d415-64c3-4020-a7ce-1ad5879da92a": {"__data__": {"id_": "a256d415-64c3-4020-a7ce-1ad5879da92a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d11a66c1-5a5a-4436-8e2e-95255d267a2d", "node_type": "1", "metadata": {}, "hash": "568631821462678a3a888a96ad8c1a74538e8878ab24f44661481635be3c64ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1cb113b-ada4-4690-9734-f748fbd1ffa5", "node_type": "1", "metadata": {}, "hash": "46b52d15463d319527704bacf4b4158acc3c3b553d67041d8db73b02f1790cf7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}}, "hash": "a3e2c381811fa09c87df382ab80afef2bf3a1f0fbe6acc5acd6dc33c44e74ef9", "text": "New Zealand (Heavily Regulated): Privacy Bill 34-2. Thailand (Limited Regulation): PDPA (Personal Data Protection Act). Australia (Heavily Regulated): Privacy Act and Amendments.\n\nThe following page just has one comic strip. There are two characters one of whom is the employer while the other is the employee. In the first panel the employer tells the employee \u201cWally, I need you to head up our Artificial Intelligence Project\u201d.", "start_char_idx": 439, "end_char_idx": 868, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1cb113b-ada4-4690-9734-f748fbd1ffa5": {"__data__": {"id_": "b1cb113b-ada4-4690-9734-f748fbd1ffa5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a256d415-64c3-4020-a7ce-1ad5879da92a", "node_type": "1", "metadata": {}, "hash": "a3e2c381811fa09c87df382ab80afef2bf3a1f0fbe6acc5acd6dc33c44e74ef9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60c55969-ff12-4dbf-8835-0e175450bebe", "node_type": "1", "metadata": {}, "hash": "266015b956a5c89dd114e70d0732c10e1a9b6e58d253f6754c98954bb149cca6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}}, "hash": "46b52d15463d319527704bacf4b4158acc3c3b553d67041d8db73b02f1790cf7", "text": "The second panel the employer tells the employee \u201cYou will have no budget and no hope of success, I just like saying we\u2019re working on AI\u201d. In the final panel, the employer tells the employee \u201cAnd you\u2019re completely useless, so it\u2019s a good match\u201d. In the same panel, the employee replies \u201cI won\u2019t let you down\u201d.\n\nThe following page discusses \u201cThe problem is that a single metric, such as classification accuracy, is an incomplete description of most real-world tasks\u201d.", "start_char_idx": 869, "end_char_idx": 1335, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60c55969-ff12-4dbf-8835-0e175450bebe": {"__data__": {"id_": "60c55969-ff12-4dbf-8835-0e175450bebe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1cb113b-ada4-4690-9734-f748fbd1ffa5", "node_type": "1", "metadata": {}, "hash": "46b52d15463d319527704bacf4b4158acc3c3b553d67041d8db73b02f1790cf7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0288124d-9ec7-416b-b507-0d16b949ea40", "node_type": "1", "metadata": {}, "hash": "31307b3c5d0ec971ede8013aff1e283ff776d1cc219bfe2ea721be90c23069b0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}}, "hash": "266015b956a5c89dd114e70d0732c10e1a9b6e58d253f6754c98954bb149cca6", "text": "Introduction: In the realm of real-world tasks, relying solely on a singular metric, such as classification accuracy, often falls short in capturing the complexity of these tasks (Doshi-Velez and Kim, 2017). Understanding the significance of interpretability in machine learning models is crucial for comprehending, ensuring fairness, establishing trust, and addressing biases inherent in these systems. When Do We Need Interpretability? Human Curiosity and Learning: Satisfying human inquisitiveness and fostering learning through model transparency. Finding Meaning: Uncovering deeper insights and comprehending the reasoning behind model decisions.", "start_char_idx": 1336, "end_char_idx": 1987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0288124d-9ec7-416b-b507-0d16b949ea40": {"__data__": {"id_": "0288124d-9ec7-416b-b507-0d16b949ea40", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60c55969-ff12-4dbf-8835-0e175450bebe", "node_type": "1", "metadata": {}, "hash": "266015b956a5c89dd114e70d0732c10e1a9b6e58d253f6754c98954bb149cca6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "node_type": "1", "metadata": {}, "hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "class_name": "RelatedNodeInfo"}}, "hash": "31307b3c5d0ec971ede8013aff1e283ff776d1cc219bfe2ea721be90c23069b0", "text": "Finding Meaning: Uncovering deeper insights and comprehending the reasoning behind model decisions. Bias Detection: Identifying and rectifying biases that might be embedded within the model's predictions. Social Acceptance: Gaining societal trust and acceptance by providing explanations for model outputs. Managing Social Interactions: Facilitating better human-computer interactions by making model decisions understandable. Use Cases for Interpretability: Decisions with Significant Impact: Cases where model decisions hold considerable consequences.", "start_char_idx": 1888, "end_char_idx": 2441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ad48f78-7771-4ca9-973b-329de59c5957": {"__data__": {"id_": "0ad48f78-7771-4ca9-973b-329de59c5957", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74c92e8d-c37d-4994-8f16-9774f830962a", "node_type": "1", "metadata": {}, "hash": "34f8f5193a26fc4a9d4de39e9ca96de22e8cd80d8e44598585ff81d4a8cb092e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}}, "hash": "ccfe71cc948dabc44040dc752d4e54abe2e9b9d0852e71d9121ba6089bc9ad15", "text": "Fairness and Non-Discrimination: Ensuring fairness and mitigating discriminatory outcomes. Privacy Protection: Safeguarding sensitive information while maintaining model performance. Reliability and Robustness: Enhancing model dependability and resilience. Causality Examination: Investigating cause-and-effect relationships within the model's decisions. Building Trust: Fostering trust among users by making the model's decision-making process transparent. When Interpretability May Not Be Necessary: Minimal Impact: Situations where the model's decisions have minimal repercussions.", "start_char_idx": 0, "end_char_idx": 584, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74c92e8d-c37d-4994-8f16-9774f830962a": {"__data__": {"id_": "74c92e8d-c37d-4994-8f16-9774f830962a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ad48f78-7771-4ca9-973b-329de59c5957", "node_type": "1", "metadata": {}, "hash": "ccfe71cc948dabc44040dc752d4e54abe2e9b9d0852e71d9121ba6089bc9ad15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f27c9074-b3b4-494f-a038-8868d8699e7c", "node_type": "1", "metadata": {}, "hash": "3b86cf6a443ae171dafa44f3f0b95133ef9dfc4bfe5e2f2c8bdfb21bfc43ddf3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}}, "hash": "34f8f5193a26fc4a9d4de39e9ca96de22e8cd80d8e44598585ff81d4a8cb092e", "text": "In low-impact, low-risk scenarios: Environments where the stakes are low, and risks are minimal. Well-Studied Problems: Instances where ample historical data and knowledge exist about the problem domain. Where ample experience exists: Domains where expertise and experience offer substantial understanding. Potential for Manipulation: Cases where interpretability might lead to misuse or manipulation of the model's outcomes. Conclusion: Interpretability in machine learning models stands as a pillar for promoting comprehension, fairness, trust, and bias mitigation. Its necessity, however, is context-dependent, contingent upon the potential impact of the model's decisions.", "start_char_idx": 585, "end_char_idx": 1261, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f27c9074-b3b4-494f-a038-8868d8699e7c": {"__data__": {"id_": "f27c9074-b3b4-494f-a038-8868d8699e7c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74c92e8d-c37d-4994-8f16-9774f830962a", "node_type": "1", "metadata": {}, "hash": "34f8f5193a26fc4a9d4de39e9ca96de22e8cd80d8e44598585ff81d4a8cb092e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0d6d758-908a-46ad-9ac9-80eb23382aa3", "node_type": "1", "metadata": {}, "hash": "38485619a3e4bdce536743bf0c4a6b44a89b0df937fc758347c7ebc099f7a9fa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}}, "hash": "3b86cf6a443ae171dafa44f3f0b95133ef9dfc4bfe5e2f2c8bdfb21bfc43ddf3", "text": "Understanding this balance is crucial in harnessing the power of interpretable machine learning models.\n\nThis is the final page. It says thanks to the reader for finishing the topic.\n\nThree Levels of ML Software\nML/AI is rapidly adopted by new applications and industries. As al\u2010\nready been mentioned, the goal of a machine learning project is to\nbuild a statistical model by using collected data and applying ma\u2010\nchine learning algorithms. Yet building successful ML-based soft\u2010\nware projects is still difficult because every ML-based software\nneeds to manage three main assets: Data, Model, and Code.", "start_char_idx": 1262, "end_char_idx": 1864, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0d6d758-908a-46ad-9ac9-80eb23382aa3": {"__data__": {"id_": "d0d6d758-908a-46ad-9ac9-80eb23382aa3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f27c9074-b3b4-494f-a038-8868d8699e7c", "node_type": "1", "metadata": {}, "hash": "3b86cf6a443ae171dafa44f3f0b95133ef9dfc4bfe5e2f2c8bdfb21bfc43ddf3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a49d4f32-31fb-46ed-8a07-b93a3dc20763", "node_type": "1", "metadata": {}, "hash": "259a9bb515d47ec90484d263d330ef920c34b27a426122b520db8182b0fc18d9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}}, "hash": "38485619a3e4bdce536743bf0c4a6b44a89b0df937fc758347c7ebc099f7a9fa", "text": "Machine Learning Model Operationalization Management - MLOps,\nas a DevOps extension, establishes effective practices and processes\naround designing, building, and deploying ML models into production.\nWe describe here essential technical methodologies, which are in\u2010\nvolved in the development of the Machine Learning-based software,\nnamely Data Engineering, ML Model Engineering, and Software\nRelease Engineering.\nWe recommend documenting everything you have learned in each\nstep of the whole pipeline.\nData: Data Engineering Pipelines\nWe mentioned previously that the fundamental part of any machine\nlearning workflow is Data.", "start_char_idx": 1865, "end_char_idx": 2491, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a49d4f32-31fb-46ed-8a07-b93a3dc20763": {"__data__": {"id_": "a49d4f32-31fb-46ed-8a07-b93a3dc20763", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0d6d758-908a-46ad-9ac9-80eb23382aa3", "node_type": "1", "metadata": {}, "hash": "38485619a3e4bdce536743bf0c4a6b44a89b0df937fc758347c7ebc099f7a9fa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "node_type": "1", "metadata": {}, "hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "class_name": "RelatedNodeInfo"}}, "hash": "259a9bb515d47ec90484d263d330ef920c34b27a426122b520db8182b0fc18d9", "text": "Collecting good data sets has a huge im\u2010\npact on the quality and performance of the ML model.", "start_char_idx": 2492, "end_char_idx": 2585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61563d53-dbfa-471f-928f-453d993edecd": {"__data__": {"id_": "61563d53-dbfa-471f-928f-453d993edecd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "11d2fa45-8ced-449f-9b75-4adecdccd93a", "node_type": "1", "metadata": {}, "hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "11d2fa45-8ced-449f-9b75-4adecdccd93a", "node_type": "1", "metadata": {}, "hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "class_name": "RelatedNodeInfo"}}, "hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "text": "The famous\ncitation\n\u201cGarbage In, Garbage Out\u201d,\nin the machine learning context means that the ML model is only as\ngood as your data. Therefore, the data, which has been used for\ntraining of the ML model, indirectly influence the overall perfor\u2010\nmance of the production system.", "start_char_idx": 0, "end_char_idx": 276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f8d0612-7b8a-495e-b432-848449530ef5": {"__data__": {"id_": "6f8d0612-7b8a-495e-b432-848449530ef5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3efac0a4-63b4-45b6-b3b7-8e7d63726cf4", "node_type": "1", "metadata": {}, "hash": "761aa3bdf92cc4a16caf898afe07d7414ba29909c0441d2087d208b5d4653e23", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}}, "hash": "204c9d6ecb68f3b262c5689d862b896210e33520392d98a0a1db7d3a9106bd8c", "text": "The amount and quality of the\ndata set are usually problem-specific and can be empirically\ndiscovered.\nBeing an important step, data engineering is reported as heavily\ntime-consuming. We might spend the majority of time on a machine\nlearning project constructing data sets, cleaning, and transforming\ndata.\nThe data engineering pipeline includes a sequence of operations on\nthe available data. The final goal of these operations is to create\ntraining and testing datasets for the ML algorithms.", "start_char_idx": 0, "end_char_idx": 494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3efac0a4-63b4-45b6-b3b7-8e7d63726cf4": {"__data__": {"id_": "3efac0a4-63b4-45b6-b3b7-8e7d63726cf4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f8d0612-7b8a-495e-b432-848449530ef5", "node_type": "1", "metadata": {}, "hash": "204c9d6ecb68f3b262c5689d862b896210e33520392d98a0a1db7d3a9106bd8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebbdf27d-9fb0-4b40-bb22-e70ee50c1266", "node_type": "1", "metadata": {}, "hash": "9d7628d7510bc7593fc0bb26baa70e9cde079dbc93a6895fcb0718eb36d449da", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}}, "hash": "761aa3bdf92cc4a16caf898afe07d7414ba29909c0441d2087d208b5d4653e23", "text": "The final goal of these operations is to create\ntraining and testing datasets for the ML algorithms. In the following,\nwe describe each stage of the data engineering pipeline such as\nData Ingestion, Exploration and Validation, Data Wrangling\n(Cleaning), and Data Splitting.", "start_char_idx": 394, "end_char_idx": 667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebbdf27d-9fb0-4b40-bb22-e70ee50c1266": {"__data__": {"id_": "ebbdf27d-9fb0-4b40-bb22-e70ee50c1266", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3efac0a4-63b4-45b6-b3b7-8e7d63726cf4", "node_type": "1", "metadata": {}, "hash": "761aa3bdf92cc4a16caf898afe07d7414ba29909c0441d2087d208b5d4653e23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9fcd2be-9aec-4972-8fcf-7a0c3aa810e1", "node_type": "1", "metadata": {}, "hash": "0c84dc25e7ee06b94595d4e012839a5e64ce7a7e730d879effb08cce154c1e3a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}}, "hash": "9d7628d7510bc7593fc0bb26baa70e9cde079dbc93a6895fcb0718eb36d449da", "text": "Data Ingestion\nData Ingestion - Collecting data by using various systems, frame\u2010\nworks and formats, such as internal/external databases, data\nmarts, OLAP cubes, data warehouses, OLTP systems, Spark, HDFSBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\netc.", "start_char_idx": 668, "end_char_idx": 975, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9fcd2be-9aec-4972-8fcf-7a0c3aa810e1": {"__data__": {"id_": "c9fcd2be-9aec-4972-8fcf-7a0c3aa810e1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebbdf27d-9fb0-4b40-bb22-e70ee50c1266", "node_type": "1", "metadata": {}, "hash": "9d7628d7510bc7593fc0bb26baa70e9cde079dbc93a6895fcb0718eb36d449da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11217679-d58e-465a-8483-cb4e02b195c0", "node_type": "1", "metadata": {}, "hash": "bbc3faefbf2772b4f6c6139abf0fc4f1830c048181cbce90b120632281e8165f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}}, "hash": "0c84dc25e7ee06b94595d4e012839a5e64ce7a7e730d879effb08cce154c1e3a", "text": "This step might also include synthetic data generation or data\nenrichment The best practices for this step include the following ac\u2010\ntions that should be maximally automated:\nData Sources Identification: Find the data and document its ori\u2010\ngin (data provenance).\nSpace Estimation: Check how much storage space it will take.\nSpace Location: Create a workspace with enough storage space.\nObtaining Data: Get the data and convert them to a format that\ncan be easily manipulated without changing the data itself.\nBack up Data: Always work on a copy of the data and keep the\noriginal dataset untouched.", "start_char_idx": 976, "end_char_idx": 1573, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11217679-d58e-465a-8483-cb4e02b195c0": {"__data__": {"id_": "11217679-d58e-465a-8483-cb4e02b195c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9fcd2be-9aec-4972-8fcf-7a0c3aa810e1", "node_type": "1", "metadata": {}, "hash": "0c84dc25e7ee06b94595d4e012839a5e64ce7a7e730d879effb08cce154c1e3a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d0ed90d-1427-47d1-9177-3950b71ff790", "node_type": "1", "metadata": {}, "hash": "060265547acb354c024ca50e5cbd836b47cd2de762319cc7c06c927d19026e5b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}}, "hash": "bbc3faefbf2772b4f6c6139abf0fc4f1830c048181cbce90b120632281e8165f", "text": "Back up Data: Always work on a copy of the data and keep the\noriginal dataset untouched.\nPrivacy Compliance: Ensure sensitive information is deleted or\nprotected (e.g., anonymized) to ensure GDPR compliance.\nMetadata Catalog: Start documenting the metadata of the\ndataset by recording the basic information about the size, for\u2010\nmat, aliases, last modified time, and access control lists. (Further\nreading)\nTest Data: Sample a test set, put it aside, and never look at it to\navoid the \u201cdata snooping\u201d bias.", "start_char_idx": 1485, "end_char_idx": 1990, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d0ed90d-1427-47d1-9177-3950b71ff790": {"__data__": {"id_": "1d0ed90d-1427-47d1-9177-3950b71ff790", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11217679-d58e-465a-8483-cb4e02b195c0", "node_type": "1", "metadata": {}, "hash": "bbc3faefbf2772b4f6c6139abf0fc4f1830c048181cbce90b120632281e8165f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f", "node_type": "1", "metadata": {}, "hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "class_name": "RelatedNodeInfo"}}, "hash": "060265547acb354c024ca50e5cbd836b47cd2de762319cc7c06c927d19026e5b", "text": "You fell for this if you are select\u2010\ning a particular kind of ML model by using the test set. This will\nlead to an ML model selection that is too optimistic and will not\nperform well in production.\nExploration and Validation\nExploration and Validation - Includes data profiling to obtain infor\u2010\nmation about the content and structure of the data.", "start_char_idx": 1991, "end_char_idx": 2337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f07d1bdc-dcea-449e-bb8f-c05682e20beb": {"__data__": {"id_": "f07d1bdc-dcea-449e-bb8f-c05682e20beb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae5410e4-388d-4797-b322-5c3738c20f8b", "node_type": "1", "metadata": {}, "hash": "89990828963492ffa996c6cc67ef0fb1cbdd0431371653f96ef7c15fb95eefb8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}}, "hash": "ba935ef972985ab619daa95cc81bab4e766cbc3a05a9c60a2f801d56b2e6ff31", "text": "The output of\nthis step is a set of metadata, such as max, min, avg of values. Data\nvalidation operations are user-defined error detection functions,\nwhich scan the dataset to spot some errors. The validation is a\nprocess of assessing the quality of the data by running dataset vali\u2010\ndation routines (error detection methods). For example, for \u201cad\u2010\ndress\u201d-attributes, are the address components consistent? Is the\ncorrect postal code associated with the address? Are there missing\nvalues in the relevant attributes?", "start_char_idx": 0, "end_char_idx": 515, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae5410e4-388d-4797-b322-5c3738c20f8b": {"__data__": {"id_": "ae5410e4-388d-4797-b322-5c3738c20f8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f07d1bdc-dcea-449e-bb8f-c05682e20beb", "node_type": "1", "metadata": {}, "hash": "ba935ef972985ab619daa95cc81bab4e766cbc3a05a9c60a2f801d56b2e6ff31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc2b1699-3321-498a-81a6-9f48719637f5", "node_type": "1", "metadata": {}, "hash": "a97aee935ca13e4530970dbbc281d96b4bded7ba17f59901434f92f002e5a425", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}}, "hash": "89990828963492ffa996c6cc67ef0fb1cbdd0431371653f96ef7c15fb95eefb8", "text": "Are there missing\nvalues in the relevant attributes? The best practices for this step in\u2010\nclude the following actions:\nUse RAD tools: Using Jupyter notebooks is a good way to keep\nrecords of data exploration and experimentation.\nAttribute Profiling: Obtain and document the metadata about\neach attribute, such as\nName\nNumber of Records\nData Type (categorical, numerical, int/float, text, structured,\netc.)\nNumerical Measures (min, max, avg, median, etc.", "start_char_idx": 463, "end_char_idx": 916, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc2b1699-3321-498a-81a6-9f48719637f5": {"__data__": {"id_": "bc2b1699-3321-498a-81a6-9f48719637f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae5410e4-388d-4797-b322-5c3738c20f8b", "node_type": "1", "metadata": {}, "hash": "89990828963492ffa996c6cc67ef0fb1cbdd0431371653f96ef7c15fb95eefb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2fadb8e5-0985-44d1-bf4c-439d02261b8a", "node_type": "1", "metadata": {}, "hash": "8638bdf7dd2c9e62821f07c085d45c0284c9fae816c45361c51bf4452a19a53f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}}, "hash": "a97aee935ca13e4530970dbbc281d96b4bded7ba17f59901434f92f002e5a425", "text": "Numerical Measures (min, max, avg, median, etc. for numeri\u2010\ncal data)\nAmount of missing values (or \u201cmissing value ratio\u201d = Number\nof absent values/ Number of records)\nType of distribution (Gaussian, uniform, logarithmic, etc.)Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nLabel Attribute Identification: For supervised learning tasks, iden\u2010\ntify the target attribute(s).\nData Visualization: Build a visual representation for value\ndistribution.", "start_char_idx": 869, "end_char_idx": 1367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fadb8e5-0985-44d1-bf4c-439d02261b8a": {"__data__": {"id_": "2fadb8e5-0985-44d1-bf4c-439d02261b8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc2b1699-3321-498a-81a6-9f48719637f5", "node_type": "1", "metadata": {}, "hash": "a97aee935ca13e4530970dbbc281d96b4bded7ba17f59901434f92f002e5a425", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf60b907-e849-4d2a-bed9-a51e6c7ac729", "node_type": "1", "metadata": {}, "hash": "85916773dc8d368ad522ad029d01e438e37f9a6ed9a15bc81085c1f6830c0fdf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}}, "hash": "8638bdf7dd2c9e62821f07c085d45c0284c9fae816c45361c51bf4452a19a53f", "text": "Data Visualization: Build a visual representation for value\ndistribution.\nAttributes Correlation: Compute and analyze the correlations be\u2010\ntween attributes.\nAdditional Data: Identify data that would be useful for building\nthe model (go back to \u201cData Ingestion\u201d).\nData Wrangling (Cleaning)\nData Wrangling (Cleaning) - Data preparation step where we pro\u2010\ngrammatically wrangle data, e.g., by re-formatting or re-structuring\nparticular attributes that might change the form of the data\u2019s\nschema.", "start_char_idx": 1294, "end_char_idx": 1786, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf60b907-e849-4d2a-bed9-a51e6c7ac729": {"__data__": {"id_": "bf60b907-e849-4d2a-bed9-a51e6c7ac729", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2fadb8e5-0985-44d1-bf4c-439d02261b8a", "node_type": "1", "metadata": {}, "hash": "8638bdf7dd2c9e62821f07c085d45c0284c9fae816c45361c51bf4452a19a53f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4cb911ed-dec2-422d-a13c-15dce190ad98", "node_type": "1", "metadata": {}, "hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "class_name": "RelatedNodeInfo"}}, "hash": "85916773dc8d368ad522ad029d01e438e37f9a6ed9a15bc81085c1f6830c0fdf", "text": "We recommend writing scripts or functions for all data\ntransformations in the data pipeline to re-use all these functionali\u2010\nties on future data.\nTransformations: Identify the promising transformations you\nmay want to apply.\nOutliers: Fix or remove outliers (optional).\nMissing Values: Fill in missing values (e.g., with zero, mean, me\u2010\ndian) or drop their rows or columns.\nNot relevant Data: Drop the attributes that provide no useful in\u2010\nformation for the task (relevant for feature engineering).", "start_char_idx": 1787, "end_char_idx": 2285, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "42c5463d-3edb-4487-a266-6d75f5f75a42": {"__data__": {"id_": "42c5463d-3edb-4487-a266-6d75f5f75a42", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03387317-48f3-479e-97e1-8bf14b82411c", "node_type": "1", "metadata": {}, "hash": "81d271fb3d23b41ebe6fa7ea22670246ddcfeb99856e904009441c04175def0b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}}, "hash": "f0197b6aa0f9b25f2ad3c9547c673f194d4229792871905e35174e0f4abdf56a", "text": "Restructure Data: Might include the following operations (from\nthe book \u201cPrinciples of Data Wrangling\u201d)\nReordering record fields by moving columns\nCreating new record fields through extracting values\nCombining multiple record fields into a single record field\nFiltering datasets by removing sets of records\nShifting the granularity of the dataset and the fields associ\u2010\nated with records through aggregations and pivots.\nData Splitting\nData Splitting - Splitting the data into training (80 %), validation,\nand test datasets to be used during the core machine learning\nstages to produce the ML model.", "start_char_idx": 0, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03387317-48f3-479e-97e1-8bf14b82411c": {"__data__": {"id_": "03387317-48f3-479e-97e1-8bf14b82411c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42c5463d-3edb-4487-a266-6d75f5f75a42", "node_type": "1", "metadata": {}, "hash": "f0197b6aa0f9b25f2ad3c9547c673f194d4229792871905e35174e0f4abdf56a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f5ce71b-d34e-469a-8960-561329a4356e", "node_type": "1", "metadata": {}, "hash": "78f4343ef1004ae4280594ff0ea152dee4aedf5a0e39534f04f43c6abffdc7ca", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}}, "hash": "81d271fb3d23b41ebe6fa7ea22670246ddcfeb99856e904009441c04175def0b", "text": "Model: Machine Learning Pipelines\nThe core of the ML workflow is the phase of writing and executing\nmachine learning algorithms to obtain an ML model. The model engi\u2010\nneering pipeline is usually utilized by a data science team and in\u2010\ncludes a number of operations that lead to a final model. These op\u2010\nerations include Model Training, Model Evaluation, Model Testing,\nand Model Packaging. We recommend automating these steps as\nmuch as possible.", "start_char_idx": 600, "end_char_idx": 1046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f5ce71b-d34e-469a-8960-561329a4356e": {"__data__": {"id_": "0f5ce71b-d34e-469a-8960-561329a4356e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03387317-48f3-479e-97e1-8bf14b82411c", "node_type": "1", "metadata": {}, "hash": "81d271fb3d23b41ebe6fa7ea22670246ddcfeb99856e904009441c04175def0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18c1b723-e724-4f69-b3c9-3d6f1b257dcb", "node_type": "1", "metadata": {}, "hash": "373f55e319a325a3e4c0986d6132c766f4eb32b2f37226416da0647ac3c41ddd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}}, "hash": "78f4343ef1004ae4280594ff0ea152dee4aedf5a0e39534f04f43c6abffdc7ca", "text": "We recommend automating these steps as\nmuch as possible.\nModel TrainingBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nModel Training - The process of applying the machine learning algo\u2010\nrithm on training data to train an ML model. It also includes feature\nengineering the hyperparameter tuning for the model training activ\u2010\nity.", "start_char_idx": 990, "end_char_idx": 1371, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18c1b723-e724-4f69-b3c9-3d6f1b257dcb": {"__data__": {"id_": "18c1b723-e724-4f69-b3c9-3d6f1b257dcb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f5ce71b-d34e-469a-8960-561329a4356e", "node_type": "1", "metadata": {}, "hash": "78f4343ef1004ae4280594ff0ea152dee4aedf5a0e39534f04f43c6abffdc7ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ac46e1a-7f09-4ce1-b9ef-3378ce3c5a91", "node_type": "1", "metadata": {}, "hash": "a47426569062d022f1dabb361e12856eba3e6c335764b020b3cba7fbcb326e79", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}}, "hash": "373f55e319a325a3e4c0986d6132c766f4eb32b2f37226416da0647ac3c41ddd", "text": "It also includes feature\nengineering the hyperparameter tuning for the model training activ\u2010\nity. The following list is adopted from \u201cHands-On Machine Learning\nwith Scikit-Learn, Keras, and TensorFlow\u201d by Aur\u00e9lien G\u00e9ron\nFeature engineering might include:\nDiscretize continuous features\nDecompose features (e.g., categorical, date/time, etc.)\nAdd transformations of features (e.g., log(x), sqrt(x), x2, etc.)", "start_char_idx": 1274, "end_char_idx": 1681, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ac46e1a-7f09-4ce1-b9ef-3378ce3c5a91": {"__data__": {"id_": "7ac46e1a-7f09-4ce1-b9ef-3378ce3c5a91", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18c1b723-e724-4f69-b3c9-3d6f1b257dcb", "node_type": "1", "metadata": {}, "hash": "373f55e319a325a3e4c0986d6132c766f4eb32b2f37226416da0647ac3c41ddd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33b2ea32-a369-4ed3-ae4b-083d94792b92", "node_type": "1", "metadata": {}, "hash": "65e4349c6ca4b51b58eadea74d35454b63bd88669e66f7241af0daeaf10a72b8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}}, "hash": "a47426569062d022f1dabb361e12856eba3e6c335764b020b3cba7fbcb326e79", "text": "Add transformations of features (e.g., log(x), sqrt(x), x2, etc.)\nAggregate features into promising new features\nFeature scaling: Standardize or normalize features\nNew features should be added quickly to get fast from a fea\u2010\nture idea to the feature running in production. Further reading\n\u201cFeature Engineering for Machine Learning.", "start_char_idx": 1616, "end_char_idx": 1947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33b2ea32-a369-4ed3-ae4b-083d94792b92": {"__data__": {"id_": "33b2ea32-a369-4ed3-ae4b-083d94792b92", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ac46e1a-7f09-4ce1-b9ef-3378ce3c5a91", "node_type": "1", "metadata": {}, "hash": "a47426569062d022f1dabb361e12856eba3e6c335764b020b3cba7fbcb326e79", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77", "node_type": "1", "metadata": {}, "hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "class_name": "RelatedNodeInfo"}}, "hash": "65e4349c6ca4b51b58eadea74d35454b63bd88669e66f7241af0daeaf10a72b8", "text": "Further reading\n\u201cFeature Engineering for Machine Learning. Principles and\nTechniques for Data Scientists\u201d by Alice Zheng, Amanda\nCasari\nModel Engineering might be an iterative process and include the\nfollowing workflow:\nEvery ML model specification (code that creates an ML\nmodel) should go through a code review and be versioned.", "start_char_idx": 1889, "end_char_idx": 2219, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2873b237-50a2-404f-a5b9-b3182ae6a93d": {"__data__": {"id_": "2873b237-50a2-404f-a5b9-b3182ae6a93d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ab93845-3810-4ab7-924d-4579965c4ea7", "node_type": "1", "metadata": {}, "hash": "57618041de78412d21e7994c70cc63d7db8221f15d26d7351cd0d4e403ea3d7e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}}, "hash": "2829c545a08b666fa7034eaf492222b3094956100191d7dd5c8439939bb01d9e", "text": "Train many ML models from different categories (e.g., linear\nregression, logistic regression, k-means, naive Bayes, SVM,\nRandom Forest, etc.) using standard parameters.\nMeasure and compare their performance. For each model, use\nN-fold cross-validation and compute the mean and standard\ndeviation of the performance measure on the N folds.\nError Analysis: analyze the types of errors the ML models\nmake.\nConsider further feature selection and engineering.\nIdentify the top three to five most promising models, prefer\u2010\nring models that make different types of errors.\nHyperparameters tuning by using cross-validation.", "start_char_idx": 0, "end_char_idx": 615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ab93845-3810-4ab7-924d-4579965c4ea7": {"__data__": {"id_": "9ab93845-3810-4ab7-924d-4579965c4ea7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2873b237-50a2-404f-a5b9-b3182ae6a93d", "node_type": "1", "metadata": {}, "hash": "2829c545a08b666fa7034eaf492222b3094956100191d7dd5c8439939bb01d9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b87ffb98-0f67-49f7-a5b7-e08642a88344", "node_type": "1", "metadata": {}, "hash": "6bc331d97ffc5cb935d1efde2a1e6324edd3dc230322db3f90097f1a7b32f5fe", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}}, "hash": "57618041de78412d21e7994c70cc63d7db8221f15d26d7351cd0d4e403ea3d7e", "text": "Hyperparameters tuning by using cross-validation. Please\nnote that data transformation choices are also hyperparame\u2010\nters. Random search for hyperparameters is preferred over\ngrid search.\nConsider Ensemble methods such as majority vote, bagging,\nboosting, or stacking. Combining ML models should produce\nbetter performance than running them individually.", "start_char_idx": 566, "end_char_idx": 920, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b87ffb98-0f67-49f7-a5b7-e08642a88344": {"__data__": {"id_": "b87ffb98-0f67-49f7-a5b7-e08642a88344", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ab93845-3810-4ab7-924d-4579965c4ea7", "node_type": "1", "metadata": {}, "hash": "57618041de78412d21e7994c70cc63d7db8221f15d26d7351cd0d4e403ea3d7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7efc4b8-c791-4125-8962-6bd68f325ab4", "node_type": "1", "metadata": {}, "hash": "ba9ae8748633ae093de0567e32e945f14f8501d0823e93a54a7f29f06935a9a7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}}, "hash": "6bc331d97ffc5cb935d1efde2a1e6324edd3dc230322db3f90097f1a7b32f5fe", "text": "Combining ML models should produce\nbetter performance than running them individually. (Further\nreading \u201cEnsemble Methods: Foundations and Algorithms\u201d by\nZhi-Hua Zhou)\nModel Evaluation\nModel Evaluation - Validate the trained model to ensure it meets\noriginal business objectives before serving the ML model in produc\u2010\ntion to the end-user.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nModel Testing\nModel Testing - Once the final ML model is trained, its performance\nneeds to be measured by using the hold-back test dataset to esti\u2010\nmate the generalization error by performing the final \u201cModel\nAcceptance Test\u201d.", "start_char_idx": 835, "end_char_idx": 1499, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7efc4b8-c791-4125-8962-6bd68f325ab4": {"__data__": {"id_": "f7efc4b8-c791-4125-8962-6bd68f325ab4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b87ffb98-0f67-49f7-a5b7-e08642a88344", "node_type": "1", "metadata": {}, "hash": "6bc331d97ffc5cb935d1efde2a1e6324edd3dc230322db3f90097f1a7b32f5fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc143671-3bdb-442f-bca6-0141c49597e7", "node_type": "1", "metadata": {}, "hash": "583041c72959afd17ad6af6bb04e9c3f35a58eb372f3e48648f68839e13ec7ab", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}}, "hash": "ba9ae8748633ae093de0567e32e945f14f8501d0823e93a54a7f29f06935a9a7", "text": "Model Packaging\nModel Packaging - The process of exporting the final ML model into\na specific format (e.g. PMML , PFA, or ONNX), which describes the\nmodel to be consumed by the business application. We cover the ML\nmodel packaging in the part \u2018ML Model serialization formats\u2019 below.\nDifferent forms of ML workflows\nOperating an ML model might assume several architectural styles. In\nthe following, we discuss four architectural patterns which are clas\u2010\nsified along two dimensions:\n1. ML Model Training and\n2.", "start_char_idx": 1500, "end_char_idx": 2009, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc143671-3bdb-442f-bca6-0141c49597e7": {"__data__": {"id_": "dc143671-3bdb-442f-bca6-0141c49597e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7efc4b8-c791-4125-8962-6bd68f325ab4", "node_type": "1", "metadata": {}, "hash": "ba9ae8748633ae093de0567e32e945f14f8501d0823e93a54a7f29f06935a9a7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "node_type": "1", "metadata": {}, "hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "class_name": "RelatedNodeInfo"}}, "hash": "583041c72959afd17ad6af6bb04e9c3f35a58eb372f3e48648f68839e13ec7ab", "text": "ML Model Training and\n2. ML Model Prediction\nPlease note that for the sake of simplicity, we disregard the third di\u2010\nmension 3. ML Model Type, which denotes the type of machine learn\u2010\ning algorithm such as supervised, unsupervised, semisupervised, and\nReinforcement Learning.", "start_char_idx": 1985, "end_char_idx": 2260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "caeaa5c9-ba58-4383-8799-217e673db756": {"__data__": {"id_": "caeaa5c9-ba58-4383-8799-217e673db756", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b384836f-88bc-4aa2-8535-0aba633151b1", "node_type": "1", "metadata": {}, "hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b384836f-88bc-4aa2-8535-0aba633151b1", "node_type": "1", "metadata": {}, "hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "class_name": "RelatedNodeInfo"}}, "hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "text": "There are two ways how we perform ML Model Training:\n1Offline learning (aka batch or static learning): The model is\ntrained on a set of already collected data.", "start_char_idx": 0, "end_char_idx": 159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d8e3982-1435-4d8e-91b3-84a8d006dcd8": {"__data__": {"id_": "7d8e3982-1435-4d8e-91b3-84a8d006dcd8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ace8cbf6-ae5c-4b81-a5b8-17ca7b742faa", "node_type": "1", "metadata": {}, "hash": "9e6f8a5528d11619411448f052d81a9225f2d732fbe1258f56629ed069874eaf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}}, "hash": "5b6daa1cf1930b3ccda545904a2ad95d26fd707da952874d1894411559f98777", "text": "After deploying to the\nproduction environment, the ML model remains constant until it\nre-trained because the model will see a lot of real-live data and\nbecomes stale. This phenomenon is called \u2018model decay\u2019 and\nshould be carefully monitored.\n2Online learning (aka dynamic learning): The model is regularly be\u2010\ning re-trained as new data arrives, e.g. as data streams. This is\nusually the case for ML systems that use time-series data, such as\nsensor, or stock trading data to accommodate the temporal ef\u2010\nfects in the ML model.", "start_char_idx": 0, "end_char_idx": 527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ace8cbf6-ae5c-4b81-a5b8-17ca7b742faa": {"__data__": {"id_": "ace8cbf6-ae5c-4b81-a5b8-17ca7b742faa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d8e3982-1435-4d8e-91b3-84a8d006dcd8", "node_type": "1", "metadata": {}, "hash": "5b6daa1cf1930b3ccda545904a2ad95d26fd707da952874d1894411559f98777", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "130996ca-43b7-494d-adee-fef6b4000d9c", "node_type": "1", "metadata": {}, "hash": "0615c98bfd4f24e7cfe1fe7eaecafc04e87e68cc9d302e8126d7df97b2c65ee2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}}, "hash": "9e6f8a5528d11619411448f052d81a9225f2d732fbe1258f56629ed069874eaf", "text": "The second dimension is ML Model Prediction, which denotes the me\u2010\nchanics of the ML model to makes predictions. Here we also distin\u2010\nguish two modes:\n1Batch predictions: The deployed ML model makes a set of predic\u2010\ntions based on historical input data. This is often sufficient for\ndata that is not time-dependent, or when it is not critical to ob\u2010\ntain real-time predictions as output.\n2Real-time predictions (aka on-demand predictions): Predictions\nare generated in real-time using the input data that is available\nat the time of the request.", "start_char_idx": 528, "end_char_idx": 1073, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "130996ca-43b7-494d-adee-fef6b4000d9c": {"__data__": {"id_": "130996ca-43b7-494d-adee-fef6b4000d9c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ace8cbf6-ae5c-4b81-a5b8-17ca7b742faa", "node_type": "1", "metadata": {}, "hash": "9e6f8a5528d11619411448f052d81a9225f2d732fbe1258f56629ed069874eaf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c898484-1725-4fb0-99b2-c258e3eeb3bd", "node_type": "1", "metadata": {}, "hash": "8f091ab43e2239ec7b9e514a70d427b5b94ea0f16f06f2e6f5299725217388e6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}}, "hash": "0615c98bfd4f24e7cfe1fe7eaecafc04e87e68cc9d302e8126d7df97b2c65ee2", "text": "After identifying these two dimensions, we can classify the opera\u2010\ntionalization of machine learning models into four ML architectureBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\npatterns:\nFigure source\nIn the following, we present a description of the model architectural\npatterns such as Forecast, Web-Service, Online Learning, and\nAutoML.\nForecast\nThis type of machine learning workflow is widely spread in academic\nresearch or data science education (e.g., Kaggle or DataCamp).", "start_char_idx": 1074, "end_char_idx": 1609, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c898484-1725-4fb0-99b2-c258e3eeb3bd": {"__data__": {"id_": "1c898484-1725-4fb0-99b2-c258e3eeb3bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "130996ca-43b7-494d-adee-fef6b4000d9c", "node_type": "1", "metadata": {}, "hash": "0615c98bfd4f24e7cfe1fe7eaecafc04e87e68cc9d302e8126d7df97b2c65ee2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e53b794-cab5-4b6e-9041-1f0c4cf2bf1d", "node_type": "1", "metadata": {}, "hash": "77f5e5190c67304a55201dc074a252973897f5f98a6fc113cafffe6fa7aaa7fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}}, "hash": "8f091ab43e2239ec7b9e514a70d427b5b94ea0f16f06f2e6f5299725217388e6", "text": "This\nform is used to experiment with ML algorithms and data as it is the\neasiest way to create a machine learning system. Usually, we take an\navailable dataset, train the ML model, then run this model on an\u2010\nother (mostly historical) data, and the ML model makes predictions.\nThis way, we output a forecast. This ML workflow is not very useful\nand, therefore, not common in an industry setting for production\nsystems (e.g. mobile applications).", "start_char_idx": 1610, "end_char_idx": 2054, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e53b794-cab5-4b6e-9041-1f0c4cf2bf1d": {"__data__": {"id_": "4e53b794-cab5-4b6e-9041-1f0c4cf2bf1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c898484-1725-4fb0-99b2-c258e3eeb3bd", "node_type": "1", "metadata": {}, "hash": "8f091ab43e2239ec7b9e514a70d427b5b94ea0f16f06f2e6f5299725217388e6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1", "node_type": "1", "metadata": {}, "hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "class_name": "RelatedNodeInfo"}}, "hash": "77f5e5190c67304a55201dc074a252973897f5f98a6fc113cafffe6fa7aaa7fd", "text": "mobile applications).\nWeb-Service\nThe most commonly described deployment architecture for ML mod\u2010\nels is a web service (microservise). The web service takes input data\nand outputs a prediction for the input data points.", "start_char_idx": 2033, "end_char_idx": 2252, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddf406d9-928a-425c-8325-dd91b7d366a4": {"__data__": {"id_": "ddf406d9-928a-425c-8325-dd91b7d366a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbc78b89-775e-4c28-9a14-ed9c5f1422f9", "node_type": "1", "metadata": {}, "hash": "c32e46e1cb3101c55b4ee2de2d496402ea9ca8f36b46c41ed1940b33c82b71d4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}}, "hash": "56ad4975ba8cab0521ce20d75f2057a3adcf2bb86647cca36eb6f88884701424", "text": "The web service takes input data\nand outputs a prediction for the input data points. The model is\ntrained offline on historical data, but it uses real-live data to make\npredictions. The difference from a forecast (batch predictions) is\nthat the ML model runs near real-time and handles a single record at\na time instead of processing all the data at once. The web service\nuses real-time data to make predictions, but the model remains con\u2010\nstant until it is re-trained and re-deployed into the production\nsystem.", "start_char_idx": 0, "end_char_idx": 512, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbc78b89-775e-4c28-9a14-ed9c5f1422f9": {"__data__": {"id_": "bbc78b89-775e-4c28-9a14-ed9c5f1422f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddf406d9-928a-425c-8325-dd91b7d366a4", "node_type": "1", "metadata": {}, "hash": "56ad4975ba8cab0521ce20d75f2057a3adcf2bb86647cca36eb6f88884701424", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ff47426-6103-4403-9cb0-00307e504431", "node_type": "1", "metadata": {}, "hash": "31762703d3771224ea04474ccf5b59c5f6d955fa37fc939f5e6b4317022d1b4a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}}, "hash": "c32e46e1cb3101c55b4ee2de2d496402ea9ca8f36b46c41ed1940b33c82b71d4", "text": "The figure below illustrates the architecture for wrapping trained\nmodels as deployable services. Please note, we discuss methods for\nwrapping trained ML models as deployable services in the\nDeployment Strategies Section.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nOnline Learning\nThe most dynamic way to embed machine learning into a production\nsystem is to implement online learning, which is also known as real-\ntime streaming analytics. Please note that online learning can be a\nconfusing name because the core learning or ML model training is\nusually not performed on the live system.", "start_char_idx": 513, "end_char_idx": 1158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ff47426-6103-4403-9cb0-00307e504431": {"__data__": {"id_": "6ff47426-6103-4403-9cb0-00307e504431", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbc78b89-775e-4c28-9a14-ed9c5f1422f9", "node_type": "1", "metadata": {}, "hash": "c32e46e1cb3101c55b4ee2de2d496402ea9ca8f36b46c41ed1940b33c82b71d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a54cf6cc-cce6-4dfc-ab0d-c8532fb53740", "node_type": "1", "metadata": {}, "hash": "b1e044181c6e1ed4c696fd4382d6c29599eed0fa6f75337d495d40075a23eeba", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}}, "hash": "31762703d3771224ea04474ccf5b59c5f6d955fa37fc939f5e6b4317022d1b4a", "text": "We should call it incremen\u2010\ntal learning; however, the term online learning is already established\nwithin the ML community.\nIn this type of ML workflow, the ML learning algorithm is continu\u2010\nously receiving a data stream, either as single data points or in small\ngroups called mini-batches. The system learns about new data on\nthe fly as it arrives, so the ML model is incrementally being re-\ntrained with new data. This continually re-trained model is instantly\navailable as a web service.", "start_char_idx": 1159, "end_char_idx": 1649, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a54cf6cc-cce6-4dfc-ab0d-c8532fb53740": {"__data__": {"id_": "a54cf6cc-cce6-4dfc-ab0d-c8532fb53740", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ff47426-6103-4403-9cb0-00307e504431", "node_type": "1", "metadata": {}, "hash": "31762703d3771224ea04474ccf5b59c5f6d955fa37fc939f5e6b4317022d1b4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "375e50bc-39d5-4b0b-b7cb-2c61ce33f547", "node_type": "1", "metadata": {}, "hash": "dfd85861f36b2621f01af59b8dbc0dd4fc44e17cc0bce2f31431699b6f8c152f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}}, "hash": "b1e044181c6e1ed4c696fd4382d6c29599eed0fa6f75337d495d40075a23eeba", "text": "This continually re-trained model is instantly\navailable as a web service.\nTechnically, this type of ML system works well with the lambda ar\u2010\nchitecture in big data systems. Usually, the input data is a stream of\nevents, and the ML model takes the data as it enters the system,\nprovides predictions and re-learns on these new data. The model\nwould typically run as a service on a Kubernetes cluster or similar.", "start_char_idx": 1575, "end_char_idx": 1985, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "375e50bc-39d5-4b0b-b7cb-2c61ce33f547": {"__data__": {"id_": "375e50bc-39d5-4b0b-b7cb-2c61ce33f547", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a54cf6cc-cce6-4dfc-ab0d-c8532fb53740", "node_type": "1", "metadata": {}, "hash": "b1e044181c6e1ed4c696fd4382d6c29599eed0fa6f75337d495d40075a23eeba", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4", "node_type": "1", "metadata": {}, "hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "class_name": "RelatedNodeInfo"}}, "hash": "dfd85861f36b2621f01af59b8dbc0dd4fc44e17cc0bce2f31431699b6f8c152f", "text": "The model\nwould typically run as a service on a Kubernetes cluster or similar.\nA big difficulty with the online learning system in production is that if\nbad data is entering the system, the ML model, as well as the whole\nsystem performance, will increasingly decline.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nFigure Source\nAutoML\nAn even more sophisticated version of online learning is automated\nmachine learning or AutoML.", "start_char_idx": 1907, "end_char_idx": 2390, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "094e3db7-6011-4382-a5ae-f6def0737c12": {"__data__": {"id_": "094e3db7-6011-4382-a5ae-f6def0737c12", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56092edb-3c14-422d-959e-1c0e73dcf4ed", "node_type": "1", "metadata": {}, "hash": "203e5bbdfa0220fad2e096c8e599aed1c918c9cedc3420ca795887381f8e5f7e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}}, "hash": "e748b228c2f5c6bb0a2e023b575c35884411150af4fc7c0093fb833ceb508a24", "text": "AutoML is getting a lot of attention and is considered the next ad\u2010\nvance for enterprise ML. AutoML promises training ML models with\nminimal effort and without machine learning expertise. The user\nneeds to provide data, and the AutoML system automatically selects\nan ML algorithm, such as neural network architecture, and config\u2010\nures the selected algorithm.\nInstead of updating the model, we execute an entire ML model train\u2010\ning pipeline in production that results in new models on the fly. For\nnow, this is a very experimental way to implement ML workflows.", "start_char_idx": 0, "end_char_idx": 560, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56092edb-3c14-422d-959e-1c0e73dcf4ed": {"__data__": {"id_": "56092edb-3c14-422d-959e-1c0e73dcf4ed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "094e3db7-6011-4382-a5ae-f6def0737c12", "node_type": "1", "metadata": {}, "hash": "e748b228c2f5c6bb0a2e023b575c35884411150af4fc7c0093fb833ceb508a24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ff2c95e-1eff-426d-8571-93b49341fd17", "node_type": "1", "metadata": {}, "hash": "b2bf2763f91d8fac94236c21cdecfd6671b1a05602883d615125fc43dbac2a44", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}}, "hash": "203e5bbdfa0220fad2e096c8e599aed1c918c9cedc3420ca795887381f8e5f7e", "text": "For\nnow, this is a very experimental way to implement ML workflows.\nAutoML is usually provided by big cloud providers, such as Google or\nMS Azure. However, models build with AutoML need to reach the\nlevel of accuracy required for real-world success.\nFurther readi ng\nAutoML: Overview and Tools\nAutoML Benchmark\nML Model serialization formats\nThere are various formats to distribute ML models. In order to\nachieve a distributable format, the ML model should be present and\nshould be executable as an independent asset.", "start_char_idx": 493, "end_char_idx": 1010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ff2c95e-1eff-426d-8571-93b49341fd17": {"__data__": {"id_": "0ff2c95e-1eff-426d-8571-93b49341fd17", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56092edb-3c14-422d-959e-1c0e73dcf4ed", "node_type": "1", "metadata": {}, "hash": "203e5bbdfa0220fad2e096c8e599aed1c918c9cedc3420ca795887381f8e5f7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e3216bc-6c08-4f8c-99f3-fb5ddf46744d", "node_type": "1", "metadata": {}, "hash": "75e5f207a7373cfbbf90a4f3816254b722d819934440813e05e9f673393084f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}}, "hash": "b2bf2763f91d8fac94236c21cdecfd6671b1a05602883d615125fc43dbac2a44", "text": "For example, we\nmight want to use a Scikit-learn model in a Spark job. This means\nthat the ML models should work outside of the model-training envi\u2010\nronment. In the following, we describe Language-agnostic and\nVendor-specific exchange formats for ML models.\nLanguage-agnostic exchange formats\nAmalgamation is the simplest way to export an ML model. The\nmodel and all necessary code to run are bundled as one package.\nUsually, it is a single source code file that can be compiled on\nnearly any platform as a standalone program.", "start_char_idx": 1011, "end_char_idx": 1537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e3216bc-6c08-4f8c-99f3-fb5ddf46744d": {"__data__": {"id_": "1e3216bc-6c08-4f8c-99f3-fb5ddf46744d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ff2c95e-1eff-426d-8571-93b49341fd17", "node_type": "1", "metadata": {}, "hash": "b2bf2763f91d8fac94236c21cdecfd6671b1a05602883d615125fc43dbac2a44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f316f1f-32e1-486d-8fb9-0f9388cd42db", "node_type": "1", "metadata": {}, "hash": "be9320872547a92bd52327090099aeb1a5fb871c77e527b1c6c85b0cf4001ddd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}}, "hash": "75e5f207a7373cfbbf90a4f3816254b722d819934440813e05e9f673393084f5", "text": "For example, we\ncan create a standalone version of an ML model by using\nSKompiler. This python package provides a tool for transforming\ntrained Scikit-learn models into other forms, such as SQL queries,\nExcel formulas, Portable Format for Analytics (PFA) files, or\nSymPy expressions. The last can be translated to code in a variety\nof languages, such as C, Javascript, Rust, Julia, etc.\nAmalgamation is a straightforward concept, and the exported\nML models are portable.", "start_char_idx": 1538, "end_char_idx": 2008, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f316f1f-32e1-486d-8fb9-0f9388cd42db": {"__data__": {"id_": "4f316f1f-32e1-486d-8fb9-0f9388cd42db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e3216bc-6c08-4f8c-99f3-fb5ddf46744d", "node_type": "1", "metadata": {}, "hash": "75e5f207a7373cfbbf90a4f3816254b722d819934440813e05e9f673393084f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "node_type": "1", "metadata": {}, "hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "class_name": "RelatedNodeInfo"}}, "hash": "be9320872547a92bd52327090099aeb1a5fb871c77e527b1c6c85b0cf4001ddd", "text": "Amalgamation is a straightforward concept, and the exported\nML models are portable. With some easy ML algorithms, such as\nlogistic regression or decision tree, this format is compact and\nmight have good performance, which is useful for constrained\nembedded environments. However, the ML model code and pa\u2010\nrameters need to be managed together.", "start_char_idx": 1925, "end_char_idx": 2268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4db9cb2c-14e1-4c4d-8e01-ca94bd87ce95": {"__data__": {"id_": "4db9cb2c-14e1-4c4d-8e01-ca94bd87ce95", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f564de1-1d5e-4c71-a70d-e5610bf88a51", "node_type": "1", "metadata": {}, "hash": "9d82d50c0bdd159afdbb2c9743b4f189cee424bec4ee5b6a61f14ba91e6ff5d9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}}, "hash": "8f8d4eb92726ac73cf7ce8c8bd3cf2e97c3b4372b0a6405511891e6bfa301b26", "text": "However, the ML model code and pa\u2010\nrameters need to be managed together.\nPMML is a format for model serving based on XML with the file\nextension .pmml. PMML has been standardized by the Data\nMining Group (DMG) . Basically, .ppml describes a model and\npipeline in XML . The PMML supports not all of the ML algorithms,Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nand its usage in open source-driven tools is limited due to licens\u2010\ning issues.", "start_char_idx": 0, "end_char_idx": 495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f564de1-1d5e-4c71-a70d-e5610bf88a51": {"__data__": {"id_": "2f564de1-1d5e-4c71-a70d-e5610bf88a51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4db9cb2c-14e1-4c4d-8e01-ca94bd87ce95", "node_type": "1", "metadata": {}, "hash": "8f8d4eb92726ac73cf7ce8c8bd3cf2e97c3b4372b0a6405511891e6bfa301b26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcbdde15-623c-45d9-9beb-dde9c0ffb196", "node_type": "1", "metadata": {}, "hash": "7f8dadb31dec6bde840a8bf0e9979ada8ef6b13bfcf4f08ab12947b2d771360a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}}, "hash": "9d82d50c0bdd159afdbb2c9743b4f189cee424bec4ee5b6a61f14ba91e6ff5d9", "text": "PFA (Portable Format for Analytics) is designed as a replacement\nfor PMML. From DMG: \u201cA PFA document is a string of JSON-for\u2010\nmatted text that describes an executable called a scoring engine.\nEach engine has a well-defined input, a well-defined output, and\nfunctions for combining inputs to construct the output in an ex\u2010\npression-centric syntax tree\u201d.", "start_char_idx": 496, "end_char_idx": 848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcbdde15-623c-45d9-9beb-dde9c0ffb196": {"__data__": {"id_": "dcbdde15-623c-45d9-9beb-dde9c0ffb196", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f564de1-1d5e-4c71-a70d-e5610bf88a51", "node_type": "1", "metadata": {}, "hash": "9d82d50c0bdd159afdbb2c9743b4f189cee424bec4ee5b6a61f14ba91e6ff5d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9512d88-2aec-436c-a314-fb932aaa84bb", "node_type": "1", "metadata": {}, "hash": "5b30a29872ded857557a048f865a765709de3f47db78d9a58cf9d97bd87c3ad6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}}, "hash": "7f8dadb31dec6bde840a8bf0e9979ada8ef6b13bfcf4f08ab12947b2d771360a", "text": "PFA capabilities include (1) control\nstructures, such as conditionals, loops, and user-defined func\u2010\ntions, (2) expressed within JSON, and can, therefore, be easily\ngenerated and manipulated by other programs, (3) fine-grained\nfunction library supporting extensibility callbacks. To run ML\nmodels as PFA files, we will need a PFA-enabled environment.\nONNX (Open Neural Network eXchange) is an ML framework in\u2010\ndependent file format. ONNX was created to allow any ML tool\nto share a single model format.", "start_char_idx": 849, "end_char_idx": 1351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9512d88-2aec-436c-a314-fb932aaa84bb": {"__data__": {"id_": "e9512d88-2aec-436c-a314-fb932aaa84bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcbdde15-623c-45d9-9beb-dde9c0ffb196", "node_type": "1", "metadata": {}, "hash": "7f8dadb31dec6bde840a8bf0e9979ada8ef6b13bfcf4f08ab12947b2d771360a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ae7c6e2-8b2e-4f19-9244-371ef3906376", "node_type": "1", "metadata": {}, "hash": "c31429f733fee91af7ff3563857491cb25fc6df2bbcf21b6fd72e04df2bf0985", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}}, "hash": "5b30a29872ded857557a048f865a765709de3f47db78d9a58cf9d97bd87c3ad6", "text": "ONNX was created to allow any ML tool\nto share a single model format. This format is supported by many\nbig tech companies such as Microsoft, Facebook, and Amazon.\nOnce the ML model is serialized in the ONNX format, it can be\nconsumed by onnx-enabled runtime libraries (also called inference\nengines) and then make predictions. Here you will find the list of\ntools that can use ONNX format. Notably that most deep learn\u2010\ning tools have ONNX support.", "start_char_idx": 1282, "end_char_idx": 1730, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ae7c6e2-8b2e-4f19-9244-371ef3906376": {"__data__": {"id_": "0ae7c6e2-8b2e-4f19-9244-371ef3906376", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9512d88-2aec-436c-a314-fb932aaa84bb", "node_type": "1", "metadata": {}, "hash": "5b30a29872ded857557a048f865a765709de3f47db78d9a58cf9d97bd87c3ad6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "node_type": "1", "metadata": {}, "hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "class_name": "RelatedNodeInfo"}}, "hash": "c31429f733fee91af7ff3563857491cb25fc6df2bbcf21b6fd72e04df2bf0985", "text": "Notably that most deep learn\u2010\ning tools have ONNX support.\nSource: Open Standard Models\nVendor-specific exchange formats\nScikit-Learn saves models as pickled python objects, with a .pkl\nfile extension.\nH2O allows you to convert the models you have built to either\nPOJO (Plain Old Java Object) or MOJO (Model Object,\nOptimized).\nSparkML models that can be saved in the MLeap file format and\nserved in real-time using an MLeap model server.", "start_char_idx": 1672, "end_char_idx": 2110, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c661d886-7f8b-4f03-af5a-7fd9fee6b1fe": {"__data__": {"id_": "c661d886-7f8b-4f03-af5a-7fd9fee6b1fe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "821dbc59-27a8-42a7-a88a-a52095ea2a16", "node_type": "1", "metadata": {}, "hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "821dbc59-27a8-42a7-a88a-a52095ea2a16", "node_type": "1", "metadata": {}, "hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "class_name": "RelatedNodeInfo"}}, "hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "text": "The MLeap run\u2010\ntime is a JAR that can run in any Java application.MLeap sup\u2010\nports Spark, Scikit-learn, and Tensorflow for training pipelines\nand exporting them to an MLeap Bundle.", "start_char_idx": 0, "end_char_idx": 180, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7714117d-bef8-4fe8-a3bd-0bc726f35583": {"__data__": {"id_": "7714117d-bef8-4fe8-a3bd-0bc726f35583", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78", "node_type": "1", "metadata": {}, "hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0112c5b-7c32-479a-97bd-9438fa1771d3", "node_type": "1", "metadata": {}, "hash": "7b7425daef3fe465d8f3c5a6499b5fba97da35dd586f4d38d723ae8359089afe", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78", "node_type": "1", "metadata": {}, "hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "class_name": "RelatedNodeInfo"}}, "hash": "253673d2dcadb9365ad155d5377775bd7031a8432a93a15656a6ffa76cd8b31e", "text": "TensorFlow saves models as .pb files; which is the protocol buffer\nfiles extension.\nPyTorch serves models by using their proprietary Torch Script as\na .pt file. Their model format can be served from a C\u2013 application.\nKeras saves a model as a .h5 file, which is known in the scientific\ncommunity as a data file saved in the Hierarchical Data Format\n(HDF). This type of file contains multidimensional arrays of data.\nApple has its proprietary file format with the extension .mlmodel\nto store models embedded in iOS applications.", "start_char_idx": 0, "end_char_idx": 526, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0112c5b-7c32-479a-97bd-9438fa1771d3": {"__data__": {"id_": "d0112c5b-7c32-479a-97bd-9438fa1771d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78", "node_type": "1", "metadata": {}, "hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7714117d-bef8-4fe8-a3bd-0bc726f35583", "node_type": "1", "metadata": {}, "hash": "253673d2dcadb9365ad155d5377775bd7031a8432a93a15656a6ffa76cd8b31e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78", "node_type": "1", "metadata": {}, "hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "class_name": "RelatedNodeInfo"}}, "hash": "7b7425daef3fe465d8f3c5a6499b5fba97da35dd586f4d38d723ae8359089afe", "text": "The Core ML\nframework has native support for Objective-C and Swift pro\u2010\ngramming languages. Applications trained in other ML frame\u2010\nworks, such as TensorFlow, Scikit-Learn, and other frameworks\nneed to use tools like such as coremltools and Tensorflow con\u2010\nverter to translate their ML model files to the .mlmodel format\nfor use on iOS.", "start_char_idx": 527, "end_char_idx": 863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4bb71919-2013-4728-9dc2-57182a1771af": {"__data__": {"id_": "4bb71919-2013-4728-9dc2-57182a1771af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "960ab783-6d27-45f7-a6be-49f2e7532c9a", "node_type": "1", "metadata": {}, "hash": "0c0932ce5678c76c3f742a86388f8fb76ac2f18ed0a40be1b74026a90c388194", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}}, "hash": "868db532fe6626fc73a22677b5e473fe612a8f4ef656b375773ae86c10cc2864", "text": "The following Table summarizes all ML model serialization formats:Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nOpen-\nFormat VendorFile\nExtension LicenseML Tools &\nPlatforms\nSupportHuman-\nread\u2010\nable Compress\n\"almagi\u2010\nnation\"\u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2713\nPMML\u2713DMG .pmml AGPL R, Python,\nSpark\u2713\n(XML)\u2718\nPFA\u2713DMG JSON PFA-en\u2010\nabled\nruntime\u2713\n(JSON)\u2718\nONNX\u2713SIG\nLFAI.", "start_char_idx": 0, "end_char_idx": 395, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "960ab783-6d27-45f7-a6be-49f2e7532c9a": {"__data__": {"id_": "960ab783-6d27-45f7-a6be-49f2e7532c9a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bb71919-2013-4728-9dc2-57182a1771af", "node_type": "1", "metadata": {}, "hash": "868db532fe6626fc73a22677b5e473fe612a8f4ef656b375773ae86c10cc2864", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d093e52-87c9-46b7-b75d-1ace03bf599b", "node_type": "1", "metadata": {}, "hash": "fa3d74a139ad95f17a1090172fa69dceb36bfe6985d90e06635dfc0d85e98377", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}}, "hash": "0c0932ce5678c76c3f742a86388f8fb76ac2f18ed0a40be1b74026a90c388194", "text": "onnx TF, CNTK,\nCore ML,\nMXNet,\nML.NET\u2212 \u2713\nTF\nServing\nFormat\u2713Google .pf Tensor\nFlow\u2718g-zip\nPickle\nFormat\u2713.pkl scikit-learn\u2718g-zip\nJAR/\nPOJO\u2713.jar H2O\u2718 \u2713\nHDF\u2713.h5 Keras\u2718 \u2713\nMLEAP\u2713.jar/ .zip Spark, TF,\nscikit-learn\u2718g-zip\nTorch\nScript\u2718.", "start_char_idx": 395, "end_char_idx": 621, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d093e52-87c9-46b7-b75d-1ace03bf599b": {"__data__": {"id_": "4d093e52-87c9-46b7-b75d-1ace03bf599b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "960ab783-6d27-45f7-a6be-49f2e7532c9a", "node_type": "1", "metadata": {}, "hash": "0c0932ce5678c76c3f742a86388f8fb76ac2f18ed0a40be1b74026a90c388194", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e0c03fe3-060a-4782-a41f-e4b6ffbc3251", "node_type": "1", "metadata": {}, "hash": "7722572cb670296a38ab19f11d3b3049ed39f96e3fbb3a01024f4da48f17332a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}}, "hash": "fa3d74a139ad95f17a1090172fa69dceb36bfe6985d90e06635dfc0d85e98377", "text": "TF,\nscikit-learn\u2718g-zip\nTorch\nScript\u2718.pt PyTorch\u2718 \u2713\nApple\n.mlmodel\u2718Apple .mlmodel TensorFlow,\nscikit-learn,\nCore ML\u2212 \u2713\nFurther reading:\nML Models training file formats\nOpen Standard Models\nCode: Deployment Pipelines\nThe final stage of delivering an ML project includes the following\nthree steps:\n1Model Serving - The process of deploying the ML model in a pro\u2010\nduction environment.", "start_char_idx": 584, "end_char_idx": 964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0c03fe3-060a-4782-a41f-e4b6ffbc3251": {"__data__": {"id_": "e0c03fe3-060a-4782-a41f-e4b6ffbc3251", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d093e52-87c9-46b7-b75d-1ace03bf599b", "node_type": "1", "metadata": {}, "hash": "fa3d74a139ad95f17a1090172fa69dceb36bfe6985d90e06635dfc0d85e98377", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b401a653-d593-42d5-9243-5d83093798f3", "node_type": "1", "metadata": {}, "hash": "ad046583165c91038276fcf0b9096f785d47166b2b3e407d3c9fde3391ef37cd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}}, "hash": "7722572cb670296a38ab19f11d3b3049ed39f96e3fbb3a01024f4da48f17332a", "text": "2Model Performance Monitoring - The process of observing the ML\nmodel performance based on live and previously unseen data,\nsuch as prediction or recommendation. In particular, we are inter\u2010\nested in ML-specific signals, such as prediction deviation from\nprevious model performance. These signals might be used as trig\u2010\ngers for model re-training.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\n3Model Performance Logging - Every inference request results in a\nlog-record.\nIn the following, we discuss Model Serving Patterns and Model\nDeployment Strategies.", "start_char_idx": 965, "end_char_idx": 1574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b401a653-d593-42d5-9243-5d83093798f3": {"__data__": {"id_": "b401a653-d593-42d5-9243-5d83093798f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0c03fe3-060a-4782-a41f-e4b6ffbc3251", "node_type": "1", "metadata": {}, "hash": "7722572cb670296a38ab19f11d3b3049ed39f96e3fbb3a01024f4da48f17332a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "node_type": "1", "metadata": {}, "hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "class_name": "RelatedNodeInfo"}}, "hash": "ad046583165c91038276fcf0b9096f785d47166b2b3e407d3c9fde3391ef37cd", "text": "In the following, we discuss Model Serving Patterns and Model\nDeployment Strategies.\nModel Serving Patterns\nThree components should be considered when we serve an ML model\nin a production environment. The inference is the process of getting\ndata to be ingested by a model to compute predictions. This process\nrequires a model, an interpreter for the execution, and input data.", "start_char_idx": 1490, "end_char_idx": 1866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fede8ebb-dff7-4cff-bb80-6c6c4442a37d": {"__data__": {"id_": "fede8ebb-dff7-4cff-bb80-6c6c4442a37d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bfc7226-6269-4036-8253-89c19406915d", "node_type": "1", "metadata": {}, "hash": "944582356ee1c19e3828fe479e411312cec6d4d299c977c43640871b809f61b7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}}, "hash": "bb49bd13adce5a7b3c4d16f847f5f93513b3e41c09ea79e45addf777b04df6d9", "text": "This process\nrequires a model, an interpreter for the execution, and input data.\nDeploying an ML system to a production environment includes two\naspects, first deploying the pipeline for automated retraining and\nML model deployment. Second, providing the API for prediction on\nunseen data.\nModel serving is a way to integrate the ML model in a software sys\u2010\ntem. We distinguish between five patterns to put the ML model in\nproduction: Model-as-Service, Model-as-Dependency, Precompute,\nModel-on-Demand, and Hyb rid-Serving.", "start_char_idx": 0, "end_char_idx": 523, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4bfc7226-6269-4036-8253-89c19406915d": {"__data__": {"id_": "4bfc7226-6269-4036-8253-89c19406915d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fede8ebb-dff7-4cff-bb80-6c6c4442a37d", "node_type": "1", "metadata": {}, "hash": "bb49bd13adce5a7b3c4d16f847f5f93513b3e41c09ea79e45addf777b04df6d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72ae79f0-16f6-409f-a4b4-4dc943ca566d", "node_type": "1", "metadata": {}, "hash": "6c9b93bc689d354446f8b35362a2fc8eea16fd4573ad15ef687ac82627631ccc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}}, "hash": "944582356ee1c19e3828fe479e411312cec6d4d299c977c43640871b809f61b7", "text": "Please note that the above-\ndescribed model serialization formats might be used for any of the\nmodel serving patterns.", "start_char_idx": 524, "end_char_idx": 642, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72ae79f0-16f6-409f-a4b4-4dc943ca566d": {"__data__": {"id_": "72ae79f0-16f6-409f-a4b4-4dc943ca566d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bfc7226-6269-4036-8253-89c19406915d", "node_type": "1", "metadata": {}, "hash": "944582356ee1c19e3828fe479e411312cec6d4d299c977c43640871b809f61b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "576d392c-1d49-43f9-b9c8-16ff55b735bd", "node_type": "1", "metadata": {}, "hash": "d6dcc0cf9340310799307f13b2a98a9c794a9875919b9cd634b70afe1a95c5a7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}}, "hash": "6c9b93bc689d354446f8b35362a2fc8eea16fd4573ad15ef687ac82627631ccc", "text": "The following taxonomy shows these approaches:\nMachine Learning Model Serving Taxonomy\n\u00a0 ML Model\nService &\nVersioningTogether with the\nconsuming\napplicationIndependent from the consuming\napplication\nCompile/\nRuntime\nAvailabiltyBuild & runtime\navailableAvailable re\u2010\nmotely through\nREST API/RPCAvailable at the\nruntime scope\nServing\nPatterns\"Model-as-\nDependency\"\"Model-as-\nService\"\"Precompute\" and\n\"Model on\nDemand\"\nHybrid Model Serving (Federated\nLearning)\u00a0\nNow, we present the serving patterns to productionize the ML model\nsuch as Model-as-Service,", "start_char_idx": 643, "end_char_idx": 1195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "576d392c-1d49-43f9-b9c8-16ff55b735bd": {"__data__": {"id_": "576d392c-1d49-43f9-b9c8-16ff55b735bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72ae79f0-16f6-409f-a4b4-4dc943ca566d", "node_type": "1", "metadata": {}, "hash": "6c9b93bc689d354446f8b35362a2fc8eea16fd4573ad15ef687ac82627631ccc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ffe8ea6-1378-43f1-a4d3-0d51afa4108b", "node_type": "1", "metadata": {}, "hash": "01ab2310c9dd0d0f27a9951013f0ad61b057ed3980216ceddcf738baa0ad2a9e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}}, "hash": "d6dcc0cf9340310799307f13b2a98a9c794a9875919b9cd634b70afe1a95c5a7", "text": "we present the serving patterns to productionize the ML model\nsuch as Model-as-Service, Model-as-Dependency, Precompute,\nModel-on-Demand, and Hyb rid-Serving.\nModel-as-Service\nModel-as-Service is a common pattern for wrapping an ML model as\nan independent service.", "start_char_idx": 1108, "end_char_idx": 1372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ffe8ea6-1378-43f1-a4d3-0d51afa4108b": {"__data__": {"id_": "6ffe8ea6-1378-43f1-a4d3-0d51afa4108b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "576d392c-1d49-43f9-b9c8-16ff55b735bd", "node_type": "1", "metadata": {}, "hash": "d6dcc0cf9340310799307f13b2a98a9c794a9875919b9cd634b70afe1a95c5a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6824f290-dc3b-4d35-9c22-ed22ae19fa60", "node_type": "1", "metadata": {}, "hash": "ae4fbc9bab875fe2585c10dbe47f31ca49c31524d05aa566e9471d33a7971a23", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}}, "hash": "01ab2310c9dd0d0f27a9951013f0ad61b057ed3980216ceddcf738baa0ad2a9e", "text": "We can wrap the ML model and the inter\u2010\npreter within a dedicated web service that applications can request\nthrough a REST API or consume as a gRPC service.Back\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nThis pattern can be used for various ML workflows, such as Forecast,\nWeb Service, Online Learning.\nFigure Source\nModel-as-Dependency\nModel-as-Dependency is probably the most straightforward way to\npackage an ML model. A packaged ML model is considered as a de\u2010\npendency within the software application.", "start_char_idx": 1373, "end_char_idx": 1931, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6824f290-dc3b-4d35-9c22-ed22ae19fa60": {"__data__": {"id_": "6824f290-dc3b-4d35-9c22-ed22ae19fa60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ffe8ea6-1378-43f1-a4d3-0d51afa4108b", "node_type": "1", "metadata": {}, "hash": "01ab2310c9dd0d0f27a9951013f0ad61b057ed3980216ceddcf738baa0ad2a9e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf", "node_type": "1", "metadata": {}, "hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "class_name": "RelatedNodeInfo"}}, "hash": "ae4fbc9bab875fe2585c10dbe47f31ca49c31524d05aa566e9471d33a7971a23", "text": "A packaged ML model is considered as a de\u2010\npendency within the software application. For example, the applica\u2010\ntion consumes the ML model like a conventional jar dependency by\ninvoking the prediction method and passing the values. The return\nvalue of such method execution is some prediction that is performed\nby the previously trained ML model. The Model-as-Dependency ap\u2010\nproach is mostly used for implementing the Forecast pattern.", "start_char_idx": 1847, "end_char_idx": 2281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "519c17ff-67c4-45e6-8c18-1de6f686499a": {"__data__": {"id_": "519c17ff-67c4-45e6-8c18-1de6f686499a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "787369f8-7ee4-44c6-9cb0-a49266145a71", "node_type": "1", "metadata": {}, "hash": "791a9d26e041e6ea72e5001c97613af19e49721066df212cb83fcaedafdabc8b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}}, "hash": "d9c4a268b03c71eb6c78fec0b06c0baa3b4cae0d136000da2fe7f1ff4a1a3802", "text": "The Model-as-Dependency ap\u2010\nproach is mostly used for implementing the Forecast pattern.\nPrecompute Serving Pattern\nThis type of ML model serving is tightly related to the Forecast ML\nworkflow. With the Precompute serving pattern, we use an already\ntrained ML model and precompute the predictions for the incoming\nbatch of data. The resulting predictions are persisted in the data\u2010\nbase. Therefore, for any input request, we query the database to get\nthe prediction result.", "start_char_idx": 0, "end_char_idx": 473, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "787369f8-7ee4-44c6-9cb0-a49266145a71": {"__data__": {"id_": "787369f8-7ee4-44c6-9cb0-a49266145a71", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "519c17ff-67c4-45e6-8c18-1de6f686499a", "node_type": "1", "metadata": {}, "hash": "d9c4a268b03c71eb6c78fec0b06c0baa3b4cae0d136000da2fe7f1ff4a1a3802", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a45eb22-2399-44c0-acae-288d0e5c2159", "node_type": "1", "metadata": {}, "hash": "fd91b6526f68e5b35bd6b063390c2dd92e4459a98ab1a62c19ae039f500bf81f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}}, "hash": "791a9d26e041e6ea72e5001c97613af19e49721066df212cb83fcaedafdabc8b", "text": "Therefore, for any input request, we query the database to get\nthe prediction result.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nFurther reading: Bringing ML to Production (Slides)\nModel-on-Demand\nThe Model-on-Demand pattern also treats the ML model as a de\u2010\npendency that is available at runtime. This ML model, contrary to the\nModel-as-Dependency pattern, has its own release cycle and is pub\u2010\nlished independently.\nThe message-broker architecture is typically used for such on-de\u2010\nmand model serving.", "start_char_idx": 388, "end_char_idx": 948, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a45eb22-2399-44c0-acae-288d0e5c2159": {"__data__": {"id_": "9a45eb22-2399-44c0-acae-288d0e5c2159", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "787369f8-7ee4-44c6-9cb0-a49266145a71", "node_type": "1", "metadata": {}, "hash": "791a9d26e041e6ea72e5001c97613af19e49721066df212cb83fcaedafdabc8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41a86f97-3f58-409b-b9c2-023d13c9351d", "node_type": "1", "metadata": {}, "hash": "5bd884b34fe96df0d4a680c69ad51b4c56a3c682715f2e36915a78b25472ecd0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}}, "hash": "fd91b6526f68e5b35bd6b063390c2dd92e4459a98ab1a62c19ae039f500bf81f", "text": "The message-broker architecture is typically used for such on-de\u2010\nmand model serving. The message-broker topology architecture pat\u2010\ntern contains two main types of architecture components: a broker\ncomponent and an event processor component. The broker compo\u2010\nnent is the central part that contains the event channels that are\nutilised within the event flow. The event channels, which are enclosed\nin the broker component, are message queues. We can imagine such\narchitecture containing input- and output-queues. A message broker\nallows one process to write prediction-requests in an input queue.", "start_char_idx": 863, "end_char_idx": 1459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41a86f97-3f58-409b-b9c2-023d13c9351d": {"__data__": {"id_": "41a86f97-3f58-409b-b9c2-023d13c9351d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a45eb22-2399-44c0-acae-288d0e5c2159", "node_type": "1", "metadata": {}, "hash": "fd91b6526f68e5b35bd6b063390c2dd92e4459a98ab1a62c19ae039f500bf81f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfd0a9a2-4770-4314-95ec-13d2acd03e4b", "node_type": "1", "metadata": {}, "hash": "60e5a241858c95163f5cad127156697b19adf5f5061fe3339343acbfe2e63ba1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}}, "hash": "5bd884b34fe96df0d4a680c69ad51b4c56a3c682715f2e36915a78b25472ecd0", "text": "A message broker\nallows one process to write prediction-requests in an input queue.\nThe event processor contains the model serving runtime and the ML\nmodel. This process connects to the broker, reads these requests in\nbatch from the queue and sends them to the model to make the pre\u2010\ndictions. The model serving process runs the prediction generation on\nthe input data and writes the resulted predictions to the output\nqueue. Afterwards, the queued prediction results are pushed to the\nprediction service that initiated the prediction request.\nFurther reading:\nEvent-driven architecture\nWeb services vs.", "start_char_idx": 1376, "end_char_idx": 1979, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cfd0a9a2-4770-4314-95ec-13d2acd03e4b": {"__data__": {"id_": "cfd0a9a2-4770-4314-95ec-13d2acd03e4b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41a86f97-3f58-409b-b9c2-023d13c9351d", "node_type": "1", "metadata": {}, "hash": "5bd884b34fe96df0d4a680c69ad51b4c56a3c682715f2e36915a78b25472ecd0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "72551f36-ec85-45af-bae3-5423db829066", "node_type": "1", "metadata": {}, "hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "class_name": "RelatedNodeInfo"}}, "hash": "60e5a241858c95163f5cad127156697b19adf5f5061fe3339343acbfe2e63ba1", "text": "Further reading:\nEvent-driven architecture\nWeb services vs. streaming for real-time machine learning\nendpoints\nHyb rid-Serving (Feder ated Learning)\nFederated Learning, also known as hybrid-serving, is another way of\nserving a model to the users. It is unique in the way it does, there is\nnot only one model that predicts the outcome, but there are also lots\nof it.", "start_char_idx": 1920, "end_char_idx": 2285, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3920b6b6-165d-4081-a2f3-fd4bfd11d94b": {"__data__": {"id_": "3920b6b6-165d-4081-a2f3-fd4bfd11d94b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "503ceb27-2176-427d-aed7-28fb8851714b", "node_type": "1", "metadata": {}, "hash": "4f929d348f5da34031cfb91abefce8fe182e14b329b64e4571fb34e5746f160a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}}, "hash": "0b218f43a674c1ec06b4e3e087af3d055e5e0f17d1976c688f2a82bf91562d13", "text": "Exactly spoken there are as many models as users exist, in ad\u2010\ndition to the one that\u2019s held on a server. Let us start with the unique\nmodel, the one on the server. The model on the server-side is trainedBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nonly once with the real-world data. It sets the initial model for each\nuser. Also, it is a relatively general trained model so it fits for the\nmajority of users.", "start_char_idx": 0, "end_char_idx": 465, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "503ceb27-2176-427d-aed7-28fb8851714b": {"__data__": {"id_": "503ceb27-2176-427d-aed7-28fb8851714b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3920b6b6-165d-4081-a2f3-fd4bfd11d94b", "node_type": "1", "metadata": {}, "hash": "0b218f43a674c1ec06b4e3e087af3d055e5e0f17d1976c688f2a82bf91562d13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8068f1ab-4c29-44c7-ade7-6aa2eb3bc2ab", "node_type": "1", "metadata": {}, "hash": "f006ace3bc530f88f4a57a8299237d8a870e5d81e893c9f5b8c143490f913861", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}}, "hash": "4f929d348f5da34031cfb91abefce8fe182e14b329b64e4571fb34e5746f160a", "text": "On the other side, there are the user-side models,\nwhich are the real unique models. Due to the raising hardware stan\u2010\ndards on mobile devices, it is possible for the devices to train their\nown models. Like that the devices will train their own highly special\u2010\nized model for their own user. Once in a while, the devices send their\nalready trained model data (not the personal data) to the server.\nThere the server model will be adjusted, so the actual trends of the\nwhole user community will be covered by the model.", "start_char_idx": 466, "end_char_idx": 983, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8068f1ab-4c29-44c7-ade7-6aa2eb3bc2ab": {"__data__": {"id_": "8068f1ab-4c29-44c7-ade7-6aa2eb3bc2ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "503ceb27-2176-427d-aed7-28fb8851714b", "node_type": "1", "metadata": {}, "hash": "4f929d348f5da34031cfb91abefce8fe182e14b329b64e4571fb34e5746f160a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c491f0d-e54c-42ce-abca-cf987967a63d", "node_type": "1", "metadata": {}, "hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "class_name": "RelatedNodeInfo"}}, "hash": "f006ace3bc530f88f4a57a8299237d8a870e5d81e893c9f5b8c143490f913861", "text": "This model is set\nto be the new initial model that all devices are using. For not having\nany downsides for the users, while the server model gets updated,\nthis happens only when the device is idle, connected to WiFi and\ncharging. Also, the testing is done on the devices, therefore the newly\nadopted model from the server is sent to the devices and tested for\nfunctionality.\nThe big benefit of this is that the data used for training and testing,\nwhich is highly personal, never leaves the devices while still capturing\nall data that is available.", "start_char_idx": 984, "end_char_idx": 1531, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b29e2185-6487-4a2f-a2c7-9b78c143ec49": {"__data__": {"id_": "b29e2185-6487-4a2f-a2c7-9b78c143ec49", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d82d9a02-ea07-4b3d-80d4-46e13aed9994", "node_type": "1", "metadata": {}, "hash": "f3f8cd733457b858b79499e9ea5113a00d02884c8bb9113427d9a592f9b7ddc5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}}, "hash": "2073d0f0c1dadc4f5a05bde21aa1479b1bcc69b124f40081a9c6d38f267a1cc6", "text": "This way it is possible to train highly accu\u2010\nrate models while not having to store tons of (probably personal)\ndata in the cloud. But there is no such thing as a free lunch, normal\nmachine learning algorithms are built with homogeneously and large\ndatasets on powerful hardware which is always available for train\u2010\ning. With Federated Learning there are other circumstances, the mo\u2010\nbile devices are less powerful, the training data is distributed across\nmillions of devices and these are not always available for training.\nExactly for this TensorFlow Federated (TFF) has been created.", "start_char_idx": 0, "end_char_idx": 586, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d82d9a02-ea07-4b3d-80d4-46e13aed9994": {"__data__": {"id_": "d82d9a02-ea07-4b3d-80d4-46e13aed9994", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b29e2185-6487-4a2f-a2c7-9b78c143ec49", "node_type": "1", "metadata": {}, "hash": "2073d0f0c1dadc4f5a05bde21aa1479b1bcc69b124f40081a9c6d38f267a1cc6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcf6a7ce-08b1-480e-810d-bcbe837a8b0d", "node_type": "1", "metadata": {}, "hash": "9949baab63ce92d284019f06aee7d0799ea422c5acf3a2cbda39033b91588dc8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}}, "hash": "f3f8cd733457b858b79499e9ea5113a00d02884c8bb9113427d9a592f9b7ddc5", "text": "Exactly for this TensorFlow Federated (TFF) has been created. TFF\nis a lightweight form of TensorFlow created for Federated Learning.\nFigure Source\nDeployment Strategies\nIn the following, we discuss common ways for wrapping trained\nmodels as deployable services, namely deploying ML models as\nDocker Containers to Cloud Instances and as Serverless Functions.\nDeploying ML Models as Docker ContainersBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nAs of now, there is no standard, open solution to ML model deploy\u2010\nment.", "start_char_idx": 525, "end_char_idx": 1096, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcf6a7ce-08b1-480e-810d-bcbe837a8b0d": {"__data__": {"id_": "dcf6a7ce-08b1-480e-810d-bcbe837a8b0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d82d9a02-ea07-4b3d-80d4-46e13aed9994", "node_type": "1", "metadata": {}, "hash": "f3f8cd733457b858b79499e9ea5113a00d02884c8bb9113427d9a592f9b7ddc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9f3614a-c2df-412b-a822-4fa748fc2000", "node_type": "1", "metadata": {}, "hash": "ce5620e85421299477ee07dd2d9539fd4fbab6ee1239dc871a295d425397692a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}}, "hash": "9949baab63ce92d284019f06aee7d0799ea422c5acf3a2cbda39033b91588dc8", "text": "As ML model inference being considered stateless, lightweight,\nand idempotent, containerization becomes the de-facto standard\nfor delivery. This means we deploy a container that wraps an ML\nmodel inference code. For on-premise, cloud, or hybrid deployments,\nDocker is considered to be de-facto standard containerization\ntechnology.\nOne ubiquitous way is to package the whole ML tech stack (depen\u2010\ndencies) and the code for ML model prediction into a Docker con\u2010\ntainer. Then Kubernetes or an alternative (e.g.", "start_char_idx": 1097, "end_char_idx": 1606, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9f3614a-c2df-412b-a822-4fa748fc2000": {"__data__": {"id_": "f9f3614a-c2df-412b-a822-4fa748fc2000", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcf6a7ce-08b1-480e-810d-bcbe837a8b0d", "node_type": "1", "metadata": {}, "hash": "9949baab63ce92d284019f06aee7d0799ea422c5acf3a2cbda39033b91588dc8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6eeeb8cf-4c12-4ba5-b385-b41fdcc0156e", "node_type": "1", "metadata": {}, "hash": "163eff244166f9e0ad8a154a1e465f999a9991c6d1ac2558ae2127e6b94880a6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}}, "hash": "ce5620e85421299477ee07dd2d9539fd4fbab6ee1239dc871a295d425397692a", "text": "Then Kubernetes or an alternative (e.g. AWS Fargate) does\nthe orchestration. The ML model functionality, such as prediction, is\nthen available through a REST API (e.g. implemented as Flask\napplication)\nDeploying ML Models as Serverless Functions\nVarious cloud vendors already provide machine-learning platforms,\nand you can deploy your model with their services. Examples are\nAmazon AWS Sagemaker, Google Cloud AI Platform, Azure Machine\nLearning Studio, and IBM Watson Machine Learning, to name a few.", "start_char_idx": 1567, "end_char_idx": 2069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6eeeb8cf-4c12-4ba5-b385-b41fdcc0156e": {"__data__": {"id_": "6eeeb8cf-4c12-4ba5-b385-b41fdcc0156e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9f3614a-c2df-412b-a822-4fa748fc2000", "node_type": "1", "metadata": {}, "hash": "ce5620e85421299477ee07dd2d9539fd4fbab6ee1239dc871a295d425397692a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf", "node_type": "1", "metadata": {}, "hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "class_name": "RelatedNodeInfo"}}, "hash": "163eff244166f9e0ad8a154a1e465f999a9991c6d1ac2558ae2127e6b94880a6", "text": "Commercial cloud services also provide containerization of ML mod\u2010\nels such as AWS Lambda and Google App Engine servlet host.", "start_char_idx": 2070, "end_char_idx": 2195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a949e8c7-ffda-49a1-b339-a6f7d2f48ef4": {"__data__": {"id_": "a949e8c7-ffda-49a1-b339-a6f7d2f48ef4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e0b48a4-47d1-4675-ac47-cd8ccd583f4d", "node_type": "1", "metadata": {}, "hash": "c46129bae03efea507a475acdc47c8e60e12a0bdba1302960c93bd449233a08d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}}, "hash": "c509ee35a8632290ef3dec61fb694c69d6dad6a92913302c31608c525c6ca97a", "text": "In order to deploy an ML model as a serverless function, the applica\u2010\ntion code and dependencies are packaged into .zip files, with a single\nentry point function. This function then could be managed by major\ncloud providers such as Azure Functions, AWS Lambda, or Google\nCloud Functions. However, attention should be paid to possible con\u2010\nstraints of the deployed artifacts such as the size of the artifact.\nBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nThe content of this site was created by Dr.", "start_char_idx": 0, "end_char_idx": 551, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e0b48a4-47d1-4675-ac47-cd8ccd583f4d": {"__data__": {"id_": "6e0b48a4-47d1-4675-ac47-cd8ccd583f4d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a949e8c7-ffda-49a1-b339-a6f7d2f48ef4", "node_type": "1", "metadata": {}, "hash": "c509ee35a8632290ef3dec61fb694c69d6dad6a92913302c31608c525c6ca97a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "def231b8-c1b7-4a00-b0f9-ec23066e1f7c", "node_type": "1", "metadata": {}, "hash": "188a73388654244fc641a56d04444a05c9bb1b1ff5701095d4e8db15919f586a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}}, "hash": "c46129bae03efea507a475acdc47c8e60e12a0bdba1302960c93bd449233a08d", "text": "Larysa\nVisengeriyeva, Anja Kammer, Isabel B\u00e4r, Alexander\nKniesz, and Michael Pl\u00f6d (DDD Advisor). Design\nmade by Sebastian Eberstaller.\nIt is published under Creative Commons Attribution\n4.0 International Public License and can therefore\nbe shared and adapted with attribution\n(\"INNOQ\").", "start_char_idx": 552, "end_char_idx": 838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "def231b8-c1b7-4a00-b0f9-ec23066e1f7c": {"__data__": {"id_": "def231b8-c1b7-4a00-b0f9-ec23066e1f7c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e0b48a4-47d1-4675-ac47-cd8ccd583f4d", "node_type": "1", "metadata": {}, "hash": "c46129bae03efea507a475acdc47c8e60e12a0bdba1302960c93bd449233a08d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40b4fd5c-9805-473e-9457-e0a1e6ed0a4a", "node_type": "1", "metadata": {}, "hash": "e4f28cd334a64ebf18e32236bac09837f4ce79dcccc3860fd50c0feddb69abe8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}}, "hash": "188a73388654244fc641a56d04444a05c9bb1b1ff5701095d4e8db15919f586a", "text": "Made and maintained by\nPrivacy | Site noticeBack\nData: Data Engineering Pipelines\nModel: Machine Learning Pipelines\nCode: Deployment Pipelines\n\nMLOps Principles\nAs machine learning and AI propagate in software\nproducts and services, we need to establish best prac\u2010\ntices and tools to test, deploy, manage, and monitor\nML models in real-world production. In short, with\nMLOps we strive to avoid \u201ctechnical debt\u201d in machine\nlearning applications.", "start_char_idx": 839, "end_char_idx": 1283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40b4fd5c-9805-473e-9457-e0a1e6ed0a4a": {"__data__": {"id_": "40b4fd5c-9805-473e-9457-e0a1e6ed0a4a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "def231b8-c1b7-4a00-b0f9-ec23066e1f7c", "node_type": "1", "metadata": {}, "hash": "188a73388654244fc641a56d04444a05c9bb1b1ff5701095d4e8db15919f586a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f48a29ad-f064-4f99-aa42-e6481ec00bdd", "node_type": "1", "metadata": {}, "hash": "e862ec292330d40cbb1fd37e34e8095d792d455ced5a889b9ce553314b97108e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}}, "hash": "e4f28cd334a64ebf18e32236bac09837f4ce79dcccc3860fd50c0feddb69abe8", "text": "SIG MLOps defines \u201can optimal MLOps experience [as]\none where Machine Learning assets are treated con\u2010\nsistently with all other software assets within a CI/CD\nenvironment. Machine Learning models can be de\u2010\nployed alongside the services that wrap them and the\nservices that consume them as part of a unified re\u2010\nlease process.\u201d By codifying these practices, we hope\nto accelerate the adoption of ML/AI in software sys\u2010\ntems and fast delivery of intelligent software.", "start_char_idx": 1284, "end_char_idx": 1750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f48a29ad-f064-4f99-aa42-e6481ec00bdd": {"__data__": {"id_": "f48a29ad-f064-4f99-aa42-e6481ec00bdd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40b4fd5c-9805-473e-9457-e0a1e6ed0a4a", "node_type": "1", "metadata": {}, "hash": "e4f28cd334a64ebf18e32236bac09837f4ce79dcccc3860fd50c0feddb69abe8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5", "node_type": "1", "metadata": {}, "hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "class_name": "RelatedNodeInfo"}}, "hash": "e862ec292330d40cbb1fd37e34e8095d792d455ced5a889b9ce553314b97108e", "text": "In the\nfollowing, we describe a set of important concepts in\nMLOps such as Iterative-Incremental Development,\nAutomation, Continuous Deployment, Versioning,\nTesting, Reproducibility, and Monitoring.", "start_char_idx": 1751, "end_char_idx": 1949, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a91168b0-6ea4-472d-bc06-b081330b168f": {"__data__": {"id_": "a91168b0-6ea4-472d-bc06-b081330b168f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03e47879-f991-433d-97ca-d48ea0af7b90", "node_type": "1", "metadata": {}, "hash": "00223029112f45cbabe50645bd150e696c17dada9c9997b546607bbfdfca2198", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}}, "hash": "0d0482f4d41d9186be53911242dcd4c28764a3cbe78175ef932ea4be41aa0dd3", "text": "Iterative-Incremental Process in\nMLOps\nThe complete MLOps process includes three broad\nphases of \u201cDesigning the ML-powered application\u201d,Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\n\u201cML Experimentation and Development\u201d, and \u201cML\nOperations\u201d.", "start_char_idx": 0, "end_char_idx": 507, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03e47879-f991-433d-97ca-d48ea0af7b90": {"__data__": {"id_": "03e47879-f991-433d-97ca-d48ea0af7b90", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a91168b0-6ea4-472d-bc06-b081330b168f", "node_type": "1", "metadata": {}, "hash": "0d0482f4d41d9186be53911242dcd4c28764a3cbe78175ef932ea4be41aa0dd3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "100cdae7-28de-4cf2-94c3-38d7c46e8c91", "node_type": "1", "metadata": {}, "hash": "a8c3fe9aee3d366647c1797ec7b5ad9bbcbb63537717219f721e7ecf168ba8da", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}}, "hash": "00223029112f45cbabe50645bd150e696c17dada9c9997b546607bbfdfca2198", "text": "The first phase is devoted to business understanding,\ndata understanding and designing the ML-powered\nsoftware. In this stage, we identify our potential user,\ndesign the machine learning solution to solve its prob\u2010\nlem, and assess the further development of the\nproject. Mostly, we would act within two categories of\nproblems - either increasing the productivity of the\nuser or increasing the interactivity of our application.\nInitially, we define ML use-cases and prioritize them.\nThe best practice for ML projects is to work on one ML\nuse case at a time.", "start_char_idx": 508, "end_char_idx": 1064, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "100cdae7-28de-4cf2-94c3-38d7c46e8c91": {"__data__": {"id_": "100cdae7-28de-4cf2-94c3-38d7c46e8c91", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03e47879-f991-433d-97ca-d48ea0af7b90", "node_type": "1", "metadata": {}, "hash": "00223029112f45cbabe50645bd150e696c17dada9c9997b546607bbfdfca2198", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8be279ff-ef64-4fe2-a895-abba32d58c32", "node_type": "1", "metadata": {}, "hash": "d430428d6c8cdcef27ad554bbef479fc15329992824fd00f27441693bc94dee8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}}, "hash": "a8c3fe9aee3d366647c1797ec7b5ad9bbcbb63537717219f721e7ecf168ba8da", "text": "The best practice for ML projects is to work on one ML\nuse case at a time. Furthermore, the design phase\naims to inspect the available data that will be needed\nto train our model and to specify the functional and\nnon-functional requirements of our ML model. We\nshould use these requirements to design the architec\u2010\nture of the ML-application, establish the serving strat\u2010\negy, and create a test suite for the future ML model.", "start_char_idx": 990, "end_char_idx": 1415, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8be279ff-ef64-4fe2-a895-abba32d58c32": {"__data__": {"id_": "8be279ff-ef64-4fe2-a895-abba32d58c32", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "100cdae7-28de-4cf2-94c3-38d7c46e8c91", "node_type": "1", "metadata": {}, "hash": "a8c3fe9aee3d366647c1797ec7b5ad9bbcbb63537717219f721e7ecf168ba8da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36792f86-4b31-44ca-8932-bff12013809e", "node_type": "1", "metadata": {}, "hash": "354d950d090f0b3432ce5b0ef84bd2e3c663d8eb38ff1a60ee55d1726ec1265a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}}, "hash": "d430428d6c8cdcef27ad554bbef479fc15329992824fd00f27441693bc94dee8", "text": "The follow-up phase \u201cML Experimentation and\nDevelopment\u201d is devoted to verifying the applicability\nof ML for our problem by implementing Proof-of-\nConcept for ML Model. Here, we run iteratively differ\u2010\nent steps, such as identifying or polishing the suitable\nML algorithm for our problem, data engineering, and\nmodel engineering. The primary goal in this phase is to\ndeliver a stable quality ML model that we will run in\nproduction.", "start_char_idx": 1416, "end_char_idx": 1848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36792f86-4b31-44ca-8932-bff12013809e": {"__data__": {"id_": "36792f86-4b31-44ca-8932-bff12013809e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8be279ff-ef64-4fe2-a895-abba32d58c32", "node_type": "1", "metadata": {}, "hash": "d430428d6c8cdcef27ad554bbef479fc15329992824fd00f27441693bc94dee8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd6b745d-e8d9-495b-b6ce-333955638033", "node_type": "1", "metadata": {}, "hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "class_name": "RelatedNodeInfo"}}, "hash": "354d950d090f0b3432ce5b0ef84bd2e3c663d8eb38ff1a60ee55d1726ec1265a", "text": "The main focus of the \u201cML Operations\u201d phase is to de\u2010\nliver the previously developed ML model in production\nby using established DevOps practices such as testing,\nversioning, continuous delivery, and monitoring.\nAll three phases are interconnected and influence each\nother. For example, the design decision during the de\u2010\nsign stage will propagate into the experimentation\nphase and finally influence the deployment options\nduring the final operations phase.", "start_char_idx": 1849, "end_char_idx": 2307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb7ca060-e17d-4903-bbaa-822ab0f66438": {"__data__": {"id_": "bb7ca060-e17d-4903-bbaa-822ab0f66438", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f90556c7-c8f4-451a-8d80-cf4ff4c8e6cb", "node_type": "1", "metadata": {}, "hash": "34020e9fb1aa9f7af919b072c1902bb9b5f50d5945ffa592e03b3a6c66765b62", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}}, "hash": "3f484c8eb650f9bf40db84610b92b7cbb8ce0c34147577c8304b3e27ae6f31f5", "text": "Automation\nThe level of automation of the Data, ML Model, and\nCode pipelines determines the maturity of the ML\nprocess. With increased maturity, the velocity for the\ntraining of new models is also increased.", "start_char_idx": 0, "end_char_idx": 207, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f90556c7-c8f4-451a-8d80-cf4ff4c8e6cb": {"__data__": {"id_": "f90556c7-c8f4-451a-8d80-cf4ff4c8e6cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb7ca060-e17d-4903-bbaa-822ab0f66438", "node_type": "1", "metadata": {}, "hash": "3f484c8eb650f9bf40db84610b92b7cbb8ce0c34147577c8304b3e27ae6f31f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "054cbdea-b57c-42f0-9d70-1b33eab3ad34", "node_type": "1", "metadata": {}, "hash": "060cb7093eaebfd9d0bc263697552ace48ae20142aa98b3758ff0c8c969944b0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}}, "hash": "34020e9fb1aa9f7af919b072c1902bb9b5f50d5945ffa592e03b3a6c66765b62", "text": "With increased maturity, the velocity for the\ntraining of new models is also increased. The objectiveBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nof an MLOps team is to automate the deployment of\nML models into the core software system or as a ser\u2010\nvice component.", "start_char_idx": 120, "end_char_idx": 652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "054cbdea-b57c-42f0-9d70-1b33eab3ad34": {"__data__": {"id_": "054cbdea-b57c-42f0-9d70-1b33eab3ad34", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f90556c7-c8f4-451a-8d80-cf4ff4c8e6cb", "node_type": "1", "metadata": {}, "hash": "34020e9fb1aa9f7af919b072c1902bb9b5f50d5945ffa592e03b3a6c66765b62", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "247ca1b7-b46b-47f7-8a5d-fa87c9ea9c0c", "node_type": "1", "metadata": {}, "hash": "6b8f5dc325cd7226bafd3287e7795706783213168a88f4e891728ac6beb7efdd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}}, "hash": "060cb7093eaebfd9d0bc263697552ace48ae20142aa98b3758ff0c8c969944b0", "text": "This means, to automate the com\u2010\nplete ML-workflow steps without any manual inter\u2010\nvention. Triggers for automated model training and\ndeployment can be calendar events, messaging, moni\u2010\ntoring events, as well as changes on data, model train\u2010\ning code, and application code.\nAutomated testing helps discovering problems quickly\nand in early stages. This enables fast fixing of errors\nand learning from mistakes.", "start_char_idx": 653, "end_char_idx": 1063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "247ca1b7-b46b-47f7-8a5d-fa87c9ea9c0c": {"__data__": {"id_": "247ca1b7-b46b-47f7-8a5d-fa87c9ea9c0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "054cbdea-b57c-42f0-9d70-1b33eab3ad34", "node_type": "1", "metadata": {}, "hash": "060cb7093eaebfd9d0bc263697552ace48ae20142aa98b3758ff0c8c969944b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24a3a044-c310-43f3-8343-b55d949c8ffc", "node_type": "1", "metadata": {}, "hash": "5c296cf0c67ec3eef49d93f20c690d07fdb3da42060435874d80e5e086448264", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}}, "hash": "6b8f5dc325cd7226bafd3287e7795706783213168a88f4e891728ac6beb7efdd", "text": "This enables fast fixing of errors\nand learning from mistakes.\nTo adopt MLOps, we see three levels of automation,\nstarting from the initial level with manual model train\u2010\ning and deployment, up to running both ML and CI/CD\npipelines automatically.\n1Manual process. This is a typical data science\nprocess, which is performed at the beginning of im\u2010\nplementing ML. This level has an experimental and\niterative nature. Every step in each pipeline, such as\ndata preparation and validation, model training and\ntesting, are executed manually.", "start_char_idx": 1001, "end_char_idx": 1537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24a3a044-c310-43f3-8343-b55d949c8ffc": {"__data__": {"id_": "24a3a044-c310-43f3-8343-b55d949c8ffc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "247ca1b7-b46b-47f7-8a5d-fa87c9ea9c0c", "node_type": "1", "metadata": {}, "hash": "6b8f5dc325cd7226bafd3287e7795706783213168a88f4e891728ac6beb7efdd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91b7b727-dceb-4096-bc15-abe813e5cbbb", "node_type": "1", "metadata": {}, "hash": "f965f064560dded95d3691c7d02e51d119f22cf93266e21e6db0890ddf6c551d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}}, "hash": "5c296cf0c67ec3eef49d93f20c690d07fdb3da42060435874d80e5e086448264", "text": "The common way to\nprocess is to use Rapid Application Development\n(RAD) tools, such as Jupyter Notebooks.\n2ML pipeline automation. The next level includes the\nexecution of model training automatically. We in\u2010\ntroduce here the continuous training of the model.\nWhenever new data is available, the process of\nmodel retraining is triggered. This level of automa\u2010\ntion also includes data and model validation steps.\n3CI/CD pipeline automation.", "start_char_idx": 1538, "end_char_idx": 1977, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91b7b727-dceb-4096-bc15-abe813e5cbbb": {"__data__": {"id_": "91b7b727-dceb-4096-bc15-abe813e5cbbb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24a3a044-c310-43f3-8343-b55d949c8ffc", "node_type": "1", "metadata": {}, "hash": "5c296cf0c67ec3eef49d93f20c690d07fdb3da42060435874d80e5e086448264", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb", "node_type": "1", "metadata": {}, "hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "class_name": "RelatedNodeInfo"}}, "hash": "f965f064560dded95d3691c7d02e51d119f22cf93266e21e6db0890ddf6c551d", "text": "3CI/CD pipeline automation. In the final stage, we in\u2010\ntroduce a CI/CD system to perform fast and reli\u2010\nable ML model deployments in production.", "start_char_idx": 1950, "end_char_idx": 2094, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fc134b1-5260-4e17-97a9-4d799078b18e": {"__data__": {"id_": "1fc134b1-5260-4e17-97a9-4d799078b18e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "387374e2-778f-472b-a73f-092761fffd50", "node_type": "1", "metadata": {}, "hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "387374e2-778f-472b-a73f-092761fffd50", "node_type": "1", "metadata": {}, "hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "class_name": "RelatedNodeInfo"}}, "hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "text": "The core\ndifference from the previous step is that we now\nautomatically build, test, and deploy the Data, ML\nModel, and the ML training pipeline components.", "start_char_idx": 0, "end_char_idx": 156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88561f61-11b4-4831-80e6-56ea5a7b8884": {"__data__": {"id_": "88561f61-11b4-4831-80e6-56ea5a7b8884", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a58da2c-4931-49ac-a9ad-c0851876d001", "node_type": "1", "metadata": {}, "hash": "2b433187a4d0bd126b2292eb6c8bf51b006654c93c7ab9dac5628e9e3ddefc6e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}}, "hash": "ffee8d33b4320a7b5ce14819d386499bf1c4a863ab946117304bfe5adeb905d2", "text": "The following picture shows the automated ML pipe\u2010\nline with CI/CD routines:Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nFigure adopted from \u201cMLOps: Continuous delivery and\nautomation pipelines in machine learning\u201d\nThe MLOps stages that reflect the process of ML", "start_char_idx": 0, "end_char_idx": 530, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a58da2c-4931-49ac-a9ad-c0851876d001": {"__data__": {"id_": "9a58da2c-4931-49ac-a9ad-c0851876d001", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88561f61-11b4-4831-80e6-56ea5a7b8884", "node_type": "1", "metadata": {}, "hash": "ffee8d33b4320a7b5ce14819d386499bf1c4a863ab946117304bfe5adeb905d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28907271-0aca-4c70-827c-4cfdbc72fedd", "node_type": "1", "metadata": {}, "hash": "fd2f5f49c913e25e35ed5753c846c2e490cf400ea1142efcd03f8ed6b244ced1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}}, "hash": "2b433187a4d0bd126b2292eb6c8bf51b006654c93c7ab9dac5628e9e3ddefc6e", "text": "delivery and\nautomation pipelines in machine learning\u201d\nThe MLOps stages that reflect the process of ML pipe\u2010\nline automation are explained in the following table:\nMLOps StageOutput of the Stage\nExecution\nDevelopment &\nExperimentation (ML algo\u2010\nrithms, new ML models)Source code for pipelines:\nData extraction, validation,\npreparation, model training,\nmodel evaluation, model\ntesting\nPipeline Continuous Integration\n(Build source code and run\ntests)Pipeline components to be\ndeployed: packages and\nexecutables.", "start_char_idx": 428, "end_char_idx": 937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "28907271-0aca-4c70-827c-4cfdbc72fedd": {"__data__": {"id_": "28907271-0aca-4c70-827c-4cfdbc72fedd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a58da2c-4931-49ac-a9ad-c0851876d001", "node_type": "1", "metadata": {}, "hash": "2b433187a4d0bd126b2292eb6c8bf51b006654c93c7ab9dac5628e9e3ddefc6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea32f259-157b-4a72-93fe-6cc2c06718b7", "node_type": "1", "metadata": {}, "hash": "21817921f2360bb081a227a41cb8a43f01303472ca88af850a967e9244f5ef39", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}}, "hash": "fd2f5f49c913e25e35ed5753c846c2e490cf400ea1142efcd03f8ed6b244ced1", "text": "Pipeline Continuous Delivery\n(Deploy pipelines to the target\nenvironment)Deployed pipeline with new\nimplementation of the\nmodel.\nAutomated Triggering (Pipeline\nis automatically executed in\nproduction. Schedule or trigger\nare used)Trained model that is stored\nin the model registry.\nModel Continuous Delivery\n(Model serving for prediction)Deployed model prediction\nservice (e.g. model exposed\nas REST API)\nMonitoring (Collecting data\nabout the model performance\non live data)Trigger to execute the pipe\u2010\nline or to start a new experi\u2010\nment cycle.", "start_char_idx": 938, "end_char_idx": 1483, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea32f259-157b-4a72-93fe-6cc2c06718b7": {"__data__": {"id_": "ea32f259-157b-4a72-93fe-6cc2c06718b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28907271-0aca-4c70-827c-4cfdbc72fedd", "node_type": "1", "metadata": {}, "hash": "fd2f5f49c913e25e35ed5753c846c2e490cf400ea1142efcd03f8ed6b244ced1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd2c91d5-fd7a-4565-9083-819f265ba97f", "node_type": "1", "metadata": {}, "hash": "e9a102ad2daf76d77286c847ac6bd2abce5e914760f47f92bee49b55d1e94bca", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}}, "hash": "21817921f2360bb081a227a41cb8a43f01303472ca88af850a967e9244f5ef39", "text": "After analyzing the MLOps Stages, we might notice\nthat the MLOps setup requires several components toBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nbe installed or prepared.", "start_char_idx": 1484, "end_char_idx": 1923, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd2c91d5-fd7a-4565-9083-819f265ba97f": {"__data__": {"id_": "cd2c91d5-fd7a-4565-9083-819f265ba97f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea32f259-157b-4a72-93fe-6cc2c06718b7", "node_type": "1", "metadata": {}, "hash": "21817921f2360bb081a227a41cb8a43f01303472ca88af850a967e9244f5ef39", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09e83244-0f60-4b37-9ec7-b77488731f88", "node_type": "1", "metadata": {}, "hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "class_name": "RelatedNodeInfo"}}, "hash": "e9a102ad2daf76d77286c847ac6bd2abce5e914760f47f92bee49b55d1e94bca", "text": "The following table lists those\ncomponents:\nMLOps Setup\nComponents Description\nSource Control Versioning the Code, Data, and ML Model\nartifacts.\nTest & Build\nServicesUsing CI tools for (1) Quality assurance\u00a0\u00a0for\nall ML artifacts, and (2) Building packages\nand executables for pipelines.", "start_char_idx": 1924, "end_char_idx": 2210, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f48fb26-925f-417f-b515-d565b88d5f7a": {"__data__": {"id_": "3f48fb26-925f-417f-b515-d565b88d5f7a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b77c2312-64b7-4e9e-a4ed-2f0b59d9dc84", "node_type": "1", "metadata": {}, "hash": "3574d961f622ad7a6fc2b6a32429c98aca35a9e28e7ac7a666b79c1cc8578d90", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}}, "hash": "e3f3ee93e4a0ba434c4b53faf57cdd52a047dc96a7a3da3ab2b25dde16811a13", "text": "Deployment\nServicesUsing CD tools for deploying pipelines to\nthe target environment.\nModel Registry A registry for storing already trained ML\nmodels.\nFeature Store Preprocessing input data as features to be\nconsumed in the model training pipeline\nand during the model serving.\nML Metadata\nStoreTracking metadata of model training, for\nexample model name, parameters, training\ndata, test data, and metric results.\nML Pipeline\nOrchestratorAutomating the steps of the ML\nexperiments.", "start_char_idx": 0, "end_char_idx": 480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b77c2312-64b7-4e9e-a4ed-2f0b59d9dc84": {"__data__": {"id_": "b77c2312-64b7-4e9e-a4ed-2f0b59d9dc84", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f48fb26-925f-417f-b515-d565b88d5f7a", "node_type": "1", "metadata": {}, "hash": "e3f3ee93e4a0ba434c4b53faf57cdd52a047dc96a7a3da3ab2b25dde16811a13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92d46532-8d6c-4397-b118-804cc96b6684", "node_type": "1", "metadata": {}, "hash": "30a8fa156d630dbb01136d925ba0dba01ae5a6cb35fc1c6a24b0a13f4a0fac96", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}}, "hash": "3574d961f622ad7a6fc2b6a32429c98aca35a9e28e7ac7a666b79c1cc8578d90", "text": "ML Pipeline\nOrchestratorAutomating the steps of the ML\nexperiments.\nFurther reading: \u201cMLOps: Continuous delivery and au\u2010\ntomation pipelines in machine learning\u201d\nContinuous X\nTo understand Model deployment, we first specify the\n\u201cML assets\u201d as ML model, its parameters and hyperpa\u2010\nrameters, training scripts, training and testing data.\nWe are interested in the identity, components, version\u2010\ning, and dependencies of these ML artifacts. The tar\u2010\nget destination for an ML artifact may be a (micro-)\nservice or some infrastructure components.", "start_char_idx": 413, "end_char_idx": 953, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92d46532-8d6c-4397-b118-804cc96b6684": {"__data__": {"id_": "92d46532-8d6c-4397-b118-804cc96b6684", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b77c2312-64b7-4e9e-a4ed-2f0b59d9dc84", "node_type": "1", "metadata": {}, "hash": "3574d961f622ad7a6fc2b6a32429c98aca35a9e28e7ac7a666b79c1cc8578d90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8583080e-e19d-4aa9-9ea0-26ed3dfe5eb5", "node_type": "1", "metadata": {}, "hash": "a7cedba77c6ae11f88a9405e482bd902bf54e359aec94d34afa8ebe0ff770d0c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}}, "hash": "30a8fa156d630dbb01136d925ba0dba01ae5a6cb35fc1c6a24b0a13f4a0fac96", "text": "A deploy\u2010\nment service provides orchestration, logging, monitor\u2010\ning, and notification to ensure that the ML models,\ncode and data artifacts are stable.", "start_char_idx": 954, "end_char_idx": 1106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8583080e-e19d-4aa9-9ea0-26ed3dfe5eb5": {"__data__": {"id_": "8583080e-e19d-4aa9-9ea0-26ed3dfe5eb5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92d46532-8d6c-4397-b118-804cc96b6684", "node_type": "1", "metadata": {}, "hash": "30a8fa156d630dbb01136d925ba0dba01ae5a6cb35fc1c6a24b0a13f4a0fac96", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4408b453-bef7-40ec-bc82-c8ab1e20cd76", "node_type": "1", "metadata": {}, "hash": "ae69dd62ec40c29e67e03064710045b7ff27698c06aef157fab5a373e4983335", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}}, "hash": "a7cedba77c6ae11f88a9405e482bd902bf54e359aec94d34afa8ebe0ff770d0c", "text": "MLOps is an ML engineering culture that includes the\nfollowing practices:\nContinuous Integration (CI) extends the testing and\nvalidating code and components by adding testingBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nand validating data and models.", "start_char_idx": 1107, "end_char_idx": 1625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4408b453-bef7-40ec-bc82-c8ab1e20cd76": {"__data__": {"id_": "4408b453-bef7-40ec-bc82-c8ab1e20cd76", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8583080e-e19d-4aa9-9ea0-26ed3dfe5eb5", "node_type": "1", "metadata": {}, "hash": "a7cedba77c6ae11f88a9405e482bd902bf54e359aec94d34afa8ebe0ff770d0c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "node_type": "1", "metadata": {}, "hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "class_name": "RelatedNodeInfo"}}, "hash": "ae69dd62ec40c29e67e03064710045b7ff27698c06aef157fab5a373e4983335", "text": "Continuous Delivery (CD) concerns with delivery of\nan ML training pipeline that automatically deploys\nanother the ML model prediction service.\nContinuous Training (CT) is unique to ML systems\nproperty, which automatically retrains ML models\nfor re-deployment.\nContinuous Monitoring (CM) concerns with moni\u2010\ntoring production data and model performance\nmetrics, which are bound to business metrics.\nVersioning\nThe goal of the versioning is to treat ML training\nscrips, ML models and data sets for model training as\nfirst-class citizens in DevOps processes by tracking ML\nmodels and data sets with version control systems.", "start_char_idx": 1626, "end_char_idx": 2246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e6f86e8-1fcf-4d35-9d83-b0c80d88bf0f": {"__data__": {"id_": "6e6f86e8-1fcf-4d35-9d83-b0c80d88bf0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae094239-1e94-41ec-b537-241ea214da20", "node_type": "1", "metadata": {}, "hash": "96ae1bec059349b4f7b72885539c3ba35ddce9bee1c299228ed47ecea9ebc3fa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}}, "hash": "8b4e69ef37ee76fccd00c4519582efa49e008ac90bb386e6748888bf9693ad62", "text": "The common reasons when ML model and data\nchanges (according to SIG MLOps) are the following:\nML models can be retrained based upon new train\u2010\ning data.\nModels may be retrained based upon new training\napproaches.\nModels may be self-learning.\nModels may degrade over time.\nModels may be deployed in new applications.\nModels may be subject to attack and require\nrevision.\nModels can be quickly rolled back to a previous\nserving version.", "start_char_idx": 0, "end_char_idx": 434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae094239-1e94-41ec-b537-241ea214da20": {"__data__": {"id_": "ae094239-1e94-41ec-b537-241ea214da20", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e6f86e8-1fcf-4d35-9d83-b0c80d88bf0f", "node_type": "1", "metadata": {}, "hash": "8b4e69ef37ee76fccd00c4519582efa49e008ac90bb386e6748888bf9693ad62", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "117fa4cc-c819-4872-aa98-ec9a6615e140", "node_type": "1", "metadata": {}, "hash": "a47f2c3b8f655848975feba1785ba7d2eb6e2f0781c38f8685b57c029b592010", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}}, "hash": "96ae1bec059349b4f7b72885539c3ba35ddce9bee1c299228ed47ecea9ebc3fa", "text": "Models can be quickly rolled back to a previous\nserving version.\nCorporate or government compliance may require\naudit or investigation on both ML model or data,\nhence we need access to all versions of the produc\u2010\ntionized ML model.\nData may reside across multiple systems.\nData may only be able to reside in restricted\njurisdictions.\nData storage may not be immutable.\nData ownership may be a factor.", "start_char_idx": 370, "end_char_idx": 770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "117fa4cc-c819-4872-aa98-ec9a6615e140": {"__data__": {"id_": "117fa4cc-c819-4872-aa98-ec9a6615e140", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae094239-1e94-41ec-b537-241ea214da20", "node_type": "1", "metadata": {}, "hash": "96ae1bec059349b4f7b72885539c3ba35ddce9bee1c299228ed47ecea9ebc3fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23fa5541-1de4-4a93-ba97-e8e14936ffbf", "node_type": "1", "metadata": {}, "hash": "96976567332b3040ad2ca7b05a6ce8fe6d05bfcb130ad9aa0121cec22ee42dda", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}}, "hash": "a47f2c3b8f655848975feba1785ba7d2eb6e2f0781c38f8685b57c029b592010", "text": "Data storage may not be immutable.\nData ownership may be a factor.\nAnalogously to the best practices for developing reli\u2010\nable software systems, every ML model specification\n(ML training code that creates an ML model) shouldBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\ngo through a code review phase.", "start_char_idx": 704, "end_char_idx": 1272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23fa5541-1de4-4a93-ba97-e8e14936ffbf": {"__data__": {"id_": "23fa5541-1de4-4a93-ba97-e8e14936ffbf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "117fa4cc-c819-4872-aa98-ec9a6615e140", "node_type": "1", "metadata": {}, "hash": "a47f2c3b8f655848975feba1785ba7d2eb6e2f0781c38f8685b57c029b592010", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7f57d8a-ab05-4629-b9ea-d85cf86ff64b", "node_type": "1", "metadata": {}, "hash": "cc3281d06c75c0ac3d9c6be1da281201309676eebe8167297c33389a08b3b964", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}}, "hash": "96976567332b3040ad2ca7b05a6ce8fe6d05bfcb130ad9aa0121cec22ee42dda", "text": "Furthermore, every\nML model specification should be versioned in a VCS\nto make the training of ML models auditable and\nreproducible.\nFurther readi ng: How do we manage ML models?\nModel Management Frameworks\nExperiments Tracking\nMachine Learning development is a highly iterative and\nresearch-centric process. In contrast to the traditional\nsoftware development process, in ML development,\nmultiple experiments on model training can be exe\u2010\ncuted in parallel before making the decision what\nmodel will be promoted to production.", "start_char_idx": 1273, "end_char_idx": 1800, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7f57d8a-ab05-4629-b9ea-d85cf86ff64b": {"__data__": {"id_": "d7f57d8a-ab05-4629-b9ea-d85cf86ff64b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23fa5541-1de4-4a93-ba97-e8e14936ffbf", "node_type": "1", "metadata": {}, "hash": "96976567332b3040ad2ca7b05a6ce8fe6d05bfcb130ad9aa0121cec22ee42dda", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "node_type": "1", "metadata": {}, "hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "class_name": "RelatedNodeInfo"}}, "hash": "cc3281d06c75c0ac3d9c6be1da281201309676eebe8167297c33389a08b3b964", "text": "The experimentation during ML development might\nhave the following scenario: One way to track multiple\nexperiments is to use different (Git-) branches, each\ndedicated to the separate experiment. The output of\neach branch is a trained model. Depending on the se\u2010\nlected metric, the trained ML models are compared\nwith each other and the appropriate model is selected.\nSuch low friction branching is fully supported by the\ntool DVC, which is an extension of Git and an open-\nsource version control system for machine learning\nprojects.", "start_char_idx": 1801, "end_char_idx": 2334, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd172577-bb20-4239-8779-41c2d9cc92d8": {"__data__": {"id_": "cd172577-bb20-4239-8779-41c2d9cc92d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98cb9888-1f26-49b0-99d8-5b1023e3f8a8", "node_type": "1", "metadata": {}, "hash": "8fadbf275860ffca84d700592ae82730cc46570803dbaef3ac86c34bf608c12c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}}, "hash": "5253627e770787b25e7074d768181dbaf4d6320fb28dea5070db4fd5bc7f36ea", "text": "Another popular tool for ML experiments\ntracking is the Weights and Biases (wandb) library,\nwhich automatically tracks the hyperparameters and\nmetrics of the experiments.\nTesting\nFigure source: \u201cThe ML Test Score: A Rubric for ML\nProduction Readiness and Technical Debt Reduction\u201d\nby E.Breck et al. 2017\nThe complete development pipeline includes three es\u2010\nsential components, data pipeline, ML model pipeline,\nand application pipeline.", "start_char_idx": 0, "end_char_idx": 436, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98cb9888-1f26-49b0-99d8-5b1023e3f8a8": {"__data__": {"id_": "98cb9888-1f26-49b0-99d8-5b1023e3f8a8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd172577-bb20-4239-8779-41c2d9cc92d8", "node_type": "1", "metadata": {}, "hash": "5253627e770787b25e7074d768181dbaf4d6320fb28dea5070db4fd5bc7f36ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5aba2019-cc1d-491d-b3dd-b7fe5aea8359", "node_type": "1", "metadata": {}, "hash": "bf1dadc88149be7b176c186576c411ede9a1bd08b11a1fa629de2ce188d8d883", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}}, "hash": "8fadbf275860ffca84d700592ae82730cc46570803dbaef3ac86c34bf608c12c", "text": "In accordance with this sepa\u2010\nration we distinguish three scopes for testing in MLBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nsystems: tests for features and data, tests for model\ndevelopment, and tests for ML infrastructure.", "start_char_idx": 437, "end_char_idx": 931, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5aba2019-cc1d-491d-b3dd-b7fe5aea8359": {"__data__": {"id_": "5aba2019-cc1d-491d-b3dd-b7fe5aea8359", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98cb9888-1f26-49b0-99d8-5b1023e3f8a8", "node_type": "1", "metadata": {}, "hash": "8fadbf275860ffca84d700592ae82730cc46570803dbaef3ac86c34bf608c12c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f2c8335-5e09-437b-9254-9146dc3ce4c0", "node_type": "1", "metadata": {}, "hash": "fe5fc7f463a9ac337340f6fe53e73dd41d45347029258c0816717832485911a1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}}, "hash": "bf1dadc88149be7b176c186576c411ede9a1bd08b11a1fa629de2ce188d8d883", "text": "Features and Data Tests\nData validation: Automatic check for data and fea\u2010\ntures schema/domain.\nAction: In order to build a schema (domain val\u2010\nues), calculate statistics from the training data.\nThis schema can be used as expectation defini\u2010\ntion or semantic role for input data during train\u2010\ning and serving stages.\nFeatures importance test to understand whether\nnew features add a predictive power.\nAction: Compute correlation coefficient on fea\u2010\ntures columns.\nAction: Train model with one or two features.", "start_char_idx": 932, "end_char_idx": 1441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f2c8335-5e09-437b-9254-9146dc3ce4c0": {"__data__": {"id_": "5f2c8335-5e09-437b-9254-9146dc3ce4c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5aba2019-cc1d-491d-b3dd-b7fe5aea8359", "node_type": "1", "metadata": {}, "hash": "bf1dadc88149be7b176c186576c411ede9a1bd08b11a1fa629de2ce188d8d883", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87d46d85-62c5-4f6f-adaf-439bff2ac8b5", "node_type": "1", "metadata": {}, "hash": "215f0fb427c7ad1d8c7267e03917e7117839d48ff32ffccd0e192beb2f861414", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}}, "hash": "fe5fc7f463a9ac337340f6fe53e73dd41d45347029258c0816717832485911a1", "text": "Action: Train model with one or two features.\nAction: Use the subset of features \u201cOne of k left\nout and train a set of different models.\nMeasure data dependencies, inference latency,\nand RAM usage for each new feature. Compare\nit with the predictive power of the newly added\nfeatures.\nDrop out unused/deprecated features from your\ninfrastructure and document it.\nFeatures and data pipelines should be policy-com\u2010\npliant (e.g. GDPR). These requirements should be\nprogrammatically checked in both development\nand production environments.", "start_char_idx": 1396, "end_char_idx": 1931, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87d46d85-62c5-4f6f-adaf-439bff2ac8b5": {"__data__": {"id_": "87d46d85-62c5-4f6f-adaf-439bff2ac8b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f2c8335-5e09-437b-9254-9146dc3ce4c0", "node_type": "1", "metadata": {}, "hash": "fe5fc7f463a9ac337340f6fe53e73dd41d45347029258c0816717832485911a1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "node_type": "1", "metadata": {}, "hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "class_name": "RelatedNodeInfo"}}, "hash": "215f0fb427c7ad1d8c7267e03917e7117839d48ff32ffccd0e192beb2f861414", "text": "These requirements should be\nprogrammatically checked in both development\nand production environments.\nFeature creation code should be tested by unit\ntests (to capture bugs in features).\nTests for Reliable Model Development\nWe need to provide specific testing support for detect\u2010\ning ML-specific errors.\nTesting ML training should include routines, which\nverify that algorithms make decisions aligned to\nbusiness objective. This means that ML algorithm\nloss metrics (MSE, log-loss, etc.)", "start_char_idx": 1829, "end_char_idx": 2316, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7215347a-bec8-4499-b84b-87e56d7798d7": {"__data__": {"id_": "7215347a-bec8-4499-b84b-87e56d7798d7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "338c170b-8eca-4a12-bf0d-5a6a78a6439c", "node_type": "1", "metadata": {}, "hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "338c170b-8eca-4a12-bf0d-5a6a78a6439c", "node_type": "1", "metadata": {}, "hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "class_name": "RelatedNodeInfo"}}, "hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "text": "This means that ML algorithm\nloss metrics (MSE, log-loss, etc.) should correlate\nwith business impact metrics (revenue, user en\u2010\ngagement, etc.", "start_char_idx": 0, "end_char_idx": 143, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fd2d5d1-becb-4b8c-95ae-4d22c81751ac": {"__data__": {"id_": "1fd2d5d1-becb-4b8c-95ae-4d22c81751ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "466d7896-5982-4d15-8c09-ce1b2b499fcb", "node_type": "1", "metadata": {}, "hash": "3ee9282fa7e9d09c55893c3da1a750f2f03c9a1f80aa3c97d224cd31cb3772ac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}}, "hash": "f108ea2d3cb675571839119270f4a0df54cba0d006794edadc682f2d53b27c89", "text": "should correlate\nwith business impact metrics (revenue, user en\u2010\ngagement, etc.", "start_char_idx": 0, "end_char_idx": 79, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "466d7896-5982-4d15-8c09-ce1b2b499fcb": {"__data__": {"id_": "466d7896-5982-4d15-8c09-ce1b2b499fcb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fd2d5d1-becb-4b8c-95ae-4d22c81751ac", "node_type": "1", "metadata": {}, "hash": "f108ea2d3cb675571839119270f4a0df54cba0d006794edadc682f2d53b27c89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "764cb45a-c263-4c13-82cf-8bcc8614f18d", "node_type": "1", "metadata": {}, "hash": "c7d6144b07e396cf6468b96a2a3d20bb35ce00e4f0b937d2cf08e837a68a26e3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}}, "hash": "3ee9282fa7e9d09c55893c3da1a750f2f03c9a1f80aa3c97d224cd31cb3772ac", "text": "should correlate\nwith business impact metrics (revenue, user en\u2010\ngagement, etc.)Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAction: The loss metrics - impact metrics rela\u2010\ntionship, can be measured in small scale A/B\ntesting using an intentionally degraded model.", "start_char_idx": 0, "end_char_idx": 532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "764cb45a-c263-4c13-82cf-8bcc8614f18d": {"__data__": {"id_": "764cb45a-c263-4c13-82cf-8bcc8614f18d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "466d7896-5982-4d15-8c09-ce1b2b499fcb", "node_type": "1", "metadata": {}, "hash": "3ee9282fa7e9d09c55893c3da1a750f2f03c9a1f80aa3c97d224cd31cb3772ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c26462c8-5ba6-409a-bdef-d32f4af76e8c", "node_type": "1", "metadata": {}, "hash": "2b89b5c3c41b67f794e317f8ce38f0c8b4c26393f3d5187c4394ad6d9fe5e611", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}}, "hash": "c7d6144b07e396cf6468b96a2a3d20bb35ce00e4f0b937d2cf08e837a68a26e3", "text": "Further reading: Selecting the Right Metric for\nevaluating Machine Learning Models. here 1,\nhere 2\nModel staleness test. The model is defined as stale\nif the trained model does not include up-to-date\ndata and/or does not satisfy the business impact\nrequirements. Stale models can affect the quality\nof prediction in intelligent software.\nAction: A/B experiment with older models.\nIncluding the range of ages to produce an Age\nvs. Prediction Quality curve to facilitate the un\u2010\nderstanding of how often the ML model should\nbe trained.", "start_char_idx": 533, "end_char_idx": 1066, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c26462c8-5ba6-409a-bdef-d32f4af76e8c": {"__data__": {"id_": "c26462c8-5ba6-409a-bdef-d32f4af76e8c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "764cb45a-c263-4c13-82cf-8bcc8614f18d", "node_type": "1", "metadata": {}, "hash": "c7d6144b07e396cf6468b96a2a3d20bb35ce00e4f0b937d2cf08e837a68a26e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96935e3d-077e-4077-a34c-563046a4a9af", "node_type": "1", "metadata": {}, "hash": "6cdccf0b20298394170175ab97e8495969158eca47ed1893d47d573e1b9a818b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}}, "hash": "2b89b5c3c41b67f794e317f8ce38f0c8b4c26393f3d5187c4394ad6d9fe5e611", "text": "Assessing the cost of more sophisticated ML\nmodels.\nAction: ML model performance should be com\u2010\npared to the simple baseline ML model (e.g. lin\u2010\near model vs neural network).\nValidating performance of a model.\nIt is recommended to separate the teams and\nprocedures collecting the training and test data\nto remove the dependencies and avoid false\nmethodology propagating from the training set\nto the test set (source).\nAction: Use an additional test set, which is dis\u2010\njoint from the training and validation sets. Use\nthis test set only for a final evaluation.", "start_char_idx": 1067, "end_char_idx": 1626, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96935e3d-077e-4077-a34c-563046a4a9af": {"__data__": {"id_": "96935e3d-077e-4077-a34c-563046a4a9af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c26462c8-5ba6-409a-bdef-d32f4af76e8c", "node_type": "1", "metadata": {}, "hash": "2b89b5c3c41b67f794e317f8ce38f0c8b4c26393f3d5187c4394ad6d9fe5e611", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df10fc68-725d-452b-abe1-a801e77316e1", "node_type": "1", "metadata": {}, "hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "class_name": "RelatedNodeInfo"}}, "hash": "6cdccf0b20298394170175ab97e8495969158eca47ed1893d47d573e1b9a818b", "text": "Use\nthis test set only for a final evaluation.\nFairness/Bias/Inclusion testing for the ML model\nperformance.\nAction: Collect more data that includes poten\u2010\ntially under-represented categories.\nAction: Examine input features if they correlate\nwith protected user categories.", "start_char_idx": 1580, "end_char_idx": 1853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d62f771-970b-48f8-b14a-62e26bc7e93b": {"__data__": {"id_": "4d62f771-970b-48f8-b14a-62e26bc7e93b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cad24ca-86e6-4ce9-a3f9-d4300a461240", "node_type": "1", "metadata": {}, "hash": "91ab2ef83afc257c8a4d9b1ae720a22d5107cfd9d0c475c003cf3853eb866638", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}}, "hash": "3853c6b5fa643c854839155473449ea671eaa53605bf88989276e8779cfec47b", "text": "Action: Examine input features if they correlate\nwith protected user categories.\nFurther reading: \u201cTour of Data Sampling\nMethods for Imbalanced Classification\u201d\nConventional unit testing for any feature creation,Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nML model specification code (training) and testing.", "start_char_idx": 0, "end_char_idx": 575, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6cad24ca-86e6-4ce9-a3f9-d4300a461240": {"__data__": {"id_": "6cad24ca-86e6-4ce9-a3f9-d4300a461240", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d62f771-970b-48f8-b14a-62e26bc7e93b", "node_type": "1", "metadata": {}, "hash": "3853c6b5fa643c854839155473449ea671eaa53605bf88989276e8779cfec47b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3d6202b-fbdb-4dd7-843c-d4c69d693507", "node_type": "1", "metadata": {}, "hash": "74578d166bd0aa0696c58002fc3b9ed10ce205b17f8943148b3dbb467641d002", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}}, "hash": "91ab2ef83afc257c8a4d9b1ae720a22d5107cfd9d0c475c003cf3853eb866638", "text": "Model governance testing (coming soon)\nML infrastructure test\nTraining the ML models should be reproducible,\nwhich means that training the ML model on the\nsame data should produce identical ML models.\nDiff-testing of ML models relies on deterministic\ntraining, which is hard to achieve due to non-\nconvexity of the ML algorithms, random seed\ngeneration, or distributed ML model training.\nAction: determine the non-deterministic parts in\nthe model training code base and try to mini\u2010\nmize non-determinism.\nTest ML API usage. Stress testing.", "start_char_idx": 576, "end_char_idx": 1115, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3d6202b-fbdb-4dd7-843c-d4c69d693507": {"__data__": {"id_": "f3d6202b-fbdb-4dd7-843c-d4c69d693507", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6cad24ca-86e6-4ce9-a3f9-d4300a461240", "node_type": "1", "metadata": {}, "hash": "91ab2ef83afc257c8a4d9b1ae720a22d5107cfd9d0c475c003cf3853eb866638", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c6aa033-bc49-4f28-a70c-df8fb280f9db", "node_type": "1", "metadata": {}, "hash": "daaa329ad5e9e668780357162a95722e3ddf943b19163590045003ba4441f95a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}}, "hash": "74578d166bd0aa0696c58002fc3b9ed10ce205b17f8943148b3dbb467641d002", "text": "Test ML API usage. Stress testing.\nAction: Unit tests to randomly generate input\ndata and training the model for a single opti\u2010\nmization step (e.g gradient descent).\nAction: Crash tests for model training. The ML\nmodel should restore from a checkpoint after a\nmid-training crash.\nTest the algorithmic correctness.\nAction: Unit test that it is not intended to com\u2010\npleting the ML model training but to train for a\nfew iterations and ensure that loss decreases\nwhile training.\nAvoid: Diff-testing with previously build ML\nmodels because such tests are hard to maintain.", "start_char_idx": 1081, "end_char_idx": 1648, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c6aa033-bc49-4f28-a70c-df8fb280f9db": {"__data__": {"id_": "9c6aa033-bc49-4f28-a70c-df8fb280f9db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3d6202b-fbdb-4dd7-843c-d4c69d693507", "node_type": "1", "metadata": {}, "hash": "74578d166bd0aa0696c58002fc3b9ed10ce205b17f8943148b3dbb467641d002", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9", "node_type": "1", "metadata": {}, "hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "class_name": "RelatedNodeInfo"}}, "hash": "daaa329ad5e9e668780357162a95722e3ddf943b19163590045003ba4441f95a", "text": "Avoid: Diff-testing with previously build ML\nmodels because such tests are hard to maintain.\nIntegration testing: The full ML pipeline should be\nintegration tested.\nAction: Create a fully automated test that regu\u2010\nlarly triggers the entire ML pipeline. The test\nshould validate that the data and code success\u2010\nfully finish each stage of training and the result\u2010\ning ML model performs as expected.\nAll integration tests should be run before the ML\nmodel reaches the production environment.", "start_char_idx": 1556, "end_char_idx": 2044, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a5b29452-7cf0-4e7c-9eef-db750abfb1f3": {"__data__": {"id_": "a5b29452-7cf0-4e7c-9eef-db750abfb1f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "153ff03a-7a5d-41b1-a225-d33f096a08d6", "node_type": "1", "metadata": {}, "hash": "51d5f42a73c291906d5a22cb37c1c1e9c093162fd0eac08bdd6f9d45ca618cb2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}}, "hash": "c800c0cd31bbb97e31ed2a33ac0782b638020a3b041b84b13ef41bf867282047", "text": "All integration tests should be run before the ML\nmodel reaches the production environment.\nValidating the ML model before serving it.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAction: Setting a threshold and testing for slow\ndegradation in model quality over many versions\non a validation set.", "start_char_idx": 0, "end_char_idx": 564, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "153ff03a-7a5d-41b1-a225-d33f096a08d6": {"__data__": {"id_": "153ff03a-7a5d-41b1-a225-d33f096a08d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5b29452-7cf0-4e7c-9eef-db750abfb1f3", "node_type": "1", "metadata": {}, "hash": "c800c0cd31bbb97e31ed2a33ac0782b638020a3b041b84b13ef41bf867282047", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "983f6bcd-90a3-467c-b5c7-046b750315d0", "node_type": "1", "metadata": {}, "hash": "13e0f3d12b6b2e15b637dd61f09a05e619a2083760550873bc5312624e5647ef", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}}, "hash": "51d5f42a73c291906d5a22cb37c1c1e9c093162fd0eac08bdd6f9d45ca618cb2", "text": "Action: Setting a threshold and testing for sud\u2010\nden performance drops in a new version of the\nML model.\nML models are canaried before serving.\nAction: Testing that an ML model successfully\nloads into production serving and the prediction\non real-life data is generated as expected.\nTesting that the model in the training environment\ngives the same score as the model in the serving\nenvironment.\nAction: The difference between the performance\non the holdout data and the \u201cnext day\u201d data.\nSome difference will always exist.", "start_char_idx": 565, "end_char_idx": 1087, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "983f6bcd-90a3-467c-b5c7-046b750315d0": {"__data__": {"id_": "983f6bcd-90a3-467c-b5c7-046b750315d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "153ff03a-7a5d-41b1-a225-d33f096a08d6", "node_type": "1", "metadata": {}, "hash": "51d5f42a73c291906d5a22cb37c1c1e9c093162fd0eac08bdd6f9d45ca618cb2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a87b86b-963b-470d-b6e6-926da66a50de", "node_type": "1", "metadata": {}, "hash": "4083217ecaa94d07113e66333ec31143953a6e09f3084715a69ee25f9790d8bd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}}, "hash": "13e0f3d12b6b2e15b637dd61f09a05e619a2083760550873bc5312624e5647ef", "text": "Some difference will always exist. Pay attention\nto large differences in performance between\nholdout and \u201cnext day\u201d data because it may indi\u2010\ncate that some time-sensitive features cause\nML model degradation.\nAction: Avoid result differences between train\u2010\ning and serving environments. Applying a model\nto an example in the training data and the same\nexample at serving should result in the same\nprediction. A difference here indicates an engi\u2010\nneering error.", "start_char_idx": 1053, "end_char_idx": 1513, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a87b86b-963b-470d-b6e6-926da66a50de": {"__data__": {"id_": "8a87b86b-963b-470d-b6e6-926da66a50de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "983f6bcd-90a3-467c-b5c7-046b750315d0", "node_type": "1", "metadata": {}, "hash": "13e0f3d12b6b2e15b637dd61f09a05e619a2083760550873bc5312624e5647ef", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "node_type": "1", "metadata": {}, "hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "class_name": "RelatedNodeInfo"}}, "hash": "4083217ecaa94d07113e66333ec31143953a6e09f3084715a69ee25f9790d8bd", "text": "A difference here indicates an engi\u2010\nneering error.\nMonitoring\nOnce the ML model has been deployed, it need to be\nmonitored to assure that the ML model performs as\nexpected. The following check list for model monitoring\nactivities in production is adopted from \u201cThe ML Test\nScore: A Rubric for ML Production Readiness and\nTechnical Debt Reduction\u201d by E.Breck et al. 2017:\nMonitor dependency changes throughout the com\u2010\nplete pipeline result in notification.\nData version change.\nChanges in source system.", "start_char_idx": 1462, "end_char_idx": 1966, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "965dbdc7-9602-43b1-80bf-018976ad93c0": {"__data__": {"id_": "965dbdc7-9602-43b1-80bf-018976ad93c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "245d234e-eebb-4aa1-b998-0442e66a44a9", "node_type": "1", "metadata": {}, "hash": "5cb8f17f208dc42299e8de622e069de3a38c04b4e11075834befe437f2cacd12", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}}, "hash": "f9be28b7fcf71ea4d0c152e1ec47bb0acf08f458df45b16d49e140d047abbc7c", "text": "Data version change.\nChanges in source system.\nDependencies upgrade.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMonitor data invariants in training and serving in\u2010\nputs: Alert if data does not match the schema,\nwhich has been specified in the training step.", "start_char_idx": 0, "end_char_idx": 526, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "245d234e-eebb-4aa1-b998-0442e66a44a9": {"__data__": {"id_": "245d234e-eebb-4aa1-b998-0442e66a44a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "965dbdc7-9602-43b1-80bf-018976ad93c0", "node_type": "1", "metadata": {}, "hash": "f9be28b7fcf71ea4d0c152e1ec47bb0acf08f458df45b16d49e140d047abbc7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18f178b4-7cd9-48ff-b80c-6bb76112b9ef", "node_type": "1", "metadata": {}, "hash": "e85d8cb9516d35a6b385a7e0379b7db5abaddf03000e2f05264f0bb65cad508e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}}, "hash": "5cb8f17f208dc42299e8de622e069de3a38c04b4e11075834befe437f2cacd12", "text": "Action: tuning of alerting threshold to ensure\nthat alerts remain useful and not misleading.\nMonitor whether training and serving features\ncompute the same value.\nSince the generation of training and serving fea\u2010\ntures might take place on physically separated\nlocations, we must carefully test that these dif\u2010\nferent code paths are logically identical.\nAction: (1) Log a sample of the serving traffic.\n(2) Compute distribution statistics (min, max,\navg, values, % of missing values, etc.) on the\ntraining features and the sampled serving fea\u2010\ntures and ensure that they match.", "start_char_idx": 527, "end_char_idx": 1103, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18f178b4-7cd9-48ff-b80c-6bb76112b9ef": {"__data__": {"id_": "18f178b4-7cd9-48ff-b80c-6bb76112b9ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "245d234e-eebb-4aa1-b998-0442e66a44a9", "node_type": "1", "metadata": {}, "hash": "5cb8f17f208dc42299e8de622e069de3a38c04b4e11075834befe437f2cacd12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2ce0a4e-ad12-400f-ad9a-61193a02b616", "node_type": "1", "metadata": {}, "hash": "c66b65aa746b448f2015a66bd6eef2cb4b35897abdaca8ed827fdb771eca5561", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}}, "hash": "e85d8cb9516d35a6b385a7e0379b7db5abaddf03000e2f05264f0bb65cad508e", "text": "on the\ntraining features and the sampled serving fea\u2010\ntures and ensure that they match.\nMonitor the numerical stability of the ML model.\nAction: trigger alerts for the occurrence of any\nNaNs or infinities.\nMonitor computational performance of an ML sys\u2010\ntem. Both dramatic and slow-leak regression in\ncomputational performance should be notified.\nAction: measure the performance of versions\nand components of code, data, and model by\npre-setting the alerting threshold.\nAction: collect system usage metrics like GPU\nmemory allocation, network traffic, and disk us\u2010\nage.", "start_char_idx": 1016, "end_char_idx": 1585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2ce0a4e-ad12-400f-ad9a-61193a02b616": {"__data__": {"id_": "d2ce0a4e-ad12-400f-ad9a-61193a02b616", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18f178b4-7cd9-48ff-b80c-6bb76112b9ef", "node_type": "1", "metadata": {}, "hash": "e85d8cb9516d35a6b385a7e0379b7db5abaddf03000e2f05264f0bb65cad508e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "963debed-7070-4f3c-96e2-5ec66d6c6847", "node_type": "1", "metadata": {}, "hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "class_name": "RelatedNodeInfo"}}, "hash": "c66b65aa746b448f2015a66bd6eef2cb4b35897abdaca8ed827fdb771eca5561", "text": "These metrics are useful for cloud costs\nestimations.\nMonitor how stale the system in production is.\nMeasure the age of the model. Older ML models\ntend to decay in performance.\nAction: Model monitoring is a continuous\nprocess, therefore it is important to identify the\nelements for monitoring and create a strategy\nfor the model monitoring before reaching\nproduction.\nMonitor the processes of feature generation as\nthey have impact on the model.", "start_char_idx": 1586, "end_char_idx": 2031, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "305cc266-361e-46b0-a7ed-0229ed2dc951": {"__data__": {"id_": "305cc266-361e-46b0-a7ed-0229ed2dc951", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "321fcb63-d95c-4677-9785-63b5f08cecf9", "node_type": "1", "metadata": {}, "hash": "0b02ab09df556b96705d580b8625f012321bddf13fa82671da88c956f999bb97", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}}, "hash": "5913fbfd7d84ed3efd24a928d1a4503424a65265a15c6b768b680f1f6614c0ae", "text": "Monitor the processes of feature generation as\nthey have impact on the model.\nAction: re-run feature generation on a frequentBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nbasis.\nMonitor degradation of the predictive quality of the\nML model on served data.", "start_char_idx": 0, "end_char_idx": 522, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "321fcb63-d95c-4677-9785-63b5f08cecf9": {"__data__": {"id_": "321fcb63-d95c-4677-9785-63b5f08cecf9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "305cc266-361e-46b0-a7ed-0229ed2dc951", "node_type": "1", "metadata": {}, "hash": "5913fbfd7d84ed3efd24a928d1a4503424a65265a15c6b768b680f1f6614c0ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1498a664-7df3-4580-80aa-da852b9765ca", "node_type": "1", "metadata": {}, "hash": "9d936f328c0ddf9a205f3c1b69727fa6798735c3735c36f2ec907a58fc360b6d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}}, "hash": "0b02ab09df556b96705d580b8625f012321bddf13fa82671da88c956f999bb97", "text": "Monitor degradation of the predictive quality of the\nML model on served data. Both dramatic and slow-\nleak regression in prediction quality should be\nnotified.\nDegradation might happened due to changes in\ndata or differing code paths, etc.\nAction: Measure statistical bias in predictions\n(avg in predictions in a slice of data). Models\nshould have nearly zero bias.\nAction: If a label is available immediately after\nthe prediction is made, we can measure the\nquality of prediction in real-time and identify\nproblems.", "start_char_idx": 445, "end_char_idx": 961, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1498a664-7df3-4580-80aa-da852b9765ca": {"__data__": {"id_": "1498a664-7df3-4580-80aa-da852b9765ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "321fcb63-d95c-4677-9785-63b5f08cecf9", "node_type": "1", "metadata": {}, "hash": "0b02ab09df556b96705d580b8625f012321bddf13fa82671da88c956f999bb97", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f709652a-4211-4c99-bfdb-564137f3c1ff", "node_type": "1", "metadata": {}, "hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "class_name": "RelatedNodeInfo"}}, "hash": "9d936f328c0ddf9a205f3c1b69727fa6798735c3735c36f2ec907a58fc360b6d", "text": "The picture below shows that the model monitoring\ncan be implemented by tracking the precision, recall,\nand F1-score of the model prediction along with the\ntime. The decrease of the precision, recall, and F1-score\ntriggers the model retraining, which leads to model\nrecovery.\n\u201cML Test Score\u201d System\nThe \u201cML Test Score\u201d measures the overall readiness of\nthe ML system for production.", "start_char_idx": 962, "end_char_idx": 1344, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6206d07c-1153-4eb0-bc74-d43fe861a882": {"__data__": {"id_": "6206d07c-1153-4eb0-bc74-d43fe861a882", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "42583b1f-8492-4241-924f-c9f3b6a52fa1", "node_type": "1", "metadata": {}, "hash": "157a8e66dae5912d08a1563c3d602b1a297300e0b7e93c4aba9d45a7647ab974", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}}, "hash": "6a3c4ff801fb6183e9d217ca7a6cb95e01a3ee35e10dfc2844817376b935c6ea", "text": "The final ML Test Score\nis computed as follows:\nFor each test, half a point is awarded for executing\nthe test manually, with the results documented and\ndistributed.", "start_char_idx": 0, "end_char_idx": 164, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "42583b1f-8492-4241-924f-c9f3b6a52fa1": {"__data__": {"id_": "42583b1f-8492-4241-924f-c9f3b6a52fa1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6206d07c-1153-4eb0-bc74-d43fe861a882", "node_type": "1", "metadata": {}, "hash": "6a3c4ff801fb6183e9d217ca7a6cb95e01a3ee35e10dfc2844817376b935c6ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b890cdf5-63e3-4f21-a765-e24e1f50978b", "node_type": "1", "metadata": {}, "hash": "bc326012d182def302ba231118ef305a6e57ed8191806e952cd4b9d72d4eecc8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}}, "hash": "157a8e66dae5912d08a1563c3d602b1a297300e0b7e93c4aba9d45a7647ab974", "text": "half a point is awarded for executing\nthe test manually, with the results documented and\ndistributed.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nA full point is awarded if the there is a system in\nplace to run that test automatically on a repeated\nbasis.", "start_char_idx": 63, "end_char_idx": 586, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b890cdf5-63e3-4f21-a765-e24e1f50978b": {"__data__": {"id_": "b890cdf5-63e3-4f21-a765-e24e1f50978b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42583b1f-8492-4241-924f-c9f3b6a52fa1", "node_type": "1", "metadata": {}, "hash": "157a8e66dae5912d08a1563c3d602b1a297300e0b7e93c4aba9d45a7647ab974", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b384dcae-5512-4c33-a499-3776bfcf85ca", "node_type": "1", "metadata": {}, "hash": "a875d07372e5772521e5d1d3ee12c7a7878b528e4672f99bf82835aa8d9d1591", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}}, "hash": "bc326012d182def302ba231118ef305a6e57ed8191806e952cd4b9d72d4eecc8", "text": "Sum the score of each of the four sections individu\u2010\nally: Data Tests, Model Tests, ML Infrastructure\nTests, and Monitoring.\nThe final ML Test Score is computed by taking the\nminimum of the scores aggregated for each of the\nsections: Data Tests, Model Tests, ML\nInfrastructure Tests, and Monitoring.\nAfter computing the ML Test Score, we can reason\nabout the readiness of the ML system for production.\nThe following table provides the interpretation ranges:\nPoints Description\n0 More of the research project than a productionized\nsystem.", "start_char_idx": 587, "end_char_idx": 1124, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b384dcae-5512-4c33-a499-3776bfcf85ca": {"__data__": {"id_": "b384dcae-5512-4c33-a499-3776bfcf85ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b890cdf5-63e3-4f21-a765-e24e1f50978b", "node_type": "1", "metadata": {}, "hash": "bc326012d182def302ba231118ef305a6e57ed8191806e952cd4b9d72d4eecc8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71a03883-c942-459b-b797-21604e74eac8", "node_type": "1", "metadata": {}, "hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "class_name": "RelatedNodeInfo"}}, "hash": "a875d07372e5772521e5d1d3ee12c7a7878b528e4672f99bf82835aa8d9d1591", "text": "(0,1] Not totally untested, but it is worth considering the\npossibility of serious holes in reliability.\n(1,2] There has been first pass at basic productionization,\nbut additional investment may be needed.\n(2,3] Reasonably tested, but it is possible that more of\nthose tests and procedures may be automated.\n(3,5] Strong level of automated testing and monitoring.\n>5 Exceptional level of automated testing and\nmonitoring.\nSource: \u201cThe ML Test Score: A Rubric for ML\nProduction Readiness and Technical Debt Reduction\u201d\nby E.Breck et al.", "start_char_idx": 1125, "end_char_idx": 1659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94bc3331-64ca-49c4-9998-97c7e964d574": {"__data__": {"id_": "94bc3331-64ca-49c4-9998-97c7e964d574", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f27daf2-26b8-489e-8cb6-47577e9d8900", "node_type": "1", "metadata": {}, "hash": "1d57b32a9c46f52e0c790230c5afd912325079ff00f3442d93af7aab56dbe908", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}}, "hash": "003324236cba9b537d539eca61e7fd5de4ba7e11ccf0e261a02e92cdbb406f97", "text": "2017\nReproducibility\nReproducibility in a machine learning workflow means\nthat every phase of either data processing, ML model\ntraining, and ML model deployment should produce\nidentical results given the same input.", "start_char_idx": 0, "end_char_idx": 215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f27daf2-26b8-489e-8cb6-47577e9d8900": {"__data__": {"id_": "0f27daf2-26b8-489e-8cb6-47577e9d8900", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94bc3331-64ca-49c4-9998-97c7e964d574", "node_type": "1", "metadata": {}, "hash": "003324236cba9b537d539eca61e7fd5de4ba7e11ccf0e261a02e92cdbb406f97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b33651d7-e2b9-4b0c-8002-33c07a7fe702", "node_type": "1", "metadata": {}, "hash": "39b3d3f68012bdcfce8cbd6c32ad1632099993a79b5180f79356ed4007cc9d6b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}}, "hash": "1d57b32a9c46f52e0c790230c5afd912325079ff00f3442d93af7aab56dbe908", "text": "ML model\ntraining, and ML model deployment should produce\nidentical results given the same input.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nPhase ChallengesHow to Ensure\nReproducibility\nCollecting\nDataGeneration of the\ntraining data can't\nbe reproduced (e.", "start_char_idx": 118, "end_char_idx": 644, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b33651d7-e2b9-4b0c-8002-33c07a7fe702": {"__data__": {"id_": "b33651d7-e2b9-4b0c-8002-33c07a7fe702", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f27daf2-26b8-489e-8cb6-47577e9d8900", "node_type": "1", "metadata": {}, "hash": "1d57b32a9c46f52e0c790230c5afd912325079ff00f3442d93af7aab56dbe908", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bae23d5-e668-426c-bbcb-018a6807a5e0", "node_type": "1", "metadata": {}, "hash": "77ba0aace675f30d38ce6c76b8ea23ccb68ef021f7fd39c939249b58363a0eda", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}}, "hash": "39b3d3f68012bdcfce8cbd6c32ad1632099993a79b5180f79356ed4007cc9d6b", "text": "g\ndue to constant\ndatabase changes\nor data loading is\nrandom)1) Always backup your\ndata.\n2) Saving a snapshot\nof the data set (e.g.\non the cloud storage).\n3) Data sources\nshould be designed\nwith timestamps so\nthat a view of the\ndata at any point can\nbe retrieved.\n4) Data versioning.\nFeature\nEngineeringScenarios:\n1) Missing values\nare imputed with\nrandom or mean\nvalues.\n2) Removing labels\nbased on the per\u2010\ncentage of observa\u2010\ntion.", "start_char_idx": 644, "end_char_idx": 1078, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8bae23d5-e668-426c-bbcb-018a6807a5e0": {"__data__": {"id_": "8bae23d5-e668-426c-bbcb-018a6807a5e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b33651d7-e2b9-4b0c-8002-33c07a7fe702", "node_type": "1", "metadata": {}, "hash": "39b3d3f68012bdcfce8cbd6c32ad1632099993a79b5180f79356ed4007cc9d6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f43a0660-a0cb-49c1-93fc-21f7354cf830", "node_type": "1", "metadata": {}, "hash": "0d83b25e1cad8905b5549d6b0d512366cb52a5d8e5d068293583a82a03d0f9a5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}}, "hash": "77ba0aace675f30d38ce6c76b8ea23ccb68ef021f7fd39c939249b58363a0eda", "text": "2) Removing labels\nbased on the per\u2010\ncentage of observa\u2010\ntion.\n3) Non-determinis\u2010\ntic feature extrac\u2010\ntion methods.1) Feature generation\ncode should be taken\nunder version control.\n2) Require repro\u2010\nducibility of the previ\u2010\nous step \"Collecting\nData\"\nModel\nTraining /\nModel BuildNon-determinism 1) Ensure the order of\nfeatures is always the\nsame.\n2) Document and au\u2010\ntomate feature trans\u2010\nformation, such as\nnormalization.", "start_char_idx": 1016, "end_char_idx": 1438, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f43a0660-a0cb-49c1-93fc-21f7354cf830": {"__data__": {"id_": "f43a0660-a0cb-49c1-93fc-21f7354cf830", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bae23d5-e668-426c-bbcb-018a6807a5e0", "node_type": "1", "metadata": {}, "hash": "77ba0aace675f30d38ce6c76b8ea23ccb68ef021f7fd39c939249b58363a0eda", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "184598be-7970-47d5-8ba1-3495d65a5982", "node_type": "1", "metadata": {}, "hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "class_name": "RelatedNodeInfo"}}, "hash": "0d83b25e1cad8905b5549d6b0d512366cb52a5d8e5d068293583a82a03d0f9a5", "text": "3) Document and au\u2010\ntomate hyperparame\u2010\nter selection.\n4) For ensemble learn\u2010\ning: document and au\u2010\ntomate the combina\u2010\ntion of ML models.\nModel\nDeployment1) Training the ML\nmodel has been\nperformed with a\nsoftware version\nthat is different to\nthe production envi\u2010\nronment.\n2) The input data,\nwhich is required by\nthe ML model is\nmissing in the pro\u2010\nduction\nenvironment.1) Software versions\nand dependencies\nshould match the pro\u2010\nduction environment.", "start_char_idx": 1439, "end_char_idx": 1889, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53c4be28-95c7-496d-b8a6-b771eec1ff8d": {"__data__": {"id_": "53c4be28-95c7-496d-b8a6-b771eec1ff8d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a27df6ef-1e79-46b1-8d46-1bd60daa381e", "node_type": "1", "metadata": {}, "hash": "a7279571d180d784a17c9f480613df27f910efd7d9093a3611d378a02a90e17f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}}, "hash": "35e5adbb7092798fc053d43db307e7f21751a9b656282f6b4a443a6c8c6f3167", "text": "2) Use a container\n(Docker) and docu\u2010\nment its specification,\nsuch as image version.\n3) Ideally, the same\nprogramming lan\u2010\nguage is used for\ntraining and\ndeployment.", "start_char_idx": 0, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a27df6ef-1e79-46b1-8d46-1bd60daa381e": {"__data__": {"id_": "a27df6ef-1e79-46b1-8d46-1bd60daa381e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53c4be28-95c7-496d-b8a6-b771eec1ff8d", "node_type": "1", "metadata": {}, "hash": "35e5adbb7092798fc053d43db307e7f21751a9b656282f6b4a443a6c8c6f3167", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e0e8481-7aad-43d0-a105-05a7a37ed67f", "node_type": "1", "metadata": {}, "hash": "64b0bdb321d76d9fef7dc8373ea1d17c82253184d674abd16f2a4fe19fe8bbb7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}}, "hash": "a7279571d180d784a17c9f480613df27f910efd7d9093a3611d378a02a90e17f", "text": "Loosely Coupled Architecture\n(Modularity)Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nAccording to Gene Kim et al. in their book\n\u201cAccelerate\u201d, \u201chigh performance [in software delivery]\nis possible with all kinds of systems,", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e0e8481-7aad-43d0-a105-05a7a37ed67f": {"__data__": {"id_": "9e0e8481-7aad-43d0-a105-05a7a37ed67f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a27df6ef-1e79-46b1-8d46-1bd60daa381e", "node_type": "1", "metadata": {}, "hash": "a7279571d180d784a17c9f480613df27f910efd7d9093a3611d378a02a90e17f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5712e442-71a5-417c-ae70-c10634cbdd6f", "node_type": "1", "metadata": {}, "hash": "91226ee9c8a38811851d31a38a8f1a67a231ee2a46cb1b11750755a07d9f5d7d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}}, "hash": "64b0bdb321d76d9fef7dc8373ea1d17c82253184d674abd16f2a4fe19fe8bbb7", "text": "\u201chigh performance [in software delivery]\nis possible with all kinds of systems, provided that sys\u2010\ntems\u2014and the teams that build and maintain them \u2014\nare loosely coupled. This key architectural property en\u2010\nables teams to easily test and deploy individual com\u2010\nponents or services even as the organization and the\nnumber of systems it operates grow\u2014that is, it allows\norganizations to increase their productivity as they\nscale.\u201d\nAdditionally, Gene Kim et al., recommend to \u201cuse a\nloosely coupled architecture.", "start_char_idx": 578, "end_char_idx": 1086, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5712e442-71a5-417c-ae70-c10634cbdd6f": {"__data__": {"id_": "5712e442-71a5-417c-ae70-c10634cbdd6f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e0e8481-7aad-43d0-a105-05a7a37ed67f", "node_type": "1", "metadata": {}, "hash": "64b0bdb321d76d9fef7dc8373ea1d17c82253184d674abd16f2a4fe19fe8bbb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bed55be9-7411-435a-9b92-c6246b7a935d", "node_type": "1", "metadata": {}, "hash": "4ee47784f40d49fbc2a17bc47a2f010c97f87e901f7f60d465f0b59a5ef5c92e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}}, "hash": "91226ee9c8a38811851d31a38a8f1a67a231ee2a46cb1b11750755a07d9f5d7d", "text": "This affects the extent to\nwhich a team can test and deploy their applications on\ndemand, without requiring orchestration with other\nservices. Having a loosely coupled architecture allows\nyour teams to work independently, without relying on\nother teams for support and services, which in turn en\u2010\nables them to work quickly and deliver value to the\norganization.\u201d\nRegarding ML-based software systems, it can be more\ndifficult to achieve loose coupling between machine\nlearning components than for traditional software\ncomponents. ML systems have weak component\nboundaries in several ways.", "start_char_idx": 1087, "end_char_idx": 1675, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bed55be9-7411-435a-9b92-c6246b7a935d": {"__data__": {"id_": "bed55be9-7411-435a-9b92-c6246b7a935d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5712e442-71a5-417c-ae70-c10634cbdd6f", "node_type": "1", "metadata": {}, "hash": "91226ee9c8a38811851d31a38a8f1a67a231ee2a46cb1b11750755a07d9f5d7d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4fcae3af-5c06-43ee-8163-850e87e5b408", "node_type": "1", "metadata": {}, "hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "class_name": "RelatedNodeInfo"}}, "hash": "4ee47784f40d49fbc2a17bc47a2f010c97f87e901f7f60d465f0b59a5ef5c92e", "text": "ML systems have weak component\nboundaries in several ways. For example, the outputs\nof ML models can be used as the inputs to another ML\nmodel and such interleaved dependencies might affect\none another during training and testing.\nBasic modularity can be achieved by structuring the\nmachine learning project.", "start_char_idx": 1617, "end_char_idx": 1925, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9803418a-96e0-4315-b2ca-cabf46837209": {"__data__": {"id_": "9803418a-96e0-4315-b2ca-cabf46837209", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d808c73f-e825-461c-95d4-b0bd0b5b074d", "node_type": "1", "metadata": {}, "hash": "22e6752d05854cd1c4ce1eefcf5c739210aa68bda7d924a24d0d10dd5c416492", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}}, "hash": "181e4de98ef95bd57174f2677196636de4228b5b92d0e0878775cb116a1d8ecd", "text": "Basic modularity can be achieved by structuring the\nmachine learning project. To set up a standard project\nstructure, we recommend using dedicated templates\nsuch as\nCookiecutter Data Science Project Template\nThe Data Science Lifecycle Process Template\nPyScaffold\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nIn the most resent study on the state of DevOps, the\nauthors emphasized four key metrics that capture the\neffectivenes of the software development and delivery\nof elite/high performing organisations: Deployment\nFrequency, Lead Time for Changes,", "start_char_idx": 0, "end_char_idx": 572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d808c73f-e825-461c-95d4-b0bd0b5b074d": {"__data__": {"id_": "d808c73f-e825-461c-95d4-b0bd0b5b074d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9803418a-96e0-4315-b2ca-cabf46837209", "node_type": "1", "metadata": {}, "hash": "181e4de98ef95bd57174f2677196636de4228b5b92d0e0878775cb116a1d8ecd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46339c77-c80c-433c-8ecd-43d5323a2965", "node_type": "1", "metadata": {}, "hash": "dc0d29f6d514febbf77862318df9fce0d8b886e9ce6016c5fc05149963062dc1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}}, "hash": "22e6752d05854cd1c4ce1eefcf5c739210aa68bda7d924a24d0d10dd5c416492", "text": "Lead Time for Changes, Mean Time ToBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nRestore, and Change Fail Percentage. These metrics\nhave been found useful to measure and improve ones\nML-based software delivery.", "start_char_idx": 550, "end_char_idx": 1027, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46339c77-c80c-433c-8ecd-43d5323a2965": {"__data__": {"id_": "46339c77-c80c-433c-8ecd-43d5323a2965", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d808c73f-e825-461c-95d4-b0bd0b5b074d", "node_type": "1", "metadata": {}, "hash": "22e6752d05854cd1c4ce1eefcf5c739210aa68bda7d924a24d0d10dd5c416492", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4baa4868-a654-4e4b-93d4-1eb0d850dc63", "node_type": "1", "metadata": {}, "hash": "1dfd9fa2f118d2399e94d806cdecc2a7542cd3a53279d1a70d0c11baabc33256", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}}, "hash": "dc0d29f6d514febbf77862318df9fce0d8b886e9ce6016c5fc05149963062dc1", "text": "These metrics\nhave been found useful to measure and improve ones\nML-based software delivery. In the following table, we\ngive the definition of each of the metricts and make\nthe connection to MLOps.\nMetric DevOps MLOps\nDeployment\nFrequencyHow often\ndoes your or\u2010\nganization\ndeploy code\nto production\nor release it\nto end-users?ML Model Deployment\nFrequency depends on\n1) Model retraining require\u2010\nments (ranging from less\nfrequent to online training).", "start_char_idx": 935, "end_char_idx": 1385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4baa4868-a654-4e4b-93d4-1eb0d850dc63": {"__data__": {"id_": "4baa4868-a654-4e4b-93d4-1eb0d850dc63", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46339c77-c80c-433c-8ecd-43d5323a2965", "node_type": "1", "metadata": {}, "hash": "dc0d29f6d514febbf77862318df9fce0d8b886e9ce6016c5fc05149963062dc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa8c8e40-60c3-42d9-9104-22fcac806347", "node_type": "1", "metadata": {}, "hash": "a9049a6de392b1c661b7f5b937b7a88eb4785a30dbe7243372bfe4b817c8c956", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}}, "hash": "1dfd9fa2f118d2399e94d806cdecc2a7542cd3a53279d1a70d0c11baabc33256", "text": "Two aspects are crucial for\nmodel retraining\n1.1) Model decay metric.\n1.2) New data availability.\n2) The level of automation of\nthe deployment process,\nwhich might range between\n*manual deployment* and\n*fully automated CI/CD\npipeline*.\nLead Time\nfor ChangesHow long\ndoes it take\nto go from\ncode commit\u2010\nted to code\nsuccessfully\nrunning in\nproduction?ML Model Lead Time for\nChanges depends on\n1) Duration of the explorative\nphase in Data Science in or\u2010\nder to finalize the ML model\nfor deployment/serving.", "start_char_idx": 1386, "end_char_idx": 1890, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa8c8e40-60c3-42d9-9104-22fcac806347": {"__data__": {"id_": "fa8c8e40-60c3-42d9-9104-22fcac806347", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4baa4868-a654-4e4b-93d4-1eb0d850dc63", "node_type": "1", "metadata": {}, "hash": "1dfd9fa2f118d2399e94d806cdecc2a7542cd3a53279d1a70d0c11baabc33256", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c1b517c9-af44-40ff-a58d-2a9900695b35", "node_type": "1", "metadata": {}, "hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "class_name": "RelatedNodeInfo"}}, "hash": "a9049a6de392b1c661b7f5b937b7a88eb4785a30dbe7243372bfe4b817c8c956", "text": "2) Duration of the ML model\ntraining.\n3) The number and duration\nof manual steps during the\ndeployment process.", "start_char_idx": 1891, "end_char_idx": 2002, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a3cd01e-bd8c-4508-b023-1f030efb5d70": {"__data__": {"id_": "7a3cd01e-bd8c-4508-b023-1f030efb5d70", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b93a573-d8fe-4e04-a22e-a7dd5095aa52", "node_type": "1", "metadata": {}, "hash": "8c367424ad565a799bba13310932d924d25e710ad1a7f57fe2d8704877a37114", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}}, "hash": "a99c390ae7cd922a3a7bc56366e9151a64bce5f0851afceb01a02c8ed0091b23", "text": "3) The number and duration\nof manual steps during the\ndeployment process.\nMean Time\nTo Restore\n(MTTR)How long\ndoes it gener\u2010\nally take to\nrestore ser\u2010\nvice when a\nservice inci\u2010\ndent or a de\u2010\nfect that im\u2010\npacts users\noccurs (e.g.,\nunplanned\noutage or ser\u2010\nvice\nimpairment)?ML Model MTTR depends on\nthe number and duration of\nmanually performed model\ndebugging, and model de\u2010\nployment steps.", "start_char_idx": 0, "end_char_idx": 390, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b93a573-d8fe-4e04-a22e-a7dd5095aa52": {"__data__": {"id_": "8b93a573-d8fe-4e04-a22e-a7dd5095aa52", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a3cd01e-bd8c-4508-b023-1f030efb5d70", "node_type": "1", "metadata": {}, "hash": "a99c390ae7cd922a3a7bc56366e9151a64bce5f0851afceb01a02c8ed0091b23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82c157d6-1485-4ff4-8229-f9693af9d444", "node_type": "1", "metadata": {}, "hash": "867dc7fb244c479348676b74e12e804cc167a8030a67cc82e8b930697e15c713", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}}, "hash": "8c367424ad565a799bba13310932d924d25e710ad1a7f57fe2d8704877a37114", "text": "In case,\nwhen the ML model should\nbe retrained, then MTTR also\ndepends on the duration of\nthe ML model training.\nAlternatively, MTTR refers to\nthe duration of the rollback\nof the ML model to the previ\u2010\nous version.", "start_char_idx": 391, "end_char_idx": 605, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82c157d6-1485-4ff4-8229-f9693af9d444": {"__data__": {"id_": "82c157d6-1485-4ff4-8229-f9693af9d444", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b93a573-d8fe-4e04-a22e-a7dd5095aa52", "node_type": "1", "metadata": {}, "hash": "8c367424ad565a799bba13310932d924d25e710ad1a7f57fe2d8704877a37114", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1", "node_type": "1", "metadata": {}, "hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "class_name": "RelatedNodeInfo"}}, "hash": "867dc7fb244c479348676b74e12e804cc167a8030a67cc82e8b930697e15c713", "text": "Change\nFailure RateWhat per\u2010\ncentage of\nchanges to\nproduction or\nreleased to\nusers result in\ndegraded ser\u2010\nvice (e.g., lead\nto service im\u2010\npairment or\nservice out\u2010\nage) and sub\u2010\nsequently re\u2010ML Model Change Failure\nRate can be expressed in the\ndifference of the currently\ndeployed ML model perfor\u2010\nmance metrics to the previ\u2010\nous model's metrics, such as\nPrecision, Recall, F-1, accu\u2010\nracy, AUC, ROC, false posi\u2010\ntives, etc.", "start_char_idx": 606, "end_char_idx": 1030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7b511c6-158d-4432-a2ba-a964d7dc3433": {"__data__": {"id_": "a7b511c6-158d-4432-a2ba-a964d7dc3433", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c1c5a46-c21e-4dc5-9b6a-9a3a646b4e86", "node_type": "1", "metadata": {}, "hash": "f10b8e92530787354f18e751fee03652ca7cda3ac12d3be828009ce5db8c8ed1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}}, "hash": "b0ba74d8410114bd08f8aa51d6f79c722a7d3704e27d4cb9976edb68ecea389a", "text": "ML Model Change\nFailure Rate is also related to\nA/B testing.Back\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMetric DevOps MLOps\nquire remedi\u2010\nation (e.g., re\u2010\nquire a hotfix,\nrollback, fix\nforward,\npatch)?", "start_char_idx": 0, "end_char_idx": 470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c1c5a46-c21e-4dc5-9b6a-9a3a646b4e86": {"__data__": {"id_": "7c1c5a46-c21e-4dc5-9b6a-9a3a646b4e86", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7b511c6-158d-4432-a2ba-a964d7dc3433", "node_type": "1", "metadata": {}, "hash": "b0ba74d8410114bd08f8aa51d6f79c722a7d3704e27d4cb9976edb68ecea389a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26cffffb-9a18-4402-803e-119aa55c4994", "node_type": "1", "metadata": {}, "hash": "80e16649037b3a05998874f2c61c14f3ccb6e455433360870ca8b8478bffdc96", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}}, "hash": "f10b8e92530787354f18e751fee03652ca7cda3ac12d3be828009ce5db8c8ed1", "text": "To improve the effectiveness of the ML development\nand delivery process one should measure the above\nfour key metrics. A practical way to achieve such ef\u2010\nfectiveness is to implement the CI/CD pipeline first\nand adopt test-driven development for Data, ML\nModel, and Software Code pipelines.\nSummary of MLOps Principles and\nBest Practices\nThe complete ML development pipeline includes three\nlevels where changes can occur: Data, ML Model, and\nCode.", "start_char_idx": 471, "end_char_idx": 918, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26cffffb-9a18-4402-803e-119aa55c4994": {"__data__": {"id_": "26cffffb-9a18-4402-803e-119aa55c4994", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c1c5a46-c21e-4dc5-9b6a-9a3a646b4e86", "node_type": "1", "metadata": {}, "hash": "f10b8e92530787354f18e751fee03652ca7cda3ac12d3be828009ce5db8c8ed1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bab914d-da19-408a-b3bf-592abf88699b", "node_type": "1", "metadata": {}, "hash": "c59194cbe63f0ad9efa87d09cf5447feecabec05887a106c3c1ca820141a2252", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}}, "hash": "80e16649037b3a05998874f2c61c14f3ccb6e455433360870ca8b8478bffdc96", "text": "This means that in machine learning-based sys\u2010\ntems, the trigger for a build might be the combination\nof a code change, data change or model change. The\nfollowing table summarizes the MLOps principles for\nbuilding ML-based software:\nMLOps\nPrinciples Data ML Model Code\nVersioning 1) Data\nprepara\u2010\ntion pipe\u2010\nlines\n2)\nFeatures\nstore\n3)\nDatasets\n4)\nMetadata1) ML model training pipe\u2010\nline\n2) ML model (object)\n3) Hyperparameters\n4) Experiment tracking1)", "start_char_idx": 919, "end_char_idx": 1370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7bab914d-da19-408a-b3bf-592abf88699b": {"__data__": {"id_": "7bab914d-da19-408a-b3bf-592abf88699b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26cffffb-9a18-4402-803e-119aa55c4994", "node_type": "1", "metadata": {}, "hash": "80e16649037b3a05998874f2c61c14f3ccb6e455433360870ca8b8478bffdc96", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e4630f66-e9d3-400a-a896-6014b851892f", "node_type": "1", "metadata": {}, "hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "class_name": "RelatedNodeInfo"}}, "hash": "c59194cbe63f0ad9efa87d09cf5447feecabec05887a106c3c1ca820141a2252", "text": "ML model (object)\n3) Hyperparameters\n4) Experiment tracking1) Application\ncode\n2)\nConfigurations\nTesting 1) Data\nValidation\n(error de\u2010\ntection)\n2) Feature\ncreation\nunit\ntesting1) Model specification is unit\ntested\n2) ML model training pipe\u2010\nline is integration tested\n3) ML model is validated be\u2010\nfore being operationalized\n4) ML model staleness test\n(in production)\n5) Testing ML model rele\u2010\nvance and correctness\n6) Testing non-functional\nrequirements (security, fair\u2010\nness,", "start_char_idx": 1309, "end_char_idx": 1785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b7f456e-3a0d-441d-83f2-c29e2ff448b4": {"__data__": {"id_": "2b7f456e-3a0d-441d-83f2-c29e2ff448b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79bd5447-1e29-4695-8cb8-96d6a94888f1", "node_type": "1", "metadata": {}, "hash": "4df94d52b6d58e75746a9e14c9da342115d16b93d2cab4cbae623b672f2ff2f8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}}, "hash": "2a6bac078f6b5499217eb74dfdcb3444a3d898da8d658bb527afc4265b9e711f", "text": "fair\u2010\nness, interpretability)1) Unit testing\n2) Integration\ntesting for the\nend-to-end\npipeline\nAutomation 1) Data\ntransfor\u2010\nmation1) Data engineering pipeline\n2) ML model training pipe\u2010\nline1) ML model\ndeployment\nwith CI/CDBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics", "start_char_idx": 0, "end_char_idx": 469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79bd5447-1e29-4695-8cb8-96d6a94888f1": {"__data__": {"id_": "79bd5447-1e29-4695-8cb8-96d6a94888f1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b7f456e-3a0d-441d-83f2-c29e2ff448b4", "node_type": "1", "metadata": {}, "hash": "2a6bac078f6b5499217eb74dfdcb3444a3d898da8d658bb527afc4265b9e711f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4e26d94-d41a-4612-a630-935e50c8be7e", "node_type": "1", "metadata": {}, "hash": "535d14b9ac859f9754bd7db0e800ea2f2aacd5149a2db62e515db7b1982897c3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}}, "hash": "4df94d52b6d58e75746a9e14c9da342115d16b93d2cab4cbae623b672f2ff2f8", "text": "Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMLOps\nPrinciples Data ML Model Code\n2) Feature\ncreation\nand\nmanipula\u2010\ntion3)\nHyperparameter/Parameter\nselection2) Application\nbuild\nReproducibility 1) Backup\ndata\n2) Data\nversioning\n3) Extract\nmetadata\n4)\nVersioning\nof feature\nengineer\u2010\ning1) Hyperparameter tuning is\nidentical between dev and\nprod\n2)", "start_char_idx": 390, "end_char_idx": 838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4e26d94-d41a-4612-a630-935e50c8be7e": {"__data__": {"id_": "e4e26d94-d41a-4612-a630-935e50c8be7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79bd5447-1e29-4695-8cb8-96d6a94888f1", "node_type": "1", "metadata": {}, "hash": "4df94d52b6d58e75746a9e14c9da342115d16b93d2cab4cbae623b672f2ff2f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09b30c55-035e-442a-a6d5-d7c0850f9669", "node_type": "1", "metadata": {}, "hash": "0cdc789b94825f8a39f822f9c3119f45458d1e62d7e4f7395fa84037a7fb1bf0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}}, "hash": "535d14b9ac859f9754bd7db0e800ea2f2aacd5149a2db62e515db7b1982897c3", "text": "Hyperparameter tuning is\nidentical between dev and\nprod\n2) The order of features is\nthe same\n3) Ensemble learning: the\ncombination of ML models\nis same\n4)The model pseudo-code is\ndocumented1) Versions of\nall dependen\u2010\ncies in dev and\nprod are iden\u2010\ntical\n2) Same tech\u2010\nnical stack for\ndev and pro\u2010\nduction envi\u2010\nronments\n3)\nReproducing\nresults by pro\u2010\nviding con\u2010\ntainer images\nor virtual\nmachines\nDeployment 1) Feature\nstore", "start_char_idx": 780, "end_char_idx": 1205, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09b30c55-035e-442a-a6d5-d7c0850f9669": {"__data__": {"id_": "09b30c55-035e-442a-a6d5-d7c0850f9669", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4e26d94-d41a-4612-a630-935e50c8be7e", "node_type": "1", "metadata": {}, "hash": "535d14b9ac859f9754bd7db0e800ea2f2aacd5149a2db62e515db7b1982897c3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1368a402-6ab3-453c-a888-6ab05bf57a23", "node_type": "1", "metadata": {}, "hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "class_name": "RelatedNodeInfo"}}, "hash": "0cdc789b94825f8a39f822f9c3119f45458d1e62d7e4f7395fa84037a7fb1bf0", "text": "con\u2010\ntainer images\nor virtual\nmachines\nDeployment 1) Feature\nstore is\nused in\ndev and\nprod\nenviron\u2010\nments1) Containerization of the\nML stack\n2) REST API\n3) On-premise, cloud, or\nedge1) On-premise\ncloud, or edge\nMonitoring 1) Data\ndistribu\u2010\ntion\nchanges\n(training\nvs.", "start_char_idx": 1139, "end_char_idx": 1405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8ccf3d5-5a82-47b8-b11a-5e88799e669e": {"__data__": {"id_": "e8ccf3d5-5a82-47b8-b11a-5e88799e669e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fcdb236-aa42-4a0c-a3a7-858e913b4446", "node_type": "1", "metadata": {}, "hash": "7d90164ad435ad284c18b49ea9fec82fca5d4fd0c7abe5381fc6c09b61a98a6e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}}, "hash": "2b5433015f450a783aad69d5f1a9ee09138d0f8c26da677de19383ad5c90fefa", "text": "serving\ndata)\n2)\nTraining\nvs serving\nfeatures1) ML model decay\n2) Numerical stability\n3) Computational perfor\u2010\nmance of the ML model1) Predictive\nquality of the\napplication on\nserving data\nAlong with the MLOps principles, following the set of\nbest practices should help reducing the \u201ctechnical\ndebt\u201d of the ML project:\nMLOps Best\nPractices DataML\nModel Code\nDocumentation 1) Data\nsources\n2) Decisions,\nhow/where\nto get data\n3) Labelling\nmethods1)", "start_char_idx": 0, "end_char_idx": 446, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9fcdb236-aa42-4a0c-a3a7-858e913b4446": {"__data__": {"id_": "9fcdb236-aa42-4a0c-a3a7-858e913b4446", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8ccf3d5-5a82-47b8-b11a-5e88799e669e", "node_type": "1", "metadata": {}, "hash": "2b5433015f450a783aad69d5f1a9ee09138d0f8c26da677de19383ad5c90fefa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a36c17f-5fd7-4296-933b-c9a39f290a66", "node_type": "1", "metadata": {}, "hash": "d8c3c8721f2a95cd1547ae04351f3c45ec21b5b6ed98f46a0b8623c80982bba4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}}, "hash": "7d90164ad435ad284c18b49ea9fec82fca5d4fd0c7abe5381fc6c09b61a98a6e", "text": "how/where\nto get data\n3) Labelling\nmethods1) Model\nselection\ncriteria\n2) Design\nof experi\u2010\nments\n3) Model\npseudo-\ncode1)\nDeployment\nprocess\n2) How to run\nlocallyBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles", "start_char_idx": 402, "end_char_idx": 855, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a36c17f-5fd7-4296-933b-c9a39f290a66": {"__data__": {"id_": "0a36c17f-5fd7-4296-933b-c9a39f290a66", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fcdb236-aa42-4a0c-a3a7-858e913b4446", "node_type": "1", "metadata": {}, "hash": "7d90164ad435ad284c18b49ea9fec82fca5d4fd0c7abe5381fc6c09b61a98a6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9240184d-6865-4a68-89e9-ef3c72284881", "node_type": "1", "metadata": {}, "hash": "a7665bf4b7d6395547e6ce255a0429dc91d20c74629942e51832094e02a853a3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}}, "hash": "d8c3c8721f2a95cd1547ae04351f3c45ec21b5b6ed98f46a0b8623c80982bba4", "text": "Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMLOps Best\nPractices DataML\nModel Code\nProject\nStructure1) Data\nfolder for\nraw and\nprocessed\ndata\n2) A folder\nfor data en\u2010\ngineering\npipeline\n3) Test\nfolder for\ndata engi\u2010\nneering\nmethods1) A\nfolder\nthat con\u2010\ntains the\ntrained\nmodel\n2) A\nfolder for\nnote\u2010\nbooks\n3) A\nfolder", "start_char_idx": 772, "end_char_idx": 1148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9240184d-6865-4a68-89e9-ef3c72284881": {"__data__": {"id_": "9240184d-6865-4a68-89e9-ef3c72284881", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a36c17f-5fd7-4296-933b-c9a39f290a66", "node_type": "1", "metadata": {}, "hash": "d8c3c8721f2a95cd1547ae04351f3c45ec21b5b6ed98f46a0b8623c80982bba4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "432dc6bc-84d9-4165-9774-2181e5498835", "node_type": "1", "metadata": {}, "hash": "51c5a3447e2742ae26f1e47e478e1c2e60406cfb28a73f30589d6ab7d72422c1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}}, "hash": "a7665bf4b7d6395547e6ce255a0429dc91d20c74629942e51832094e02a853a3", "text": "A\nfolder for\nnote\u2010\nbooks\n3) A\nfolder for\nfeature\nengineer\u2010\ning\n4)A\nfolder for\nML\nmodel\nengineer\u2010\ning1) A folder for\nbash/shell\nscripts\n2) A folder\nfor tests\n3) A folder\nfor deploy\u2010\nment files\n(e.g Docker\nfiles)\nThe content of this site was created by\nDr. Larysa Visengeriyeva, Anja Kammer,\nIsabel B\u00e4r, Alexander Kniesz, and Michael\nPl\u00f6d (DDD Advisor).", "start_char_idx": 1112, "end_char_idx": 1463, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "432dc6bc-84d9-4165-9774-2181e5498835": {"__data__": {"id_": "432dc6bc-84d9-4165-9774-2181e5498835", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9240184d-6865-4a68-89e9-ef3c72284881", "node_type": "1", "metadata": {}, "hash": "a7665bf4b7d6395547e6ce255a0429dc91d20c74629942e51832094e02a853a3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "node_type": "1", "metadata": {}, "hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "class_name": "RelatedNodeInfo"}}, "hash": "51c5a3447e2742ae26f1e47e478e1c2e60406cfb28a73f30589d6ab7d72422c1", "text": "Design made by\nSebastian Eberstaller.\nIt is published under Creative Commons\nAttribution 4.0 International Public\nLicense and can therefore be shared and\nadapted with attribution (\"INNOQ\").", "start_char_idx": 1464, "end_char_idx": 1653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db38802c-2b7d-4ed4-8da5-a489be6f4af4": {"__data__": {"id_": "db38802c-2b7d-4ed4-8da5-a489be6f4af4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea4df9d3-e098-4ea5-bf19-ac641a1ec025", "node_type": "1", "metadata": {}, "hash": "6824e11d2d169e89563092f39812c33d446cb0df1ef7925bdf1770e56f9ff8b3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}}, "hash": "d2b6fdb7a3dbce6a6a3d2d7ccf54dfc5342119f2000979f4885b4f8db988a10a", "text": "Made and maintained by\nPrivacy | Site noticeBack\nIterative-Incremental Process in\nMLOps\nAutomation\nContinuous X\nVersioning\nExperiments Tracking\nTesting\nMonitoring\n\u201cML Test Score\u201d System\nReproducibility\nLoosely Coupled Architecture\n(Modularity)\nML-based Software Delivery\nMetrics (4 metrics from\n\u201cAccelerate\u201d)\nSummary of MLOps Principles and\nBest Practices\n\nMachine Learning Operations (MLOps):  Overview, Definition, and Architecture Dominik Kreuzberger  KIT  Germany dominik.kreuzberger@alumni.kit.", "start_char_idx": 0, "end_char_idx": 499, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea4df9d3-e098-4ea5-bf19-ac641a1ec025": {"__data__": {"id_": "ea4df9d3-e098-4ea5-bf19-ac641a1ec025", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db38802c-2b7d-4ed4-8da5-a489be6f4af4", "node_type": "1", "metadata": {}, "hash": "d2b6fdb7a3dbce6a6a3d2d7ccf54dfc5342119f2000979f4885b4f8db988a10a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74dc7ca9-d179-420a-a225-0df2ef70fb95", "node_type": "1", "metadata": {}, "hash": "6333b65522d472e612b882a95a2b524f5e90cd5b4abb43a0fe5e4625dfae5e88", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}}, "hash": "6824e11d2d169e89563092f39812c33d446cb0df1ef7925bdf1770e56f9ff8b3", "text": "kreuzberger@alumni.kit.edu Niklas K\u00fchl  KIT  Germany  kuehl@kit.edu  Sebastian Hirschl   IBM\u2020   Germany   sebastian.hirschl@de.ibm.comABSTRACT The final goal of all industrial machine learning (ML) projects is to develop ML products and rapidly bring them into production. However, it is highly challenging to automate and operationalize ML products and thus many ML endeavors fail to deliver on their expectations. The paradigm of Machine Learning Operations (MLOps) addresses this issue.", "start_char_idx": 476, "end_char_idx": 965, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74dc7ca9-d179-420a-a225-0df2ef70fb95": {"__data__": {"id_": "74dc7ca9-d179-420a-a225-0df2ef70fb95", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea4df9d3-e098-4ea5-bf19-ac641a1ec025", "node_type": "1", "metadata": {}, "hash": "6824e11d2d169e89563092f39812c33d446cb0df1ef7925bdf1770e56f9ff8b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13407554-22ae-4438-a991-08c9b06c15e7", "node_type": "1", "metadata": {}, "hash": "8492df127d6fe49fe1f69c99594d56d388c781f7e84296730eb0e442f84e5f4a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}}, "hash": "6333b65522d472e612b882a95a2b524f5e90cd5b4abb43a0fe5e4625dfae5e88", "text": "The paradigm of Machine Learning Operations (MLOps) addresses this issue. MLOps includes several aspects, such as best practices, sets of concepts, and development culture. However, MLOps is still a vague term and its consequences for researchers and professionals are ambiguous. To address this gap, we conduct mixed-method research, including a literature review, a tool review, and expert interviews. As a result of these investigations, we provide an aggregated overview of the necessary principles, components, and roles, as well as the associated architecture and workflows.", "start_char_idx": 892, "end_char_idx": 1472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13407554-22ae-4438-a991-08c9b06c15e7": {"__data__": {"id_": "13407554-22ae-4438-a991-08c9b06c15e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74dc7ca9-d179-420a-a225-0df2ef70fb95", "node_type": "1", "metadata": {}, "hash": "6333b65522d472e612b882a95a2b524f5e90cd5b4abb43a0fe5e4625dfae5e88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a81b5efe-769a-4b67-8d91-eb489f5d2f1b", "node_type": "1", "metadata": {}, "hash": "2bcd2dac3e2d55bae38a5a0ffc9452f627dfd2ada0e86153d5892284870d7f93", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}}, "hash": "8492df127d6fe49fe1f69c99594d56d388c781f7e84296730eb0e442f84e5f4a", "text": "Furthermore, we furnish a definition of MLOps and highlight open challenges in the field. Finally, this work provides guidance for ML researchers and practitioners who want to automate and operate their ML products with a designated set of technologies. KEYWORDS CI/CD, DevOps, Machine Learning, MLOps, Operations, Workflow Orchestration 1 Introduction  Machine Learning (ML) has become an important technique to leverage the potential of data and allows businesses to be more innovative [1], efficient [13], and sustainable [22].", "start_char_idx": 1473, "end_char_idx": 2003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a81b5efe-769a-4b67-8d91-eb489f5d2f1b": {"__data__": {"id_": "a81b5efe-769a-4b67-8d91-eb489f5d2f1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13407554-22ae-4438-a991-08c9b06c15e7", "node_type": "1", "metadata": {}, "hash": "8492df127d6fe49fe1f69c99594d56d388c781f7e84296730eb0e442f84e5f4a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d625f540-381d-499a-85ff-aa967dd9d39f", "node_type": "1", "metadata": {}, "hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "class_name": "RelatedNodeInfo"}}, "hash": "2bcd2dac3e2d55bae38a5a0ffc9452f627dfd2ada0e86153d5892284870d7f93", "text": "However, the success of many productive ML applications in real-world settings falls short of expectations [21]. A large number of ML projects fail\u2014with many ML proofs of concept never progressing as far as production [30].", "start_char_idx": 2004, "end_char_idx": 2227, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a4cea12-5d79-406d-ad3c-21d9f227f854": {"__data__": {"id_": "4a4cea12-5d79-406d-ad3c-21d9f227f854", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701", "node_type": "1", "metadata": {}, "hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0b1a7d4-9a50-4cbe-bee6-6f62ff47091d", "node_type": "1", "metadata": {}, "hash": "d03882fcef4e14b7121bbe461f62bdd7057afa6bc415f23a7f07b2e01cb03932", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701", "node_type": "1", "metadata": {}, "hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "class_name": "RelatedNodeInfo"}}, "hash": "c6df11ec110851486a38f91698a09f0ce15903d90be9ae0b9e21ab96134c6828", "text": "From a research perspective, this does not come as a surprise as the ML community has focused extensively on the building of ML models, but not on (a) building production-ready ML products and (b) providing the necessary coordination of the resulting, often complex ML system components and infrastructure, including the roles required to automate and operate an ML system in a real-world setting [35]. For instance, in many industrial applications, data scientists still manage ML workflows manually  \u2020 This paper does not represent an official IBM statement to a great extent, resulting in many issues during the operations of the respective ML solution [26].", "start_char_idx": 0, "end_char_idx": 661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0b1a7d4-9a50-4cbe-bee6-6f62ff47091d": {"__data__": {"id_": "c0b1a7d4-9a50-4cbe-bee6-6f62ff47091d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701", "node_type": "1", "metadata": {}, "hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a4cea12-5d79-406d-ad3c-21d9f227f854", "node_type": "1", "metadata": {}, "hash": "c6df11ec110851486a38f91698a09f0ce15903d90be9ae0b9e21ab96134c6828", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701", "node_type": "1", "metadata": {}, "hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "class_name": "RelatedNodeInfo"}}, "hash": "d03882fcef4e14b7121bbe461f62bdd7057afa6bc415f23a7f07b2e01cb03932", "text": "To address these issues, the goal of this work is to examine how manual ML processes can be automated and operationalized so that more ML proofs of concept can be brought into production. In this work, we explore the emerging ML engineering practice \u201cMachine Learning Operations\u201d\u2014MLOps for short\u2014precisely addressing the issue of designing and maintaining productive ML.", "start_char_idx": 663, "end_char_idx": 1033, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90bd322e-2faf-4ed7-8261-65b54e740248": {"__data__": {"id_": "90bd322e-2faf-4ed7-8261-65b54e740248", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dded2c5-45d0-4ff8-9d74-34616469c23c", "node_type": "1", "metadata": {}, "hash": "a3fe1a2263da2277df03dd204d2f0e0d58fe7cb65352857f568e7cf5212abe04", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}}, "hash": "93f3e8998e0cbc3a6a7f1d2131317c33c15d27e70bddbdae92bba8f2e4d78f08", "text": "We take a holistic perspective to gain a common understanding of the involved components, principles, roles, and architectures. While existing research sheds some light on various specific aspects of MLOps, a holistic conceptualization, generalization, and clarification of ML systems design are still missing. Different perspectives and conceptions of the term \u201cMLOps\u201d might lead to misunderstandings and miscommunication, which, in turn, can lead to errors in the overall setup of the entire ML system. Thus, we ask the research question: RQ: What is MLOps?", "start_char_idx": 0, "end_char_idx": 559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dded2c5-45d0-4ff8-9d74-34616469c23c": {"__data__": {"id_": "7dded2c5-45d0-4ff8-9d74-34616469c23c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90bd322e-2faf-4ed7-8261-65b54e740248", "node_type": "1", "metadata": {}, "hash": "93f3e8998e0cbc3a6a7f1d2131317c33c15d27e70bddbdae92bba8f2e4d78f08", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d467a4a-07af-4842-921c-2651fd28f6c4", "node_type": "1", "metadata": {}, "hash": "d7372b743251d29fc041217d0047d2dcc3f0832d8220d60117aee40472e37ab7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}}, "hash": "a3fe1a2263da2277df03dd204d2f0e0d58fe7cb65352857f568e7cf5212abe04", "text": "Thus, we ask the research question: RQ: What is MLOps? To answer that question, we conduct a mixed-method research endeavor to (a) identify important principles of MLOps, (b) carve out functional core components, (c) highlight the roles necessary to successfully implement MLOps, and (d) derive a general architecture for ML systems design. In combination, these insights result in a definition of MLOps, which contributes to a common understanding of the term and related concepts.", "start_char_idx": 505, "end_char_idx": 987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d467a4a-07af-4842-921c-2651fd28f6c4": {"__data__": {"id_": "5d467a4a-07af-4842-921c-2651fd28f6c4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7dded2c5-45d0-4ff8-9d74-34616469c23c", "node_type": "1", "metadata": {}, "hash": "a3fe1a2263da2277df03dd204d2f0e0d58fe7cb65352857f568e7cf5212abe04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b5b9057-ea0d-4db0-aef6-e8c7f9608235", "node_type": "1", "metadata": {}, "hash": "990199baf4def5f6afcf3480a3198a23db98bfcfba9aac6c78a30ab6f2a8dde2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}}, "hash": "d7372b743251d29fc041217d0047d2dcc3f0832d8220d60117aee40472e37ab7", "text": "In so doing, we hope to positively impact academic and practical discussions by providing clear guidelines for professionals and researchers alike with precise responsibilities. These insights can assist in allowing more proofs of concept to make it into production by having fewer errors in the system\u2019s design and, finally, enabling more robust predictions in real-world environments. The remainder of this work is structured as follows. We will first elaborate on the necessary foundations and related work in the field. Next, we will give an overview of the utilized methodology, consisting of a literature review, a tool review, and an interview study.", "start_char_idx": 989, "end_char_idx": 1646, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b5b9057-ea0d-4db0-aef6-e8c7f9608235": {"__data__": {"id_": "5b5b9057-ea0d-4db0-aef6-e8c7f9608235", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d467a4a-07af-4842-921c-2651fd28f6c4", "node_type": "1", "metadata": {}, "hash": "d7372b743251d29fc041217d0047d2dcc3f0832d8220d60117aee40472e37ab7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99560ed0-b14e-43b7-8a97-ced0c5f26c4b", "node_type": "1", "metadata": {}, "hash": "a37bdd05bf21cae7f8d85dd312ffcd87d0b9b4c05402366da79fd4912f7197c0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}}, "hash": "990199baf4def5f6afcf3480a3198a23db98bfcfba9aac6c78a30ab6f2a8dde2", "text": "We then present the insights derived from the application of the methodology and conceptualize these by providing a unifying definition. We conclude the paper with a short summary, limitations, and outlook. \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  2 Foundations of DevOps In the past, different software process models and development methodologies surfaced in the field of software engineering. Prominent examples include waterfall [37] and the agile manifesto [5]. Those methodologies have similar aims, namely to deliver production-ready software products.", "start_char_idx": 1647, "end_char_idx": 2248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99560ed0-b14e-43b7-8a97-ced0c5f26c4b": {"__data__": {"id_": "99560ed0-b14e-43b7-8a97-ced0c5f26c4b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b5b9057-ea0d-4db0-aef6-e8c7f9608235", "node_type": "1", "metadata": {}, "hash": "990199baf4def5f6afcf3480a3198a23db98bfcfba9aac6c78a30ab6f2a8dde2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f80aa8da-056e-480d-adcc-4ba7e1121390", "node_type": "1", "metadata": {}, "hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "class_name": "RelatedNodeInfo"}}, "hash": "a37bdd05bf21cae7f8d85dd312ffcd87d0b9b4c05402366da79fd4912f7197c0", "text": "Those methodologies have similar aims, namely to deliver production-ready software products. A concept called \u201cDevOps\u201d emerged in the years 2008/2009 and aims to reduce issues in software development [9,31]. DevOps is more than a pure methodology and rather represents a paradigm addressing social and technical issues in organizations engaged in software development.", "start_char_idx": 2156, "end_char_idx": 2524, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ee7b1a2-dca2-425a-a2a4-f43643002188": {"__data__": {"id_": "9ee7b1a2-dca2-425a-a2a4-f43643002188", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5d6ad3e-9d97-467c-b9d8-84af28a314a7", "node_type": "1", "metadata": {}, "hash": "45476748d50ff1266ab441abf103e8915cb63d92215ec10ec92fb03f342b1e54", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}}, "hash": "9b543fefe4ef8b65942273c9422fabc68e2fc25d2c47e40a9cfdabc577bc1383", "text": "It has the goal of eliminating the gap between development and operations and emphasizes collaboration, communication, and knowledge sharing. It ensures automation with continuous integration, continuous delivery, and continuous deployment (CI/CD), thus allowing for fast, frequent, and reliable releases. Moreover, it is designed to ensure continuous testing, quality assurance, continuous monitoring, logging, and feedback loops.", "start_char_idx": 0, "end_char_idx": 431, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5d6ad3e-9d97-467c-b9d8-84af28a314a7": {"__data__": {"id_": "c5d6ad3e-9d97-467c-b9d8-84af28a314a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ee7b1a2-dca2-425a-a2a4-f43643002188", "node_type": "1", "metadata": {}, "hash": "9b543fefe4ef8b65942273c9422fabc68e2fc25d2c47e40a9cfdabc577bc1383", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8304d01-ae23-470c-bf1c-7c60396dcad6", "node_type": "1", "metadata": {}, "hash": "4a73fdc8dcca78a09f5e07127bd39ac3358af378b0d53d6f83447518b2bde8ac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}}, "hash": "45476748d50ff1266ab441abf103e8915cb63d92215ec10ec92fb03f342b1e54", "text": "Due to the commercialization of DevOps, many DevOps tools are emerging, which can be differentiated into six groups [23,28]: collaboration and knowledge sharing (e.g., Slack, Trello, GitLab wiki), source code management (e.g., GitHub, GitLab), build process (e.g., Maven), continuous integration (e.g., Jenkins, GitLab CI), deployment automation (e.g., Kubernetes, Docker), monitoring and logging (e.g., Prometheus, Logstash).", "start_char_idx": 432, "end_char_idx": 858, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8304d01-ae23-470c-bf1c-7c60396dcad6": {"__data__": {"id_": "a8304d01-ae23-470c-bf1c-7c60396dcad6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5d6ad3e-9d97-467c-b9d8-84af28a314a7", "node_type": "1", "metadata": {}, "hash": "45476748d50ff1266ab441abf103e8915cb63d92215ec10ec92fb03f342b1e54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6462a0de-f05d-41f3-9829-6df044c4bdb0", "node_type": "1", "metadata": {}, "hash": "9c7f44a66a2d7bfb226f649ef6a87710849a047359ee24fcff54aec83548dc2a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}}, "hash": "4a73fdc8dcca78a09f5e07127bd39ac3358af378b0d53d6f83447518b2bde8ac", "text": "Cloud environments are increasingly equipped with ready-to-use DevOps tooling that is designed for cloud use, facilitating the efficient generation of value [38]. With this novel shift towards DevOps, developers need to care about what they develop, as they need to operate it as well. As empirical results demonstrate, DevOps ensures better software quality [34]. People in the industry, as well as academics, have gained a wealth of experience in software engineering using DevOps. This experience is now being used to automate and operationalize ML.", "start_char_idx": 859, "end_char_idx": 1411, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6462a0de-f05d-41f3-9829-6df044c4bdb0": {"__data__": {"id_": "6462a0de-f05d-41f3-9829-6df044c4bdb0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8304d01-ae23-470c-bf1c-7c60396dcad6", "node_type": "1", "metadata": {}, "hash": "4a73fdc8dcca78a09f5e07127bd39ac3358af378b0d53d6f83447518b2bde8ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a065996-cbb8-44e6-b2a4-b9f5fe3b281f", "node_type": "1", "metadata": {}, "hash": "92b0bc7c7ca71cd44c6c233a2cbffd92c7cc2fbe50deaae7f230f5d9f84c9fef", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}}, "hash": "9c7f44a66a2d7bfb226f649ef6a87710849a047359ee24fcff54aec83548dc2a", "text": "This experience is now being used to automate and operationalize ML. 3 Methodology To derive insights from the academic knowledge base while also drawing upon the expertise of practitioners from the field, we apply a mixed-method approach, as depicted in Figure 1. As a first step, we conduct a structured literature review [20,43] to obtain an overview of relevant research. Furthermore, we review relevant tooling support in the field of MLOps to gain a better understanding of the technical components involved. Finally, we conduct semi-structured interviews [33,39] with experts from different domains.", "start_char_idx": 1343, "end_char_idx": 1949, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a065996-cbb8-44e6-b2a4-b9f5fe3b281f": {"__data__": {"id_": "1a065996-cbb8-44e6-b2a4-b9f5fe3b281f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6462a0de-f05d-41f3-9829-6df044c4bdb0", "node_type": "1", "metadata": {}, "hash": "9c7f44a66a2d7bfb226f649ef6a87710849a047359ee24fcff54aec83548dc2a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "node_type": "1", "metadata": {}, "hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "class_name": "RelatedNodeInfo"}}, "hash": "92b0bc7c7ca71cd44c6c233a2cbffd92c7cc2fbe50deaae7f230f5d9f84c9fef", "text": "Finally, we conduct semi-structured interviews [33,39] with experts from different domains. On that basis, we conceptualize the term \u201cMLOps\u201d and elaborate on our findings by synthesizing literature and interviews in the next chapter (\u201cResults\u201d). 3.1 Literature Review To ensure that our results are based on scientific knowledge, we conduct a systematic literature review according to the method of Webster and Watson [43] and Kitchenham et al. [20].", "start_char_idx": 1858, "end_char_idx": 2308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31e12560-acbf-4c47-8b2d-96ad0f84d2fb": {"__data__": {"id_": "31e12560-acbf-4c47-8b2d-96ad0f84d2fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a4a0ea0-3fdb-41c7-ad4c-1039d675776a", "node_type": "1", "metadata": {}, "hash": "64075042e6e19894aa403c6a01e735d345eadd8306437a896b71b672c65a67cd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}}, "hash": "93dd6753e50e3105fd23cf3a676ebba8d8cee603888af531b4a725e09e91364b", "text": "[20]. After an initial exploratory search, we define our search query as follows: (((\"DevOps\" OR \"CICD\" OR \"Continuous Integration\" OR \"Continuous Delivery\" OR \"Continuous Deployment\") AND \"Machine Learning\") OR \"MLOps\" OR \"CD4ML\"). We query the \nscientific databases of Google Scholar, Web of Science, Science Direct, Scopus, and the Association for Information Systems eLibrary. It should be mentioned that the use of DevOps for ML, MLOps, and continuous practices in combination with ML is a relatively new field in academic literature.", "start_char_idx": 0, "end_char_idx": 539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a4a0ea0-3fdb-41c7-ad4c-1039d675776a": {"__data__": {"id_": "9a4a0ea0-3fdb-41c7-ad4c-1039d675776a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31e12560-acbf-4c47-8b2d-96ad0f84d2fb", "node_type": "1", "metadata": {}, "hash": "93dd6753e50e3105fd23cf3a676ebba8d8cee603888af531b4a725e09e91364b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9b28730-67fb-4a58-877d-f3d99d4fd21c", "node_type": "1", "metadata": {}, "hash": "2028f5c2477dafdf10a6ad1bea33bff7a8385acf9b534718a4b884c738d5fa50", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}}, "hash": "64075042e6e19894aa403c6a01e735d345eadd8306437a896b71b672c65a67cd", "text": "Thus, only a few peer-reviewed studies are available at the time of this research. Nevertheless, to gain experience in this area, the search included non-peer-reviewed literature as well. The search was performed in May 2021 and resulted in 1,864 retrieved articles. Of those, we screened 194 papers in detail. From that group, 27 articles were selected based on our inclusion and exclusion criteria (e.g., the term MLOps or DevOps and CI/CD in combination with ML was described in detail, the article was written in English, etc.).", "start_char_idx": 540, "end_char_idx": 1072, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9b28730-67fb-4a58-877d-f3d99d4fd21c": {"__data__": {"id_": "c9b28730-67fb-4a58-877d-f3d99d4fd21c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a4a0ea0-3fdb-41c7-ad4c-1039d675776a", "node_type": "1", "metadata": {}, "hash": "64075042e6e19894aa403c6a01e735d345eadd8306437a896b71b672c65a67cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "225b5ae6-a81e-41b3-b090-84bc9dd0d278", "node_type": "1", "metadata": {}, "hash": "da61691df50dc8c88fc4db295d8d5bb5ef4fac54afbcbd7fca78c9e2d2d03d05", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}}, "hash": "2028f5c2477dafdf10a6ad1bea33bff7a8385acf9b534718a4b884c738d5fa50", "text": "All 27 of these articles were peer-reviewed. 3.2 Tool Review After going through 27 articles and eight interviews, various open-source tools, frameworks, and commercial cloud ML services were identified. These tools, frameworks, and ML services were reviewed to gain an understanding of the technical components of which they consist. An overview of the identified tools is depicted in Table 1 of the Appendix. 3.3 Interview Study To answer the research questions with insights from practice, we conduct semi-structured expert interviews according to Myers and Newman [33].", "start_char_idx": 1073, "end_char_idx": 1646, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "225b5ae6-a81e-41b3-b090-84bc9dd0d278": {"__data__": {"id_": "225b5ae6-a81e-41b3-b090-84bc9dd0d278", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9b28730-67fb-4a58-877d-f3d99d4fd21c", "node_type": "1", "metadata": {}, "hash": "2028f5c2477dafdf10a6ad1bea33bff7a8385acf9b534718a4b884c738d5fa50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6b59695-4da2-4acd-82dd-25e8d006d49b", "node_type": "1", "metadata": {}, "hash": "c745f81ed8072420715b0ceba4ed52ef9bb5b72663a5c375a38c8ea6c8d804a6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}}, "hash": "da61691df50dc8c88fc4db295d8d5bb5ef4fac54afbcbd7fca78c9e2d2d03d05", "text": "One major aspect in the research design of expert interviews is choosing an appropriate sample size [8]. We apply a theoretical sampling approach [12], which allows us to choose experienced interview partners to obtain high-quality data. Such data can provide meaningful insights with a limited number of interviews. To get an adequate sample group and reliable insights, we use LinkedIn\u2014a social network for professionals\u2014to identify experienced ML professionals with profound MLOps knowledge on a global level. To gain insights from various perspectives, we choose interview partners from different organizations and industries, different countries and nationalities, as well as different genders.", "start_char_idx": 1647, "end_char_idx": 2346, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6b59695-4da2-4acd-82dd-25e8d006d49b": {"__data__": {"id_": "e6b59695-4da2-4acd-82dd-25e8d006d49b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "225b5ae6-a81e-41b3-b090-84bc9dd0d278", "node_type": "1", "metadata": {}, "hash": "da61691df50dc8c88fc4db295d8d5bb5ef4fac54afbcbd7fca78c9e2d2d03d05", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ccce360b-35a4-41ed-807b-5331211701de", "node_type": "1", "metadata": {}, "hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "class_name": "RelatedNodeInfo"}}, "hash": "c745f81ed8072420715b0ceba4ed52ef9bb5b72663a5c375a38c8ea6c8d804a6", "text": "Interviews are conducted until no new categories and concepts emerge in the analysis of the data.", "start_char_idx": 2347, "end_char_idx": 2444, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d3b2897-8759-4e5a-b14c-e805f5e5ea97": {"__data__": {"id_": "0d3b2897-8759-4e5a-b14c-e805f5e5ea97", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ccfc152-03d2-4f6e-af81-dff5ba9055ca", "node_type": "1", "metadata": {}, "hash": "0202e655f14f5292e8104b71516944f15c45c3543e4097b04e1ff63de08f292e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}}, "hash": "91973ab1f30d4721cd79d590dbbc9be6853c661dd234323a40e78de1af4c1849", "text": "Interviews are conducted until no new categories and concepts emerge in the analysis of the data. In total, we conduct eight interviews with experts (\u03b1 - \u03b8), whose details are depicted in Table 2 of the Appendix. According to Glaser and MethodologyResultsMLOpsPrinciplesComponentsRolesArchitectureLiterature Review(27 articles)Tool Review(11 tools)Interview Study(8 interviewees)\nFigure 1.", "start_char_idx": 0, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ccfc152-03d2-4f6e-af81-dff5ba9055ca": {"__data__": {"id_": "1ccfc152-03d2-4f6e-af81-dff5ba9055ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d3b2897-8759-4e5a-b14c-e805f5e5ea97", "node_type": "1", "metadata": {}, "hash": "91973ab1f30d4721cd79d590dbbc9be6853c661dd234323a40e78de1af4c1849", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a82aa6c0-6adb-4ef3-810a-72479dd78648", "node_type": "1", "metadata": {}, "hash": "307aab1d9eb0e3846845588d574f55179ed3e27c0221db160d006b365464644a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}}, "hash": "0202e655f14f5292e8104b71516944f15c45c3543e4097b04e1ff63de08f292e", "text": "Overview of the methodology \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n Strauss [5, p.61], this stage is called \u201ctheoretical saturation.\u201d All interviews are conducted between June and August 2021.  With regard to the interview design, we prepare a semi-structured guide with several questions, documented as an interview script [33]. During the interviews, \u201csoft laddering\u201d is used with \u201chow\u201d and \u201cwhy\u201d questions to probe the interviewees\u2019 means-end chain [39].", "start_char_idx": 390, "end_char_idx": 849, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a82aa6c0-6adb-4ef3-810a-72479dd78648": {"__data__": {"id_": "a82aa6c0-6adb-4ef3-810a-72479dd78648", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ccfc152-03d2-4f6e-af81-dff5ba9055ca", "node_type": "1", "metadata": {}, "hash": "0202e655f14f5292e8104b71516944f15c45c3543e4097b04e1ff63de08f292e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f492e26-fa96-4d6a-bc71-14dff335e96e", "node_type": "1", "metadata": {}, "hash": "52c13bfa521f151d89dcc2468a51e859c559d43a3676624397c1dd024ce7f88d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}}, "hash": "307aab1d9eb0e3846845588d574f55179ed3e27c0221db160d006b365464644a", "text": "This methodical approach allowed us to gain additional insight into the experiences of the interviewees when required. All interviews are recorded and then transcribed. To evaluate the interview transcripts, we use an open coding scheme [8]. 4 Results We apply the described methodology and structure our resulting insights into a presentation of important principles, their resulting instantiation as components, the description of necessary roles, as well as a suggestion for the architecture and workflow resulting from the combination of these aspects. Finally, we derive the conceptualization of the term and provide a definition of MLOps.", "start_char_idx": 850, "end_char_idx": 1494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f492e26-fa96-4d6a-bc71-14dff335e96e": {"__data__": {"id_": "6f492e26-fa96-4d6a-bc71-14dff335e96e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a82aa6c0-6adb-4ef3-810a-72479dd78648", "node_type": "1", "metadata": {}, "hash": "307aab1d9eb0e3846845588d574f55179ed3e27c0221db160d006b365464644a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a51a28c-2d72-45ad-ab74-730d1d8fc4cf", "node_type": "1", "metadata": {}, "hash": "df2281cba15db76fb853df6823db070341ccce2626bc32a73456e6ca09796193", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}}, "hash": "52c13bfa521f151d89dcc2468a51e859c559d43a3676624397c1dd024ce7f88d", "text": "Finally, we derive the conceptualization of the term and provide a definition of MLOps. 4.1 Principles A principle is viewed as a general or basic truth, a value, or a guide for behavior. In the context of MLOps, a principle is a guide to how things should be realized in MLOps and is closely related to the term \u201cbest practices\u201d from the professional sector. Based on the outlined methodology, we identified nine principles required to realize MLOps. Figure 2 provides an illustration of these principles and links them to the components with which they are associated.", "start_char_idx": 1407, "end_char_idx": 1977, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a51a28c-2d72-45ad-ab74-730d1d8fc4cf": {"__data__": {"id_": "5a51a28c-2d72-45ad-ab74-730d1d8fc4cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f492e26-fa96-4d6a-bc71-14dff335e96e", "node_type": "1", "metadata": {}, "hash": "52c13bfa521f151d89dcc2468a51e859c559d43a3676624397c1dd024ce7f88d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "db0aa27b-ea92-4876-8486-17599745f512", "node_type": "1", "metadata": {}, "hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "class_name": "RelatedNodeInfo"}}, "hash": "df2281cba15db76fb853df6823db070341ccce2626bc32a73456e6ca09796193", "text": "P1 CI/CD automation. CI/CD automation provides continuous integration, continuous delivery, and continuous deployment. It carries out the build, test, delivery, and deploy steps. It provides fast feedback to developers regarding the success or failure of certain steps, thus increasing the overall productivity [15,17,26,27,35,42,46] [\u03b1, \u03b2, \u03b8].  P2 Workflow orchestration.", "start_char_idx": 1980, "end_char_idx": 2352, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dcf6c8a-9ef8-40a4-becb-54fddc67d134": {"__data__": {"id_": "5dcf6c8a-9ef8-40a4-becb-54fddc67d134", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5e42b7ba-699f-4007-b796-b1828f7088eb", "node_type": "1", "metadata": {}, "hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5e42b7ba-699f-4007-b796-b1828f7088eb", "node_type": "1", "metadata": {}, "hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "class_name": "RelatedNodeInfo"}}, "hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "text": "P2 Workflow orchestration. Workflow orchestration coordinates the tasks of an ML workflow pipeline according to directed acyclic graphs (DAGs). DAGs define the task execution order by considering relationships and dependencies [14,17,26,32,40,41] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b6, \u03b7]. P3 Reproducibility.", "start_char_idx": 0, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f79fa48-9598-48f6-8911-8dc6cc59c128": {"__data__": {"id_": "0f79fa48-9598-48f6-8911-8dc6cc59c128", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6378a24-0227-4c82-8511-8c028cf5ef3d", "node_type": "1", "metadata": {}, "hash": "813159ee8ce76806b8507c5acac7e93a6a35647842e6642dc0f62abd64147ab8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}}, "hash": "9826a34850459d835c19bf1f4d828c0f8e8ff09bad85245bc4061bf667c1fa47", "text": "P3 Reproducibility. Reproducibility is the ability to reproduce an ML experiment and obtain the exact same results [14,32,40,46] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b7]. P4 Versioning. Versioning ensures the versioning of data, model, and code to enable not only reproducibility, but also traceability (for compliance and auditing reasons) [14,32,40,46] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b7]. P5 Collaboration.", "start_char_idx": 0, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6378a24-0227-4c82-8511-8c028cf5ef3d": {"__data__": {"id_": "e6378a24-0227-4c82-8511-8c028cf5ef3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f79fa48-9598-48f6-8911-8dc6cc59c128", "node_type": "1", "metadata": {}, "hash": "9826a34850459d835c19bf1f4d828c0f8e8ff09bad85245bc4061bf667c1fa47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb5fad50-9e27-4fb2-929e-0db25688f5af", "node_type": "1", "metadata": {}, "hash": "1252febea3fe4df9aa998db5442056e2d3eef6692f63d8f7e9c643679bae8ab9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}}, "hash": "813159ee8ce76806b8507c5acac7e93a6a35647842e6642dc0f62abd64147ab8", "text": "P5 Collaboration. Collaboration ensures the possibility to work collaboratively on data, model, and code. Besides the technical aspect, this principle emphasizes a collaborative and communicative work culture aiming to reduce domain silos between different roles [14,26,40] [\u03b1, \u03b4, \u03b8].  P6 Continuous ML training & evaluation. Continuous training means periodic retraining of the ML model based on new feature data. Continuous training is enabled through the support of a monitoring component, a feedback loop, and an automated ML workflow pipeline.", "start_char_idx": 347, "end_char_idx": 895, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb5fad50-9e27-4fb2-929e-0db25688f5af": {"__data__": {"id_": "fb5fad50-9e27-4fb2-929e-0db25688f5af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6378a24-0227-4c82-8511-8c028cf5ef3d", "node_type": "1", "metadata": {}, "hash": "813159ee8ce76806b8507c5acac7e93a6a35647842e6642dc0f62abd64147ab8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e1af8fa-2b32-43cf-9927-e5001c9051df", "node_type": "1", "metadata": {}, "hash": "3d74257a14f0fe0e99e66381586c9e92053bd6f3bdc2bba2fafcb8148894996f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}}, "hash": "1252febea3fe4df9aa998db5442056e2d3eef6692f63d8f7e9c643679bae8ab9", "text": "Continuous training always includes an evaluation run to assess the change in model quality [10,17,19,46] [\u03b2, \u03b4, \u03b7, \u03b8].  P7 ML metadata tracking/logging. Metadata is tracked and logged for each orchestrated ML workflow task. Metadata tracking and logging is required for each training job iteration (e.g., training date and time, duration, etc.", "start_char_idx": 896, "end_char_idx": 1240, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e1af8fa-2b32-43cf-9927-e5001c9051df": {"__data__": {"id_": "0e1af8fa-2b32-43cf-9927-e5001c9051df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb5fad50-9e27-4fb2-929e-0db25688f5af", "node_type": "1", "metadata": {}, "hash": "1252febea3fe4df9aa998db5442056e2d3eef6692f63d8f7e9c643679bae8ab9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4eb1dcaf-b8bd-4898-bdf2-c777104d1c5f", "node_type": "1", "metadata": {}, "hash": "63b4d530951881b3a037712f9fb8caa10ba4d6c61aa82aab9ca5e66535cffffb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}}, "hash": "3d74257a14f0fe0e99e66381586c9e92053bd6f3bdc2bba2fafcb8148894996f", "text": "), including the model specific metadata\u2014e.g., used parameters and the resulting performance metrics, model lineage: data and code used\u2014to ensure the full traceability of experiment runs [26,27,29,32,35] [\u03b1, \u03b2, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8]. P8 Continuous monitoring.", "start_char_idx": 1240, "end_char_idx": 1492, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4eb1dcaf-b8bd-4898-bdf2-c777104d1c5f": {"__data__": {"id_": "4eb1dcaf-b8bd-4898-bdf2-c777104d1c5f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e1af8fa-2b32-43cf-9927-e5001c9051df", "node_type": "1", "metadata": {}, "hash": "3d74257a14f0fe0e99e66381586c9e92053bd6f3bdc2bba2fafcb8148894996f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "node_type": "1", "metadata": {}, "hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "class_name": "RelatedNodeInfo"}}, "hash": "63b4d530951881b3a037712f9fb8caa10ba4d6c61aa82aab9ca5e66535cffffb", "text": "P8 Continuous monitoring. Continuous monitoring implies the periodic assessment of data, model, code, infrastructure resources, and model serving performance (e.g., prediction accuracy) to detect potential errors or changes that influence the product quality [4,7,10,27,29,42,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7].  P9 Feedback loops. Multiple feedback loops are required to integrate insights from the quality assessment step into the development or engineering process (e.g., a feedback loop from the experimental model engineering stage to the previous feature engineering stage).", "start_char_idx": 1467, "end_char_idx": 2038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15c961b8-fcbf-4ad8-a360-a4dc78ca4691": {"__data__": {"id_": "15c961b8-fcbf-4ad8-a360-a4dc78ca4691", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a8d2732-afa0-4cf2-8e49-5b70a0c1a13b", "node_type": "1", "metadata": {}, "hash": "203d91d62fe8775dbac290215d92020388433e2d844cfe9f2dd97f3e65a48f5d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}}, "hash": "680b54c30ce6d766a59faf001e8135104e9da23f3a4d1f064ad89c0458575443", "text": "Another feedback loop is required from the monitoring component (e.g., observing the model serving performance) to the scheduler to enable the retraining [4,6,7,17,27,46] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b7, \u03b8]. 4.2 Technical Components After identifying the principles that need to be incorporated into MLOps, we now elaborate on the precise components and implement them in the ML systems design. In the following, the components are listed and described in a generic way with their essential functionalities.", "start_char_idx": 0, "end_char_idx": 490, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a8d2732-afa0-4cf2-8e49-5b70a0c1a13b": {"__data__": {"id_": "6a8d2732-afa0-4cf2-8e49-5b70a0c1a13b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15c961b8-fcbf-4ad8-a360-a4dc78ca4691", "node_type": "1", "metadata": {}, "hash": "680b54c30ce6d766a59faf001e8135104e9da23f3a4d1f064ad89c0458575443", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c01e908-9c6b-4c09-b732-9f9441441f6a", "node_type": "1", "metadata": {}, "hash": "a2c09b0b9bb506b64258f0e21f39d6609dd173b11cc0a16c24ea3ec532792b54", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}}, "hash": "203d91d62fe8775dbac290215d92020388433e2d844cfe9f2dd97f3e65a48f5d", "text": "In the following, the components are listed and described in a generic way with their essential functionalities. The references in brackets refer to the respective principles that the technical components are implementing. C1 CI/CD Component (P1, P6, P9). The CI/CD component ensures continuous integration, continuous delivery, and continuous deployment. It takes care of the build, test, delivery, and deploy steps.", "start_char_idx": 378, "end_char_idx": 795, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c01e908-9c6b-4c09-b732-9f9441441f6a": {"__data__": {"id_": "5c01e908-9c6b-4c09-b732-9f9441441f6a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a8d2732-afa0-4cf2-8e49-5b70a0c1a13b", "node_type": "1", "metadata": {}, "hash": "203d91d62fe8775dbac290215d92020388433e2d844cfe9f2dd97f3e65a48f5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ddd9932-61e0-4107-8d22-e25f53b88f28", "node_type": "1", "metadata": {}, "hash": "8d2a22cdadf4fd556f121ef4d25021c72a80318bca8ab9b36219f8e3eaf85b0d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}}, "hash": "a2c09b0b9bb506b64258f0e21f39d6609dd173b11cc0a16c24ea3ec532792b54", "text": "It takes care of the build, test, delivery, and deploy steps. It provides rapid feedback to developers regarding the success or failure of certain steps, thus increasing the overall productivity [10,15,17,26,35,46] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7]. Examples are Jenkins [17,26] and GitHub actions (\u03b7).", "start_char_idx": 734, "end_char_idx": 1021, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ddd9932-61e0-4107-8d22-e25f53b88f28": {"__data__": {"id_": "4ddd9932-61e0-4107-8d22-e25f53b88f28", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c01e908-9c6b-4c09-b732-9f9441441f6a", "node_type": "1", "metadata": {}, "hash": "a2c09b0b9bb506b64258f0e21f39d6609dd173b11cc0a16c24ea3ec532792b54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04a87901-9db4-4399-ab2d-afe1f0dd996d", "node_type": "1", "metadata": {}, "hash": "1443853dda990fa9b490cbb0338db5fda9e6fd50510ecb56d6bddd9499e32ff8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}}, "hash": "8d2a22cdadf4fd556f121ef4d25021c72a80318bca8ab9b36219f8e3eaf85b0d", "text": "Examples are Jenkins [17,26] and GitHub actions (\u03b7). Source Code Repository CI/CD ComponentWorkflow Orchestration ComponentFeatureStoresModel Training InfrastructureModel Registry\nML Metadata StoresMonitoring ComponentModel Serving ComponentPRINCIPLESP1CI/CD automationP2Workflow orchestrationP3ReproducibilityP4Versioning of data, code, modelP5CollaborationP6Continuous ML training & evaluationP7ML metadata trackingP8Continuous monitoringP9Feedback loopsP1P6P9P4P5P2P3P6P6P3P4P3P4P8P9P4P7P1\nCOMPONENTFigure 2.", "start_char_idx": 969, "end_char_idx": 1480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04a87901-9db4-4399-ab2d-afe1f0dd996d": {"__data__": {"id_": "04a87901-9db4-4399-ab2d-afe1f0dd996d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ddd9932-61e0-4107-8d22-e25f53b88f28", "node_type": "1", "metadata": {}, "hash": "8d2a22cdadf4fd556f121ef4d25021c72a80318bca8ab9b36219f8e3eaf85b0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c978d67c-bbcc-4149-be14-2bf06746d9a8", "node_type": "1", "metadata": {}, "hash": "4801fe8361b94988bbaee84a8c6fce73dd50fe1ae9e4b5f915470adda5cf12bc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}}, "hash": "1443853dda990fa9b490cbb0338db5fda9e6fd50510ecb56d6bddd9499e32ff8", "text": "Implementation of principles within technical components \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  C2 Source Code Repository (P4, P5). The source code repository ensures code storing and versioning. It allows multiple developers to commit and merge their code [17,25,42,44,46] [\u03b1, \u03b2, \u03b3, \u03b6, \u03b8].", "start_char_idx": 1481, "end_char_idx": 1815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c978d67c-bbcc-4149-be14-2bf06746d9a8": {"__data__": {"id_": "c978d67c-bbcc-4149-be14-2bf06746d9a8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04a87901-9db4-4399-ab2d-afe1f0dd996d", "node_type": "1", "metadata": {}, "hash": "1443853dda990fa9b490cbb0338db5fda9e6fd50510ecb56d6bddd9499e32ff8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "node_type": "1", "metadata": {}, "hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "class_name": "RelatedNodeInfo"}}, "hash": "4801fe8361b94988bbaee84a8c6fce73dd50fe1ae9e4b5f915470adda5cf12bc", "text": "Examples include Bitbucket [11] [\u03b6], GitLab [11,17] [\u03b6], GitHub [25] [\u03b6 ,\u03b7], and Gitea [46].", "start_char_idx": 1816, "end_char_idx": 1908, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3269e536-db30-4391-a2ba-a53cd3e3cf78": {"__data__": {"id_": "3269e536-db30-4391-a2ba-a53cd3e3cf78", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e821d96-904a-44d9-b391-308b59e81bd4", "node_type": "1", "metadata": {}, "hash": "eccf118632746ad087edfa3626f9b010186306afd421711635294d65a3091b3f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}}, "hash": "b590d89e56b547bd1a3c4fd669860336762ff50241a39ff6d0ef94c2ff4c8c78", "text": "C3 Workflow Orchestration Component (P2, P3, P6). The workflow orchestration component offers task orchestration of an ML workflow via directed acyclic graphs (DAGs). These graphs represent execution order and artifact usage of single steps of the workflow [26,32,35,40,41,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7]. Examples include Apache Airflow [\u03b1, \u03b6], Kubeflow Pipelines [\u03b6], Luigi [\u03b6], AWS SageMaker Pipelines [\u03b2], and Azure Pipelines [\u03b5].", "start_char_idx": 0, "end_char_idx": 428, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e821d96-904a-44d9-b391-308b59e81bd4": {"__data__": {"id_": "6e821d96-904a-44d9-b391-308b59e81bd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3269e536-db30-4391-a2ba-a53cd3e3cf78", "node_type": "1", "metadata": {}, "hash": "b590d89e56b547bd1a3c4fd669860336762ff50241a39ff6d0ef94c2ff4c8c78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1ee1453-3be7-4752-8d36-d542ca0eeded", "node_type": "1", "metadata": {}, "hash": "25fbe575cb215a78c027fe3b5a2f122379e4fdb45235ad4d6bbd48c2a17199e6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}}, "hash": "eccf118632746ad087edfa3626f9b010186306afd421711635294d65a3091b3f", "text": "C4 Feature Store System (P3, P4). A feature store system ensures central storage of commonly used features. It has two databases configured: One database as an offline feature store to serve features with normal latency for experimentation, and one database as an online store to serve features with low latency for predictions in production [10,14] [\u03b1, \u03b2, \u03b6, \u03b5, \u03b8]. Examples include Google Feast [\u03b6], Amazon AWS Feature Store [\u03b2, \u03b6], Tecton.ai and Hopswork.ai [\u03b6].", "start_char_idx": 429, "end_char_idx": 894, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1ee1453-3be7-4752-8d36-d542ca0eeded": {"__data__": {"id_": "d1ee1453-3be7-4752-8d36-d542ca0eeded", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e821d96-904a-44d9-b391-308b59e81bd4", "node_type": "1", "metadata": {}, "hash": "eccf118632746ad087edfa3626f9b010186306afd421711635294d65a3091b3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e41f815-cb98-42c8-9107-72f71d09f1ae", "node_type": "1", "metadata": {}, "hash": "08d6ea92e5275b96484f6efcce09d4ab45efc4ce548eeeb0648ca09828382277", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}}, "hash": "25fbe575cb215a78c027fe3b5a2f122379e4fdb45235ad4d6bbd48c2a17199e6", "text": "This is where most of the data for training ML models will come from. Moreover, data can also come directly from any kind of data store. C5 Model Training Infrastructure (P6). The model training infrastructure provides the foundational computation resources, e.g., CPUs, RAM, and GPUs. The provided infrastructure can be either distributed or non-distributed. In general, a scalable and distributed infrastructure is recommended [7,10,24\u201326,29,40,45,46] [\u03b4, \u03b6, \u03b7, \u03b8].", "start_char_idx": 895, "end_char_idx": 1362, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e41f815-cb98-42c8-9107-72f71d09f1ae": {"__data__": {"id_": "1e41f815-cb98-42c8-9107-72f71d09f1ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1ee1453-3be7-4752-8d36-d542ca0eeded", "node_type": "1", "metadata": {}, "hash": "25fbe575cb215a78c027fe3b5a2f122379e4fdb45235ad4d6bbd48c2a17199e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0da85683-9ff5-4f0a-9eb0-1808af60e198", "node_type": "1", "metadata": {}, "hash": "2d72ef66fe1dc2ae967e9c2d07e1737f12c14e46d1ed8ff4bc8965baccdaa696", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}}, "hash": "08d6ea92e5275b96484f6efcce09d4ab45efc4ce548eeeb0648ca09828382277", "text": "Examples include local machines (not scalable) or cloud computation [7] [\u03b7, \u03b8], as well as non-distributed or distributed computation (several worker nodes) [25,27]. Frameworks supporting computation are Kubernetes [\u03b7, \u03b8] and Red Hat OpenShift [\u03b3]. C6 Model Registry (P3, P4). The model registry stores centrally the trained ML models together with their metadata.", "start_char_idx": 1363, "end_char_idx": 1727, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0da85683-9ff5-4f0a-9eb0-1808af60e198": {"__data__": {"id_": "0da85683-9ff5-4f0a-9eb0-1808af60e198", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e41f815-cb98-42c8-9107-72f71d09f1ae", "node_type": "1", "metadata": {}, "hash": "08d6ea92e5275b96484f6efcce09d4ab45efc4ce548eeeb0648ca09828382277", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "node_type": "1", "metadata": {}, "hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "class_name": "RelatedNodeInfo"}}, "hash": "2d72ef66fe1dc2ae967e9c2d07e1737f12c14e46d1ed8ff4bc8965baccdaa696", "text": "The model registry stores centrally the trained ML models together with their metadata. It has two main functionalities: storing the ML artifact and storing the ML metadata (see C7) [4,6,14,17,26,27] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8].", "start_char_idx": 1640, "end_char_idx": 1862, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "135d8eae-9240-423f-9b09-448286bd0ca0": {"__data__": {"id_": "135d8eae-9240-423f-9b09-448286bd0ca0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08851b7d-3d0b-490f-850f-eab8d0d2e0a1", "node_type": "1", "metadata": {}, "hash": "78f4bc9297ed1b288702f3a65421d7f8b094bcce6f1724ac2ac08345bf3952a4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}}, "hash": "f1d912ce805d99d5a669322d0b2595dd7f4d6862b9a5f7ca5bbb0a4aeed515c8", "text": "Advanced storage examples include MLflow [\u03b1, \u03b7, \u03b6], AWS SageMaker Model Registry [\u03b6], Microsoft Azure ML Model Registry [\u03b6], and Neptune.ai [\u03b1]. Simple storage examples include Microsoft Azure Storage, Google Cloud Storage, and Amazon AWS S3 [17]. C7 ML Metadata Stores (P4, P7). ML metadata stores allow for the tracking of various kinds of metadata, e.g., for each orchestrated ML workflow pipeline task.", "start_char_idx": 0, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08851b7d-3d0b-490f-850f-eab8d0d2e0a1": {"__data__": {"id_": "08851b7d-3d0b-490f-850f-eab8d0d2e0a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "135d8eae-9240-423f-9b09-448286bd0ca0", "node_type": "1", "metadata": {}, "hash": "f1d912ce805d99d5a669322d0b2595dd7f4d6862b9a5f7ca5bbb0a4aeed515c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2ca7a63-6dae-416a-bbcf-defc21b90eab", "node_type": "1", "metadata": {}, "hash": "daac28f6cfc4fe2aa0ac6b6f96395ee3208846828791777bd5dbd1bdcc4234cc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}}, "hash": "78f4bc9297ed1b288702f3a65421d7f8b094bcce6f1724ac2ac08345bf3952a4", "text": "Another metadata store can be configured within the model registry for tracking and logging the metadata of each training job (e.g., training date and time, duration, etc.), including the model specific metadata\u2014e.g., used parameters and the resulting performance metrics, model lineage: data and code used [14,25\u201327,32] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b8].", "start_char_idx": 407, "end_char_idx": 744, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2ca7a63-6dae-416a-bbcf-defc21b90eab": {"__data__": {"id_": "a2ca7a63-6dae-416a-bbcf-defc21b90eab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08851b7d-3d0b-490f-850f-eab8d0d2e0a1", "node_type": "1", "metadata": {}, "hash": "78f4bc9297ed1b288702f3a65421d7f8b094bcce6f1724ac2ac08345bf3952a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e61c134b-dcda-4ab9-a832-12457053398e", "node_type": "1", "metadata": {}, "hash": "b9c79460220cc89ee1600fd44a213c1bc98e56e29659a504c0028cb726b200cb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}}, "hash": "daac28f6cfc4fe2aa0ac6b6f96395ee3208846828791777bd5dbd1bdcc4234cc", "text": "Examples include orchestrators with built-in metadata stores tracking each step of experiment pipelines [\u03b1] such as Kubeflow Pipelines [\u03b1,\u03b6], AWS SageMaker Pipelines [\u03b1,\u03b6], Azure ML, and IBM Watson Studio [\u03b3]. MLflow provides an advanced metadata store in combination with the model registry [32,35].  C8 Model Serving Component (P1). The model serving component can be configured for different purposes. Examples are online inference for real-time predictions or batch inference for predictions using large volumes of input data.", "start_char_idx": 745, "end_char_idx": 1275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e61c134b-dcda-4ab9-a832-12457053398e": {"__data__": {"id_": "e61c134b-dcda-4ab9-a832-12457053398e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2ca7a63-6dae-416a-bbcf-defc21b90eab", "node_type": "1", "metadata": {}, "hash": "daac28f6cfc4fe2aa0ac6b6f96395ee3208846828791777bd5dbd1bdcc4234cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f7c3a15-dd9f-4072-a660-518dad9b734f", "node_type": "1", "metadata": {}, "hash": "257262a2be887262c99b33524be18358fd60dd18f7081d83ea2800ebdeb9cf88", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}}, "hash": "b9c79460220cc89ee1600fd44a213c1bc98e56e29659a504c0028cb726b200cb", "text": "The serving can be provided, e.g., via a REST API. As a foundational infrastructure layer, a scalable and distributed model serving infrastructure is recommended [7,11,25,40,45,46] [\u03b1, \u03b2, \u03b4, \u03b6, \u03b7, \u03b8]. One example of a model serving component configuration is the use of Kubernetes and Docker technology to containerize the ML model, and leveraging a Python web application framework like Flask [17] with an API for serving [\u03b1].", "start_char_idx": 1276, "end_char_idx": 1703, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f7c3a15-dd9f-4072-a660-518dad9b734f": {"__data__": {"id_": "2f7c3a15-dd9f-4072-a660-518dad9b734f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e61c134b-dcda-4ab9-a832-12457053398e", "node_type": "1", "metadata": {}, "hash": "b9c79460220cc89ee1600fd44a213c1bc98e56e29659a504c0028cb726b200cb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253", "node_type": "1", "metadata": {}, "hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "class_name": "RelatedNodeInfo"}}, "hash": "257262a2be887262c99b33524be18358fd60dd18f7081d83ea2800ebdeb9cf88", "text": "Other Kubernetes supported frameworks are KServing of Kubeflow [\u03b1], TensorFlow Serving, and Seldion.io serving [40]. Inferencing could also be realized with Apache Spark for batch predictions [\u03b8]. Examples of cloud services include Microsoft Azure ML REST API [\u03b5], AWS SageMaker Endpoints [\u03b1, \u03b2], IBM Watson Studio [\u03b3], and Google Vertex AI prediction service [\u03b4]. C9 Monitoring Component (P8, P9).", "start_char_idx": 1704, "end_char_idx": 2102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc281ab0-2e4d-44b4-8c27-82ef456a8256": {"__data__": {"id_": "cc281ab0-2e4d-44b4-8c27-82ef456a8256", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "30da43e3-e957-4749-833b-2a3da21bfd1a", "node_type": "1", "metadata": {}, "hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "30da43e3-e957-4749-833b-2a3da21bfd1a", "node_type": "1", "metadata": {}, "hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "class_name": "RelatedNodeInfo"}}, "hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "text": "C9 Monitoring Component (P8, P9). The monitoring component takes care of the continuous monitoring of the model serving performance (e.g., prediction accuracy).", "start_char_idx": 0, "end_char_idx": 160, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a42c78e1-e356-4f59-a55d-73bf8c091375": {"__data__": {"id_": "a42c78e1-e356-4f59-a55d-73bf8c091375", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecf1b2fa-45bf-4b80-ae9e-4d2b64fdebe9", "node_type": "1", "metadata": {}, "hash": "15d0301af4bb1164d5bc5593f3f23ac257c87f34d8edd0da68142af8776e34be", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}}, "hash": "2be435b2f21e2f8546c57591d5ec356ceefdb27c3f7f3515640bf09d030fdefd", "text": "Additionally, monitoring of the ML infrastructure, CI/CD, and orchestration are required [7,10,17,26,29,36,46] [\u03b1, \u03b6, \u03b7, \u03b8]. Examples include Prometheus with Grafana [\u03b7, \u03b6], ELK stack (Elasticsearch, Logstash, and Kibana) [\u03b1, \u03b7, \u03b6], and simply TensorBoard [\u03b8]. Examples with built-in monitoring capabilities are Kubeflow [\u03b8], MLflow [\u03b7], and AWS SageMaker model monitor or cloud watch [\u03b6].", "start_char_idx": 0, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecf1b2fa-45bf-4b80-ae9e-4d2b64fdebe9": {"__data__": {"id_": "ecf1b2fa-45bf-4b80-ae9e-4d2b64fdebe9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a42c78e1-e356-4f59-a55d-73bf8c091375", "node_type": "1", "metadata": {}, "hash": "2be435b2f21e2f8546c57591d5ec356ceefdb27c3f7f3515640bf09d030fdefd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd0ba1a0-a407-4c2b-af60-bcafff85a92d", "node_type": "1", "metadata": {}, "hash": "965ef0f180b3a79ad644f84ae669f437c368c88354ce34e5a19363ca95326e1a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}}, "hash": "15d0301af4bb1164d5bc5593f3f23ac257c87f34d8edd0da68142af8776e34be", "text": "4.3 Roles After describing the principles and their resulting instantiation of components, we identify necessary roles in order to realize MLOps in the following. MLOps is an interdisciplinary group process, and the interplay of different roles is crucial to design, manage, automate, and operate an ML system in production. In the following, every role, its purpose, and related tasks are briefly described: R1 Business Stakeholder (similar roles: Product Owner, Project Manager).", "start_char_idx": 390, "end_char_idx": 871, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd0ba1a0-a407-4c2b-af60-bcafff85a92d": {"__data__": {"id_": "dd0ba1a0-a407-4c2b-af60-bcafff85a92d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecf1b2fa-45bf-4b80-ae9e-4d2b64fdebe9", "node_type": "1", "metadata": {}, "hash": "15d0301af4bb1164d5bc5593f3f23ac257c87f34d8edd0da68142af8776e34be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "909bdfb2-03c6-469e-956c-0a85b73df27b", "node_type": "1", "metadata": {}, "hash": "976ff651139eecf88234c381599cef8453115eeec33d62ceccce60c3413d8070", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}}, "hash": "965ef0f180b3a79ad644f84ae669f437c368c88354ce34e5a19363ca95326e1a", "text": "The business stakeholder defines the business goal to be achieved with ML and takes care of the communication side of the business, e.g., presenting the return on investment (ROI) generated with an ML product [17,24,26] [\u03b1, \u03b2, \u03b4, \u03b8].  R2D2Solution Architect (similar role: IT Architect). The solution architect designs the architecture and defines the technologies to be used, following a thorough evaluation [17,27] [\u03b1, \u03b6].  R3 Data Scientist (similar roles: ML Specialist, ML Developer).", "start_char_idx": 872, "end_char_idx": 1361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "909bdfb2-03c6-469e-956c-0a85b73df27b": {"__data__": {"id_": "909bdfb2-03c6-469e-956c-0a85b73df27b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd0ba1a0-a407-4c2b-af60-bcafff85a92d", "node_type": "1", "metadata": {}, "hash": "965ef0f180b3a79ad644f84ae669f437c368c88354ce34e5a19363ca95326e1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a10f491-2852-47d6-9e10-c633b60ef81a", "node_type": "1", "metadata": {}, "hash": "4562ab613ae85545c54b11e8e40bd79819d118b716b0438539786365398b9a9e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}}, "hash": "976ff651139eecf88234c381599cef8453115eeec33d62ceccce60c3413d8070", "text": "R3 Data Scientist (similar roles: ML Specialist, ML Developer). The data scientist translates the business problem into an ML problem and takes care of the model engineering, including the selection of the best-performing algorithm and hyperparameters [7,14,26,29] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8].  R4 Data Engineer (similar role: DataOps Engineer). The data engineer builds up and manages data and feature engineering pipelines.", "start_char_idx": 1298, "end_char_idx": 1720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a10f491-2852-47d6-9e10-c633b60ef81a": {"__data__": {"id_": "4a10f491-2852-47d6-9e10-c633b60ef81a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "909bdfb2-03c6-469e-956c-0a85b73df27b", "node_type": "1", "metadata": {}, "hash": "976ff651139eecf88234c381599cef8453115eeec33d62ceccce60c3413d8070", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "node_type": "1", "metadata": {}, "hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "class_name": "RelatedNodeInfo"}}, "hash": "4562ab613ae85545c54b11e8e40bd79819d118b716b0438539786365398b9a9e", "text": "The data engineer builds up and manages data and feature engineering pipelines. Moreover, this role ensures proper data ingestion to the databases of the feature store system [14,29,41] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8]. \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n  R5 Software Engineer.", "start_char_idx": 1641, "end_char_idx": 1917, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95a447d3-6ca9-400f-8337-60574b1cada5": {"__data__": {"id_": "95a447d3-6ca9-400f-8337-60574b1cada5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be7e36ef-fe2e-4e90-b70c-7a50ad7fc22c", "node_type": "1", "metadata": {}, "hash": "e3d7b801aac00cbe456f3e1f869a85c0093164114d06708eb8d85ce025f7c8e5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}}, "hash": "cb10eb88bfa18751ecbdfcb6087e92c82ab463e807c089e6338616f9b31d66c3", "text": "The software engineer applies software design patterns, widely accepted coding guidelines, and best practices to turn the raw ML problem into a well-engineered product [29] [\u03b1, \u03b3]. R6 DevOps Engineer. The DevOps engineer bridges the gap between development and operations and ensures proper CI/CD automation, ML workflow orchestration, model deployment to production, and monitoring [14\u201316,26] [\u03b1, \u03b2, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8]. R7 ML Engineer/MLOps Engineer.", "start_char_idx": 0, "end_char_idx": 447, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be7e36ef-fe2e-4e90-b70c-7a50ad7fc22c": {"__data__": {"id_": "be7e36ef-fe2e-4e90-b70c-7a50ad7fc22c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95a447d3-6ca9-400f-8337-60574b1cada5", "node_type": "1", "metadata": {}, "hash": "cb10eb88bfa18751ecbdfcb6087e92c82ab463e807c089e6338616f9b31d66c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f8ae9c4-22d3-4550-951f-0f0f82d23c2d", "node_type": "1", "metadata": {}, "hash": "33d339740c13fc72675aa636bdc1564ded6c50d647246ecade52d442974709ad", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}}, "hash": "e3d7b801aac00cbe456f3e1f869a85c0093164114d06708eb8d85ce025f7c8e5", "text": "R7 ML Engineer/MLOps Engineer. The ML engineer or MLOps engineer combines aspects of several roles and thus has cross-domain knowledge. This role incorporates skills from data scientists, data engineers, software engineers, DevOps engineers, and backend engineers (see Figure 3). This cross-domain role builds up and operates the ML infrastructure, manages the automated ML workflow pipelines and model deployment to production, and monitors both the model and the ML infrastructure [14,17,26,29] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b5, \u03b6, \u03b7, \u03b8].", "start_char_idx": 417, "end_char_idx": 939, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f8ae9c4-22d3-4550-951f-0f0f82d23c2d": {"__data__": {"id_": "7f8ae9c4-22d3-4550-951f-0f0f82d23c2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be7e36ef-fe2e-4e90-b70c-7a50ad7fc22c", "node_type": "1", "metadata": {}, "hash": "e3d7b801aac00cbe456f3e1f869a85c0093164114d06708eb8d85ce025f7c8e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eee39ce9-1e38-412b-a0e1-6093f069dcad", "node_type": "1", "metadata": {}, "hash": "932d8f28b62fe2bd31ade6cafab3920861ab0c2284c4475a8a423e544e7f35e3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}}, "hash": "33d339740c13fc72675aa636bdc1564ded6c50d647246ecade52d442974709ad", "text": "5 Architecture and Workflow On the basis of the identified principles, components, and roles, we derive a generalized MLOps end-to-end architecture to give ML researchers and practitioners proper guidance. It is depicted in Figure 4. Additionally, we depict the workflows, i.e., the sequence in which the different tasks are executed in the different stages. The artifact was designed to be technology-agnostic. Therefore, ML researchers and practitioners can choose the best-fitting technologies and frameworks for their needs.", "start_char_idx": 944, "end_char_idx": 1472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eee39ce9-1e38-412b-a0e1-6093f069dcad": {"__data__": {"id_": "eee39ce9-1e38-412b-a0e1-6093f069dcad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f8ae9c4-22d3-4550-951f-0f0f82d23c2d", "node_type": "1", "metadata": {}, "hash": "33d339740c13fc72675aa636bdc1564ded6c50d647246ecade52d442974709ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9eea42c9-9132-4606-b947-d1feb67f85d6", "node_type": "1", "metadata": {}, "hash": "02bf167599ff70ee7eef35157f7f796eb093a735ea2017b0d3dec73636601eac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}}, "hash": "932d8f28b62fe2bd31ade6cafab3920861ab0c2284c4475a8a423e544e7f35e3", "text": "Therefore, ML researchers and practitioners can choose the best-fitting technologies and frameworks for their needs.  As depicted in Figure 4, we illustrate an end-to-end process, from MLOps project initiation to the model serving. It includes (A) the MLOps project initiation steps; (B) the feature engineering pipeline, including the data ingestion to the feature store; (C) the experimentation; and (D) the automated ML workflow pipeline up to the model serving.  (A) MLOps project initiation.", "start_char_idx": 1356, "end_char_idx": 1852, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9eea42c9-9132-4606-b947-d1feb67f85d6": {"__data__": {"id_": "9eea42c9-9132-4606-b947-d1feb67f85d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eee39ce9-1e38-412b-a0e1-6093f069dcad", "node_type": "1", "metadata": {}, "hash": "932d8f28b62fe2bd31ade6cafab3920861ab0c2284c4475a8a423e544e7f35e3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e3d9a200-8d09-4a5f-8057-525d40945061", "node_type": "1", "metadata": {}, "hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "class_name": "RelatedNodeInfo"}}, "hash": "02bf167599ff70ee7eef35157f7f796eb093a735ea2017b0d3dec73636601eac", "text": "(A) MLOps project initiation. (1) The business stakeholder (R1) analyzes the business and identifies a potential business problem that can be solved using ML. (2) The solution architect (R2) defines the architecture design for the overall ML system and, decides on the technologies to be used after a thorough evaluation. (3) The data scientist (R3) derives an ML problem\u2014such as whether regression or classification should be used\u2014from the business goal.", "start_char_idx": 1823, "end_char_idx": 2278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b25c7cf-6f96-448a-840d-eb23b7b27cf9": {"__data__": {"id_": "0b25c7cf-6f96-448a-840d-eb23b7b27cf9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f4e5765-af3c-4cd0-bddc-330785d407f8", "node_type": "1", "metadata": {}, "hash": "537d5c6106a5149b3c513bb6963279a294da0ef75a69461f3d2a399e548c0243", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}}, "hash": "0d6f609a3ac5caadbdfd6444d07bc1af83dd5a4c8e79c092bbe37ee7923cd253", "text": "(4) The data engineer (R4) and the data scientist (R3) work together in an effort to understand which data is required to solve the problem. (5) Once the answers are clarified, the data engineer (R4) and data scientist (R3) collaborate to locate the raw data sources for the initial data analysis. They check the distribution, and quality of the data, as well as performing validation checks. Furthermore, they ensure that the incoming data from the data sources is labeled, meaning that a target attribute is known, as this is a mandatory requirement for supervised ML.", "start_char_idx": 0, "end_char_idx": 570, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f4e5765-af3c-4cd0-bddc-330785d407f8": {"__data__": {"id_": "9f4e5765-af3c-4cd0-bddc-330785d407f8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b25c7cf-6f96-448a-840d-eb23b7b27cf9", "node_type": "1", "metadata": {}, "hash": "0d6f609a3ac5caadbdfd6444d07bc1af83dd5a4c8e79c092bbe37ee7923cd253", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38a42ca1-e7af-41ef-b721-a3f02034f28c", "node_type": "1", "metadata": {}, "hash": "bef0ac4ac2ffb0be3dbad0af4ea27e3385d51d64a20d9028d430f8d7fee11df8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}}, "hash": "537d5c6106a5149b3c513bb6963279a294da0ef75a69461f3d2a399e548c0243", "text": "In this example, the data sources already had labeled data available as the labeling step was covered during an upstream process. (B1) Requirements for feature engineering pipeline. The features are the relevant attributes required for model training. After the initial understanding of the raw data and the initial data analysis, the fundamental requirements for the feature engineering pipeline are defined, as follows: (6) The data engineer (R4) defines the data transformation rules (normalization, aggregations) and cleaning rules to bring the data into a usable format.", "start_char_idx": 571, "end_char_idx": 1146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38a42ca1-e7af-41ef-b721-a3f02034f28c": {"__data__": {"id_": "38a42ca1-e7af-41ef-b721-a3f02034f28c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f4e5765-af3c-4cd0-bddc-330785d407f8", "node_type": "1", "metadata": {}, "hash": "537d5c6106a5149b3c513bb6963279a294da0ef75a69461f3d2a399e548c0243", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4d490c7-956f-4df8-9f26-17f447afd45c", "node_type": "1", "metadata": {}, "hash": "d7d5e9d4adb0a64a4673dc15b11f0dc734147a10985088264b0d5d0d6e004fe8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}}, "hash": "bef0ac4ac2ffb0be3dbad0af4ea27e3385d51d64a20d9028d430f8d7fee11df8", "text": "(7) The data scientist (R3) and data engineer (R4) together define the feature engineering rules, such as the calculation of new and more advanced features based on other features. These initially defined rules must be iteratively adjusted by the data scientist (R3) either based on the feedback coming from the experimental model engineering stage or from the monitoring component observing the model performance. (B2) Feature engineering pipeline.", "start_char_idx": 1147, "end_char_idx": 1596, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4d490c7-956f-4df8-9f26-17f447afd45c": {"__data__": {"id_": "b4d490c7-956f-4df8-9f26-17f447afd45c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38a42ca1-e7af-41ef-b721-a3f02034f28c", "node_type": "1", "metadata": {}, "hash": "bef0ac4ac2ffb0be3dbad0af4ea27e3385d51d64a20d9028d430f8d7fee11df8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52384559-246d-4e74-b894-844451d98bdd", "node_type": "1", "metadata": {}, "hash": "75d9d1ad8618dce097ea2137f6824bcf4df1231de4737a680c72f7d205bc7d16", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}}, "hash": "d7d5e9d4adb0a64a4673dc15b11f0dc734147a10985088264b0d5d0d6e004fe8", "text": "(B2) Feature engineering pipeline. The initially defined requirements for the feature engineering pipeline are taken by the data engineer (R4) and software engineer (R5) as a starting point to build up the prototype of the feature engineering pipeline. The initially defined requirements and rules are updated according to the iterative feedback coming either from the experimental model engineering stage or from the monitoring component observing the model\u2019s performance in production.", "start_char_idx": 1562, "end_char_idx": 2049, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52384559-246d-4e74-b894-844451d98bdd": {"__data__": {"id_": "52384559-246d-4e74-b894-844451d98bdd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4d490c7-956f-4df8-9f26-17f447afd45c", "node_type": "1", "metadata": {}, "hash": "d7d5e9d4adb0a64a4673dc15b11f0dc734147a10985088264b0d5d0d6e004fe8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f30528b-8b87-4916-8530-b167226ec7c7", "node_type": "1", "metadata": {}, "hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "class_name": "RelatedNodeInfo"}}, "hash": "75d9d1ad8618dce097ea2137f6824bcf4df1231de4737a680c72f7d205bc7d16", "text": "As a foundational requirement, the data engineer (R4) defines the code required for the CI/CD (C1) and orchestration component (C3) to ensure the task orchestration of the feature engineering pipeline. This role also defines the underlying infrastructure resource configuration. (8) First, the feature engineering pipeline connects to the raw data, which can be (for instance) streaming data, static batch data, or data from any cloud storage. (9) The data will be extracted from the data sources.", "start_char_idx": 2050, "end_char_idx": 2547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "562b22f2-c306-4f43-a2a8-105c451f87e2": {"__data__": {"id_": "562b22f2-c306-4f43-a2a8-105c451f87e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "698fc5ad-21b3-4381-abaf-27e51cd07f06", "node_type": "1", "metadata": {}, "hash": "93a75960bb36b7754178c05328774539e6df08bf0237d05e2410b8db7a1f94c1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}}, "hash": "65a52f1359e90a37b59a776d7bed40fa3715f5cc0bcd9bb732c0eb52fb9320ba", "text": "(9) The data will be extracted from the data sources. (10) The data preprocessing begins with data transformation and cleaning tasks. The transformation rule artifact defined in the requirement gathering stage serves as input for this task, and the main aim of this task is to bring the data into a usable format. These transformation rules are continuously improved based on the feedback.", "start_char_idx": 0, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "698fc5ad-21b3-4381-abaf-27e51cd07f06": {"__data__": {"id_": "698fc5ad-21b3-4381-abaf-27e51cd07f06", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "562b22f2-c306-4f43-a2a8-105c451f87e2", "node_type": "1", "metadata": {}, "hash": "65a52f1359e90a37b59a776d7bed40fa3715f5cc0bcd9bb732c0eb52fb9320ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e9e5cc2-9d95-4f21-8e70-3343c4119b23", "node_type": "1", "metadata": {}, "hash": "68f9a67146b9c48d9c670af551f6538f54b93267af6dca38c0371af39ac26cbb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}}, "hash": "93a75960bb36b7754178c05328774539e6df08bf0237d05e2410b8db7a1f94c1", "text": "These transformation rules are continuously improved based on the feedback.  Data Scientist(ML model development)Data Engineer(data management, data pipeline management) Backend Engineer(ML infrastructure management)DevOps Engineer(Software engineer with DevOps skills,ML workflow pipeline orchestration,CI/CD pipeline management,monitoring) ML Engineer /MLOps Engineer(cross-functional managementof ML environment and assets:ML infrastructure,ML models,ML workflow pipelines,data Ingestion,monitoring)\nDS\nDE\nDO\nML\nBE\nSE{\u2026}Software Engineer(applies design patterns andcoding guidelines)Figure 3.", "start_char_idx": 314, "end_char_idx": 909, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e9e5cc2-9d95-4f21-8e70-3343c4119b23": {"__data__": {"id_": "2e9e5cc2-9d95-4f21-8e70-3343c4119b23", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "698fc5ad-21b3-4381-abaf-27e51cd07f06", "node_type": "1", "metadata": {}, "hash": "93a75960bb36b7754178c05328774539e6df08bf0237d05e2410b8db7a1f94c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38deef60-5953-4ce6-a948-7534442a8c79", "node_type": "1", "metadata": {}, "hash": "b69fefe6348e0f18ef1b85a235b1bd13eb343ec866b6c50ee91ca6ab6202e9db", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}}, "hash": "68f9a67146b9c48d9c670af551f6538f54b93267af6dca38c0371af39ac26cbb", "text": "Roles and their intersections contributing to the MLOps paradigm \n\n  Figure 4. End-to-end MLOps architecture and workflow with functional components and roles  (11) The feature engineering task calculates new and more advanced features based on other features. The predefined feature engineering rules serve as input for this task. These feature engineering rules are continuously improved based on the feedback. (12) Lastly, a data ingestion job loads batch or streaming data into the feature store system (C4). The target can either be the offline or online database (or any kind of data store). (C) Experimentation.", "start_char_idx": 910, "end_char_idx": 1528, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38deef60-5953-4ce6-a948-7534442a8c79": {"__data__": {"id_": "38deef60-5953-4ce6-a948-7534442a8c79", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e9e5cc2-9d95-4f21-8e70-3343c4119b23", "node_type": "1", "metadata": {}, "hash": "68f9a67146b9c48d9c670af551f6538f54b93267af6dca38c0371af39ac26cbb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1037093c-fc66-44ba-91e3-78a995e518c3", "node_type": "1", "metadata": {}, "hash": "e0518e2cc3f1cf9d5b0ccf65aaafa8860286b46b31506c36d6266178ebcd383c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}}, "hash": "b69fefe6348e0f18ef1b85a235b1bd13eb343ec866b6c50ee91ca6ab6202e9db", "text": "(C) Experimentation. Most tasks in the experimentation stage are led by the data scientist (R3). The data scientist is supported by the software engineer (R5). (13) The data scientist (R3) connects to the feature store system (C4) for the data analysis. (Alternatively, the data scientist (R3) can also connect to the raw data for an initial analysis.)", "start_char_idx": 1508, "end_char_idx": 1860, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1037093c-fc66-44ba-91e3-78a995e518c3": {"__data__": {"id_": "1037093c-fc66-44ba-91e3-78a995e518c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38deef60-5953-4ce6-a948-7534442a8c79", "node_type": "1", "metadata": {}, "hash": "b69fefe6348e0f18ef1b85a235b1bd13eb343ec866b6c50ee91ca6ab6202e9db", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "627089ab-2bd9-485b-a802-bfa4e68a989f", "node_type": "1", "metadata": {}, "hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "class_name": "RelatedNodeInfo"}}, "hash": "e0518e2cc3f1cf9d5b0ccf65aaafa8860286b46b31506c36d6266178ebcd383c", "text": "In case of any required data adjustments, the data \nScheduler(trigger when new data available,event-based orperiodical)\nMonitoring componentcontinuous monitoring of model serving performanceML metadata storemodel status (staging or prod)parameter & perf.", "start_char_idx": 1861, "end_char_idx": 2115, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43a2dbee-6d01-4401-96a5-61c873838777": {"__data__": {"id_": "43a2dbee-6d01-4401-96a5-61c873838777", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1bcbffa3-1812-4ad0-be4f-c849e40c34d3", "node_type": "1", "metadata": {}, "hash": "34ba845e79dd7ec3b6dd66e532a70e082aff786108ac6b7037c62a157ff6e2a5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}}, "hash": "d58f66633934c77c5e6e78bb98e3c4db4b39984c1939b23726a6f44650b4e65a", "text": "metricsmodel training computation infrastructureML metadata storeML model\nmodelvalidation\ndataextractiondatapreparation & validationmodel training/ refinementmodelvalidationexportmodelpush to model registryWorkflow orchestration component\nmodel training computation infrastructureExperimentation\nAutomated ML Workflow Pipeline ML Experimentation ZoneML Production Zoneprod ready ML model\nModel serving component(prediction on new batch or streaming data)ML metadata store(metadata logging of each ML workflow task)\nFeedback Loop \u2013enables continuous training / retraining & continuous improvementnew versioned feature data (batch or streaming data)model serving computation infrastructureML workflow pipeline codeversioned artifacts: model + ML training & workflow", "start_char_idx": 0, "end_char_idx": 763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bcbffa3-1812-4ad0-be4f-c849e40c34d3": {"__data__": {"id_": "1bcbffa3-1812-4ad0-be4f-c849e40c34d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43a2dbee-6d01-4401-96a5-61c873838777", "node_type": "1", "metadata": {}, "hash": "d58f66633934c77c5e6e78bb98e3c4db4b39984c1939b23726a6f44650b4e65a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6d8cb3b-a823-417c-b781-8a6bff348530", "node_type": "1", "metadata": {}, "hash": "f4ceffc40963abd014b6546476a980e861549f8e21ada9826f1194e0dcf2e786", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}}, "hash": "34ba845e79dd7ec3b6dd66e532a70e082aff786108ac6b7037c62a157ff6e2a5", "text": "data)model serving computation infrastructureML workflow pipeline codeversioned artifacts: model + ML training & workflow codemodel engineering (best algorithm selection,", "start_char_idx": 642, "end_char_idx": 812, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6d8cb3b-a823-417c-b781-8a6bff348530": {"__data__": {"id_": "c6d8cb3b-a823-417c-b781-8a6bff348530", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bcbffa3-1812-4ad0-be4f-c849e40c34d3", "node_type": "1", "metadata": {}, "hash": "34ba845e79dd7ec3b6dd66e532a70e082aff786108ac6b7037c62a157ff6e2a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e60a303-0647-497d-9c1c-f07a7abff7e7", "node_type": "1", "metadata": {}, "hash": "b96fe28977eb06879f99fc2980231f779c49a6caa455ad8b516fcc55aca1a0d9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}}, "hash": "f4ceffc40963abd014b6546476a980e861549f8e21ada9826f1194e0dcf2e786", "text": "pipeline codeversioned artifacts: model + ML training & workflow codemodel engineering (best algorithm selection, hyperparameter tuning)\nversioned feature dataRepositoryexportmodeldata analysisdatapreparation & validationmodeltrainingdata preprocessingFeature Engineering Pipelinedefine transformation& cleaning rulestransformation rulesdefine feature engineering rulesfeature engineering rules\nstreaming data\nbatchdatacloud storage\nBusinessStakeholderData ScientistDataEngineerDevOpsEngineerML EngineerDO\nDS\nML\nDE\nBS\nML\nDO\nML\nOR\nDS\nDE\nML\nDO\nML\nOR\nDE\nDS\nDE\nAND\nLEGENDBusiness problemanalysis(define goal)deriveML problem from business goal(e.", "start_char_idx": 699, "end_char_idx": 1341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e60a303-0647-497d-9c1c-f07a7abff7e7": {"__data__": {"id_": "3e60a303-0647-497d-9c1c-f07a7abff7e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6d8cb3b-a823-417c-b781-8a6bff348530", "node_type": "1", "metadata": {}, "hash": "f4ceffc40963abd014b6546476a980e861549f8e21ada9826f1194e0dcf2e786", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "node_type": "1", "metadata": {}, "hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "class_name": "RelatedNodeInfo"}}, "hash": "b96fe28977eb06879f99fc2980231f779c49a6caa455ad8b516fcc55aca1a0d9", "text": "g. classification, regression)MLOps Project InitiationUnderstand required data to solve problem(data available?, where is it?, how to get it?)BS\nDS\nConnect to raw data for initial data analysis(distribution analysis, data quality checks, validation checks)\nDE\nDS\nAND\nfeature engineering(e.g., calc.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2cdd11d-e256-467c-a3d8-aea0cacbcc29": {"__data__": {"id_": "b2cdd11d-e256-467c-a3d8-aea0cacbcc29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b373152-101b-4199-9214-e355804544d3", "node_type": "1", "metadata": {}, "hash": "53161288260a6df60398810a52679809131728c9dc7eb53f6b505d25d90a8393", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}}, "hash": "cf6d1ffbae7f398d6d1621620ffbd192c8719184b88ed73ed3cdae3f4acc90a7", "text": "of new features)Connect toraw datadata extractiondata transformation & cleaningdata Ingestion job(batch or streaming)Data Sources\ndata processing computation infrastructure\nDE\nDS\nAND\ndata pipeline codeA\nC\nDB2Requirements for feature engineering pipeline\nDO\nML\nORModel RegistryFeedback Loopfeature requirements (iterative)\nCI / CD componentartifact store(e.g. Image Registry)continuous integration / continuous delivery (build, test and push)CI/CD componentartifact storeData Engineering Zone\ncontinuous deployment(build,", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b373152-101b-4199-9214-e355804544d3": {"__data__": {"id_": "0b373152-101b-4199-9214-e355804544d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2cdd11d-e256-467c-a3d8-aea0cacbcc29", "node_type": "1", "metadata": {}, "hash": "cf6d1ffbae7f398d6d1621620ffbd192c8719184b88ed73ed3cdae3f4acc90a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37e282cd-edbf-4c07-bc1a-c6019e9cbf42", "node_type": "1", "metadata": {}, "hash": "1455d2bd1b1510825d660ea6f1107d458d65d8956af0f0071a327bf54984b694", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}}, "hash": "53161288260a6df60398810a52679809131728c9dc7eb53f6b505d25d90a8393", "text": "test and push)CI/CD componentartifact storeData Engineering Zone\ncontinuous deployment(build, test and deploy model)modelservingcodeorchestration component\nDO\nML\nORB1MLOps Project Initiation Zone\nversioned feature dataFeature storesystemonline DB(low-latency)\noffline DB(normallatency)\nVersioned Feature FlowFeedback loop flowData Engineering flowModel / Code flow\nDE\nGeneral process flowIT SolutionArchitectSASAdesigns architecture and technologies to be used\n(labeleddata)model training codeAND\nSE{\u2026}SoftwareEngineerSE{\u2026}SE{\u2026}\nSE{\u2026}SE{\u2026}\n(best algorithm selection,", "start_char_idx": 428, "end_char_idx": 994, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37e282cd-edbf-4c07-bc1a-c6019e9cbf42": {"__data__": {"id_": "37e282cd-edbf-4c07-bc1a-c6019e9cbf42", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b373152-101b-4199-9214-e355804544d3", "node_type": "1", "metadata": {}, "hash": "53161288260a6df60398810a52679809131728c9dc7eb53f6b505d25d90a8393", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8d348cd-8002-4444-9eaa-f1345eab4532", "node_type": "1", "metadata": {}, "hash": "084cc7fa12bd9edae87a5c1819f0c0ce8e079cacb20a680a05b81194392f62d1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}}, "hash": "1455d2bd1b1510825d660ea6f1107d458d65d8956af0f0071a327bf54984b694", "text": "parameter & perf. metric logging)\n\n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  scientist (R3) reports the required changes back to the data engineering zone (feedback loop).  (14) Then the preparation and validation of the data coming from the feature store system is required. This task also includes the train and test split dataset creation. (15) The data scientist (R3) estimates the best-performing algorithm and hyperparameters, and the model training is then triggered with the training data (C5).", "start_char_idx": 995, "end_char_idx": 1537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8d348cd-8002-4444-9eaa-f1345eab4532": {"__data__": {"id_": "e8d348cd-8002-4444-9eaa-f1345eab4532", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37e282cd-edbf-4c07-bc1a-c6019e9cbf42", "node_type": "1", "metadata": {}, "hash": "1455d2bd1b1510825d660ea6f1107d458d65d8956af0f0071a327bf54984b694", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13810b79-ed46-4c11-9300-86270dd789af", "node_type": "1", "metadata": {}, "hash": "0fd41b4afe8680c43fd3aaee26df25bbc1d58c80acd3ee486df01abad2c4f254", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}}, "hash": "084cc7fa12bd9edae87a5c1819f0c0ce8e079cacb20a680a05b81194392f62d1", "text": "The software engineer (R5) supports the data scientist (R3) in the creation of well-engineered model training code. (16) Different model parameters are tested and validated interactively during several rounds of model training. Once the performance metrics indicate good results, the iterative training stops. The best-performing model parameters are identified via parameter tuning. The model training task and model validation task are then iteratively repeated; together, these tasks can be called \u201cmodel engineering.\u201d The model engineering aims to identify the best-performing algorithm and hyperparameters for the model.", "start_char_idx": 1538, "end_char_idx": 2163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13810b79-ed46-4c11-9300-86270dd789af": {"__data__": {"id_": "13810b79-ed46-4c11-9300-86270dd789af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8d348cd-8002-4444-9eaa-f1345eab4532", "node_type": "1", "metadata": {}, "hash": "084cc7fa12bd9edae87a5c1819f0c0ce8e079cacb20a680a05b81194392f62d1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "09a2726e-0481-410b-ad8a-2b781b5ace20", "node_type": "1", "metadata": {}, "hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "class_name": "RelatedNodeInfo"}}, "hash": "0fd41b4afe8680c43fd3aaee26df25bbc1d58c80acd3ee486df01abad2c4f254", "text": "(17) The data scientist (R3) exports the model and commits the code to the repository.", "start_char_idx": 2164, "end_char_idx": 2250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee3fb77f-1d14-42f3-9f2c-b843ce1b8aa0": {"__data__": {"id_": "ee3fb77f-1d14-42f3-9f2c-b843ce1b8aa0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c2df3ac-ce65-4b47-8816-9ad2cb5c8d7e", "node_type": "1", "metadata": {}, "hash": "6ef69291895ab7c3bb2a2fde35bbcbb32ec2a5751cdf4ed9a9f85ddc90a2385a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}}, "hash": "b03d90bd722490cf9e7b612189f37dfe92c52a0dded7726b47aa12f3d451725d", "text": "As a foundational requirement, either the DevOps engineer (R6) or the ML engineer (R7) defines the code for the (C2) automated ML workflow pipeline and commits it to the repository. Once either the data scientist (R3) commits a new ML model or the DevOps engineer (R6) and the ML engineer (R7) commits new ML workflow pipeline code to the repository, the CI/CD component (C1) detects the updated code and triggers automatically the CI/CD pipeline carrying out the build, test, and delivery steps.", "start_char_idx": 0, "end_char_idx": 496, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c2df3ac-ce65-4b47-8816-9ad2cb5c8d7e": {"__data__": {"id_": "9c2df3ac-ce65-4b47-8816-9ad2cb5c8d7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee3fb77f-1d14-42f3-9f2c-b843ce1b8aa0", "node_type": "1", "metadata": {}, "hash": "b03d90bd722490cf9e7b612189f37dfe92c52a0dded7726b47aa12f3d451725d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a078ef6b-980e-48ff-a909-46d93ae4a576", "node_type": "1", "metadata": {}, "hash": "7f96dd8db48ef1c98b05700e8df3824e35332e2346b62d3c3f99055d7f51f67a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}}, "hash": "6ef69291895ab7c3bb2a2fde35bbcbb32ec2a5751cdf4ed9a9f85ddc90a2385a", "text": "The build step creates artifacts containing the ML model and tasks of the ML workflow pipeline. The test step validates the ML model and ML workflow pipeline code. The delivery step pushes the versioned artifact(s)\u2014such as images\u2014to the artifact store (e.g., image registry). (D) Automated ML workflow pipeline. The DevOps engineer (R6) and the ML engineer (R7) take care of the management of the automated ML workflow pipeline. They also manage the underlying model training infrastructure in the form of hardware resources and frameworks supporting computation such as Kubernetes (C5).", "start_char_idx": 497, "end_char_idx": 1084, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a078ef6b-980e-48ff-a909-46d93ae4a576": {"__data__": {"id_": "a078ef6b-980e-48ff-a909-46d93ae4a576", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c2df3ac-ce65-4b47-8816-9ad2cb5c8d7e", "node_type": "1", "metadata": {}, "hash": "6ef69291895ab7c3bb2a2fde35bbcbb32ec2a5751cdf4ed9a9f85ddc90a2385a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee55230e-af50-484c-ac4e-33b78e3c093d", "node_type": "1", "metadata": {}, "hash": "0436e27e97c82de24d0d7dadf79b2bc65f022c8380aceab880b4aa8349d15066", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}}, "hash": "7f96dd8db48ef1c98b05700e8df3824e35332e2346b62d3c3f99055d7f51f67a", "text": "The workflow orchestration component (C3) orchestrates the tasks of the automated ML workflow pipeline. For each task, the required artifacts (e.g., images) are pulled from the artifact store (e.g., image registry). Each task can be executed via an isolated environment (e.g., containers). Finally, the workflow orchestration component (C3) gathers metadata for each task in the form of logs, completion time, and so on.", "start_char_idx": 1085, "end_char_idx": 1505, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee55230e-af50-484c-ac4e-33b78e3c093d": {"__data__": {"id_": "ee55230e-af50-484c-ac4e-33b78e3c093d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a078ef6b-980e-48ff-a909-46d93ae4a576", "node_type": "1", "metadata": {}, "hash": "7f96dd8db48ef1c98b05700e8df3824e35332e2346b62d3c3f99055d7f51f67a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a520d63-0b4a-480a-b1d7-906086648372", "node_type": "1", "metadata": {}, "hash": "bd1ac117d70c2e66011863307a5aac815978e8d3a7d30e651c88e198c003090d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}}, "hash": "0436e27e97c82de24d0d7dadf79b2bc65f022c8380aceab880b4aa8349d15066", "text": "Once the automated ML workflow pipeline is triggered, each of the following tasks is managed automatically: (18) automated pulling of the versioned features from the feature store systems (data extraction). Depending on the use case, features are extracted from either the offline or online database (or any kind of data store). (19) Automated data preparation and validation; in addition, the train and test split is defined automatically. (20) Automated final model training on new unseen data (versioned features). The algorithm and hyperparameters are already predefined based on the settings of the previous experimentation stage.", "start_char_idx": 1506, "end_char_idx": 2141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a520d63-0b4a-480a-b1d7-906086648372": {"__data__": {"id_": "9a520d63-0b4a-480a-b1d7-906086648372", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee55230e-af50-484c-ac4e-33b78e3c093d", "node_type": "1", "metadata": {}, "hash": "0436e27e97c82de24d0d7dadf79b2bc65f022c8380aceab880b4aa8349d15066", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c16c3890-e372-4b47-a635-f842b511fff4", "node_type": "1", "metadata": {}, "hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "class_name": "RelatedNodeInfo"}}, "hash": "bd1ac117d70c2e66011863307a5aac815978e8d3a7d30e651c88e198c003090d", "text": "The algorithm and hyperparameters are already predefined based on the settings of the previous experimentation stage. The model is retrained and refined. (21) Automated model evaluation and iterative adjustments of hyperparameters are executed, if required. Once the performance metrics indicate good results, the automated iterative training stops.", "start_char_idx": 2024, "end_char_idx": 2373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f18dfb3-09c8-487a-b978-594b096af9a6": {"__data__": {"id_": "7f18dfb3-09c8-487a-b978-594b096af9a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbc49e2e-35d7-4b98-8097-548fcae36e3a", "node_type": "1", "metadata": {}, "hash": "e5cd8b62ad226effa5aa76124925d34740500579c6ee283f875e6c090fe63e3d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}}, "hash": "6a409d0b658e0f3856e54be2067da2ca7190a541b1a2b31a27c534cbc159d986", "text": "Once the performance metrics indicate good results, the automated iterative training stops. The automated model training task and the automated model validation task can be iteratively repeated until a good result has been achieved. (22) The trained model is then exported and (23) pushed to the model registry (C6), where it is stored e.g., as code or containerized together with its associated configuration and environment files. For all training job iterations, the ML metadata store (C7) records metadata such as parameters to train the model and the resulting performance metrics.", "start_char_idx": 0, "end_char_idx": 586, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbc49e2e-35d7-4b98-8097-548fcae36e3a": {"__data__": {"id_": "fbc49e2e-35d7-4b98-8097-548fcae36e3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f18dfb3-09c8-487a-b978-594b096af9a6", "node_type": "1", "metadata": {}, "hash": "6a409d0b658e0f3856e54be2067da2ca7190a541b1a2b31a27c534cbc159d986", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc9ea388-20a0-40cc-8744-1723d241030a", "node_type": "1", "metadata": {}, "hash": "53d07fb0e38db6ebb43c6ed0267932591e65763a1a8a8b88742fffbfae5e9081", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}}, "hash": "e5cd8b62ad226effa5aa76124925d34740500579c6ee283f875e6c090fe63e3d", "text": "This also includes the tracking and logging of the training job ID, training date and time, duration, and sources of artifacts. Additionally, the model specific metadata called \u201cmodel lineage\u201d combining the lineage of data and code is tracked for each newly registered model. This includes the source and version of the feature data and model training code used to train the model. Also, the model version and status (e.g., staging or production-ready) is recorded. Once the status of a well-performing model is switched from staging to production, it is automatically handed over to the DevOps engineer or ML engineer for model deployment.", "start_char_idx": 587, "end_char_idx": 1227, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc9ea388-20a0-40cc-8744-1723d241030a": {"__data__": {"id_": "cc9ea388-20a0-40cc-8744-1723d241030a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbc49e2e-35d7-4b98-8097-548fcae36e3a", "node_type": "1", "metadata": {}, "hash": "e5cd8b62ad226effa5aa76124925d34740500579c6ee283f875e6c090fe63e3d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a0cdde4-777c-410c-8c7b-8f6e3fe52755", "node_type": "1", "metadata": {}, "hash": "970caff3ba6092f1e7f5c3475582f6311bed060ce96ef27a7d37ba70e0f188da", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}}, "hash": "53d07fb0e38db6ebb43c6ed0267932591e65763a1a8a8b88742fffbfae5e9081", "text": "From there, the (24) CI/CD component (C1) triggers the continuous deployment pipeline. The production-ready ML model and the model serving code are pulled (initially prepared by the software engineer (R5)). The continuous deployment pipeline carries out the build and test step of the ML model and serving code and deploys the model for production serving. The (25) model serving component (C8) makes predictions on new, unseen data coming from the feature store system (C4).", "start_char_idx": 1228, "end_char_idx": 1703, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a0cdde4-777c-410c-8c7b-8f6e3fe52755": {"__data__": {"id_": "8a0cdde4-777c-410c-8c7b-8f6e3fe52755", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc9ea388-20a0-40cc-8744-1723d241030a", "node_type": "1", "metadata": {}, "hash": "53d07fb0e38db6ebb43c6ed0267932591e65763a1a8a8b88742fffbfae5e9081", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4722ed5a-e26f-4db0-a771-b57818810a64", "node_type": "1", "metadata": {}, "hash": "0d192be6d6b395c867bacf0f9ac7c0ad5ff43652429b5869e82feb6bb55ae37d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}}, "hash": "970caff3ba6092f1e7f5c3475582f6311bed060ce96ef27a7d37ba70e0f188da", "text": "This component can be designed by the software engineer (R5) as online inference for real-time predictions or as batch inference for predictions concerning large volumes of input data. For real-time predictions, features must come from the online database (low latency), whereas for batch predictions, features can be served from the offline database (normal latency). Model-serving applications are often configured within a container and prediction requests are handled via a REST API. As a foundational requirement, the ML engineer (R7) manages the model-serving computation infrastructure.", "start_char_idx": 1704, "end_char_idx": 2297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4722ed5a-e26f-4db0-a771-b57818810a64": {"__data__": {"id_": "4722ed5a-e26f-4db0-a771-b57818810a64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a0cdde4-777c-410c-8c7b-8f6e3fe52755", "node_type": "1", "metadata": {}, "hash": "970caff3ba6092f1e7f5c3475582f6311bed060ce96ef27a7d37ba70e0f188da", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "node_type": "1", "metadata": {}, "hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "class_name": "RelatedNodeInfo"}}, "hash": "0d192be6d6b395c867bacf0f9ac7c0ad5ff43652429b5869e82feb6bb55ae37d", "text": "As a foundational requirement, the ML engineer (R7) manages the model-serving computation infrastructure. The (26) monitoring component (C9) observes continuously the model-serving performance and infrastructure in real-time. Once a certain threshold is reached, such as detection of low prediction accuracy, the information is forwarded via the feedback loop.", "start_char_idx": 2192, "end_char_idx": 2552, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ded51de2-58c1-4f23-997c-f2444c442fc5": {"__data__": {"id_": "ded51de2-58c1-4f23-997c-f2444c442fc5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402", "node_type": "1", "metadata": {}, "hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1830f899-bf77-414d-9fc1-601092e0fccd", "node_type": "1", "metadata": {}, "hash": "8de19af12d6b204ac14cd3ba589e7c58df8d6e99e40911e113b3d4cae976548b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402", "node_type": "1", "metadata": {}, "hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "class_name": "RelatedNodeInfo"}}, "hash": "ab56f2e80b266d3fda50edc498bcb4edfb481f7f7ad22818494c8825924bfd9f", "text": "The (27) feedback loop is connected to the monitoring component (C9) and ensures fast and direct feedback allowing for more robust and improved predictions. It enables continuous training, retraining, and improvement. With the support of the feedback loop, information is transferred from the model monitoring component to several upstream receiver points, such as the experimental stage, data engineering zone, and the scheduler (trigger). The feedback to the experimental stage is taken forward by the data scientist for further model improvements. The feedback to the data engineering zone allows for the adjustment of the features prepared for the feature store system.", "start_char_idx": 0, "end_char_idx": 673, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1830f899-bf77-414d-9fc1-601092e0fccd": {"__data__": {"id_": "1830f899-bf77-414d-9fc1-601092e0fccd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402", "node_type": "1", "metadata": {}, "hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ded51de2-58c1-4f23-997c-f2444c442fc5", "node_type": "1", "metadata": {}, "hash": "ab56f2e80b266d3fda50edc498bcb4edfb481f7f7ad22818494c8825924bfd9f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402", "node_type": "1", "metadata": {}, "hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "class_name": "RelatedNodeInfo"}}, "hash": "8de19af12d6b204ac14cd3ba589e7c58df8d6e99e40911e113b3d4cae976548b", "text": "Additionally, the detection of concept drifts as a feedback mechanism can enable (28) continuous training. For instance, once the model-monitoring component (C9) detects a drift \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n in the data [3], the information is forwarded to the scheduler, which then triggers the automated ML workflow pipeline for retraining (continuous training). A change in adequacy of the deployed model can be detected using distribution comparisons to identify drift.", "start_char_idx": 674, "end_char_idx": 1159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2872a7fc-b7f0-43fd-9ace-fe70645eba38": {"__data__": {"id_": "2872a7fc-b7f0-43fd-9ace-fe70645eba38", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6efe5fe6-5200-4bf0-bf2c-b04c22545f9f", "node_type": "1", "metadata": {}, "hash": "aaa6521df88196d46da724dce67b845cbe7596ed0432d45fd1780aaf1acb4069", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}}, "hash": "ab59aa50e3081f2163f34fa70136da93420b2bdd1991b0213515ef9fc74bff32", "text": "A change in adequacy of the deployed model can be detected using distribution comparisons to identify drift. Retraining is not only triggered automatically when a statistical threshold is reached; it can also be triggered when new feature data is available, or it can be scheduled periodically. 6 Conceptualization With the findings at hand, we conceptualize the literature and interviews. It becomes obvious that the term MLOps is positioned at the intersection of machine learning, software engineering, DevOps, and data engineering (see Figure 5 in the Appendix).", "start_char_idx": 0, "end_char_idx": 566, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6efe5fe6-5200-4bf0-bf2c-b04c22545f9f": {"__data__": {"id_": "6efe5fe6-5200-4bf0-bf2c-b04c22545f9f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2872a7fc-b7f0-43fd-9ace-fe70645eba38", "node_type": "1", "metadata": {}, "hash": "ab59aa50e3081f2163f34fa70136da93420b2bdd1991b0213515ef9fc74bff32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2508fa31-feed-4f9c-9e0f-89fbb8810d5d", "node_type": "1", "metadata": {}, "hash": "43b073acc9d58987bacfefbf54caba9838d5df022161453ffa65df2332a60c43", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}}, "hash": "aaa6521df88196d46da724dce67b845cbe7596ed0432d45fd1780aaf1acb4069", "text": "We define MLOps as follows: MLOps (Machine Learning Operations) is a paradigm, including aspects like best practices, sets of concepts, as well as a development culture when it comes to the end-to-end conceptualization, implementation, monitoring, deployment, and scalability of machine learning products. Most of all, it is an engineering practice that leverages three contributing disciplines: machine learning, software engineering (especially DevOps), and data engineering. MLOps is aimed at productionizing machine learning systems by bridging the gap between development (Dev) and operations (Ops).", "start_char_idx": 567, "end_char_idx": 1171, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2508fa31-feed-4f9c-9e0f-89fbb8810d5d": {"__data__": {"id_": "2508fa31-feed-4f9c-9e0f-89fbb8810d5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6efe5fe6-5200-4bf0-bf2c-b04c22545f9f", "node_type": "1", "metadata": {}, "hash": "aaa6521df88196d46da724dce67b845cbe7596ed0432d45fd1780aaf1acb4069", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39ab40c2-69ca-4a43-92e5-6f41d180871b", "node_type": "1", "metadata": {}, "hash": "64512f0f79932ae13001e4e494a15f93f0ede17a546f03848153e590db7b8896", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}}, "hash": "43b073acc9d58987bacfefbf54caba9838d5df022161453ffa65df2332a60c43", "text": "Essentially, MLOps aims to facilitate the creation of machine learning products by leveraging these principles: CI/CD automation, workflow orchestration, reproducibility; versioning of data, model, and code; collaboration; continuous ML training and evaluation; ML metadata tracking and logging; continuous monitoring; and feedback loops. 7 Open Challenges Several challenges for adopting MLOps have been identified after conducting the literature review, tool review, and interview study. These open challenges have been organized into the categories of organizational, ML system, and operational challenges. Organizational challenges.", "start_char_idx": 1172, "end_char_idx": 1808, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39ab40c2-69ca-4a43-92e5-6f41d180871b": {"__data__": {"id_": "39ab40c2-69ca-4a43-92e5-6f41d180871b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2508fa31-feed-4f9c-9e0f-89fbb8810d5d", "node_type": "1", "metadata": {}, "hash": "43b073acc9d58987bacfefbf54caba9838d5df022161453ffa65df2332a60c43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3cc1cf4f-4887-49b0-bc30-d942f3571db2", "node_type": "1", "metadata": {}, "hash": "7e0b75878049af8421abda6c2743c6491655e1c0a573a796d32ce77532e9fa3b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}}, "hash": "64512f0f79932ae13001e4e494a15f93f0ede17a546f03848153e590db7b8896", "text": "Organizational challenges. The mindset and culture of data science practice is a typical challenge in organizational settings [2]. As our insights from literature and interviews show, to successfully develop and run ML products, there needs to be a culture shift away from model-driven machine learning toward a product-oriented discipline [\u03b3]. The recent trend of data-centric AI also addresses this aspect by putting more focus on the data-related aspects taking place prior to the ML model building. Especially the roles associated with these activities should have a product-focused perspective when designing ML products [\u03b3].", "start_char_idx": 1782, "end_char_idx": 2412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cc1cf4f-4887-49b0-bc30-d942f3571db2": {"__data__": {"id_": "3cc1cf4f-4887-49b0-bc30-d942f3571db2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39ab40c2-69ca-4a43-92e5-6f41d180871b", "node_type": "1", "metadata": {}, "hash": "64512f0f79932ae13001e4e494a15f93f0ede17a546f03848153e590db7b8896", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "664de977-ff5e-4562-a767-60f5d1a97172", "node_type": "1", "metadata": {}, "hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "class_name": "RelatedNodeInfo"}}, "hash": "7e0b75878049af8421abda6c2743c6491655e1c0a573a796d32ce77532e9fa3b", "text": "A great number of skills and individual roles are required for MLOps (\u03b2).", "start_char_idx": 2413, "end_char_idx": 2486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89922951-0d4a-49d4-9878-8a3d41466751": {"__data__": {"id_": "89922951-0d4a-49d4-9878-8a3d41466751", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd3b3825-3d0f-4bcf-893c-cfe106989f76", "node_type": "1", "metadata": {}, "hash": "249adb5f35c266972b61010657f8a647cce5e1595cc6b4f9c4973e24bb1e36d1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}}, "hash": "cda1c22a28967b1a5212a7c8667f0ba189b57d868769c130b844276fe500a1eb", "text": "A great number of skills and individual roles are required for MLOps (\u03b2). As our identified sources point out, there is a lack of highly skilled experts for these roles\u2014especially with regard to architects, data engineers, ML engineers, and DevOps engineers [29,41,44] [\u03b1, \u03b5]. This is related to the necessary education of future professionals\u2014as MLOps is typically not part of data science education [7] [\u03b3].", "start_char_idx": 0, "end_char_idx": 409, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd3b3825-3d0f-4bcf-893c-cfe106989f76": {"__data__": {"id_": "bd3b3825-3d0f-4bcf-893c-cfe106989f76", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89922951-0d4a-49d4-9878-8a3d41466751", "node_type": "1", "metadata": {}, "hash": "cda1c22a28967b1a5212a7c8667f0ba189b57d868769c130b844276fe500a1eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e90a575a-261d-49e7-ab32-6bc4d8c8da9f", "node_type": "1", "metadata": {}, "hash": "4ea560f8b1cc1b0e1028a85db49bf6310e30c0cade1fe8f3f70e8606f6e3c1d0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}}, "hash": "249adb5f35c266972b61010657f8a647cce5e1595cc6b4f9c4973e24bb1e36d1", "text": "Posoldova (2020) [35] further stresses this aspect by remarking that students should not only learn about model creation, but must also learn about technologies and components necessary to build functional ML products.  Data scientists alone cannot achieve the goals of MLOps. A multi-disciplinary team is required [14], thus MLOps needs to be a group process [\u03b1]. This is often hindered because teams work in silos rather than in cooperative setups [\u03b1]. Additionally, different knowledge levels and specialized terminologies make communication difficult.", "start_char_idx": 410, "end_char_idx": 965, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e90a575a-261d-49e7-ab32-6bc4d8c8da9f": {"__data__": {"id_": "e90a575a-261d-49e7-ab32-6bc4d8c8da9f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd3b3825-3d0f-4bcf-893c-cfe106989f76", "node_type": "1", "metadata": {}, "hash": "249adb5f35c266972b61010657f8a647cce5e1595cc6b4f9c4973e24bb1e36d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0959a0e6-e2da-4e24-be50-6be1d624a89c", "node_type": "1", "metadata": {}, "hash": "060790c596f43d3aeb5af92ddf937dfecda2513d7409610ab4cbf11161132612", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}}, "hash": "4ea560f8b1cc1b0e1028a85db49bf6310e30c0cade1fe8f3f70e8606f6e3c1d0", "text": "Additionally, different knowledge levels and specialized terminologies make communication difficult. To lay the foundations for more fruitful setups, the respective decision-makers need to be convinced that an increased MLOps maturity and a product-focused mindset will yield clear business improvements [\u03b3]. ML system challenges. A major challenge with regard to MLOps systems is designing for fluctuating demand, especially in relation to the process of ML training [7].", "start_char_idx": 865, "end_char_idx": 1337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0959a0e6-e2da-4e24-be50-6be1d624a89c": {"__data__": {"id_": "0959a0e6-e2da-4e24-be50-6be1d624a89c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e90a575a-261d-49e7-ab32-6bc4d8c8da9f", "node_type": "1", "metadata": {}, "hash": "4ea560f8b1cc1b0e1028a85db49bf6310e30c0cade1fe8f3f70e8606f6e3c1d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46ca73b5-0fc1-4ecd-8104-4106acfdb6ef", "node_type": "1", "metadata": {}, "hash": "64e8d8b524d2e4de69f3eba8eb019aa36bf2828379569b13fb64f44e79735d89", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}}, "hash": "060790c596f43d3aeb5af92ddf937dfecda2513d7409610ab4cbf11161132612", "text": "This stems from potentially voluminous and varying data [10], which makes it difficult to precisely estimate the necessary infrastructure resources (CPU, RAM, and GPU) and requires a high level of flexibility in terms of scalability of the infrastructure [7,26] [\u03b4]. Operational challenges. In productive settings, it is challenging to operate ML manually due to different stacks of software and hardware components and their interplay. Therefore, robust automation is required [7,17]. Also, a constant incoming stream of new data forces retraining capabilities.", "start_char_idx": 1338, "end_char_idx": 1900, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46ca73b5-0fc1-4ecd-8104-4106acfdb6ef": {"__data__": {"id_": "46ca73b5-0fc1-4ecd-8104-4106acfdb6ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0959a0e6-e2da-4e24-be50-6be1d624a89c", "node_type": "1", "metadata": {}, "hash": "060790c596f43d3aeb5af92ddf937dfecda2513d7409610ab4cbf11161132612", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9846b04-65b3-4668-b41a-07d864932ed2", "node_type": "1", "metadata": {}, "hash": "d28958b1d9e8a63836bc072888bfc685d419e9b8e128ac0ec6b4ed0a1ab76825", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}}, "hash": "64e8d8b524d2e4de69f3eba8eb019aa36bf2828379569b13fb64f44e79735d89", "text": "Also, a constant incoming stream of new data forces retraining capabilities. This is a repetitive task which, again, requires a high level of automation [18] [\u03b8]. These repetitive tasks yield a large number of artifacts that require a strong governance [24,29,40] as well as versioning of data, model, and code to ensure robustness and reproducibility [11,27,29]. Lastly, it is challenging to resolve a potential support request (e.g., by finding the root cause), as many parties and components are involved.", "start_char_idx": 1824, "end_char_idx": 2332, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9846b04-65b3-4668-b41a-07d864932ed2": {"__data__": {"id_": "d9846b04-65b3-4668-b41a-07d864932ed2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46ca73b5-0fc1-4ecd-8104-4106acfdb6ef", "node_type": "1", "metadata": {}, "hash": "64e8d8b524d2e4de69f3eba8eb019aa36bf2828379569b13fb64f44e79735d89", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46", "node_type": "1", "metadata": {}, "hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "class_name": "RelatedNodeInfo"}}, "hash": "d28958b1d9e8a63836bc072888bfc685d419e9b8e128ac0ec6b4ed0a1ab76825", "text": "Failures can be a combination of ML infrastructure and software [26].", "start_char_idx": 2333, "end_char_idx": 2402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d141017c-d986-45ad-9cfe-3835daeed41c": {"__data__": {"id_": "d141017c-d986-45ad-9cfe-3835daeed41c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8620ce5a-a9fe-499f-bf4d-5a767ec296a3", "node_type": "1", "metadata": {}, "hash": "822b21cd025a648378e2a80f5333d5269146bba6a32b0c128f03a03e68f04499", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}}, "hash": "89fa3eea6dc9c51f1694018609b83acbda6732dd643478f90509a687d5317bd4", "text": "Failures can be a combination of ML infrastructure and software [26]. 8 Conclusion With the increase of data availability and analytical capabilities, coupled with the constant pressure to innovate, more machine learning products than ever are being developed. However, only a small number of these proofs of concept progress into deployment and production. Furthermore, the academic space has focused intensively on machine learning model building and benchmarking, but too little on operating complex machine learning systems in real-world scenarios. In the real world, we observe data scientists still managing ML workflows manually to a great extent.", "start_char_idx": 0, "end_char_idx": 654, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8620ce5a-a9fe-499f-bf4d-5a767ec296a3": {"__data__": {"id_": "8620ce5a-a9fe-499f-bf4d-5a767ec296a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d141017c-d986-45ad-9cfe-3835daeed41c", "node_type": "1", "metadata": {}, "hash": "89fa3eea6dc9c51f1694018609b83acbda6732dd643478f90509a687d5317bd4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8f8943c-d4bb-4480-9bbf-8ddd6832935c", "node_type": "1", "metadata": {}, "hash": "f82a7517124dd217d1c8d3adcb7824cf6f5b23be51d41b5d9b94491febe6e723", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}}, "hash": "822b21cd025a648378e2a80f5333d5269146bba6a32b0c128f03a03e68f04499", "text": "In the real world, we observe data scientists still managing ML workflows manually to a great extent. The paradigm of Machine Learning Operations (MLOps) addresses these challenges. In this work, we shed more light on MLOps. By conducting a mixed-method study analyzing existing literature and tools, as well as interviewing eight experts from the field, we uncover four main aspects of MLOps: its principles, components, roles, and architecture. From these aspects, we infer a holistic definition.", "start_char_idx": 553, "end_char_idx": 1051, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f8f8943c-d4bb-4480-9bbf-8ddd6832935c": {"__data__": {"id_": "f8f8943c-d4bb-4480-9bbf-8ddd6832935c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8620ce5a-a9fe-499f-bf4d-5a767ec296a3", "node_type": "1", "metadata": {}, "hash": "822b21cd025a648378e2a80f5333d5269146bba6a32b0c128f03a03e68f04499", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b06359d-3771-435b-a372-59189b4aba2f", "node_type": "1", "metadata": {}, "hash": "05208d8aecd255e7807239ba4ccf3868fc9c6903822cfa59732a7619f7389856", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}}, "hash": "f82a7517124dd217d1c8d3adcb7824cf6f5b23be51d41b5d9b94491febe6e723", "text": "From these aspects, we infer a holistic definition. The results support a common understanding of the term MLOps and its associated concepts, and will hopefully assist researchers and professionals in setting up successful ML projects in the future.   \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  REFERENCES  [1] Muratahan Aykol, Patrick Herring, and Abraham Anapolsky. 2020. Machine learning for continuous innovation in battery technologies. Nat. Rev. Mater.", "start_char_idx": 1000, "end_char_idx": 1498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b06359d-3771-435b-a372-59189b4aba2f": {"__data__": {"id_": "8b06359d-3771-435b-a372-59189b4aba2f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8f8943c-d4bb-4480-9bbf-8ddd6832935c", "node_type": "1", "metadata": {}, "hash": "f82a7517124dd217d1c8d3adcb7824cf6f5b23be51d41b5d9b94491febe6e723", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cdf2fb2-48c0-4e93-8e2e-20750f82d678", "node_type": "1", "metadata": {}, "hash": "103cec00b0308248e8a6a938c956122964e23c296b925572f6f90d90956211cd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}}, "hash": "05208d8aecd255e7807239ba4ccf3868fc9c6903822cfa59732a7619f7389856", "text": "Machine learning for continuous innovation in battery technologies. Nat. Rev. Mater. 5, 10 (2020), 725\u2013727. [2] Lucas Baier, Fabian J\u00f6hren, and Stefan Seebacher. 2020. Challenges in the deployment and operation of machine learning in practice. 27th Eur. Conf. Inf. Syst. - Inf. Syst. a Shar. Soc. ECIS 2019 (2020), 0\u201315.", "start_char_idx": 1414, "end_char_idx": 1734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6cdf2fb2-48c0-4e93-8e2e-20750f82d678": {"__data__": {"id_": "6cdf2fb2-48c0-4e93-8e2e-20750f82d678", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b06359d-3771-435b-a372-59189b4aba2f", "node_type": "1", "metadata": {}, "hash": "05208d8aecd255e7807239ba4ccf3868fc9c6903822cfa59732a7619f7389856", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "node_type": "1", "metadata": {}, "hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "class_name": "RelatedNodeInfo"}}, "hash": "103cec00b0308248e8a6a938c956122964e23c296b925572f6f90d90956211cd", "text": "Soc. ECIS 2019 (2020), 0\u201315. [3] Lucas Baier, Niklas K\u00fchl, and Gerhard Satzger. 2019. How to Cope with Change? Preserving Validity of Predictive Services over Time. In Hawaii International Conference on System Sciences (HICSS-52), Grand Wailea, Maui, Hawaii, USA. [4] Amitabha Banerjee, Chien Chia Chen, Chien Chun Hung, Xiaobo Huang, Yifan Wang, and Razvan Chevesaran.", "start_char_idx": 1706, "end_char_idx": 2075, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8006a70-a8a6-406c-bc72-fc569ef4b07e": {"__data__": {"id_": "e8006a70-a8a6-406c-bc72-fc569ef4b07e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "443bcf4e-cd91-42ee-9d3e-da5317cdf5c4", "node_type": "1", "metadata": {}, "hash": "15885c9a1adb1367ea7e08ba43553ad1423a4fb6d6fd8a465d397e5c7221fd47", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}}, "hash": "9b92c93d963b4f6579a0c390716c3d98bbafc20431edd09dd514d6aef863813e", "text": "2020. Challenges and experiences with MLOps for performance diagnostics in hybrid-cloud enterprise software deployments. OpML 2020 - 2020 USENIX Conf. Oper. Mach. Learn. (2020), 7\u20139.", "start_char_idx": 0, "end_char_idx": 182, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "443bcf4e-cd91-42ee-9d3e-da5317cdf5c4": {"__data__": {"id_": "443bcf4e-cd91-42ee-9d3e-da5317cdf5c4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8006a70-a8a6-406c-bc72-fc569ef4b07e", "node_type": "1", "metadata": {}, "hash": "9b92c93d963b4f6579a0c390716c3d98bbafc20431edd09dd514d6aef863813e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f34f248-9736-45ab-aa35-8c61a58027a5", "node_type": "1", "metadata": {}, "hash": "a579e157486eeb50f11a72712b7ce9a0ac36caa7acde47830a38457454223b54", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}}, "hash": "15885c9a1adb1367ea7e08ba43553ad1423a4fb6d6fd8a465d397e5c7221fd47", "text": "Oper. Mach. Learn. (2020), 7\u20139. [5] Kent Beck, Mike Beedle, Arie van Bennekum, Alistair Cockburn, Ward Cunningham, Martin Fowler, James Grenning, Jim Highsmith, Andrew Hunt, Ron Jeffries, Jon Kern, Brian Marick, Robert C. Martin, Steve Mellor, Ken Schwaber, Jeff Sutherland, and Dave Thomas. 2001. Manifesto for Agile Software Development. (2001).", "start_char_idx": 151, "end_char_idx": 498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f34f248-9736-45ab-aa35-8c61a58027a5": {"__data__": {"id_": "6f34f248-9736-45ab-aa35-8c61a58027a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "443bcf4e-cd91-42ee-9d3e-da5317cdf5c4", "node_type": "1", "metadata": {}, "hash": "15885c9a1adb1367ea7e08ba43553ad1423a4fb6d6fd8a465d397e5c7221fd47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fd64ac2-9f95-4894-873c-946e502f7445", "node_type": "1", "metadata": {}, "hash": "5ede7d8a424bfc9cce02b4b02cabb8641dede34a3eee7a4239e9ab0cedfcdab8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}}, "hash": "a579e157486eeb50f11a72712b7ce9a0ac36caa7acde47830a38457454223b54", "text": "2001. Manifesto for Agile Software Development. (2001). [6] Benjamin Benni, Blay Fornarino Mireille, Mosser Sebastien, Precisio Frederic, and Jungbluth Gunther. 2019. When DevOps meets meta-learning: A portfolio to rule them all. Proc. - 2019 ACM/IEEE 22nd Int. Conf. Model Driven Eng. Lang. Syst. Companion, Model. 2019 (2019), 605\u2013612.", "start_char_idx": 443, "end_char_idx": 780, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8fd64ac2-9f95-4894-873c-946e502f7445": {"__data__": {"id_": "8fd64ac2-9f95-4894-873c-946e502f7445", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f34f248-9736-45ab-aa35-8c61a58027a5", "node_type": "1", "metadata": {}, "hash": "a579e157486eeb50f11a72712b7ce9a0ac36caa7acde47830a38457454223b54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb31d6e6-f4ed-4f46-82e3-67516f40b86c", "node_type": "1", "metadata": {}, "hash": "b976de70d01e40ad55132753619b59709679388588833112c9e382a5d970dd17", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}}, "hash": "5ede7d8a424bfc9cce02b4b02cabb8641dede34a3eee7a4239e9ab0cedfcdab8", "text": "Companion, Model. 2019 (2019), 605\u2013612. DOI:https://doi.org/10.1109/MODELS-C.2019.00092 [7] Lucas Cardoso Silva, Fernando Rezende Zagatti, Bruno Silva Sette, Lucas Nildaimon Dos Santos Silva, Daniel Lucredio, Diego Furtado Silva, and Helena De Medeiros Caseli. 2020. Benchmarking Machine Learning Solutions in Production. Proc. - 19th IEEE Int. Conf. Mach. Learn. Appl.", "start_char_idx": 741, "end_char_idx": 1110, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb31d6e6-f4ed-4f46-82e3-67516f40b86c": {"__data__": {"id_": "bb31d6e6-f4ed-4f46-82e3-67516f40b86c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fd64ac2-9f95-4894-873c-946e502f7445", "node_type": "1", "metadata": {}, "hash": "5ede7d8a424bfc9cce02b4b02cabb8641dede34a3eee7a4239e9ab0cedfcdab8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21459c43-c8f1-49f9-ad53-a23a01658233", "node_type": "1", "metadata": {}, "hash": "155267e60949e9480125e28223e6220885a8dbc329c08a43435042b8216e39a2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}}, "hash": "b976de70d01e40ad55132753619b59709679388588833112c9e382a5d970dd17", "text": "Conf. Mach. Learn. Appl. ICMLA 2020 (2020), 626\u2013633. DOI:https://doi.org/10.1109/ICMLA51294.2020.00104 [8] Juliet M. Corbin and Anselm Strauss. 1990. Grounded theory research: Procedures, canons, and evaluative criteria. Qual. Sociol. 13, 1 (1990), 3\u201321.", "start_char_idx": 1086, "end_char_idx": 1340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21459c43-c8f1-49f9-ad53-a23a01658233": {"__data__": {"id_": "21459c43-c8f1-49f9-ad53-a23a01658233", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb31d6e6-f4ed-4f46-82e3-67516f40b86c", "node_type": "1", "metadata": {}, "hash": "b976de70d01e40ad55132753619b59709679388588833112c9e382a5d970dd17", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "node_type": "1", "metadata": {}, "hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "class_name": "RelatedNodeInfo"}}, "hash": "155267e60949e9480125e28223e6220885a8dbc329c08a43435042b8216e39a2", "text": "Sociol. 13, 1 (1990), 3\u201321. DOI:https://doi.org/10.1007/BF00988593 [9] Patrick Debois. 2009. Patrick Debois - devopsdays Ghent.", "start_char_idx": 1313, "end_char_idx": 1440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dff98556-7886-4d53-bdcd-28c669565d6f": {"__data__": {"id_": "dff98556-7886-4d53-bdcd-28c669565d6f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6182115c-f574-4e4a-a6a3-e3380a7b3e7e", "node_type": "1", "metadata": {}, "hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6182115c-f574-4e4a-a6a3-e3380a7b3e7e", "node_type": "1", "metadata": {}, "hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "class_name": "RelatedNodeInfo"}}, "hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "text": "2009. Patrick Debois - devopsdays Ghent. Retrieved March 25, 2021 from https://devopsdays.org/events/2019-ghent/speakers/patrick-debois/ [10] Behrouz Derakhshan, Alireza Rezaei Mahdiraji, Tilmann Rabl, and Volker Markl. 2019. Continuous deployment of machine learning pipelines. Adv.", "start_char_idx": 0, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54393072-7c19-4be3-9772-c8c379cdd4d4": {"__data__": {"id_": "54393072-7c19-4be3-9772-c8c379cdd4d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a716c2ee-d2d3-4cd1-994a-18b41d64d398", "node_type": "1", "metadata": {}, "hash": "66849e32e24363ee4b3f50b8b25ed7910538543fd10bdd52356c006d3eece548", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}}, "hash": "dbc7dc7216c2b1c64e2cd95b57d95e99e81b9352b646c17fb3258919f16a1d8c", "text": "2019. Continuous deployment of machine learning pipelines. Adv. Database Technol. - EDBT 2019-March, (2019), 397\u2013408. DOI:https://doi.org/10.5441/002/edbt.2019.35 [11] Grigori Fursin. 2021. Collective knowledge: organizing research projects as a database of reusable components and portable workflows with common interfaces. Philos. Trans. A. Math. Phys. Eng. Sci.", "start_char_idx": 0, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a716c2ee-d2d3-4cd1-994a-18b41d64d398": {"__data__": {"id_": "a716c2ee-d2d3-4cd1-994a-18b41d64d398", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54393072-7c19-4be3-9772-c8c379cdd4d4", "node_type": "1", "metadata": {}, "hash": "dbc7dc7216c2b1c64e2cd95b57d95e99e81b9352b646c17fb3258919f16a1d8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc3ba930-c2fa-4ba1-8465-93832129cc79", "node_type": "1", "metadata": {}, "hash": "052ce35ec0cd922559de88d712e2d61b1b65e7258c8e3dcb22e874cdaa67801c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}}, "hash": "66849e32e24363ee4b3f50b8b25ed7910538543fd10bdd52356c006d3eece548", "text": "Trans. A. Math. Phys. Eng. Sci. 379, 2197 (2021), 20200211. DOI:https://doi.org/10.1098/rsta.2020.0211 [12] Barney Glaser and Anselm Strauss. 1967. The discovery of grounded theory: strategies for qualitative research.  [13] Mahendra Kumar Gourisaria, Rakshit Agrawal, G M Harshvardhan, Manjusha Pandey, and Siddharth Swarup Rautaray. 2021.", "start_char_idx": 333, "end_char_idx": 673, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc3ba930-c2fa-4ba1-8465-93832129cc79": {"__data__": {"id_": "dc3ba930-c2fa-4ba1-8465-93832129cc79", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a716c2ee-d2d3-4cd1-994a-18b41d64d398", "node_type": "1", "metadata": {}, "hash": "66849e32e24363ee4b3f50b8b25ed7910538543fd10bdd52356c006d3eece548", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ab420e9-d5ef-4d97-94c0-e7356e9927d3", "node_type": "1", "metadata": {}, "hash": "4a72374f249ad85a2e0190cdb2f3a16a7b9f9eae7b263f0cd7ab1626cf9eeda1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}}, "hash": "052ce35ec0cd922559de88d712e2d61b1b65e7258c8e3dcb22e874cdaa67801c", "text": "2021. Application of Machine Learning in Industry 4.0. In Machine Learning: Theoretical Foundations and Practical Applications. Springer, 57\u201387. [14] Akshita Goyal. 2020. MLOps - Machine Learning Operations. Int. J. Inf. Technol. Insights Transform. (2020).", "start_char_idx": 668, "end_char_idx": 925, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ab420e9-d5ef-4d97-94c0-e7356e9927d3": {"__data__": {"id_": "4ab420e9-d5ef-4d97-94c0-e7356e9927d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc3ba930-c2fa-4ba1-8465-93832129cc79", "node_type": "1", "metadata": {}, "hash": "052ce35ec0cd922559de88d712e2d61b1b65e7258c8e3dcb22e874cdaa67801c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6056e648-c18a-4623-b3db-f5e736cf2637", "node_type": "1", "metadata": {}, "hash": "d47ff4d1773566a06efca50e18d6602a2c03b9793f864f973aace242a7824a30", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}}, "hash": "4a72374f249ad85a2e0190cdb2f3a16a7b9f9eae7b263f0cd7ab1626cf9eeda1", "text": "J. Inf. Technol. Insights Transform. (2020). Retrieved April 15, 2021 from http://technology.eurekajournals.com/index.php/IJITIT/article/view/655/769 [15] Tuomas Granlund, Aleksi Kopponen, Vlad Stirbu, Lalli Myllyaho, and Tommi Mikkonen. 2021. MLOps Challenges in Multi-Organization Setup: Experiences from Two Real-World Cases. (2021).", "start_char_idx": 881, "end_char_idx": 1217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6056e648-c18a-4623-b3db-f5e736cf2637": {"__data__": {"id_": "6056e648-c18a-4623-b3db-f5e736cf2637", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ab420e9-d5ef-4d97-94c0-e7356e9927d3", "node_type": "1", "metadata": {}, "hash": "4a72374f249ad85a2e0190cdb2f3a16a7b9f9eae7b263f0cd7ab1626cf9eeda1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "node_type": "1", "metadata": {}, "hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "class_name": "RelatedNodeInfo"}}, "hash": "d47ff4d1773566a06efca50e18d6602a2c03b9793f864f973aace242a7824a30", "text": "(2021). Retrieved from http://arxiv.org/abs/2103.08937 [16] Willem Jan van den Heuvel and Damian A. Tamburri. 2020. Model-driven ml-ops for intelligent enterprise applications: vision, approaches and challenges. Springer International Publishing.", "start_char_idx": 1210, "end_char_idx": 1456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ac86fbe-a417-47c9-9e2e-6c14fbafbed4": {"__data__": {"id_": "1ac86fbe-a417-47c9-9e2e-6c14fbafbed4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8427e9f8-72a5-4e2d-895d-3125dff55c68", "node_type": "1", "metadata": {}, "hash": "4cbd222b3822275ab19d5f6b0cc0bf79e948dac28bae89bc4bbf890cff52a328", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}}, "hash": "6356f0e0f065498ae44ba6da0fbd854350908698f27ccb121c3dbce30f384f83", "text": "Springer International Publishing. DOI:https://doi.org/10.1007/978-3-030-52306-0_11 [17] Ioannis Karamitsos, Saeed Albarhami, and Charalampos Apostolopoulos. 2020. Applying devops practices of continuous automation for machine learning. Inf. 11, 7 (2020), 1\u201315.", "start_char_idx": 0, "end_char_idx": 261, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8427e9f8-72a5-4e2d-895d-3125dff55c68": {"__data__": {"id_": "8427e9f8-72a5-4e2d-895d-3125dff55c68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ac86fbe-a417-47c9-9e2e-6c14fbafbed4", "node_type": "1", "metadata": {}, "hash": "6356f0e0f065498ae44ba6da0fbd854350908698f27ccb121c3dbce30f384f83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c266ed46-1c9c-4292-8658-65455e726ff5", "node_type": "1", "metadata": {}, "hash": "9f157352e5c85d5360f642e2d62f8420be3616af069cb43fb2599921bc3a98e7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}}, "hash": "4cbd222b3822275ab19d5f6b0cc0bf79e948dac28bae89bc4bbf890cff52a328", "text": "Inf. 11, 7 (2020), 1\u201315. DOI:https://doi.org/10.3390/info11070363 [18] Bojan Karla\u0161, Matteo Interlandi, Cedric Renggli, Wentao Wu, Ce Zhang, Deepak Mukunthu Iyappan Babu, Jordan Edwards, Chris Lauren, Andy Xu, and Markus Weimer. 2020. Building Continuous Integration Services for Machine Learning. Proc. ACM SIGKDD Int. Conf. Knowl. Discov. Data Min.", "start_char_idx": 237, "end_char_idx": 587, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c266ed46-1c9c-4292-8658-65455e726ff5": {"__data__": {"id_": "c266ed46-1c9c-4292-8658-65455e726ff5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8427e9f8-72a5-4e2d-895d-3125dff55c68", "node_type": "1", "metadata": {}, "hash": "4cbd222b3822275ab19d5f6b0cc0bf79e948dac28bae89bc4bbf890cff52a328", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a315078-9dca-4f36-b5a1-562e08e347a9", "node_type": "1", "metadata": {}, "hash": "ae13ba61a574ecaf2003ff72ef852ff38e5ce7b184e743d59862031d90d1a525", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}}, "hash": "9f157352e5c85d5360f642e2d62f8420be3616af069cb43fb2599921bc3a98e7", "text": "Conf. Knowl. Discov. Data Min. (2020), 2407\u20132415. DOI:https://doi.org/10.1145/3394486.3403290 [19] Rupesh Raj Karn, Prabhakar Kudva, and Ibrahim Abe M. Elfadel. 2019. Dynamic autoselection and autotuning of machine learning models for cloud network analytics. IEEE Trans. Parallel Distrib. Syst. 30, 5 (2019), 1052\u20131064.", "start_char_idx": 557, "end_char_idx": 877, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a315078-9dca-4f36-b5a1-562e08e347a9": {"__data__": {"id_": "0a315078-9dca-4f36-b5a1-562e08e347a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c266ed46-1c9c-4292-8658-65455e726ff5", "node_type": "1", "metadata": {}, "hash": "9f157352e5c85d5360f642e2d62f8420be3616af069cb43fb2599921bc3a98e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b57869ce-b7c3-4a64-ab43-fb4019e9e285", "node_type": "1", "metadata": {}, "hash": "2f6c3ec66bba60d7fd07f1c2611060d5ce6b79632c13ba7e197cb676a7796986", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}}, "hash": "ae13ba61a574ecaf2003ff72ef852ff38e5ce7b184e743d59862031d90d1a525", "text": "Syst. 30, 5 (2019), 1052\u20131064. DOI:https://doi.org/10.1109/TPDS.2018.2876844 [20] Barbara Kitchenham, O. Pearl Brereton, David Budgen, Mark Turner, John Bailey, and Stephen Linkman. 2009. Systematic literature reviews in software engineering - A systematic literature review. Inf. Softw. Technol. 51, 1 (2009), 7\u201315.", "start_char_idx": 847, "end_char_idx": 1163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b57869ce-b7c3-4a64-ab43-fb4019e9e285": {"__data__": {"id_": "b57869ce-b7c3-4a64-ab43-fb4019e9e285", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a315078-9dca-4f36-b5a1-562e08e347a9", "node_type": "1", "metadata": {}, "hash": "ae13ba61a574ecaf2003ff72ef852ff38e5ce7b184e743d59862031d90d1a525", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "node_type": "1", "metadata": {}, "hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "class_name": "RelatedNodeInfo"}}, "hash": "2f6c3ec66bba60d7fd07f1c2611060d5ce6b79632c13ba7e197cb676a7796986", "text": "Technol. 51, 1 (2009), 7\u201315. DOI:https://doi.org/10.1016/j.infsof.2008.09.009 [21] Rafal Kocielnik, Saleema Amershi, and Paul N Bennett. 2019. Will you accept an imperfect ai? exploring designs for adjusting end-user expectations of ai systems. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, 1\u201314.", "start_char_idx": 1135, "end_char_idx": 1466, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13436a1c-f61d-40aa-a204-7dcdf965ff4e": {"__data__": {"id_": "13436a1c-f61d-40aa-a204-7dcdf965ff4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a360f7d-df7a-499b-976b-5de55b38e5e9", "node_type": "1", "metadata": {}, "hash": "d522bde412e7b4a6eae0dade03f817b0ac8aec5ea958cb2dd778afaa1a151d97", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}}, "hash": "47a9288454fb9344caa12c09e5d31f3d72405922f6c78274a78437f95a004ce2", "text": "[22] Ana De Las Heras, Amalia Luque-Sendra, and Francisco Zamora-Polo. 2020. Machine learning technologies for sustainability in smart cities in the post-covid era. Sustainability 12, 22 (2020), 9320. [23] Leonardo Leite, Carla Rocha, Fabio Kon, Dejan Milojicic, and Paulo Meirelles. 2019. A survey of DevOps concepts and challenges. ACM Comput. Surv. 52, 6 (2019).", "start_char_idx": 0, "end_char_idx": 365, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a360f7d-df7a-499b-976b-5de55b38e5e9": {"__data__": {"id_": "2a360f7d-df7a-499b-976b-5de55b38e5e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13436a1c-f61d-40aa-a204-7dcdf965ff4e", "node_type": "1", "metadata": {}, "hash": "47a9288454fb9344caa12c09e5d31f3d72405922f6c78274a78437f95a004ce2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "640aa4f0-1e90-4d45-ac32-8ec5f52eb41d", "node_type": "1", "metadata": {}, "hash": "513190462a59ea8e169a15153746b1e70a3c525516eab64926f3fbfbe07a5a6a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}}, "hash": "d522bde412e7b4a6eae0dade03f817b0ac8aec5ea958cb2dd778afaa1a151d97", "text": "ACM Comput. Surv. 52, 6 (2019). DOI:https://doi.org/10.1145/3359981 [24] Yan Liu, Zhijing Ling, Boyu Huo, Boqian Wang, Tianen Chen, and Esma Mouine. 2020. Building A Platform for Machine Learning Operations from Open Source Frameworks. IFAC-PapersOnLine 53, 5 (2020), 704\u2013709. DOI:https://doi.org/10.1016/j.ifacol.2021.04.", "start_char_idx": 334, "end_char_idx": 656, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "640aa4f0-1e90-4d45-ac32-8ec5f52eb41d": {"__data__": {"id_": "640aa4f0-1e90-4d45-ac32-8ec5f52eb41d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a360f7d-df7a-499b-976b-5de55b38e5e9", "node_type": "1", "metadata": {}, "hash": "d522bde412e7b4a6eae0dade03f817b0ac8aec5ea958cb2dd778afaa1a151d97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2a81f52-9b2d-40ad-89c4-6f0bb9277ffb", "node_type": "1", "metadata": {}, "hash": "a1c9310bec7a74c2f4c30d901266b9753ffe944ea6d85ebd4c300094c34468e8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}}, "hash": "513190462a59ea8e169a15153746b1e70a3c525516eab64926f3fbfbe07a5a6a", "text": "org/10.1016/j.ifacol.2021.04.161 [25] Alvaro Lopez Garcia, Viet Tran, Andy S. Alic, Miguel Caballer, Isabel Campos Plasencia, Alessandro Costantini, Stefan Dlugolinsky, Doina Cristina Duma, Giacinto Donvito, Jorge Gomes, Ignacio Heredia Cacha, Jesus Marco De Lucas, Keiichi Ito, Valentin Y. Kozlov, Giang Nguyen, Pablo Orviz Fernandez, Zdenek Sustr, Pawel Wolniewicz, Marica Antonacci,", "start_char_idx": 627, "end_char_idx": 1012, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2a81f52-9b2d-40ad-89c4-6f0bb9277ffb": {"__data__": {"id_": "c2a81f52-9b2d-40ad-89c4-6f0bb9277ffb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "640aa4f0-1e90-4d45-ac32-8ec5f52eb41d", "node_type": "1", "metadata": {}, "hash": "513190462a59ea8e169a15153746b1e70a3c525516eab64926f3fbfbe07a5a6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40138fea-aa69-44bc-836d-a2817608f3b0", "node_type": "1", "metadata": {}, "hash": "b8957c31a9ed75105506a929cacda7fc53e2280c7e6da68ce1643359215bb5e1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}}, "hash": "a1c9310bec7a74c2f4c30d901266b9753ffe944ea6d85ebd4c300094c34468e8", "text": "Zdenek Sustr, Pawel Wolniewicz, Marica Antonacci, Wolfgang Zu Castell, Mario David, Marcus Hardt, Lara Lloret Iglesias, Germen Molto, and Marcin Plociennik. 2020. A cloud-based framework for machine learning workloads and applications. IEEE Access 8, (2020), 18681\u201318692. DOI:https://doi.org/10.1109/ACCESS.2020.2964386 [26] Lwakatare. 2020.", "start_char_idx": 963, "end_char_idx": 1304, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40138fea-aa69-44bc-836d-a2817608f3b0": {"__data__": {"id_": "40138fea-aa69-44bc-836d-a2817608f3b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2a81f52-9b2d-40ad-89c4-6f0bb9277ffb", "node_type": "1", "metadata": {}, "hash": "a1c9310bec7a74c2f4c30d901266b9753ffe944ea6d85ebd4c300094c34468e8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "154e45bd-a51d-42d0-807d-deee29626d3b", "node_type": "1", "metadata": {}, "hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "class_name": "RelatedNodeInfo"}}, "hash": "b8957c31a9ed75105506a929cacda7fc53e2280c7e6da68ce1643359215bb5e1", "text": "2020. From a Data Science Driven Process to a Continuous Delivery Process for Machine Learning Systems. Lect. Notes Comput. Sci. (including Subser. Lect. Notes Artif. Intell. Lect.", "start_char_idx": 1299, "end_char_idx": 1479, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffde2f1a-0aa1-4224-97cc-8ffe3f990812": {"__data__": {"id_": "ffde2f1a-0aa1-4224-97cc-8ffe3f990812", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "355fe1e7-f963-4b57-a43e-269d129451a9", "node_type": "1", "metadata": {}, "hash": "fef64186baff411253dbb479ec54f88af1efaa18afb83d5d6371ff2f7a87d772", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}}, "hash": "731bc6f68d29c5f0a8411f76ed916a0ced84d6ad088803637d5bf94425b019ee", "text": "Lect. Notes Artif. Intell. Lect. Notes Bioinformatics) 12562 LNCS, (2020), 185\u2013201. DOI:https://doi.org/10.1007/978-3-030-64148-1_12 [27] Lwakatare. 2020. DevOps for AI - Challenges in Development of AI-enabled Applications. (2020).", "start_char_idx": 0, "end_char_idx": 232, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "355fe1e7-f963-4b57-a43e-269d129451a9": {"__data__": {"id_": "355fe1e7-f963-4b57-a43e-269d129451a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffde2f1a-0aa1-4224-97cc-8ffe3f990812", "node_type": "1", "metadata": {}, "hash": "731bc6f68d29c5f0a8411f76ed916a0ced84d6ad088803637d5bf94425b019ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5c4b40b-7e7b-4706-a829-b9e30c5a6d86", "node_type": "1", "metadata": {}, "hash": "e2cffe412a6edc71169c14a85854940205a74143572ee712a9ee6ec5ace8b780", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}}, "hash": "fef64186baff411253dbb479ec54f88af1efaa18afb83d5d6371ff2f7a87d772", "text": "DevOps for AI - Challenges in Development of AI-enabled Applications. (2020). DOI:https://doi.org/10.23919/SoftCOM50211.2020.9238323 [28] Ruth W. Macarthy and Julian M. Bass. 2020. An Empirical Taxonomy of DevOps in Practice. In 2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), IEEE, 221\u2013228.", "start_char_idx": 155, "end_char_idx": 487, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5c4b40b-7e7b-4706-a829-b9e30c5a6d86": {"__data__": {"id_": "c5c4b40b-7e7b-4706-a829-b9e30c5a6d86", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "355fe1e7-f963-4b57-a43e-269d129451a9", "node_type": "1", "metadata": {}, "hash": "fef64186baff411253dbb479ec54f88af1efaa18afb83d5d6371ff2f7a87d772", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55b49e46-8231-488a-aceb-eb95697abe6c", "node_type": "1", "metadata": {}, "hash": "97ea0b2821bcbb004e469c2a08ab641032a8e4db2eac93a1a8db21074c07ad67", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}}, "hash": "e2cffe412a6edc71169c14a85854940205a74143572ee712a9ee6ec5ace8b780", "text": "DOI:https://doi.org/10.1109/SEAA51224.2020.00046 [29] Sasu M\u00e4kinen, Henrik Skogstr\u00f6m, Eero Laaksonen, and Tommi Mikkonen. 2021. Who Needs MLOps: What Data Scientists Seek to Accomplish and How Can MLOps Help? Ml (2021). Retrieved from http://arxiv.org/abs/2103.08942 [30] Rob van der Meulen and Thomas McCall. 2018.", "start_char_idx": 488, "end_char_idx": 803, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "55b49e46-8231-488a-aceb-eb95697abe6c": {"__data__": {"id_": "55b49e46-8231-488a-aceb-eb95697abe6c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5c4b40b-7e7b-4706-a829-b9e30c5a6d86", "node_type": "1", "metadata": {}, "hash": "e2cffe412a6edc71169c14a85854940205a74143572ee712a9ee6ec5ace8b780", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bbe043f-a244-4bb6-8136-40785442a1b9", "node_type": "1", "metadata": {}, "hash": "5d9ad957596c88a78568178731ec22387b18bbebd2b8be9f7e08fb169203471e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}}, "hash": "97ea0b2821bcbb004e469c2a08ab641032a8e4db2eac93a1a8db21074c07ad67", "text": "2018. Gartner Says Nearly Half of CIOs Are Planning to Deploy Artificial Intelligence. Retrieved December 4, 2021 from https://www.gartner.com/en/newsroom/press-releases/2018-02-13-gartner-says-nearly-half-of-cios-are-planning-to-deploy-artificial-intelligence [31] Steve Mezak. 2018. The Origins of DevOps: What\u2019s in a Name? - DevOps.com.", "start_char_idx": 798, "end_char_idx": 1137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7bbe043f-a244-4bb6-8136-40785442a1b9": {"__data__": {"id_": "7bbe043f-a244-4bb6-8136-40785442a1b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55b49e46-8231-488a-aceb-eb95697abe6c", "node_type": "1", "metadata": {}, "hash": "97ea0b2821bcbb004e469c2a08ab641032a8e4db2eac93a1a8db21074c07ad67", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "39b97a34-dc97-48a5-aaab-ae3980088068", "node_type": "1", "metadata": {}, "hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "class_name": "RelatedNodeInfo"}}, "hash": "5d9ad957596c88a78568178731ec22387b18bbebd2b8be9f7e08fb169203471e", "text": "The Origins of DevOps: What\u2019s in a Name? - DevOps.com. Retrieved March 25, 2021 from https://devops.com/the-origins-of-devops-whats-in-a-name/ [32] Antonio Molner Domenech and Alberto Guill\u00e9n. 2020. Ml-experiment: A Python framework for reproducible data science. J. Phys. Conf. Ser. 1603, 1 (2020).", "start_char_idx": 1083, "end_char_idx": 1382, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b337b71-a942-4f95-a9b0-8aec46ee3086": {"__data__": {"id_": "4b337b71-a942-4f95-a9b0-8aec46ee3086", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131", "node_type": "1", "metadata": {}, "hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e93c47c1-1a4d-4484-8aad-94e1c468b224", "node_type": "1", "metadata": {}, "hash": "96f4e899f69db683e61de8281936ad61fd6c15855f2e544951adf5c957593ba9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131", "node_type": "1", "metadata": {}, "hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "class_name": "RelatedNodeInfo"}}, "hash": "3cbf4e4ea2ab2b687cec45798f542200969a5e136775e99f82e7408d234b629c", "text": "Conf. Ser. 1603, 1 (2020). DOI:https://doi.org/10.1088/1742-6596/1603/1/012025 [33] Michael D. Myers and Michael Newman. 2007. The qualitative interview in IS research: Examining the craft. Inf. Organ. 17, 1 (2007), 2\u201326.", "start_char_idx": 0, "end_char_idx": 221, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e93c47c1-1a4d-4484-8aad-94e1c468b224": {"__data__": {"id_": "e93c47c1-1a4d-4484-8aad-94e1c468b224", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131", "node_type": "1", "metadata": {}, "hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b337b71-a942-4f95-a9b0-8aec46ee3086", "node_type": "1", "metadata": {}, "hash": "3cbf4e4ea2ab2b687cec45798f542200969a5e136775e99f82e7408d234b629c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131", "node_type": "1", "metadata": {}, "hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "class_name": "RelatedNodeInfo"}}, "hash": "96f4e899f69db683e61de8281936ad61fd6c15855f2e544951adf5c957593ba9", "text": "Inf. Organ. 17, 1 (2007), 2\u201326. DOI:https://doi.org/10.1016/j.infoandorg.2006.11.001 [34] Pulasthi Perera, Roshali Silva, and Indika Perera. 2017. Improve software quality through practicing DevOps.", "start_char_idx": 190, "end_char_idx": 388, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef006118-f471-4824-9d54-c9831da9cea0": {"__data__": {"id_": "ef006118-f471-4824-9d54-c9831da9cea0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1241dfe3-334e-445c-bb28-d4bd5859193d", "node_type": "1", "metadata": {}, "hash": "38d28eb464d5b098c96f1b176cc53ff5d390a4092b5616c9a58785f0cc29dfdf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}}, "hash": "8ffcdb4afd31559025cc19fa14c445ace2d372337d04e5ad1f01e843f340299d", "text": "2017. Improve software quality through practicing DevOps. In 2017 Seventeenth International Conference on Advances in ICT for Emerging Regions (ICTer), 1\u20136. [35] Alexandra Posoldova. 2020. Machine Learning Pipelines: From Research to Production. IEEE POTENTIALS (2020). [36] Cedric Renggli, Luka Rimanic, Nezihe Merve G\u00fcrel, Bojan Karla\u0161, Wentao Wu, and Ce Zhang. 2021. A Data Quality-Driven View of MLOps.", "start_char_idx": 0, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1241dfe3-334e-445c-bb28-d4bd5859193d": {"__data__": {"id_": "1241dfe3-334e-445c-bb28-d4bd5859193d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef006118-f471-4824-9d54-c9831da9cea0", "node_type": "1", "metadata": {}, "hash": "8ffcdb4afd31559025cc19fa14c445ace2d372337d04e5ad1f01e843f340299d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf99aeaa-e2d2-4c54-aaea-3cbfc1a2af4e", "node_type": "1", "metadata": {}, "hash": "5934629e5446db9ab9db2a266398229613a2714fb5d7d92eaafde21bc63a40d6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}}, "hash": "38d28eb464d5b098c96f1b176cc53ff5d390a4092b5616c9a58785f0cc29dfdf", "text": "2021. A Data Quality-Driven View of MLOps. 1 (2021), 1\u201312. Retrieved from http://arxiv.org/abs/2102.07750 [37] Winston W. Royce. 1970. Managing the Development of Large Software Systems. (1970). [38] Martin R\u00fctz. 2019. DEVOPS: A SYSTEMATIC LITERATURE REVIEW. Inf. Softw. Technol. (2019). [39] Ulrike Schultze and Michel Avital.", "start_char_idx": 364, "end_char_idx": 691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf99aeaa-e2d2-4c54-aaea-3cbfc1a2af4e": {"__data__": {"id_": "bf99aeaa-e2d2-4c54-aaea-3cbfc1a2af4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1241dfe3-334e-445c-bb28-d4bd5859193d", "node_type": "1", "metadata": {}, "hash": "38d28eb464d5b098c96f1b176cc53ff5d390a4092b5616c9a58785f0cc29dfdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3a61a5a-9a57-4b45-be5e-8189b09df34f", "node_type": "1", "metadata": {}, "hash": "7944b3caefaf88afea2e57a300597c1ba99e1fcc3860e9f4fe374ac3a34c18ac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}}, "hash": "5934629e5446db9ab9db2a266398229613a2714fb5d7d92eaafde21bc63a40d6", "text": "(2019). [39] Ulrike Schultze and Michel Avital. 2011. Designing interviews to generate rich data for information systems research. Inf. Organ. 21, 1 (2011), 1\u201316. DOI:https://doi.org/10.1016/j.infoandorg.2010.11.001 [40] Ola Spjuth, Jens Frid, and Andreas Hellander. 2021. The machine learning life cycle and the cloud: implications for drug discovery. Expert Opin. Drug Discov.", "start_char_idx": 644, "end_char_idx": 1022, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3a61a5a-9a57-4b45-be5e-8189b09df34f": {"__data__": {"id_": "c3a61a5a-9a57-4b45-be5e-8189b09df34f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf99aeaa-e2d2-4c54-aaea-3cbfc1a2af4e", "node_type": "1", "metadata": {}, "hash": "5934629e5446db9ab9db2a266398229613a2714fb5d7d92eaafde21bc63a40d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86f4ee88-f22b-43f3-8b26-6b9adcd62338", "node_type": "1", "metadata": {}, "hash": "8a41ba59a6b48e17ce697608183ac1653d4e318ff4ef574cf5eafce6f0745b85", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}}, "hash": "7944b3caefaf88afea2e57a300597c1ba99e1fcc3860e9f4fe374ac3a34c18ac", "text": "Expert Opin. Drug Discov. 00, 00 (2021), 1\u20139. DOI:https://doi.org/10.1080/17460441.2021.1932812 \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n [41] Damian A. Tamburri. 2020. Sustainable MLOps: Trends and Challenges. Proc. - 2020 22nd Int. Symp. Symb. Numer. Algorithms Sci. Comput.", "start_char_idx": 997, "end_char_idx": 1273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86f4ee88-f22b-43f3-8b26-6b9adcd62338": {"__data__": {"id_": "86f4ee88-f22b-43f3-8b26-6b9adcd62338", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3a61a5a-9a57-4b45-be5e-8189b09df34f", "node_type": "1", "metadata": {}, "hash": "7944b3caefaf88afea2e57a300597c1ba99e1fcc3860e9f4fe374ac3a34c18ac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "node_type": "1", "metadata": {}, "hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "class_name": "RelatedNodeInfo"}}, "hash": "8a41ba59a6b48e17ce697608183ac1653d4e318ff4ef574cf5eafce6f0745b85", "text": "Symp. Symb. Numer. Algorithms Sci. Comput. SYNASC 2020 (2020), 17\u201323.", "start_char_idx": 1231, "end_char_idx": 1300, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb98d67a-da22-4edc-89a6-87b01366fbb2": {"__data__": {"id_": "eb98d67a-da22-4edc-89a6-87b01366fbb2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65312112-b538-45c4-a0e0-bbc7f9e2a1f7", "node_type": "1", "metadata": {}, "hash": "75ddc7cfdeca181c76775caa85dac878b038bbb761703d8abf71b9270ce53070", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}}, "hash": "6831905fd949aad8976148e99af9472147f2205b51e548c5c44dcbabfefb02b9", "text": "Comput. SYNASC 2020 (2020), 17\u201323. DOI:https://doi.org/10.1109/SYNASC51798.2020.00015 [42] Chandrasekar Vuppalapati, Anitha Ilapakurti, Karthik Chillara, Sharat Kedari, and Vanaja Mamidi. 2020. Automating Tiny ML Intelligent Sensors DevOPS Using Microsoft Azure. Proc. - 2020 IEEE Int. Conf.", "start_char_idx": 0, "end_char_idx": 291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65312112-b538-45c4-a0e0-bbc7f9e2a1f7": {"__data__": {"id_": "65312112-b538-45c4-a0e0-bbc7f9e2a1f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb98d67a-da22-4edc-89a6-87b01366fbb2", "node_type": "1", "metadata": {}, "hash": "6831905fd949aad8976148e99af9472147f2205b51e548c5c44dcbabfefb02b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65424a7f-5f0d-4be8-805b-f7fbc6415655", "node_type": "1", "metadata": {}, "hash": "6b80d7308c3b8a7bca7620f59572499bdd21b1cbb26d02612b8bef3366fb0625", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}}, "hash": "75ddc7cfdeca181c76775caa85dac878b038bbb761703d8abf71b9270ce53070", "text": "Proc. - 2020 IEEE Int. Conf. Big Data, Big Data 2020 (2020), 2375\u20132384. DOI:https://doi.org/10.1109/BigData50022.2020.9377755 [43] Jane Webster and Richard Watson. 2002. Analyzing the Past to Prepare for the Future: Writing a Literature Review. MIS Q. 26, 2 (2002), xiii\u2013xxiii.", "start_char_idx": 263, "end_char_idx": 540, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65424a7f-5f0d-4be8-805b-f7fbc6415655": {"__data__": {"id_": "65424a7f-5f0d-4be8-805b-f7fbc6415655", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65312112-b538-45c4-a0e0-bbc7f9e2a1f7", "node_type": "1", "metadata": {}, "hash": "75ddc7cfdeca181c76775caa85dac878b038bbb761703d8abf71b9270ce53070", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "770ea4ef-7db9-4018-be0d-939c6d6d5e75", "node_type": "1", "metadata": {}, "hash": "59b391f463c2083197d112dbaf3ba19dfc0e49244afd207b76040813689b4fc7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}}, "hash": "6b80d7308c3b8a7bca7620f59572499bdd21b1cbb26d02612b8bef3366fb0625", "text": "MIS Q. 26, 2 (2002), xiii\u2013xxiii. DOI:https://doi.org/10.1.1.104.6570 [44] Chaoyu Wu, E. Haihong, and Meina Song. 2020. An Automatic Artificial Intelligence Training Platform Based on Kubernetes. ACM Int. Conf. Proceeding Ser. (2020), 58\u201362.", "start_char_idx": 508, "end_char_idx": 748, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "770ea4ef-7db9-4018-be0d-939c6d6d5e75": {"__data__": {"id_": "770ea4ef-7db9-4018-be0d-939c6d6d5e75", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65424a7f-5f0d-4be8-805b-f7fbc6415655", "node_type": "1", "metadata": {}, "hash": "6b80d7308c3b8a7bca7620f59572499bdd21b1cbb26d02612b8bef3366fb0625", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3945c568-a2b6-4c94-a898-ca0f073ba23f", "node_type": "1", "metadata": {}, "hash": "ebf152627efdd4c7fb4544e3a884be96b70869be8291707632c17edb0ec52ccb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}}, "hash": "59b391f463c2083197d112dbaf3ba19dfc0e49244afd207b76040813689b4fc7", "text": "Conf. Proceeding Ser. (2020), 58\u201362. DOI:https://doi.org/10.1145/3378904.3378921 [45] Geum Seong Yoon, Jungsu Han, Seunghyung Lee, and Jong Won Kim. 2020. DevOps Portal Design for SmartX AI Cluster Employing Cloud-Native Machine Learning Workflows. Springer International Publishing.", "start_char_idx": 712, "end_char_idx": 995, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3945c568-a2b6-4c94-a898-ca0f073ba23f": {"__data__": {"id_": "3945c568-a2b6-4c94-a898-ca0f073ba23f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "770ea4ef-7db9-4018-be0d-939c6d6d5e75", "node_type": "1", "metadata": {}, "hash": "59b391f463c2083197d112dbaf3ba19dfc0e49244afd207b76040813689b4fc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ea3a0a4-db4a-48b2-ab4d-73e7fbdbcd1d", "node_type": "1", "metadata": {}, "hash": "ab7f7b4899570b9244f28c77639876484fd2560a9bda0388c4bdf469acbeebf9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}}, "hash": "ebf152627efdd4c7fb4544e3a884be96b70869be8291707632c17edb0ec52ccb", "text": "Springer International Publishing. DOI:https://doi.org/10.1007/978-3-030-39746-3_54 [46] Yue Zhou, Yue Yu, and Bo Ding. 2020. Towards MLOps: A Case Study of ML Pipeline Platform. Proc. - 2020 Int. Conf. Artif. Intell. Comput. Eng. ICAICE 2020 (2020), 494\u2013500.", "start_char_idx": 961, "end_char_idx": 1220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ea3a0a4-db4a-48b2-ab4d-73e7fbdbcd1d": {"__data__": {"id_": "2ea3a0a4-db4a-48b2-ab4d-73e7fbdbcd1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3945c568-a2b6-4c94-a898-ca0f073ba23f", "node_type": "1", "metadata": {}, "hash": "ebf152627efdd4c7fb4544e3a884be96b70869be8291707632c17edb0ec52ccb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "node_type": "1", "metadata": {}, "hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "class_name": "RelatedNodeInfo"}}, "hash": "ab7f7b4899570b9244f28c77639876484fd2560a9bda0388c4bdf469acbeebf9", "text": "Eng. ICAICE 2020 (2020), 494\u2013500. DOI:https://doi.org/10.1109/ICAICE51518.2020.00102    \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n  Appendix Table 1.", "start_char_idx": 1187, "end_char_idx": 1375, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7698b87b-8d6c-4899-aa44-22795ccb7b33": {"__data__": {"id_": "7698b87b-8d6c-4899-aa44-22795ccb7b33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "940bb3fa-5e21-4d5c-b22c-505d38ee2ace", "node_type": "1", "metadata": {}, "hash": "2f8b2e55064538770b12907cf4fbcaa2b5d1027ad44db12b49138b9adbd8c156", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}}, "hash": "2dee3f1955d92ec6d5a4408de300deb48034466ed6ff605f713e2bf88ceaef79", "text": "List of evaluated technologies  Technology Name Description Sources Open-source examples TensorFlow Extended TensorFlow Extended (TFX) is a configuration framework providing libraries for each of the tasks of an end-to-end ML pipeline. Examples are data validation, data distribution checks, model training, and model serving. [7,10,26,46] [\u03b4, \u03b8]  Airflow Airflow is a task and workflow orchestration tool, which can also be used for ML workflow orchestration. It is also used for orchestrating data engineering jobs. Tasks are executed according to directed acyclic graphs (DAGs).", "start_char_idx": 0, "end_char_idx": 581, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "940bb3fa-5e21-4d5c-b22c-505d38ee2ace": {"__data__": {"id_": "940bb3fa-5e21-4d5c-b22c-505d38ee2ace", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7698b87b-8d6c-4899-aa44-22795ccb7b33", "node_type": "1", "metadata": {}, "hash": "2dee3f1955d92ec6d5a4408de300deb48034466ed6ff605f713e2bf88ceaef79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b90ad7e-5a41-4f0e-b029-70451bcbe8fc", "node_type": "1", "metadata": {}, "hash": "0a9d73db736f35b53b7d9e456b3aae36493f17dfd9e61aa893922d4fa82b3574", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}}, "hash": "2f8b2e55064538770b12907cf4fbcaa2b5d1027ad44db12b49138b9adbd8c156", "text": "Tasks are executed according to directed acyclic graphs (DAGs). [26,40,41] [\u03b1, \u03b2, \u03b6, \u03b7] Kubeflow Kubeflow is a Kubernetes-based end-to-end ML platform. Each Kubeflow component is wrapped into a container and orchestrated by Kubernetes. Also, each task of an ML workflow pipeline is handled with one container.", "start_char_idx": 518, "end_char_idx": 827, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b90ad7e-5a41-4f0e-b029-70451bcbe8fc": {"__data__": {"id_": "0b90ad7e-5a41-4f0e-b029-70451bcbe8fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "940bb3fa-5e21-4d5c-b22c-505d38ee2ace", "node_type": "1", "metadata": {}, "hash": "2f8b2e55064538770b12907cf4fbcaa2b5d1027ad44db12b49138b9adbd8c156", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38c78570-11ab-41f9-a69e-b19a39338335", "node_type": "1", "metadata": {}, "hash": "eb57ccba75d30684a935f4d97c0c74e77a680622c60140b8280beb2c622698b3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}}, "hash": "0a9d73db736f35b53b7d9e456b3aae36493f17dfd9e61aa893922d4fa82b3574", "text": "Also, each task of an ML workflow pipeline is handled with one container. [26,35,40,41,46] [\u03b1, \u03b2, \u03b3, \u03b4, \u03b6, \u03b7, \u03b8]   MLflow MLflow is an ML platform that allows for the management of the ML lifecycle end-to-end. It provides an advanced experiment tracking functionality, a model registry, and model serving component.", "start_char_idx": 754, "end_char_idx": 1069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38c78570-11ab-41f9-a69e-b19a39338335": {"__data__": {"id_": "38c78570-11ab-41f9-a69e-b19a39338335", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b90ad7e-5a41-4f0e-b029-70451bcbe8fc", "node_type": "1", "metadata": {}, "hash": "0a9d73db736f35b53b7d9e456b3aae36493f17dfd9e61aa893922d4fa82b3574", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef078c9c-afed-4edd-acc6-2bde4561d073", "node_type": "1", "metadata": {}, "hash": "0d65e17fc11a29e4a47d4c1f8190387570ea840987e895998ed123098d3037f8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}}, "hash": "eb57ccba75d30684a935f4d97c0c74e77a680622c60140b8280beb2c622698b3", "text": "It provides an advanced experiment tracking functionality, a model registry, and model serving component. [11,32,35] [\u03b1, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8]   Commercial examples Databricks managed MLflow The Databricks platform offers managed services based on other cloud providers\u2019 infrastructure, e.g., managed MLflow. [26,32,35,40] [\u03b1, \u03b6] Amazon CodePipeline Amazon CodePipeline is a CI/CD automation tool to facilitate the build, test, and delivery steps.", "start_char_idx": 964, "end_char_idx": 1404, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef078c9c-afed-4edd-acc6-2bde4561d073": {"__data__": {"id_": "ef078c9c-afed-4edd-acc6-2bde4561d073", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38c78570-11ab-41f9-a69e-b19a39338335", "node_type": "1", "metadata": {}, "hash": "eb57ccba75d30684a935f4d97c0c74e77a680622c60140b8280beb2c622698b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "723caaa0-5ed9-49e4-82b7-71921282a571", "node_type": "1", "metadata": {}, "hash": "4b6e87ed7853eea8f79fe98633155b5208843c74ccc2705e1da594ccd69d4795", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}}, "hash": "0d65e17fc11a29e4a47d4c1f8190387570ea840987e895998ed123098d3037f8", "text": "It also allows one to schedule and manage the different stages of an ML pipeline. [18] [\u03b3] Amazon SageMaker With SageMaker, Amazon AWS offers an end-to-end ML platform. It provides, out-of-the-box, a feature store, orchestration with SageMaker Pipelines, and model serving with SageMaker endpoints. [7,11,18,24,35] [\u03b1, \u03b2, \u03b3, \u03b6, \u03b8]  Azure DevOps Pipelines Azure DevOps Pipelines is a CI/CD automation tool to facilitate the build, test, and delivery steps.", "start_char_idx": 1405, "end_char_idx": 1860, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "723caaa0-5ed9-49e4-82b7-71921282a571": {"__data__": {"id_": "723caaa0-5ed9-49e4-82b7-71921282a571", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef078c9c-afed-4edd-acc6-2bde4561d073", "node_type": "1", "metadata": {}, "hash": "0d65e17fc11a29e4a47d4c1f8190387570ea840987e895998ed123098d3037f8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "node_type": "1", "metadata": {}, "hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "class_name": "RelatedNodeInfo"}}, "hash": "4b6e87ed7853eea8f79fe98633155b5208843c74ccc2705e1da594ccd69d4795", "text": "It also allows one to schedule and manage the different stages of an ML pipeline.", "start_char_idx": 1405, "end_char_idx": 1486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aed1f523-7c63-4220-82e1-62967df4ee0e": {"__data__": {"id_": "aed1f523-7c63-4220-82e1-62967df4ee0e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07f7368b-2a21-49eb-8d75-34d079492665", "node_type": "1", "metadata": {}, "hash": "2bd57d63170e3c3dde7cd021f6c84713c6f0b4bf589cada20b768fe7e237bd80", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}}, "hash": "2d4dba7c360038c462b62e37f060c9da0dc776cb80bd7249b2a4e7c013e5c4b4", "text": "It also allows one to schedule and manage the different stages of an ML pipeline. [18,42] [\u03b3, \u03b5] Azure ML Microsoft Azure offers, in combination with Azure DevOps Pipelines and Azure ML, an end-to-end ML platform. [6,24,25,35,42] [\u03b1, \u03b3, \u03b5, \u03b6, \u03b7, \u03b8] \n\nMLOps Kreuzberger, K\u00fchl, and Hirschl  \n GCP - Vertex AI GCP offers, along with Vertex AI, a fully managed end-to-end platform.", "start_char_idx": 0, "end_char_idx": 377, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "07f7368b-2a21-49eb-8d75-34d079492665": {"__data__": {"id_": "07f7368b-2a21-49eb-8d75-34d079492665", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aed1f523-7c63-4220-82e1-62967df4ee0e", "node_type": "1", "metadata": {}, "hash": "2d4dba7c360038c462b62e37f060c9da0dc776cb80bd7249b2a4e7c013e5c4b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50ef89ce-ee76-4f86-ba32-1e0ce0d58eaf", "node_type": "1", "metadata": {}, "hash": "06a63c2afaf4ce95833fee09f7af8ea6e7671f9919460db1c9d8ca8e30c582d7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}}, "hash": "2bd57d63170e3c3dde7cd021f6c84713c6f0b4bf589cada20b768fe7e237bd80", "text": "In addition, they offer a managed Kubernetes cluster with Kubeflow as a service. [25,35,40,41] [\u03b1, \u03b3, \u03b4, \u03b6, \u03b8] IBM Cloud Pak for Data (IBM Watson Studio) IBM Cloud Pak for Data combines a list of software in a package that offers data and ML capabilities. [41] [\u03b3]  Table 2.", "start_char_idx": 378, "end_char_idx": 652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50ef89ce-ee76-4f86-ba32-1e0ce0d58eaf": {"__data__": {"id_": "50ef89ce-ee76-4f86-ba32-1e0ce0d58eaf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07f7368b-2a21-49eb-8d75-34d079492665", "node_type": "1", "metadata": {}, "hash": "2bd57d63170e3c3dde7cd021f6c84713c6f0b4bf589cada20b768fe7e237bd80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca092f8f-3ef8-4958-84a5-a0c8acea722b", "node_type": "1", "metadata": {}, "hash": "1ed9d64d71106e14f60c018721e965e73f1f930c2476f5b32a135e4086a62af3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}}, "hash": "06a63c2afaf4ce95833fee09f7af8ea6e7671f9919460db1c9d8ca8e30c582d7", "text": "[41] [\u03b3]  Table 2. List of interview partners Interviewee pseudonym Job Title Years of experience with DevOps Years of experience with ML Industry Company Size (number of employees) Alpha (\u03b1) Senior Data Platform Engineer  3 4 Sporting Goods / Retail 60,000 Beta (\u03b2) Solution architect / Specialist for ML and AI 6 10 IT Services / Cloud Provider / Cloud Computing 25,000 Gamma (\u03b3) AI Architect / Consultant  5 7 Cloud Provider 350,", "start_char_idx": 634, "end_char_idx": 1066, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca092f8f-3ef8-4958-84a5-a0c8acea722b": {"__data__": {"id_": "ca092f8f-3ef8-4958-84a5-a0c8acea722b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50ef89ce-ee76-4f86-ba32-1e0ce0d58eaf", "node_type": "1", "metadata": {}, "hash": "06a63c2afaf4ce95833fee09f7af8ea6e7671f9919460db1c9d8ca8e30c582d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2fcef97f-0f57-42c3-bb08-d3a29f982e95", "node_type": "1", "metadata": {}, "hash": "056a4eccc5ae2e6b4533f5b7be68f1e86206d00499b39680db298fea42c28157", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}}, "hash": "1ed9d64d71106e14f60c018721e965e73f1f930c2476f5b32a135e4086a62af3", "text": "000 Gamma (\u03b3) AI Architect / Consultant  5 7 Cloud Provider 350,000 Delta (\u03b4) Technical Marketing & Manager in ML / AI 10 5 Cloud Provider 139,995 Epsilon (\u03b5) Technical Architect - Data & AI 1 2 Cloud Provider 160,000 Zeta (\u03b6) ML engineering Consultant 5 6 Consulting Company 569,000 Eta (\u03b7) Engineering Manager in AI / Senior Deep Learning Engineer  10 10 Conglomerate (multi-industry) 400,", "start_char_idx": 1002, "end_char_idx": 1393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fcef97f-0f57-42c3-bb08-d3a29f982e95": {"__data__": {"id_": "2fcef97f-0f57-42c3-bb08-d3a29f982e95", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca092f8f-3ef8-4958-84a5-a0c8acea722b", "node_type": "1", "metadata": {}, "hash": "1ed9d64d71106e14f60c018721e965e73f1f930c2476f5b32a135e4086a62af3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a110f60a-18c0-4758-9856-6998878bc107", "node_type": "1", "metadata": {}, "hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "class_name": "RelatedNodeInfo"}}, "hash": "056a4eccc5ae2e6b4533f5b7be68f1e86206d00499b39680db298fea42c28157", "text": "000 Theta (\u03b8) ML Platform Product Lead 8 10 Music / audio streaming 6,500  \n\nMLOps: Overview, Definition, and Architecture Kreuzberger, K\u00fchl, and Hirschl  \n   Figure 5.", "start_char_idx": 1393, "end_char_idx": 1561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69a1468a-bf0d-466f-a014-bb02feb1a75c": {"__data__": {"id_": "69a1468a-bf0d-466f-a014-bb02feb1a75c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9570f67f-24c1-4375-8cef-3d21e8424125", "node_type": "1", "metadata": {}, "hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f01b877-d71e-444a-8c59-64630095215f", "node_type": "1", "metadata": {}, "hash": "c8090d0b1c55f1ba0d8f9d16e626428122a1c02d304c9355bbdd2fb573856a13", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9570f67f-24c1-4375-8cef-3d21e8424125", "node_type": "1", "metadata": {}, "hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "class_name": "RelatedNodeInfo"}}, "hash": "ff45bd585244e3f3a592093395ed073c53cd2d47576b35bbcf524e8b9baa3028", "text": "Intersection of disciplines of the MLOps paradigm \n22/04/22MachineLearningSoftwareEngineering\nData EngineeringMLOpsCD4MLML Model\nData\n1CI/CDPipeline CodeDevOps\n\n1\nLearning under Concept Drift: A Review\nJie Lu, Fellow, IEEE, Anjin Liu, Member, IEEE, Fan Dong, Feng Gu, Jo \u02dcao Gama, and Guangquan Zhang\nAbstract \u2014Concept drift describes unforeseeable changes in the underlying distribution of streaming data over time. Concept drift\nresearch involves the development of methodologies and techniques for drift detection, understanding and adaptation.", "start_char_idx": 0, "end_char_idx": 547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f01b877-d71e-444a-8c59-64630095215f": {"__data__": {"id_": "7f01b877-d71e-444a-8c59-64630095215f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9570f67f-24c1-4375-8cef-3d21e8424125", "node_type": "1", "metadata": {}, "hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69a1468a-bf0d-466f-a014-bb02feb1a75c", "node_type": "1", "metadata": {}, "hash": "ff45bd585244e3f3a592093395ed073c53cd2d47576b35bbcf524e8b9baa3028", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9570f67f-24c1-4375-8cef-3d21e8424125", "node_type": "1", "metadata": {}, "hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "class_name": "RelatedNodeInfo"}}, "hash": "c8090d0b1c55f1ba0d8f9d16e626428122a1c02d304c9355bbdd2fb573856a13", "text": "Concept drift\nresearch involves the development of methodologies and techniques for drift detection, understanding and adaptation. Data analysis\nhas revealed that machine learning in a concept drift environment will result in poor learning results if the drift is not addressed.", "start_char_idx": 417, "end_char_idx": 695, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cba71f56-26a3-4e6e-9f7c-5b150e86f8e0": {"__data__": {"id_": "cba71f56-26a3-4e6e-9f7c-5b150e86f8e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84fbb92e-5a96-4320-a956-f4ef22be3715", "node_type": "1", "metadata": {}, "hash": "30fce98d52144dfdd7e3f0d172b3e683363e68055ee4d6789f116ed858115353", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}}, "hash": "5bc6a00e13b096015220532dbd3684d343b2518be102a68c293d28b4d2a4f918", "text": "To help\nresearchers identify which research topics are signi\ufb01cant and how to apply related techniques in data analysis tasks, it is necessary\nthat a high quality, instructive review of current research developments and trends in the concept drift \ufb01eld is conducted. In addition,\ndue to the rapid development of concept drift in recent years, the methodologies of learning under concept drift have become\nnoticeably systematic, unveiling a framework which has not been mentioned in literature.", "start_char_idx": 0, "end_char_idx": 492, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84fbb92e-5a96-4320-a956-f4ef22be3715": {"__data__": {"id_": "84fbb92e-5a96-4320-a956-f4ef22be3715", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cba71f56-26a3-4e6e-9f7c-5b150e86f8e0", "node_type": "1", "metadata": {}, "hash": "5bc6a00e13b096015220532dbd3684d343b2518be102a68c293d28b4d2a4f918", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81a50b6e-0411-4e6d-8534-52a74e0a0546", "node_type": "1", "metadata": {}, "hash": "ee96e5d579bffe11cc5ac7d15310562125cff87309a51c3241effb1824dc0a56", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}}, "hash": "30fce98d52144dfdd7e3f0d172b3e683363e68055ee4d6789f116ed858115353", "text": "This paper reviews over 130 high quality\npublications in concept drift related research areas, analyzes up-to-date developments in methodologies and techniques, and\nestablishes a framework of learning under concept drift including three main components: concept drift detection, concept drift\nunderstanding, and concept drift adaptation. This paper lists and discusses 10 popular synthetic datasets and 14 publicly available\nbenchmark datasets used for evaluating the performance of learning algorithms aiming at handling concept drift. Also, concept drift\nrelated research directions are covered and discussed.", "start_char_idx": 493, "end_char_idx": 1104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81a50b6e-0411-4e6d-8534-52a74e0a0546": {"__data__": {"id_": "81a50b6e-0411-4e6d-8534-52a74e0a0546", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84fbb92e-5a96-4320-a956-f4ef22be3715", "node_type": "1", "metadata": {}, "hash": "30fce98d52144dfdd7e3f0d172b3e683363e68055ee4d6789f116ed858115353", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62389c86-bb6b-4ba5-826e-3d23fcb3d30b", "node_type": "1", "metadata": {}, "hash": "70b9c172d2d2c736c32f50bce28f9ebe5bc082b464dc2fcceca1f96dd25f34d5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}}, "hash": "ee96e5d579bffe11cc5ac7d15310562125cff87309a51c3241effb1824dc0a56", "text": "Also, concept drift\nrelated research directions are covered and discussed. By providing state-of-the-art knowledge, this survey will directly support\nresearchers in their understanding of research developments in the \ufb01eld of learning under concept drift.\nIndex Terms \u2014concept drift, change detection, adaptive learning, data streams\n!\n1 I NTRODUCTION\nGOVERNMENTS and companies are generating huge\namounts of streaming data and urgently need ef\ufb01cient\ndata analytics and machine learning techniques to sup-\nport them making predictions and decisions.", "start_char_idx": 1030, "end_char_idx": 1578, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62389c86-bb6b-4ba5-826e-3d23fcb3d30b": {"__data__": {"id_": "62389c86-bb6b-4ba5-826e-3d23fcb3d30b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81a50b6e-0411-4e6d-8534-52a74e0a0546", "node_type": "1", "metadata": {}, "hash": "ee96e5d579bffe11cc5ac7d15310562125cff87309a51c3241effb1824dc0a56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ddeb5938-2f62-4b78-9a62-e6a8319a0c88", "node_type": "1", "metadata": {}, "hash": "6defbfe5faa4b8973794f8df30d2fad5dfd3eb8a33e77556d31657f4f70567d0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}}, "hash": "70b9c172d2d2c736c32f50bce28f9ebe5bc082b464dc2fcceca1f96dd25f34d5", "text": "However, the\nrapidly changing environment of new products, new mar-\nkets and new customer behaviors inevitably results in the\nappearance of concept drift problem. Concept drift means\nthat the statistical properties of the target variable, which the\nmodel is trying to predict, change over time in unforeseen\nways [1]. If the concept drift occurs, the induced pattern of\npast data may not be relevant to the new data, leading to\npoor predictions and decision outcomes.", "start_char_idx": 1579, "end_char_idx": 2046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddeb5938-2f62-4b78-9a62-e6a8319a0c88": {"__data__": {"id_": "ddeb5938-2f62-4b78-9a62-e6a8319a0c88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62389c86-bb6b-4ba5-826e-3d23fcb3d30b", "node_type": "1", "metadata": {}, "hash": "70b9c172d2d2c736c32f50bce28f9ebe5bc082b464dc2fcceca1f96dd25f34d5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7c232982-940f-4368-aa32-de082a86d3e3", "node_type": "1", "metadata": {}, "hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "class_name": "RelatedNodeInfo"}}, "hash": "6defbfe5faa4b8973794f8df30d2fad5dfd3eb8a33e77556d31657f4f70567d0", "text": "The phenomenon\nof concept drift has been recognized as the root cause of\ndecreased effectiveness in many data-driven information\nsystems such as data-driven early warning systems and\ndata-driven decision support systems. In an ever-changing\nand big data environment, how to provide more reliable\ndata-driven predictions and decision facilities has become a\ncrucial issue.\nConcept drift prob lem existsinmany real-world situa-\ntions.", "start_char_idx": 2047, "end_char_idx": 2479, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "748996c0-df81-4ea4-845a-4f45ff0a5ffc": {"__data__": {"id_": "748996c0-df81-4ea4-845a-4f45ff0a5ffc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e345121-7b60-487d-b52c-b1e83f90dbd2", "node_type": "1", "metadata": {}, "hash": "3d3216af2a85463ec7fece604a1ca0e48261d5d178be7e2923b8f18fa56e8aa9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}}, "hash": "caf3f5dd971143447f49b1d2b010d8c3b4db28af5d75fdd4ce926f62887c4233", "text": "Concept drift prob lem existsinmany real-world situa-\ntions. Anexamplecanbeseen inthechanges ofbehaviorin\nmobilephone usage, asshown inFig.1.From thebars inthis\n\ufb01gure, thetime percentagedistribution ofthemobile phone\nusagepattern haschanged from \u201cAu dioCall\u201d to\u201cCam era\u201d\nand then to\u201cMo bile Internet\u201d over thepast two decades.", "start_char_idx": 0, "end_char_idx": 326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e345121-7b60-487d-b52c-b1e83f90dbd2": {"__data__": {"id_": "6e345121-7b60-487d-b52c-b1e83f90dbd2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "748996c0-df81-4ea4-845a-4f45ff0a5ffc", "node_type": "1", "metadata": {}, "hash": "caf3f5dd971143447f49b1d2b010d8c3b4db28af5d75fdd4ce926f62887c4233", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5cbeb82e-4b5c-42ee-8720-d886dce28696", "node_type": "1", "metadata": {}, "hash": "4a8a80b2e4ffe3c2466a2d51a18cbca435e05af24ff953165864c5a8e30c9433", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}}, "hash": "3d3216af2a85463ec7fece604a1ca0e48261d5d178be7e2923b8f18fa56e8aa9", "text": "Recent attractive research in the \ufb01eld of concept drift\ntargets more challenging problems, i.e., how to accurately\ndetect concept drift in unstructured and noisy datasets [2],\n[3], how to quantitatively understand concept drift in a\nexplainable way [4], [5], and how to effectively react to drift\nby adapting related knowledge [6], [7].\nSolving these challenges endows prediction and\ndecision-making with the adaptability in an uncertain envi-\nronment.", "start_char_idx": 327, "end_char_idx": 779, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5cbeb82e-4b5c-42ee-8720-d886dce28696": {"__data__": {"id_": "5cbeb82e-4b5c-42ee-8720-d886dce28696", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e345121-7b60-487d-b52c-b1e83f90dbd2", "node_type": "1", "metadata": {}, "hash": "3d3216af2a85463ec7fece604a1ca0e48261d5d178be7e2923b8f18fa56e8aa9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a997008-01b3-4220-966d-e6162d01f4a9", "node_type": "1", "metadata": {}, "hash": "6cf677b579e33b1043329d7ca9061055e5f338c77099dc5a5526f4208ed6ae21", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}}, "hash": "4a8a80b2e4ffe3c2466a2d51a18cbca435e05af24ff953165864c5a8e30c9433", "text": "Conventional research related to machine learning\nhas been signi\ufb01cantly improved by introducing concept\ndrift techniques in data science and arti\ufb01cial intelligence in\n0.00%20.00%40.00%60.00%80.00%100.00%\n2000 - 20052005 - 20102010 - 20152015 - NowAudio CallText MessageMultimediaCameraMobile InternetFig. 1.", "start_char_idx": 780, "end_char_idx": 1087, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a997008-01b3-4220-966d-e6162d01f4a9": {"__data__": {"id_": "6a997008-01b3-4220-966d-e6162d01f4a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5cbeb82e-4b5c-42ee-8720-d886dce28696", "node_type": "1", "metadata": {}, "hash": "4a8a80b2e4ffe3c2466a2d51a18cbca435e05af24ff953165864c5a8e30c9433", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "311e00f4-52f9-426d-ab60-02dc6c173f4e", "node_type": "1", "metadata": {}, "hash": "bbc51b55c76d8f9812a8da460614464116cde7641508d69ce73ff0d7cc0bdcc7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}}, "hash": "6cf677b579e33b1043329d7ca9061055e5f338c77099dc5a5526f4208ed6ae21", "text": "1. Concept drift in mobile phone usage (data used in \ufb01gure are for\ndemonstration only)\ngeneral, and in pattern recognition and data stream mining\nin particular. These new studies enhance the effectiveness of\nanalogical and knowledge reasoning in an ever-changing\nenvironment. A new topic is formed during this devel-\nopment: adaptive data-driven prediction/decision systems.\nIn particular, concept drift is a highly prominent and sig-\nni\ufb01cant issue in the context of the big data era because\nthe uncertainty of data types and data distribution is an\ninherent nature of big data.", "start_char_idx": 1085, "end_char_idx": 1663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "311e00f4-52f9-426d-ab60-02dc6c173f4e": {"__data__": {"id_": "311e00f4-52f9-426d-ab60-02dc6c173f4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a997008-01b3-4220-966d-e6162d01f4a9", "node_type": "1", "metadata": {}, "hash": "6cf677b579e33b1043329d7ca9061055e5f338c77099dc5a5526f4208ed6ae21", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "node_type": "1", "metadata": {}, "hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "class_name": "RelatedNodeInfo"}}, "hash": "bbc51b55c76d8f9812a8da460614464116cde7641508d69ce73ff0d7cc0bdcc7", "text": "Conventional machine learning has two main compo-\nnents: training/learning and prediction. Research on learn-\ning under concept drift presents three new components:\ndrift detection (whether or not drift occurs), drift under-\nstanding (when, how, where it occurs) and drift adaptation\n(reaction to the existence of drift) as shown in Fig. 2. These\nwill be discussed in Section 3-5.", "start_char_idx": 1664, "end_char_idx": 2044, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78a60409-748a-4389-bb04-17d778acc523": {"__data__": {"id_": "78a60409-748a-4389-bb04-17d778acc523", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0883a13e-53b7-43f4-a827-f1caa7f523c0", "node_type": "1", "metadata": {}, "hash": "30ec7584c646fd94a0c49ff893a488df437ee6278c394232c15035ab9eb63b6e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}}, "hash": "2b01fd536c701b8da5286bb61ca85b9b99e2f1d52b9d6c1ea724c6113d31d6ff", "text": "2. These\nwill be discussed in Section 3-5.\nIn literature, a detailed concept drift survey paper [8]\nwas published in 2014 but intentionally left certain sub-\nproblems of concept drift to other publications, such as the\ndetails ofthedata distribution change (P(X)) as mentioned\nin their Section 2.1. In 2015, another comprehensive survey\npaper [9] was published, which surveys and gives tutorial\nof both the established and the state-of-the-art approaches.", "start_char_idx": 0, "end_char_idx": 455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0883a13e-53b7-43f4-a827-f1caa7f523c0": {"__data__": {"id_": "0883a13e-53b7-43f4-a827-f1caa7f523c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78a60409-748a-4389-bb04-17d778acc523", "node_type": "1", "metadata": {}, "hash": "2b01fd536c701b8da5286bb61ca85b9b99e2f1d52b9d6c1ea724c6113d31d6ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4d48728-9c7d-4eec-a6f7-ece4bc1f93f2", "node_type": "1", "metadata": {}, "hash": "f5757496664ced4dce95b54940b77be1dbc4d3146a250c5c19a5d425e91fe864", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}}, "hash": "30ec7584c646fd94a0c49ff893a488df437ee6278c394232c15035ab9eb63b6e", "text": "It provides a hybrid-view about concept drift from twoarXiv:2004.05785v1  [cs.LG]  13 Apr 2020\n\n2\nTraining and LearningPredictionConceptDriftAdaptationConceptDrift UnderstandingUpdateStreamDataConceptDrift DetectionAdriftdetectedNodriftdetected\nFig. 2. Framework for handling concept drift in machine learning. Please\nnote thatsome meth odscandoconcept driftdetectionandconcept drift\nunderstand ingsimultaneously.\nprimary perspectives, active and passive.", "start_char_idx": 456, "end_char_idx": 911, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4d48728-9c7d-4eec-a6f7-ece4bc1f93f2": {"__data__": {"id_": "e4d48728-9c7d-4eec-a6f7-ece4bc1f93f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0883a13e-53b7-43f4-a827-f1caa7f523c0", "node_type": "1", "metadata": {}, "hash": "30ec7584c646fd94a0c49ff893a488df437ee6278c394232c15035ab9eb63b6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c37fcfac-e84f-4814-b17e-7cb612f14b1c", "node_type": "1", "metadata": {}, "hash": "bcb3ac093add167c0157ddd9229c78b645d68541b31e831019e8df9ab465f220", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}}, "hash": "f5757496664ced4dce95b54940b77be1dbc4d3146a250c5c19a5d425e91fe864", "text": "primary perspectives, active and passive. Both survey pa-\npers are comprehensive and can be a good introduction\nto concept drift researching. How ever, many new publica-\ntions have become avail able inthelast three years, even a\nnew category ofdrift detection meth ods hasarisen, named\nmultiplehypoth esistests drift detection. It is necessary to\nreview the past research focuses and give the most recent\nresearch trends about concept drift, which is one of the main\ncontribution of this survey paper.", "start_char_idx": 870, "end_char_idx": 1371, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c37fcfac-e84f-4814-b17e-7cb612f14b1c": {"__data__": {"id_": "c37fcfac-e84f-4814-b17e-7cb612f14b1c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4d48728-9c7d-4eec-a6f7-ece4bc1f93f2", "node_type": "1", "metadata": {}, "hash": "f5757496664ced4dce95b54940b77be1dbc4d3146a250c5c19a5d425e91fe864", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a04c896-bba2-48c0-84f4-d6edcf349507", "node_type": "1", "metadata": {}, "hash": "2fd05176ad48ef9334402034d600a0b4eecb64038a905283cd2f230380926de1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}}, "hash": "bcb3ac093add167c0157ddd9229c78b645d68541b31e831019e8df9ab465f220", "text": "Besides these two publications, four related survey pa-\npers [6], [7], [10], [11] have also provided valuable insights\ninto how to address concept drift, but their speci\ufb01c research\nfocus is only on data stream learning, rather than analyz-\ning concept drift adaptation algorithms and understand-\ning concept drift. Speci\ufb01cally, paper [7] focuses on data\nreduction for stream learning incorporating concept drift,\nwhile [6] only focuses on investigating the development in\nlearning ensembles for data stream learning in a dynamic\nenvironment.", "start_char_idx": 1372, "end_char_idx": 1913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a04c896-bba2-48c0-84f4-d6edcf349507": {"__data__": {"id_": "6a04c896-bba2-48c0-84f4-d6edcf349507", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c37fcfac-e84f-4814-b17e-7cb612f14b1c", "node_type": "1", "metadata": {}, "hash": "bcb3ac093add167c0157ddd9229c78b645d68541b31e831019e8df9ab465f220", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5", "node_type": "1", "metadata": {}, "hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "class_name": "RelatedNodeInfo"}}, "hash": "2fd05176ad48ef9334402034d600a0b4eecb64038a905283cd2f230380926de1", "text": "[11] concerns the evolution of data stream\nclustering, and [10] focuses on investigating the current and\nfuture trends of data stream learning.", "start_char_idx": 1914, "end_char_idx": 2057, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad6d5608-ca39-43eb-9a4e-3d009cb736bb": {"__data__": {"id_": "ad6d5608-ca39-43eb-9a4e-3d009cb736bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88af895f-79a3-4d28-be8e-87e2ae1ee3e4", "node_type": "1", "metadata": {}, "hash": "b4dd60d598a4c38acc4c42197d92f687b8f8c1aa5a1516e1fe51b2c5e09707d1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}}, "hash": "8c0f56fa5543e97776ca4f0c82043cf38bead4295a84384abd7ebe37c21fc1be", "text": "There is therefore a\ngap in the current literature that requires a fuller picture\nof established and the new emerged research on concept\ndrift; a comprehensive review of the three major aspects\nof concept drift: concept drift detection, understanding and\nadaptation, as shown in Fig. 2; and a discussion about the\nnew trend of concept drift research.\nThe selection of references in this survey paper was\nperformed according to the following steps:\nStep 1. Publication database: Science Direct, ACM Digital\nLibrary, IEEE Xplore and SpringerLink.\nStep 2.", "start_char_idx": 0, "end_char_idx": 552, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88af895f-79a3-4d28-be8e-87e2ae1ee3e4": {"__data__": {"id_": "88af895f-79a3-4d28-be8e-87e2ae1ee3e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad6d5608-ca39-43eb-9a4e-3d009cb736bb", "node_type": "1", "metadata": {}, "hash": "8c0f56fa5543e97776ca4f0c82043cf38bead4295a84384abd7ebe37c21fc1be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd464783-b7ef-45e8-a5e9-2501bd330b71", "node_type": "1", "metadata": {}, "hash": "d0ee95de7a3c006824aa82589bc1088f776e7c5986ab9c4870f572db04bd7b63", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}}, "hash": "b4dd60d598a4c38acc4c42197d92f687b8f8c1aa5a1516e1fe51b2c5e09707d1", "text": "Step 2. Preliminary screening of articles: The \ufb01rst search\nwas based on keywords. The articles were then selected\nas references if they 1) present new theory, algorithm or\nmethodology in the area of concept drift, or 2) report a\nconcept drift application.\nStep 3. Result \ufb01ltering for articles: The articles selected\nin Step 2 were divided into three groups: concept drift\ndetection, understanding, and adaptation.", "start_char_idx": 545, "end_char_idx": 958, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd464783-b7ef-45e8-a5e9-2501bd330b71": {"__data__": {"id_": "bd464783-b7ef-45e8-a5e9-2501bd330b71", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88af895f-79a3-4d28-be8e-87e2ae1ee3e4", "node_type": "1", "metadata": {}, "hash": "b4dd60d598a4c38acc4c42197d92f687b8f8c1aa5a1516e1fe51b2c5e09707d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37b83dcf-29ac-42a0-a7b9-21cdb632743b", "node_type": "1", "metadata": {}, "hash": "0fc4ddadbc56ebf79ea845cb229411b46fc5c459d7d9f1eb98fc2dbe601c3d76", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}}, "hash": "d0ee95de7a3c006824aa82589bc1088f776e7c5986ab9c4870f572db04bd7b63", "text": "The references in\neach group were \ufb01ltered again, based on 1) Time: published\nmainly within the last 10 years, or 2) Impact: published in\nhigh quality journals/conferences or having high citations.\nStep 4. Dataset selection: To help readers test their re-\nsearch results, this paper lists popular datasets and their\ncharacteristics, the dataset providers, and how each dataset\ncan be used.", "start_char_idx": 959, "end_char_idx": 1347, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37b83dcf-29ac-42a0-a7b9-21cdb632743b": {"__data__": {"id_": "37b83dcf-29ac-42a0-a7b9-21cdb632743b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd464783-b7ef-45e8-a5e9-2501bd330b71", "node_type": "1", "metadata": {}, "hash": "d0ee95de7a3c006824aa82589bc1088f776e7c5986ab9c4870f572db04bd7b63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1e2ae35-a5fd-4405-a687-435321d65707", "node_type": "1", "metadata": {}, "hash": "ec7381534eb2835c5f91929b83c4091a162a8c43377a275fac0eb980ce7dbd45", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}}, "hash": "0fc4ddadbc56ebf79ea845cb229411b46fc5c459d7d9f1eb98fc2dbe601c3d76", "text": "On completion of this process, 137 research articles, 10\nwidely used synthetic datasets for evaluating the perfor-\nmance of learning algorithms dealing with concept drift,\nand 14 publicly available and widely used real-world\ndatasets were listed for discussion.\nThe main contributions of this paper are:1) It perceptively summarizes concept drift research\nachievements and clusters the research into three cat-\negories: concept drift detection, understanding and\nadaptation, providing a clear framework for concept\ndrift research development (Fig.", "start_char_idx": 1348, "end_char_idx": 1895, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1e2ae35-a5fd-4405-a687-435321d65707": {"__data__": {"id_": "f1e2ae35-a5fd-4405-a687-435321d65707", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37b83dcf-29ac-42a0-a7b9-21cdb632743b", "node_type": "1", "metadata": {}, "hash": "0fc4ddadbc56ebf79ea845cb229411b46fc5c459d7d9f1eb98fc2dbe601c3d76", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e043331c-76f3-4333-9839-e0485251b84e", "node_type": "1", "metadata": {}, "hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "class_name": "RelatedNodeInfo"}}, "hash": "ec7381534eb2835c5f91929b83c4091a162a8c43377a275fac0eb980ce7dbd45", "text": "2);\n2) It proposes a new component, concept drift under-\nstanding, for retrieving information about the status of\nconcept drift in aspects of when, how, and where.", "start_char_idx": 1896, "end_char_idx": 2059, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6e54add-e37f-4f79-9631-c4e851276857": {"__data__": {"id_": "b6e54add-e37f-4f79-9631-c4e851276857", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06", "node_type": "1", "metadata": {}, "hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75fdbcf3-c634-4f5a-9813-742beb539cba", "node_type": "1", "metadata": {}, "hash": "57b83be8e6a6967dedeb5994b97ca1933f022a2a29ed16c05bd49ee833ac542e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06", "node_type": "1", "metadata": {}, "hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "class_name": "RelatedNodeInfo"}}, "hash": "8ba5304c1f5bd6364c33c689316ac28d41b578cc7376d1fa0966e4bbbd2a2ad0", "text": "This\nalso creates a connection between drift detection and\ndrift adaptation;\n3) It uncovers several very new concept drift techniques,\nsuch as active learning under concept drift and fuzzy\ncompetence model-based drift detection, and identi\ufb01es\nrelated research involving concept drift;\n4) It systematically examines two sets of concept drift\ndatasets, Synthetic datasets and Real-world datasets,\nthrough multiple dimensions: dataset description,\navailability, suitability for type of drift, and existing\napplications;\n5) It suggests several emerging research topics and poten-\ntial research directions in this area.\nThe remainder of this paper is structured as follows.", "start_char_idx": 0, "end_char_idx": 668, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75fdbcf3-c634-4f5a-9813-742beb539cba": {"__data__": {"id_": "75fdbcf3-c634-4f5a-9813-742beb539cba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06", "node_type": "1", "metadata": {}, "hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6e54add-e37f-4f79-9631-c4e851276857", "node_type": "1", "metadata": {}, "hash": "8ba5304c1f5bd6364c33c689316ac28d41b578cc7376d1fa0966e4bbbd2a2ad0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06", "node_type": "1", "metadata": {}, "hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "class_name": "RelatedNodeInfo"}}, "hash": "57b83be8e6a6967dedeb5994b97ca1933f022a2a29ed16c05bd49ee833ac542e", "text": "The remainder of this paper is structured as follows.\nIn Section 2, the de\ufb01nitions of concept drift are given\nand discussed.", "start_char_idx": 615, "end_char_idx": 739, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a139793c-f41e-4034-9329-ba8027448489": {"__data__": {"id_": "a139793c-f41e-4034-9329-ba8027448489", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b84cf7ed-6563-4ef5-8f17-e46f84f1f1d4", "node_type": "1", "metadata": {}, "hash": "8ab198a08e2d220653ad0f94cc66e280111489511337ca572e81b559478fac99", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}}, "hash": "21be413fac85bc2441d2950a7c5663fb1361d8a31129df4ed6258436ce7a10ca", "text": "Section 3 presents research methods and\nalgorithms in concept drift detection. Section 4 discusses\nresearch developments in concept drift understanding. Re-\nsearch results on drift adaptation (concept drift reaction) are\nreported in Section 5. Section 6 presents evaluation systems\nand related datasets used to test concept drift algorithms.\nSection 7 summaries related research concerning the concept\ndrift problem. Section 8 presents a comprehensive analysis\nof main \ufb01ndings and future research directions.", "start_char_idx": 0, "end_char_idx": 508, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b84cf7ed-6563-4ef5-8f17-e46f84f1f1d4": {"__data__": {"id_": "b84cf7ed-6563-4ef5-8f17-e46f84f1f1d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a139793c-f41e-4034-9329-ba8027448489", "node_type": "1", "metadata": {}, "hash": "21be413fac85bc2441d2950a7c5663fb1361d8a31129df4ed6258436ce7a10ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99a7d8b7-dea2-4b36-b361-22726e9d6ab3", "node_type": "1", "metadata": {}, "hash": "c546d2b97f72134ecf41430163a183fe6d9fb5ea81ca2393c89cd8de494d188c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}}, "hash": "8ab198a08e2d220653ad0f94cc66e280111489511337ca572e81b559478fac99", "text": "Section 8 presents a comprehensive analysis\nof main \ufb01ndings and future research directions.\n2 P ROBLEM DESCRIPTION\nThis section \ufb01rst gives the formal de\ufb01nition and the sources\nof concept drift in Section 2.1. Then, in Section 2.2, the\ncommonly de\ufb01ned types of concept drift are introduced.\n2.1 Concept drift de\ufb01nition and the sources\nConcept drift is a phenomenon in which the statistical prop-\nerties of a target domain change over time in an arbitrary\nway [3].", "start_char_idx": 417, "end_char_idx": 879, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99a7d8b7-dea2-4b36-b361-22726e9d6ab3": {"__data__": {"id_": "99a7d8b7-dea2-4b36-b361-22726e9d6ab3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b84cf7ed-6563-4ef5-8f17-e46f84f1f1d4", "node_type": "1", "metadata": {}, "hash": "8ab198a08e2d220653ad0f94cc66e280111489511337ca572e81b559478fac99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a757b4f-27b4-4815-ab07-91e1f863e5ea", "node_type": "1", "metadata": {}, "hash": "b72749080e488caa60384e4bcde1048bf59f464570b61340f6446d370440af58", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}}, "hash": "c546d2b97f72134ecf41430163a183fe6d9fb5ea81ca2393c89cd8de494d188c", "text": "It was \ufb01rst proposed by [12] who aimed to point\nout that noise data may turn to non-noise information at\ndifferent time. These changes might be caused by changes\nin hidden variables which cannot be measured directly [4].\nFormally, concept drift is de\ufb01ned as follows:\nGiven a time period [0,t], a set of samples, de-\nnoted asS0,t={d0,dt}, wheredi= (Xi,yi)is\none observation (or a data instance), Xiis the fea-\nture vector, yiis the label,", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a757b4f-27b4-4815-ab07-91e1f863e5ea": {"__data__": {"id_": "0a757b4f-27b4-4815-ab07-91e1f863e5ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99a7d8b7-dea2-4b36-b361-22726e9d6ab3", "node_type": "1", "metadata": {}, "hash": "c546d2b97f72134ecf41430163a183fe6d9fb5ea81ca2393c89cd8de494d188c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f211b5b6-4e8d-4502-aa93-86ea66d74dc5", "node_type": "1", "metadata": {}, "hash": "89b2b7b1a99ee177676835f9d709bfafc4713aed9e624baf6a0f7c6b5327561c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}}, "hash": "b72749080e488caa60384e4bcde1048bf59f464570b61340f6446d370440af58", "text": "Xiis the fea-\nture vector, yiis the label, and S0,tfollows a certain\ndistribution F0,t(X,y).Concept drift occurs attimes -\ntampt+ 1,ifF0,t(X,y)\u0338=Ft+1,\u221e(X,y),denoted as\n\u2203t:Pt(X,y)\u0338=Pt+1(X,y)[2], [8], [13], [14].", "start_char_idx": 1279, "end_char_idx": 1489, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f211b5b6-4e8d-4502-aa93-86ea66d74dc5": {"__data__": {"id_": "f211b5b6-4e8d-4502-aa93-86ea66d74dc5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a757b4f-27b4-4815-ab07-91e1f863e5ea", "node_type": "1", "metadata": {}, "hash": "b72749080e488caa60384e4bcde1048bf59f464570b61340f6446d370440af58", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "node_type": "1", "metadata": {}, "hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "class_name": "RelatedNodeInfo"}}, "hash": "89b2b7b1a99ee177676835f9d709bfafc4713aed9e624baf6a0f7c6b5327561c", "text": "y)[2], [8], [13], [14].\nConcept drift has also been de\ufb01ned by various authors\nusing alternative names, such as dataset shift [15] or concept\nshift [1].", "start_char_idx": 1466, "end_char_idx": 1617, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bacfb2e-54ab-4fbd-8919-073ac4fee14b": {"__data__": {"id_": "1bacfb2e-54ab-4fbd-8919-073ac4fee14b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb513908-4dcf-4847-a40a-841cb05f958c", "node_type": "1", "metadata": {}, "hash": "58c577f64bff4beac14844f726dc7558549e555b502f80c950277d27c5af2570", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}}, "hash": "f48c8d7a409c7f0c048f8c710b97254391c9102c875794489192fcfc1f89d7c7", "text": "Other related terminologies were introduced in\n[16]\u2019s work, the authors proposed that concept drift or shift\nis only one subcategory of dataset shift and the dataset\nshift is consists of covariate shift, prior probability shift and\n\n3\nx1x1x2x2\nx1x1x2x2 Pt(X) drift\nPt(y|X)  remains\ndata distribution at time t data distribution at time t+1\nx1x1x2x2\nx1x1x2x2Pt(X)\nPt(y|X)  drift\ndata distribution at time t data", "start_char_idx": 0, "end_char_idx": 410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb513908-4dcf-4847-a40a-841cb05f958c": {"__data__": {"id_": "bb513908-4dcf-4847-a40a-841cb05f958c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bacfb2e-54ab-4fbd-8919-073ac4fee14b", "node_type": "1", "metadata": {}, "hash": "f48c8d7a409c7f0c048f8c710b97254391c9102c875794489192fcfc1f89d7c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96860bce-6b4b-4bb2-9d51-0061ac9a25fc", "node_type": "1", "metadata": {}, "hash": "4d505db25d5fa4e79e141af28af023408a62325928ddc3340eedebc4d994f6b7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}}, "hash": "58c577f64bff4beac14844f726dc7558549e555b502f80c950277d27c5af2570", "text": "drift\ndata distribution at time t data distribution at time t+1x1x1x2x2\nx1x1x2x2 Pt(y|X)  drift\nPt(X) remains\ndata distribution at time t data distribution at time t+1\nTwo dimensional \ndata X={x1, x2} \nwith two class label \ny={y0,", "start_char_idx": 372, "end_char_idx": 602, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96860bce-6b4b-4bb2-9d51-0061ac9a25fc": {"__data__": {"id_": "96860bce-6b4b-4bb2-9d51-0061ac9a25fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb513908-4dcf-4847-a40a-841cb05f958c", "node_type": "1", "metadata": {}, "hash": "58c577f64bff4beac14844f726dc7558549e555b502f80c950277d27c5af2570", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6e19b57-9b42-4a23-b4cd-aa4173c67352", "node_type": "1", "metadata": {}, "hash": "944f628cc9261c10fc5fee370126bd5fc95a753066a7fd8527e4959f108afd49", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}}, "hash": "4d505db25d5fa4e79e141af28af023408a62325928ddc3340eedebc4d994f6b7", "text": "X={x1, x2} \nwith two class label \ny={y0, y1} label y0 at time t\nlabel y1 at time t\nlabel y0 at time t\nlabel y1 at time tlabel y0 at time t\nlabel y1 at time t\nlabel y0 at time t\nlabel y1 at time t(a) Source  I (b) Source  II\n(c) Source III\nFig. 3. Three sources of concept drift\nconcept shift. These de\ufb01nitions clearly stated the research\nscope of each research topics.", "start_char_idx": 562, "end_char_idx": 930, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6e19b57-9b42-4a23-b4cd-aa4173c67352": {"__data__": {"id_": "b6e19b57-9b42-4a23-b4cd-aa4173c67352", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96860bce-6b4b-4bb2-9d51-0061ac9a25fc", "node_type": "1", "metadata": {}, "hash": "4d505db25d5fa4e79e141af28af023408a62325928ddc3340eedebc4d994f6b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e76224c-f86e-4e55-81b0-9d22f11fb5ee", "node_type": "1", "metadata": {}, "hash": "9521a49d25e726c71c0af03b0a038deeca3da008cdab39757e2b19ac5a7f42a5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}}, "hash": "944f628cc9261c10fc5fee370126bd5fc95a753066a7fd8527e4959f108afd49", "text": "These de\ufb01nitions clearly stated the research\nscope of each research topics. However, since concept drift is\nusually associated with covariate shift and prior probability\nshift, and an increasing number of publications [2], [8], [13],\n[14] refer to the term \u201dconcept drift\u201d as the problem in\nwhich\u2203t:Pt(X,y)\u0338=Pt+1(X,y). Therefore, we apply the\nsame de\ufb01nition of concept drift in this survey.", "start_char_idx": 855, "end_char_idx": 1245, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e76224c-f86e-4e55-81b0-9d22f11fb5ee": {"__data__": {"id_": "3e76224c-f86e-4e55-81b0-9d22f11fb5ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6e19b57-9b42-4a23-b4cd-aa4173c67352", "node_type": "1", "metadata": {}, "hash": "944f628cc9261c10fc5fee370126bd5fc95a753066a7fd8527e4959f108afd49", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c6691f0b-8062-4071-a412-2655ff6353c7", "node_type": "1", "metadata": {}, "hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "class_name": "RelatedNodeInfo"}}, "hash": "9521a49d25e726c71c0af03b0a038deeca3da008cdab39757e2b19ac5a7f42a5", "text": "Therefore, we apply the\nsame de\ufb01nition of concept drift in this survey. Accordingly,\nconcept drift at time tcan be de\ufb01ned as the change of\njoint probability of Xandyat timet.", "start_char_idx": 1174, "end_char_idx": 1348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84f15230-8f5d-4cd7-a73f-6f5a48e1cdb9": {"__data__": {"id_": "84f15230-8f5d-4cd7-a73f-6f5a48e1cdb9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bcecdd7-150c-4362-9436-57a931a59efa", "node_type": "1", "metadata": {}, "hash": "a41b29041f2fcce817f6393655317d898e62d1d7dcfb86bbf3c3036a30e5e908", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}}, "hash": "89b08c5e9e17b81c3478a0854c187b1921075c755c8803516bc2696c5f8037b8", "text": "Since the joint\nprobability Pt(X,y)can be decomposed into two parts as\nPt(X,y) =Pt(X)\u00d7Pt(y|X), concept drift can be triggered\nby three sources:\n\u2022Source I :Pt(X)\u0338=Pt+1(X)whilePt(y|X) =\nPt+1(y|X), that is, the research focus is the drift in\nPt(X)whilePt(y|X)remains unchanged. Since Pt(X)\ndrift does not affect the decision boundary, it has also\nbeen considered as virtual drift [7], Fig. 3(a).", "start_char_idx": 0, "end_char_idx": 392, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bcecdd7-150c-4362-9436-57a931a59efa": {"__data__": {"id_": "9bcecdd7-150c-4362-9436-57a931a59efa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84f15230-8f5d-4cd7-a73f-6f5a48e1cdb9", "node_type": "1", "metadata": {}, "hash": "89b08c5e9e17b81c3478a0854c187b1921075c755c8803516bc2696c5f8037b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "524c17d3-1318-4944-9caa-e86e167f989b", "node_type": "1", "metadata": {}, "hash": "41f806d0c53c61c136d3babfde74eb5dfaa527d0a04472b06a90f67e4c1171d7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}}, "hash": "a41b29041f2fcce817f6393655317d898e62d1d7dcfb86bbf3c3036a30e5e908", "text": "3(a).\n\u2022Source II :Pt(y|X)\u0338=Pt+1(y|X)whilePt(X) =\nPt+1(X)whilePt(X)remains unchanged. This drift\nwill cause decision boundary change and lead to learn-\ning accuracy decreasing, which is also called actual drift,\nFig. 3(b).\n\u2022Source III : mixture of Source I and Source II, namely\nPt(X)\u0338=Pt+1(X)andPt(y|X)\u0338=Pt+1(y|X).", "start_char_idx": 387, "end_char_idx": 701, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "524c17d3-1318-4944-9caa-e86e167f989b": {"__data__": {"id_": "524c17d3-1318-4944-9caa-e86e167f989b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bcecdd7-150c-4362-9436-57a931a59efa", "node_type": "1", "metadata": {}, "hash": "a41b29041f2fcce817f6393655317d898e62d1d7dcfb86bbf3c3036a30e5e908", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afacf485-f5aa-4cd5-87c5-a593fb8fc08b", "node_type": "1", "metadata": {}, "hash": "2d225b9c2c9cbc1eefd60de2c06b04f62b32856cc147596a3eec74621a1df68a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}}, "hash": "41f806d0c53c61c136d3babfde74eb5dfaa527d0a04472b06a90f67e4c1171d7", "text": "Concept\ndrift focus on the drift of both Pt(y|X)andPt(X),\nsince both changes convey important information about\nlearning environment Fig. 3(c).\nFig. 3 demonstrates how these sources differ from each\nother in a two-dimensional feature space. Source I is feature\nspace drift, and Source II is decision boundary drift. In\nmany real-world applications, Source I and Source II occur\ntogether, which creates Source III.\n2.2 The types of concept drift\nCommonly, concept drift can be distinguished as four types\n[8] as shown in Fig.", "start_char_idx": 702, "end_char_idx": 1226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "afacf485-f5aa-4cd5-87c5-a593fb8fc08b": {"__data__": {"id_": "afacf485-f5aa-4cd5-87c5-a593fb8fc08b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "524c17d3-1318-4944-9caa-e86e167f989b", "node_type": "1", "metadata": {}, "hash": "41f806d0c53c61c136d3babfde74eb5dfaa527d0a04472b06a90f67e4c1171d7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7", "node_type": "1", "metadata": {}, "hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "class_name": "RelatedNodeInfo"}}, "hash": "2d225b9c2c9cbc1eefd60de2c06b04f62b32856cc147596a3eec74621a1df68a", "text": "4:\nResearch into concept drift adaptation in Types 1-3 fo-\ncuses on how to minimize the drop in accuracy and achieve\nthe fastest recovery rate during the concept transformation\nprocess. In contrast, the study of Type 4 drift emphasizes\nthe use of historical concepts, that is, how to \ufb01nd the best\nmatched historical concepts with the shortest time. The new\nconcept may suddenly, incrementally, or gradually reoccur.\nTo better demonstrate the differences between these\ntypes, the term \u201cintermediate concept\u201d was introduced by\n[8] to describe the transformation between concepts.", "start_char_idx": 1227, "end_char_idx": 1804, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b425d7e-e5b2-43c4-91c4-e413758dfe0f": {"__data__": {"id_": "2b425d7e-e5b2-43c4-91c4-e413758dfe0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ed72ded-7ebb-46e6-a73e-e9a943d25ff9", "node_type": "1", "metadata": {}, "hash": "b50bad1982aaf32535bc6fe452ee6776b8706291e06237830d65e7c2a32423ce", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}}, "hash": "4b8cfb583477884c6e64e4b9072ea892edcb1528a61d8a9e9176c346364358bf", "text": "As\nmentioned by [4], a concept drift may not only take place\nSuddenDrift:Anewconceptoccurswithinashorttime.\nDatadistributionTimeGradualDrift:Anewconceptgraduallyreplacesanoldoneoveraperiodoftime.\nDatadistributionTimeIncrementalDrift:Anoldconceptincrementallychangestoanewconceptoveraperiodoftime.\nDatadistributionTimeReoccurringConcepts:Anoldconceptmayreoccuraftersometime.\nDatadistributionTimeFig. 4. An example of concept drift types.", "start_char_idx": 0, "end_char_idx": 436, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ed72ded-7ebb-46e6-a73e-e9a943d25ff9": {"__data__": {"id_": "8ed72ded-7ebb-46e6-a73e-e9a943d25ff9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b425d7e-e5b2-43c4-91c4-e413758dfe0f", "node_type": "1", "metadata": {}, "hash": "4b8cfb583477884c6e64e4b9072ea892edcb1528a61d8a9e9176c346364358bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "376ef81a-65d9-46d5-9cb2-6b268a22b204", "node_type": "1", "metadata": {}, "hash": "d5739e4b206ce5f25d704f65e18ef306190e548366570ad332438c098c7aad1f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}}, "hash": "b50bad1982aaf32535bc6fe452ee6776b8706291e06237830d65e7c2a32423ce", "text": "DatadistributionTimeFig. 4. An example of concept drift types.\nat an exact timestamp, but may also last for a long period.\nAs a result, intermediate concepts may appear during the\ntransformation as one concept (starting concept) changes to\nanother (ending concept). An intermediate concept can be\na mixture of the starting concept and the ending concept,\nlike the incremental drift, or one of the starting or ending\nconcept, such as the gradual drift.\n3 C ONCEPT DRIFT DETECTION\nThis section focuses on summarizing concept drift detection\nalgorithms.", "start_char_idx": 374, "end_char_idx": 924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "376ef81a-65d9-46d5-9cb2-6b268a22b204": {"__data__": {"id_": "376ef81a-65d9-46d5-9cb2-6b268a22b204", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ed72ded-7ebb-46e6-a73e-e9a943d25ff9", "node_type": "1", "metadata": {}, "hash": "b50bad1982aaf32535bc6fe452ee6776b8706291e06237830d65e7c2a32423ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f153a87d-c188-45a6-89ac-390f1bc4d48b", "node_type": "1", "metadata": {}, "hash": "d3ab7300e3f8ccb31f815431c70c5f5354672bda732db93f3c557aa6b43e1fd8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}}, "hash": "d5739e4b206ce5f25d704f65e18ef306190e548366570ad332438c098c7aad1f", "text": "Section 3.1 introduces a typical drift detection\nframework. Then, Section 3.2 systematically reviews and\ncategorizes drift detection algorithms according to their im-\nplementation details for each component in the framework.\nAt last, Section 3.3 lists the state-of-the-art drift detection al-\ngorithms with comparisons of their implementation details.\n3.1 A general framework for drift detection\nDrift detection refers to the techniques and mechanisms\nthat characterize and quantify concept drift via identifying\nchange points or change time intervals [17]. A general\nframework for drift detection contains four stages, as shown\nin Fig.", "start_char_idx": 925, "end_char_idx": 1561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f153a87d-c188-45a6-89ac-390f1bc4d48b": {"__data__": {"id_": "f153a87d-c188-45a6-89ac-390f1bc4d48b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "376ef81a-65d9-46d5-9cb2-6b268a22b204", "node_type": "1", "metadata": {}, "hash": "d5739e4b206ce5f25d704f65e18ef306190e548366570ad332438c098c7aad1f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5577ddcf-d70a-4b99-b7df-5d992f138553", "node_type": "1", "metadata": {}, "hash": "b9b98bd1cc57675633c47444914ad9ca93bd0e4041e5a116da04b5315469a250", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}}, "hash": "d3ab7300e3f8ccb31f815431c70c5f5354672bda732db93f3c557aa6b43e1fd8", "text": "A general\nframework for drift detection contains four stages, as shown\nin Fig. 5.\nStage 1 (Data Retrieval) aims to retrieve data chunks\nfrom data streams. Since a single data instance cannot carry\nenough information to infer the overall distribution [2],\nknowing how to organize data chunks to form a meaningful\npattern or knowledge is important in data stream analysis\ntasks [7].", "start_char_idx": 1483, "end_char_idx": 1863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5577ddcf-d70a-4b99-b7df-5d992f138553": {"__data__": {"id_": "5577ddcf-d70a-4b99-b7df-5d992f138553", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f153a87d-c188-45a6-89ac-390f1bc4d48b", "node_type": "1", "metadata": {}, "hash": "d3ab7300e3f8ccb31f815431c70c5f5354672bda732db93f3c557aa6b43e1fd8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62", "node_type": "1", "metadata": {}, "hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "class_name": "RelatedNodeInfo"}}, "hash": "b9b98bd1cc57675633c47444914ad9ca93bd0e4041e5a116da04b5315469a250", "text": "Stage 2 (Data Modeling) aims to abstract the retrieved\ndata and extract the key features containing sensitive infor-\nmation, that is, the features of the data that most impact\na system if they drift. This stage is optional, because it\nmainly concerns dimensionality reduction, or sample size\nreduction, to meet storage and online speed requirements\n[4].", "start_char_idx": 1864, "end_char_idx": 2217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "009f5a73-a8af-4a0b-aa41-a1e07008165c": {"__data__": {"id_": "009f5a73-a8af-4a0b-aa41-a1e07008165c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b074dca-a7b5-44e5-a3df-e0f548a256ca", "node_type": "1", "metadata": {}, "hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2b074dca-a7b5-44e5-a3df-e0f548a256ca", "node_type": "1", "metadata": {}, "hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "class_name": "RelatedNodeInfo"}}, "hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "text": "Stage 3 (Test Statistics Calculation) is the measurement of\ndissimilarity, or distance estimation. It quanti\ufb01es the sever-\nity of the drift and forms test statistics for the hypothesis\ntest. It is considered to be the most challenging aspect of\nconcept drift detection. The problem of how to de\ufb01ne an\naccurate and robust dissimilarity measurement is still an\nopen question.", "start_char_idx": 0, "end_char_idx": 373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38dad7ef-6574-49af-9aa8-6c7d173eb5ad": {"__data__": {"id_": "38dad7ef-6574-49af-9aa8-6c7d173eb5ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4be7bf4-d5e9-419a-bf13-308b1a4d04c5", "node_type": "1", "metadata": {}, "hash": "c8ee4503327fd1443083ef53829eb403787b6dacdbe772be23ddc26a650c1175", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}}, "hash": "7795bd802afe6f01187ccc7d39b6e70d08e4da4eea05028cdd303813f42c83a0", "text": "A dissimilarity measurement can also be\n\n4\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......Historical DataNew DataStage 1: Data Retrieval data stream time line \nAbstracted Data Model (New)Abstracted DataModel (Historical)Stage 2 (optional): Data ModelingHistorical DataNew DataDissimilarity MeasurementStage 3: Test Statistics CalculationDissimilarity Significance TestStage 4: Hypothesis Test (Statistical Bounds)\nFig. 5.", "start_char_idx": 0, "end_char_idx": 423, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4be7bf4-d5e9-419a-bf13-308b1a4d04c5": {"__data__": {"id_": "f4be7bf4-d5e9-419a-bf13-308b1a4d04c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38dad7ef-6574-49af-9aa8-6c7d173eb5ad", "node_type": "1", "metadata": {}, "hash": "7795bd802afe6f01187ccc7d39b6e70d08e4da4eea05028cdd303813f42c83a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf48e7ea-2fd7-4988-b4fd-7b34e174bf8a", "node_type": "1", "metadata": {}, "hash": "2dcdd8b33e853b760491a9e6b2c0ae383a7d18281602bbb7906f581dd4e2396d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}}, "hash": "c8ee4503327fd1443083ef53829eb403787b6dacdbe772be23ddc26a650c1175", "text": "5. An overall framework for concept drift detection\nused in clustering evaluation [11], and to determine the\ndissimilarity between sample sets [18].\nStage 4 (Hypothesis Test) uses a speci\ufb01c hypothesis test\nto evaluate the statistical signi\ufb01cance of the change observed\nin Stage 3, or the p-value. They are used to determine\ndrift detection accuracy by proving the statistical bounds\nof the test statistics proposed in Stage 3.", "start_char_idx": 421, "end_char_idx": 847, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf48e7ea-2fd7-4988-b4fd-7b34e174bf8a": {"__data__": {"id_": "cf48e7ea-2fd7-4988-b4fd-7b34e174bf8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4be7bf4-d5e9-419a-bf13-308b1a4d04c5", "node_type": "1", "metadata": {}, "hash": "c8ee4503327fd1443083ef53829eb403787b6dacdbe772be23ddc26a650c1175", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5de52c00-221a-4a60-a3b5-3b93bbd53930", "node_type": "1", "metadata": {}, "hash": "2270247434eb1a1fb8149c0bf6bbb5e21b86e44cb929494b0c803b0a1b4b08de", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}}, "hash": "2dcdd8b33e853b760491a9e6b2c0ae383a7d18281602bbb7906f581dd4e2396d", "text": "Without Stage\n4, the test statistics acquired in Stage 3 are meaningless\nfor drift detection, because they cannot determine the drift\ncon\ufb01dence interval, that is, how likely it is that the change\nis caused by concept drift and not noise or random sample\nselection bias [3]. The most commonly used hypothesis tests\nare: estimating the distribution of the test statistics [19],\n[20], bootstrapping [21], [22], the permutation test [3], and\nHoeffding\u2019s inequality-based bound identi\ufb01cation [23].", "start_char_idx": 848, "end_char_idx": 1340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5de52c00-221a-4a60-a3b5-3b93bbd53930": {"__data__": {"id_": "5de52c00-221a-4a60-a3b5-3b93bbd53930", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf48e7ea-2fd7-4988-b4fd-7b34e174bf8a", "node_type": "1", "metadata": {}, "hash": "2dcdd8b33e853b760491a9e6b2c0ae383a7d18281602bbb7906f581dd4e2396d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85378cce-603f-4964-b2fb-6994fc2751e0", "node_type": "1", "metadata": {}, "hash": "c5b77cbfd99951bc5316c00c2766ec9a698ed654a04ae081cf069e3fd3afc9a0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}}, "hash": "2270247434eb1a1fb8149c0bf6bbb5e21b86e44cb929494b0c803b0a1b4b08de", "text": "It is also worth to mention that, without Stage 1, the\nconcept drift detection problem can be considered as a two-\nsample test problem which examines whether the popula-\ntion of two given sample sets are from the same distribution\n[18]. In other words, any multivariate two-sample test is an\noption that can be adopted in Stages 2-4 to detect concept\ndrift [18].", "start_char_idx": 1341, "end_char_idx": 1703, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85378cce-603f-4964-b2fb-6994fc2751e0": {"__data__": {"id_": "85378cce-603f-4964-b2fb-6994fc2751e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5de52c00-221a-4a60-a3b5-3b93bbd53930", "node_type": "1", "metadata": {}, "hash": "2270247434eb1a1fb8149c0bf6bbb5e21b86e44cb929494b0c803b0a1b4b08de", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437", "node_type": "1", "metadata": {}, "hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "class_name": "RelatedNodeInfo"}}, "hash": "c5b77cbfd99951bc5316c00c2766ec9a698ed654a04ae081cf069e3fd3afc9a0", "text": "However, in some cases, the distribution drift may\nnot be included in the target features, therefore the selection\nof the target feature will affect the overall performance of\na learning system and is a critical problem in concept drift\ndetection [24].", "start_char_idx": 1704, "end_char_idx": 1956, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2ace353-6b5a-4656-bfa8-9b00d255ab81": {"__data__": {"id_": "a2ace353-6b5a-4656-bfa8-9b00d255ab81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe7fb1d1-8389-4a3c-aabd-50f7633b81bf", "node_type": "1", "metadata": {}, "hash": "d032e0a0c7e0a1ce49fca3ad051de9963cd4589b42ae59638446242591ce03b5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}}, "hash": "02eb2f073dd3d183f0f28a65c1b37420bf7aa6b0b5a8e761b2652570e5ba2cb7", "text": "3.2 Concept drift detection algorithms\nThis section surveys drift detection methods and algo-\nrithms, which are classi\ufb01ed into three categories in terms\nof the test statistics they apply.\n3.2.1 Error rate-based drift detection\nPLearner error rate-based drift detection algorithms form\nthe largest category of algorithms. These algorithms focus\non tracking changes in the online error rate of base classi-\n\ufb01ers. If an increase or decrease of the error rate is proven to\nbe statistically signi\ufb01cant, an upgrade process (drift alarm)\nwill be triggered.", "start_char_idx": 0, "end_char_idx": 549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe7fb1d1-8389-4a3c-aabd-50f7633b81bf": {"__data__": {"id_": "fe7fb1d1-8389-4a3c-aabd-50f7633b81bf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2ace353-6b5a-4656-bfa8-9b00d255ab81", "node_type": "1", "metadata": {}, "hash": "02eb2f073dd3d183f0f28a65c1b37420bf7aa6b0b5a8e761b2652570e5ba2cb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "292f08cf-acab-4303-ae18-212c0a7e662b", "node_type": "1", "metadata": {}, "hash": "46ea8d177c0b1a561ba33b14486103c98478d877b430133c3fe85c71d2f8e715", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}}, "hash": "d032e0a0c7e0a1ce49fca3ad051de9963cd4589b42ae59638446242591ce03b5", "text": "DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......Historical DataNew DataFig. 6. Landmark time window for drift detection. The starting point of\nthe window is \ufb01xed, while the end point of the window will be extended\nafter a new data instance has been received.\nOne of the most-referenced concept drift detection algo-\nrithms is the Drift Detection Method (DDM) [20].", "start_char_idx": 550, "end_char_idx": 915, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "292f08cf-acab-4303-ae18-212c0a7e662b": {"__data__": {"id_": "292f08cf-acab-4303-ae18-212c0a7e662b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe7fb1d1-8389-4a3c-aabd-50f7633b81bf", "node_type": "1", "metadata": {}, "hash": "d032e0a0c7e0a1ce49fca3ad051de9963cd4589b42ae59638446242591ce03b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd134712-a875-427c-a4f4-40928b64e25c", "node_type": "1", "metadata": {}, "hash": "e5541ad3d2a9dd2e478fa4bbc8adf69df6bdca2889ffac20ecd954e0bcff4176", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}}, "hash": "46ea8d177c0b1a561ba33b14486103c98478d877b430133c3fe85c71d2f8e715", "text": "It was\nthe \ufb01rst algorithm to de\ufb01ne the warning level and drift\nlevel for concept drift detection. In this algorithm, Stage\n1 is implemented by a landmark time window, as shown\nin Fig. 6. When a new data instance become available for\nevaluation, DDM detects whether the overall online error\nrate within the time window has increased signi\ufb01cantly.\nIf the con\ufb01dence level of the observed error rate change\nreaches the warning level, DDM starts to build a new learner\nwhile using the old learner for predictions.", "start_char_idx": 916, "end_char_idx": 1424, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd134712-a875-427c-a4f4-40928b64e25c": {"__data__": {"id_": "dd134712-a875-427c-a4f4-40928b64e25c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "292f08cf-acab-4303-ae18-212c0a7e662b", "node_type": "1", "metadata": {}, "hash": "46ea8d177c0b1a561ba33b14486103c98478d877b430133c3fe85c71d2f8e715", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b", "node_type": "1", "metadata": {}, "hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "class_name": "RelatedNodeInfo"}}, "hash": "e5541ad3d2a9dd2e478fa4bbc8adf69df6bdca2889ffac20ecd954e0bcff4176", "text": "If the change\nreached the drift level, the old learner will be replaced\nby the new learner for further prediction tasks. To acquire\nthe online error rate, DDM needs a classi\ufb01er to make the\npredictions. This process converts training data to a learning\nmodel, which is considered as the Stage 2 (Data Modeling).\nThe test statistics in Stage 3 constitute the online error rate.\nThe hypothesis test, Stage 4, is conducted by estimating\nthe distribution of the online error rate and calculating the\nwarning level and drift threshold.", "start_char_idx": 1425, "end_char_idx": 1954, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2476ded5-8c65-4c82-9cf7-4e70b129fda1": {"__data__": {"id_": "2476ded5-8c65-4c82-9cf7-4e70b129fda1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fa2fadb-ae8c-4610-b60f-76dc92123353", "node_type": "1", "metadata": {}, "hash": "585b02f47c5d607bc0c7d478acc0a6afd2a166093807f4e9b623e92bdb2ad78f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}}, "hash": "c210cf7a18cfa53491b75beab7ac946036042eeded3b54af18c1c209d26e48f9", "text": "Similar implementations have been adopted and applied\nin the Learning with Local Drift Detection (LLDD) [25],\nEarly Drift Detection Method (EDDM) [26], Heoffding\u2019s\ninequality based Drift Detection Method (HDDM) [23],\nFuzzy Windowing Drift Detection Method (FW-DDM) [5],\nDynamic Extreme Learning Machine (DELM) [27]. LLDD\nmodi\ufb01es Stages 3 and 4, dividing the overall drift detection\nproblem into a set of decision tree node-based drift detection\nproblems;", "start_char_idx": 0, "end_char_idx": 454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fa2fadb-ae8c-4610-b60f-76dc92123353": {"__data__": {"id_": "4fa2fadb-ae8c-4610-b60f-76dc92123353", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2476ded5-8c65-4c82-9cf7-4e70b129fda1", "node_type": "1", "metadata": {}, "hash": "c210cf7a18cfa53491b75beab7ac946036042eeded3b54af18c1c209d26e48f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80206edf-53fd-4a16-ac99-f51c4d6d1e7a", "node_type": "1", "metadata": {}, "hash": "626141d8da2a07f188ddc0e694f5a0106b11210202f06b23dc07b1a5626f7d42", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}}, "hash": "585b02f47c5d607bc0c7d478acc0a6afd2a166093807f4e9b623e92bdb2ad78f", "text": "dividing the overall drift detection\nproblem into a set of decision tree node-based drift detection\nproblems; EDDM improves Stage 3 of DDM using the\ndistance between two correct classi\ufb01cations to improve the\nsensitivity of drift detection; HDDM modi\ufb01es Stage 4 using\nHoeffding\u2019s inequality to identify the critical region of a\ndrift; FW-DDM improves Stage 1 of DDM using a fuzzy\ntime window instead of a conventional time window to\naddress the gradual drift problem;", "start_char_idx": 345, "end_char_idx": 811, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80206edf-53fd-4a16-ac99-f51c4d6d1e7a": {"__data__": {"id_": "80206edf-53fd-4a16-ac99-f51c4d6d1e7a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fa2fadb-ae8c-4610-b60f-76dc92123353", "node_type": "1", "metadata": {}, "hash": "585b02f47c5d607bc0c7d478acc0a6afd2a166093807f4e9b623e92bdb2ad78f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1c1fc32-bb11-4eb8-9cdc-7548fd5e73cf", "node_type": "1", "metadata": {}, "hash": "6b857040ced43a9ed8b3ea04699606228df556299353d9ab9de8a8b0e4fc09a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}}, "hash": "626141d8da2a07f188ddc0e694f5a0106b11210202f06b23dc07b1a5626f7d42", "text": "DEML does not change\nthe DDM detection algorithm but uses a novel base learner,\nwhich is a single hidden layer feedback neural network\ncalled Extreme Learning Machine (ELM) [28] to improve\nthe adaptation process after a drift has been con\ufb01rmed.\nEWMA for Concept Drift Detection (ECDD) [29] takes ad-\nvantage of the error rate to detect concept drift. ECDD\nemploys the EWMA chart to track changes in the error rate.", "start_char_idx": 812, "end_char_idx": 1226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1c1fc32-bb11-4eb8-9cdc-7548fd5e73cf": {"__data__": {"id_": "c1c1fc32-bb11-4eb8-9cdc-7548fd5e73cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80206edf-53fd-4a16-ac99-f51c4d6d1e7a", "node_type": "1", "metadata": {}, "hash": "626141d8da2a07f188ddc0e694f5a0106b11210202f06b23dc07b1a5626f7d42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b25ddbac-0143-4838-bd9e-ec5129dfb1d8", "node_type": "1", "metadata": {}, "hash": "92221ba31ed035d01e80da9f5be25adfdca1ba0ac744b0f3699344c170dce8ab", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}}, "hash": "6b857040ced43a9ed8b3ea04699606228df556299353d9ab9de8a8b0e4fc09a8", "text": "ECDD\nemploys the EWMA chart to track changes in the error rate.\nThe implementation of Stages 1-3 of ECDD is the same\nas for DDM, while Stage 4 is different. ECDD modi\ufb01es\nthe conventional EWMA chart using a dynamic mean \u02c6p0,t\ninstead of the conventional static mean p0, where \u02c6p0,tis the\nestimated online error rate within time [0,t], andp0implies\nthe theoretical error rate when the learner was initially built.", "start_char_idx": 1163, "end_char_idx": 1574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b25ddbac-0143-4838-bd9e-ec5129dfb1d8": {"__data__": {"id_": "b25ddbac-0143-4838-bd9e-ec5129dfb1d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1c1fc32-bb11-4eb8-9cdc-7548fd5e73cf", "node_type": "1", "metadata": {}, "hash": "6b857040ced43a9ed8b3ea04699606228df556299353d9ab9de8a8b0e4fc09a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "df015e01-533e-4c7f-bed8-1c62a7660f60", "node_type": "1", "metadata": {}, "hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "class_name": "RelatedNodeInfo"}}, "hash": "92221ba31ed035d01e80da9f5be25adfdca1ba0ac744b0f3699344c170dce8ab", "text": "Accordingly, the dynamic variance can be calculated by\n\u03c32\nZt= \u02c6p0,t(1\u2212\u02c6p0,t)\u221a\n\u03bb\n2\u2212\u03bb(1\u2212(1\u2212\u03bb)2t)where\u03bbcontrols\nhow much weight is given to more recent data as opposed\nto older data, and \u03bb= 0.2is recommended by the authors.", "start_char_idx": 1575, "end_char_idx": 1795, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7be33ac1-ed56-4410-bfd9-3036bec55876": {"__data__": {"id_": "7be33ac1-ed56-4410-bfd9-3036bec55876", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4219af62-5e12-4118-8568-f68e67c1ef7d", "node_type": "1", "metadata": {}, "hash": "f79a691f8255cc1021ee57b093f28a13738b623aa177f4e90cd3ac1aa6671717", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}}, "hash": "be017adf9648abed359c7704e291be1bae3d6619f4ccf33e5b520b4056cc0920", "text": "5\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10......New DataHistorical Data\nFig. 7. Two time windows for concept drift detection. The New Data\nwindow has to be de\ufb01ned by the user.", "start_char_idx": 0, "end_char_idx": 178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4219af62-5e12-4118-8568-f68e67c1ef7d": {"__data__": {"id_": "4219af62-5e12-4118-8568-f68e67c1ef7d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7be33ac1-ed56-4410-bfd9-3036bec55876", "node_type": "1", "metadata": {}, "hash": "be017adf9648abed359c7704e291be1bae3d6619f4ccf33e5b520b4056cc0920", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18d2d7ec-3be2-419b-87f9-d13b161411c8", "node_type": "1", "metadata": {}, "hash": "d74f1464664f9610f56ae20cba9d438194d42e235ec91340b833b06a10ad74fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}}, "hash": "f79a691f8255cc1021ee57b093f28a13738b623aa177f4e90cd3ac1aa6671717", "text": "The New Data\nwindow has to be de\ufb01ned by the user.\nAlso, when the test statistic of the conventional EWMA\nchart isZt>\u02c6p0,t+ 0.5L\u03c3Zt, ECDD will report a concept\ndrift warning; when Zt>\u02c6p0,t+L\u03c3Zt, ECDD will report a\nconcept drift. The control limits Lis given by the authors\nthrough experimental evaluation.", "start_char_idx": 129, "end_char_idx": 433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18d2d7ec-3be2-419b-87f9-d13b161411c8": {"__data__": {"id_": "18d2d7ec-3be2-419b-87f9-d13b161411c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4219af62-5e12-4118-8568-f68e67c1ef7d", "node_type": "1", "metadata": {}, "hash": "f79a691f8255cc1021ee57b093f28a13738b623aa177f4e90cd3ac1aa6671717", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4d42589-937e-43e0-b715-3f4cd06ecedd", "node_type": "1", "metadata": {}, "hash": "c79beb699a5fa784a35dc36daf9ffcf3aaae36052b2e7376c3fd87a0231d1493", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}}, "hash": "d74f1464664f9610f56ae20cba9d438194d42e235ec91340b833b06a10ad74fd", "text": "The control limits Lis given by the authors\nthrough experimental evaluation.\nIn contrast to DDM and other similar algorithms, Sta-\ntistical Test of Equal Proportions Detection (STEPD) [30]\ndetects error rate change by comparing the most recent\ntime window with the overall time window, and for each\ntimestamp, there are two time windows in the system, as\nshown in Fig. 7. The size of the new window must be\nde\ufb01ned by the user.", "start_char_idx": 357, "end_char_idx": 783, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4d42589-937e-43e0-b715-3f4cd06ecedd": {"__data__": {"id_": "d4d42589-937e-43e0-b715-3f4cd06ecedd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18d2d7ec-3be2-419b-87f9-d13b161411c8", "node_type": "1", "metadata": {}, "hash": "d74f1464664f9610f56ae20cba9d438194d42e235ec91340b833b06a10ad74fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "421d5d5f-ae92-4d16-a74b-04955f99b689", "node_type": "1", "metadata": {}, "hash": "136ea6753bf529719d4a0d2d6204e516d569ad640049af9c4eb0afee38994c39", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}}, "hash": "c79beb699a5fa784a35dc36daf9ffcf3aaae36052b2e7376c3fd87a0231d1493", "text": "The size of the new window must be\nde\ufb01ned by the user. According to [30], the test statistic\n\u03b8STEPD conforms to standard normal distribution, denoted\nas\u03b8STEPD\u223cN (0,1). The signi\ufb01cance level of the warning\nlevel and the drift level were suggested as \u03b1w= 0.05and\n\u03b1d= 0.003 respectively. As a result, the warning threshold\nand drift threshold can be easily calculated.", "start_char_idx": 729, "end_char_idx": 1094, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "421d5d5f-ae92-4d16-a74b-04955f99b689": {"__data__": {"id_": "421d5d5f-ae92-4d16-a74b-04955f99b689", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4d42589-937e-43e0-b715-3f4cd06ecedd", "node_type": "1", "metadata": {}, "hash": "c79beb699a5fa784a35dc36daf9ffcf3aaae36052b2e7376c3fd87a0231d1493", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc41a6ac-8f25-4926-a478-cca9612a8a41", "node_type": "1", "metadata": {}, "hash": "6253702052bf05c69c74e41aef78966354adc68bdb7f54fa58f61e5fb09451a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}}, "hash": "136ea6753bf529719d4a0d2d6204e516d569ad640049af9c4eb0afee38994c39", "text": "As a result, the warning threshold\nand drift threshold can be easily calculated.\nAnother popular two-time window-based drift detection\nalgorithm is ADaptive WIN dowing (ADWIN) [31].", "start_char_idx": 1014, "end_char_idx": 1195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc41a6ac-8f25-4926-a478-cca9612a8a41": {"__data__": {"id_": "fc41a6ac-8f25-4926-a478-cca9612a8a41", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "421d5d5f-ae92-4d16-a74b-04955f99b689", "node_type": "1", "metadata": {}, "hash": "136ea6753bf529719d4a0d2d6204e516d569ad640049af9c4eb0afee38994c39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b247b6ca-fa94-432c-a2a9-b73a8a30c7e2", "node_type": "1", "metadata": {}, "hash": "246aafa4e5105d15a437058a00a82f897e1c890e505e23fcc8110057e53d27dc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}}, "hash": "6253702052bf05c69c74e41aef78966354adc68bdb7f54fa58f61e5fb09451a8", "text": "Unlike\nSTEPD, ADWIN does not require users to de\ufb01ne the size\nof the compared windows in advance; it only needs to\nspecify the total size nof a \u201csuf\ufb01ciently large\u201d window\nW. It then examines all possible cuts of Wand computes\noptimal sub-window sizes nhistandnnewaccording to the\nrate of change between the two sub-windows whistandwnew.\nThe test statistic is the difference of the two sample means\n\u03b8ADWIN =|\u02c6\u00b5hist\u2212\u02c6\u00b5new|.", "start_char_idx": 1196, "end_char_idx": 1616, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b247b6ca-fa94-432c-a2a9-b73a8a30c7e2": {"__data__": {"id_": "b247b6ca-fa94-432c-a2a9-b73a8a30c7e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc41a6ac-8f25-4926-a478-cca9612a8a41", "node_type": "1", "metadata": {}, "hash": "6253702052bf05c69c74e41aef78966354adc68bdb7f54fa58f61e5fb09451a8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "node_type": "1", "metadata": {}, "hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "class_name": "RelatedNodeInfo"}}, "hash": "246aafa4e5105d15a437058a00a82f897e1c890e505e23fcc8110057e53d27dc", "text": "An optimal cut is found when the\ndifference exceeds a threshold with a prede\ufb01ned con\ufb01dence\ninterval\u03b4.", "start_char_idx": 1617, "end_char_idx": 1718, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9df99e41-deca-4ff6-926b-093b90ca3a86": {"__data__": {"id_": "9df99e41-deca-4ff6-926b-093b90ca3a86", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ab1258f7-6968-4bc2-aa6f-2be71e1b0781", "node_type": "1", "metadata": {}, "hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ab1258f7-6968-4bc2-aa6f-2be71e1b0781", "node_type": "1", "metadata": {}, "hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "class_name": "RelatedNodeInfo"}}, "hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "text": "The author proved that both the false positive rate\nand false negative rate are bounded by \u03b4. It is worth noting\nthat many concept drift adaptation methods/algorithms in\nthe literature are derived from or combined with ADWIN,\nsuch as [32]\u2013[35]. Since their drift detection methods are\nimplemented with almost the same strategy, we will not\ndiscuss them in detail.", "start_char_idx": 0, "end_char_idx": 363, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18c81449-2c53-4343-9de3-7685e7a945a9": {"__data__": {"id_": "18c81449-2c53-4343-9de3-7685e7a945a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3583da8e-d7f3-4bbb-9a1d-28c342b525da", "node_type": "1", "metadata": {}, "hash": "b9227edf55acf8dc367f946ca7054ee2c7be0a0fe3f199ab0d75c91b33ecf4af", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}}, "hash": "5f8b33a76cc4befd48f225ff60a27d80d3098cd019cd4fda920547419c078275", "text": "3.2.2 Data Distribution-based Drift Detection\nThe second largest category of drift detection algorithms is\ndata distribution-based drift detection. Algorithms of this\ncategory use a distance function/metric to quantify the\ndissimilarity between the distribution of historical data and\nthe new data. If the dissimilarity is proven to be statistically\nsigni\ufb01cantly different, the system will trigger a learning\nmodel upgradation process. These algorithms address con-\ncept drift from the root sources, which is the distribution\ndrift.", "start_char_idx": 0, "end_char_idx": 532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3583da8e-d7f3-4bbb-9a1d-28c342b525da": {"__data__": {"id_": "3583da8e-d7f3-4bbb-9a1d-28c342b525da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18c81449-2c53-4343-9de3-7685e7a945a9", "node_type": "1", "metadata": {}, "hash": "5f8b33a76cc4befd48f225ff60a27d80d3098cd019cd4fda920547419c078275", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1655881b-f265-4dc3-925b-904c584e1f82", "node_type": "1", "metadata": {}, "hash": "78a882b8569d401d0ed6c4a56994aa048b9ea6fb86d27b3118ce7633e6179c81", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}}, "hash": "b9227edf55acf8dc367f946ca7054ee2c7be0a0fe3f199ab0d75c91b33ecf4af", "text": "Not only can they accurately identify the time of drift,\nthey can also provide location information about the drift.\nHowever, these algorithms are usually reported as incurring\nhigher computational cost than the algorithms mentioned\nin Section 3.2.1 [2]. In addition, these algorithms usually\nrequire users to prede\ufb01ne the historical time window and\nnew data window. The commonly used strategy is two\nsliding windows with the historical time window \ufb01xed\nTwo windows at timestamp: t+6Dt+11.Historical DataNew Data.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1655881b-f265-4dc3-925b-904c584e1f82": {"__data__": {"id_": "1655881b-f265-4dc3-925b-904c584e1f82", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3583da8e-d7f3-4bbb-9a1d-28c342b525da", "node_type": "1", "metadata": {}, "hash": "b9227edf55acf8dc367f946ca7054ee2c7be0a0fe3f199ab0d75c91b33ecf4af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7912cc16-945d-4284-9ecb-2eb6ce729e03", "node_type": "1", "metadata": {}, "hash": "9e837cb5cc5c43e7f92de0a51f9e5e7aabd2562d0c525b4f1909b46cef7ca8fa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}}, "hash": "78a882b8569d401d0ed6c4a56994aa048b9ea6fb86d27b3118ce7633e6179c81", "text": "Historical DataNew Data.Dt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Dt+11.Historical DataNew DataTwo windows at timestamp: t+7DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10\nDtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Fig. 8.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7912cc16-945d-4284-9ecb-2eb6ce729e03": {"__data__": {"id_": "7912cc16-945d-4284-9ecb-2eb6ce729e03", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1655881b-f265-4dc3-925b-904c584e1f82", "node_type": "1", "metadata": {}, "hash": "78a882b8569d401d0ed6c4a56994aa048b9ea6fb86d27b3118ce7633e6179c81", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6", "node_type": "1", "metadata": {}, "hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "class_name": "RelatedNodeInfo"}}, "hash": "9e837cb5cc5c43e7f92de0a51f9e5e7aabd2562d0c525b4f1909b46cef7ca8fa", "text": "8. Two sliding time windows, of \ufb01xed size. The Historical Data\nwindow will be \ufb01xed while the New Data window will keep moving.\nwhile sliding the new data window [3], [22], [36], as shown\nin Fig. 8.\nAccording to the literature, the \ufb01rst formal treatment\nof change detection in data streams was proposed by [37].", "start_char_idx": 1246, "end_char_idx": 1556, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4611b322-6f35-421e-9a52-a313c6079dc8": {"__data__": {"id_": "4611b322-6f35-421e-9a52-a313c6079dc8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "596cedd6-c530-4af3-b5db-cb6e05345f6d", "node_type": "1", "metadata": {}, "hash": "f57068b611e1bcfc3050f78ef8bded5bfe9dddf77599519aba7d58feb68ee6fe", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}}, "hash": "343c88ebcc90569ba7a4c81cbc9aa891a344183ac6c9d3a97498ddf74adc0872", "text": "In their study, the authors point out that the most natural\nnotion of distance between distributions is total variation,\nas de\ufb01ned by: TV(P1,P2) = 2supE\u2208\u03b5|P1(E)\u2212P2(E)|or\nequivalently, when the distribution has the density func-\ntionsf1andf2,distL1=\u222b|f1(x)\u2212f2(x)|dx. This provides\npractical guidance on the design of a distance function\nfor distribution discrepancy analysis.", "start_char_idx": 0, "end_char_idx": 374, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "596cedd6-c530-4af3-b5db-cb6e05345f6d": {"__data__": {"id_": "596cedd6-c530-4af3-b5db-cb6e05345f6d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4611b322-6f35-421e-9a52-a313c6079dc8", "node_type": "1", "metadata": {}, "hash": "343c88ebcc90569ba7a4c81cbc9aa891a344183ac6c9d3a97498ddf74adc0872", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0831e5c4-84b9-4ec6-a383-0cfb49a329ff", "node_type": "1", "metadata": {}, "hash": "f37370562ba5c9c320bbdf490601245f979bea3de00381263b7a0f9a7e7e1fac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}}, "hash": "f57068b611e1bcfc3050f78ef8bded5bfe9dddf77599519aba7d58feb68ee6fe", "text": "This provides\npractical guidance on the design of a distance function\nfor distribution discrepancy analysis. Accordingly, [37] pro-\nposed a family of distances, called Relativized Discrepancy\n(RD). The authors also present the signi\ufb01cance level of the\ndistance according to the number of data instances. The\nbounds on the probabilities of missed detections and false\nalarms are theoretically proven, using Chernoff bounds and\nthe Vapnik-Chervonenkis dimension.", "start_char_idx": 266, "end_char_idx": 726, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0831e5c4-84b9-4ec6-a383-0cfb49a329ff": {"__data__": {"id_": "0831e5c4-84b9-4ec6-a383-0cfb49a329ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "596cedd6-c530-4af3-b5db-cb6e05345f6d", "node_type": "1", "metadata": {}, "hash": "f57068b611e1bcfc3050f78ef8bded5bfe9dddf77599519aba7d58feb68ee6fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7461f993-a9b2-4119-87de-15a9b58d135d", "node_type": "1", "metadata": {}, "hash": "8cc85fd9c6934845ffa04f44575fb772564678ad454545b86945d381f7fad715", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}}, "hash": "f37370562ba5c9c320bbdf490601245f979bea3de00381263b7a0f9a7e7e1fac", "text": "The authors of [37] do\nnot propose novel high-dimensional friendly data models\nfor Stage 2 (data modeling); instead, they stress that a\nsuitable model choice is an open question.\nAnother typical density-based drift detection algorithm\nis the Information-Theoretic Approach (ITA) [22]. The in-\ntuitive idea underlying this algorithm is to use kdqTree to\npartition the historical and new data (multi-dimensional)\ninto a set of bins, denoted as A,and then use Kullback-\nLeibler divergence to quantify the difference of the density\n\u03b8ITAin each bin.", "start_char_idx": 727, "end_char_idx": 1271, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7461f993-a9b2-4119-87de-15a9b58d135d": {"__data__": {"id_": "7461f993-a9b2-4119-87de-15a9b58d135d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0831e5c4-84b9-4ec6-a383-0cfb49a329ff", "node_type": "1", "metadata": {}, "hash": "f37370562ba5c9c320bbdf490601245f979bea3de00381263b7a0f9a7e7e1fac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "038d6614-5edc-4833-a36d-2cf1d74802e9", "node_type": "1", "metadata": {}, "hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "class_name": "RelatedNodeInfo"}}, "hash": "8cc85fd9c6934845ffa04f44575fb772564678ad454545b86945d381f7fad715", "text": "The hypothesis test applied by ITA is\nbootstrapping by merging Whist,WnewasWalland resam-\npling asW\u2032hist,W\u2032new to recompute the \u03b8\u2217\nITA. Once the\nestimated probability P(\u03b8\u2217\nITA\u2265\u03b8ITA)<1\u2212\u03b1, concept drift\nis con\ufb01rmed, where \u03b1is the signi\ufb01cant level controlling the\nsensitivity of drift detection.", "start_char_idx": 1272, "end_char_idx": 1564, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c68847af-dd34-4ef6-9343-8fd25b5f421d": {"__data__": {"id_": "c68847af-dd34-4ef6-9343-8fd25b5f421d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82d6ed69-4dc2-4406-b7c3-6ceb5c7455c5", "node_type": "1", "metadata": {}, "hash": "9a9af9913c08ba924f2aeb0c981f50ade6caab087a5d07acde0dcace74dec22a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}}, "hash": "651325bb6e47fcd6d2be9db47bb2e02e29c1945d2aef53d24e9f5344ab3e644e", "text": "Similar distribution-based drift detection meth-\nods/algorithms are: Statistical Change Detection for multi-\ndimensional data (SCD) [38], Competence Model-based\ndrift detection (CM) [2], a prototype-based classi\ufb01cation\nmodel for evolving data streams called SyncStream [36],\nPCA -based change detection frame work (PCA -CD) [39],\nEqual Density Estimation (EDE) [40], Least Squares Density\nDifference-based Change Detection Test (LSDD-CDT)\n[21],", "start_char_idx": 0, "end_char_idx": 444, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82d6ed69-4dc2-4406-b7c3-6ceb5c7455c5": {"__data__": {"id_": "82d6ed69-4dc2-4406-b7c3-6ceb5c7455c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c68847af-dd34-4ef6-9343-8fd25b5f421d", "node_type": "1", "metadata": {}, "hash": "651325bb6e47fcd6d2be9db47bb2e02e29c1945d2aef53d24e9f5344ab3e644e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0bd485b-8372-4438-8b5f-6c44f424141a", "node_type": "1", "metadata": {}, "hash": "7e0c124855cca22870606cc2c7400a136e56376789367df4f52e15387ae3e1a4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}}, "hash": "9a9af9913c08ba924f2aeb0c981f50ade6caab087a5d07acde0dcace74dec22a", "text": "Least Squares Density\nDifference-based Change Detection Test (LSDD-CDT)\n[21], Incremental version of LSDD-CDT (LSDD-INC) [41]\nand Local Drift Degree-based Density Synchronized Drift\nAdaptation (LDD-DSDA) [4].\n3.2.3 Multiple Hypothesis Test Drift Detection\nMultiple hypothesis test drift detection algorithms apply\nsimilar techniques to those mentioned in the previous two\ncategories.", "start_char_idx": 367, "end_char_idx": 750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0bd485b-8372-4438-8b5f-6c44f424141a": {"__data__": {"id_": "c0bd485b-8372-4438-8b5f-6c44f424141a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82d6ed69-4dc2-4406-b7c3-6ceb5c7455c5", "node_type": "1", "metadata": {}, "hash": "9a9af9913c08ba924f2aeb0c981f50ade6caab087a5d07acde0dcace74dec22a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6165b090-90c4-4fb5-bd6a-d01fb82ef377", "node_type": "1", "metadata": {}, "hash": "f1fdba7d3285730e37be73544cc99b0d04083b1b1129e09ce51dc64621bbe874", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}}, "hash": "7e0c124855cca22870606cc2c7400a136e56376789367df4f52e15387ae3e1a4", "text": "The novelty of these algorithms is that they use\nmultiple hypothesis tests to detect concept drift in different\n\n6\nTest Statistic \u03b81Hypothesis Test H1Test Statistic \u03b82Hypothesis Test H2Test Statistic \u03b8zHypothesis Test Hz......Stage 3Stage 4Detection ResultsWhist and Wnewdetect drift based on z hypothesis test \nFig. 9. Parallel multiple hypothesis test drift detection.\nways. These algorithms can be divided into two groups:\n1) parallel multiple hypothesis tests; and 2) hierarchical\nmultiple hypothesis tests.", "start_char_idx": 751, "end_char_idx": 1262, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6165b090-90c4-4fb5-bd6a-d01fb82ef377": {"__data__": {"id_": "6165b090-90c4-4fb5-bd6a-d01fb82ef377", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0bd485b-8372-4438-8b5f-6c44f424141a", "node_type": "1", "metadata": {}, "hash": "7e0c124855cca22870606cc2c7400a136e56376789367df4f52e15387ae3e1a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "830d4ce9-cac9-423e-9548-0ff427dac856", "node_type": "1", "metadata": {}, "hash": "64b729b0fe2e9a77212e98b2c0a4e4408fd4a5b1b4a2e15cf1e4ea468ae81cd3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}}, "hash": "f1fdba7d3285730e37be73544cc99b0d04083b1b1129e09ce51dc64621bbe874", "text": "The idea of parallel multiple hypothesis drift detection\nalgorithm is demonstrated in Fig. 9. According to the liter-\nature, Just-In-Time adaptive classi\ufb01ers (JIT) [19] is the \ufb01rst\nalgorithm that set multiple drift detection hypothesis in this\nway. The core idea of JIT is to extend the CUSUM chart,\nknown as the Computational Intelligence-based CUSUM\ntest (CI-CUSUM), to detect the mean change in the features\ninterested by learning systems.", "start_char_idx": 1263, "end_char_idx": 1705, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "830d4ce9-cac9-423e-9548-0ff427dac856": {"__data__": {"id_": "830d4ce9-cac9-423e-9548-0ff427dac856", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6165b090-90c4-4fb5-bd6a-d01fb82ef377", "node_type": "1", "metadata": {}, "hash": "f1fdba7d3285730e37be73544cc99b0d04083b1b1129e09ce51dc64621bbe874", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92", "node_type": "1", "metadata": {}, "hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "class_name": "RelatedNodeInfo"}}, "hash": "64b729b0fe2e9a77212e98b2c0a4e4408fd4a5b1b4a2e15cf1e4ea468ae81cd3", "text": "The authors of [19], gave the\nfollowing four con\ufb01gurations for the drift detection target.\nCon\ufb01g1: the features extracted by Principal Component\nAnalysis (PCA), which removes eigenvalues whose sum\nis below a threshold, e.g. 0.001. Con\ufb01g2: PCA extracted\nfeatures plus one generic component of the original features\nxi; Con\ufb01g3: detects the drift in each xiindividually.", "start_char_idx": 1706, "end_char_idx": 2073, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58376796-ba93-4601-8a86-791f0ad4b85b": {"__data__": {"id_": "58376796-ba93-4601-8a86-791f0ad4b85b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32f87a88-6dd9-4ff9-869a-a465bcc1610e", "node_type": "1", "metadata": {}, "hash": "f898be165084820b5068d63c0cf42d12857d656827ef32f785e0a73ec9679036", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}}, "hash": "a9cc918e3e06f5af414227369d471946490183a3f2da3481f03371ee7bed155d", "text": "Con\ufb01g4:\ndetects drift in all possible combinations of the feature space\nxi. The authors stated that Con\ufb01g2 is the preferred setting\nfor most situations, according to their experimentation, and\nalso mentioned that Con\ufb01g1 may have a high missing rate,\nCon\ufb01g3 suffers from a high false alarm rate, and Con\ufb01g4\nhas exponential computational complexity. The same drift\ndetection strategy has also been applied in [42]\u2013[45] for\nconcept drift adaptation.", "start_char_idx": 0, "end_char_idx": 446, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32f87a88-6dd9-4ff9-869a-a465bcc1610e": {"__data__": {"id_": "32f87a88-6dd9-4ff9-869a-a465bcc1610e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58376796-ba93-4601-8a86-791f0ad4b85b", "node_type": "1", "metadata": {}, "hash": "a9cc918e3e06f5af414227369d471946490183a3f2da3481f03371ee7bed155d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58d8aa90-c64b-4ada-8274-d89efa13986e", "node_type": "1", "metadata": {}, "hash": "83274c1add4ec46600e7d5645f5ed42880b278f0680616a724015a8f97610867", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}}, "hash": "f898be165084820b5068d63c0cf42d12857d656827ef32f785e0a73ec9679036", "text": "Similar implementations have been applied in Linear\nFour Rate drift detection (LFR) [46], which maintains and\ntracks the changes in True Positive rate (TP), True Negative\nrate (TN), False Positive rate (FP) and False Negative rate\n(FN) in an online manner. The drift detection process also\nincludes warning and drift levels.\nAnother parallel multiple hypothesis drift detection al-\ngorithm is three-layer drift detection, based on Information\nValue and Jaccard similarity (IV-Jac) [47].", "start_char_idx": 447, "end_char_idx": 933, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58d8aa90-c64b-4ada-8274-d89efa13986e": {"__data__": {"id_": "58d8aa90-c64b-4ada-8274-d89efa13986e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32f87a88-6dd9-4ff9-869a-a465bcc1610e", "node_type": "1", "metadata": {}, "hash": "f898be165084820b5068d63c0cf42d12857d656827ef32f785e0a73ec9679036", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce66c3b1-747d-440c-b127-a28657981a60", "node_type": "1", "metadata": {}, "hash": "5a5a8cbe86cfc9be53cce25ffd632490bf7abdfab40d43ff3ccdb4d590f0d264", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}}, "hash": "83274c1add4ec46600e7d5645f5ed42880b278f0680616a724015a8f97610867", "text": "IV-Jac aims to\nindividually address the label drift Pt(y)Layer I, feature\nspace drift Pt(X)Layer II, and decision boundary drift\nPt(y|X)Layer III. It extracts the Weight of Evidence (WoE)\nand Information Value (IV) from the available data and\nthen detects whether a signi\ufb01cant change exists between\nthe WoE and IV extracted from WhistandWnewby mea-\nsuring the contribution to the label for a feature value.", "start_char_idx": 934, "end_char_idx": 1340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce66c3b1-747d-440c-b127-a28657981a60": {"__data__": {"id_": "ce66c3b1-747d-440c-b127-a28657981a60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58d8aa90-c64b-4ada-8274-d89efa13986e", "node_type": "1", "metadata": {}, "hash": "83274c1add4ec46600e7d5645f5ed42880b278f0680616a724015a8f97610867", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cef8d741-5446-4507-8d14-60ce39224714", "node_type": "1", "metadata": {}, "hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "class_name": "RelatedNodeInfo"}}, "hash": "5a5a8cbe86cfc9be53cce25ffd632490bf7abdfab40d43ff3ccdb4d590f0d264", "text": "The hypothesis test thresholds are prede\ufb01ned parameters\n\u03b8Pt(y)=\u03b8Pt(X)=\u03b8Pt(X|y)= 0.5by default, which are\nchosen empirically.\nEnsembleofDetectors (e-Detector) [48] proposed tode-\ntect concept drift viaensembleofheterogeneous drift de-\ntector.The authors consider two drift detectors arehomo-\ngeneous asifthey areequiv alent in\ufb01ndingconcept drifts,\notherwise they areheterogeneous.", "start_char_idx": 1341, "end_char_idx": 1720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05f7b91a-c82d-4f09-987d-1354483ab246": {"__data__": {"id_": "05f7b91a-c82d-4f09-987d-1354483ab246", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "247961f8-fee5-4ba0-9112-6fd68356d38c", "node_type": "1", "metadata": {}, "hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d6f4d52-e242-490a-9cf5-c42b4652ca38", "node_type": "1", "metadata": {}, "hash": "8d00a5a435a6dc1835148d207b8ec3b206ed5986d5d71376d92bfbc2c693b44f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "247961f8-fee5-4ba0-9112-6fd68356d38c", "node_type": "1", "metadata": {}, "hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "class_name": "RelatedNodeInfo"}}, "hash": "68387e1bfaffec9e485c8ec666328c57fe0853689123a390a7232f9117ceffb2", "text": "e-Detectorgroups homo-\ngeneous drift detectors viaadiversitymeasure ment, named\nDetection Layer: Standard Drift Detection Algorithms that have low drift delay rate and low computational costValidation Layer: Depend on the detection layerStage 3Stage 4Detection ResultsWhist and WnewTest Statistic \u03b8detectHypothesis Test HdetectTest Statistic \u03b8validHypothesis Test HvalidFig. 10. Hierarchical multiple hypothesis test drift detection.", "start_char_idx": 0, "end_char_idx": 433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d6f4d52-e242-490a-9cf5-c42b4652ca38": {"__data__": {"id_": "9d6f4d52-e242-490a-9cf5-c42b4652ca38", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "247961f8-fee5-4ba0-9112-6fd68356d38c", "node_type": "1", "metadata": {}, "hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05f7b91a-c82d-4f09-987d-1354483ab246", "node_type": "1", "metadata": {}, "hash": "68387e1bfaffec9e485c8ec666328c57fe0853689123a390a7232f9117ceffb2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "247961f8-fee5-4ba0-9112-6fd68356d38c", "node_type": "1", "metadata": {}, "hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "class_name": "RelatedNodeInfo"}}, "hash": "8d00a5a435a6dc1835148d207b8ec3b206ed5986d5d71376d92bfbc2c693b44f", "text": "10. Hierarchical multiple hypothesis test drift detection.\ndiversity vector.Foreach group, itselect theone with the\nsmall estcoef\ufb01cient offailureasthebase detectortoform\ntheensemble.e-Detectorreports concept drift followingthe\nearly -\ufb01nd-early -report rule, which means nomatterwhich\nbase detectordetect adrift, thee-Detectorreports adrift.\nSimilarstrat egyhasbeen applied indrift detection ensemble\n(DDE) [49].\nHierarchical drift detection is an emerging drift detec-\ntion category that has a multiple veri\ufb01cation schema.", "start_char_idx": 375, "end_char_idx": 897, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99b9f47a-12dc-439e-aa80-dd27bf4271ac": {"__data__": {"id_": "99b9f47a-12dc-439e-aa80-dd27bf4271ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "baf39b75-3a17-4802-baef-b7e1ce3b34cd", "node_type": "1", "metadata": {}, "hash": "15f7174969d35e1d296af418f7d7cb56299907dcb876b7774fc988ea09540030", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}}, "hash": "299bae0d210d27f49487d6749a111c9803afddfa84ddac8077ce173405ece2ad", "text": "The\nalgorithms in this category usually detect drift using an\nexisting method, called the detection layer, and then apply\nan extra hypothesis test, called the validation layer, to obtain\na second validation of the detected drift in a hierarchical\nway. The overall work\ufb02ow is shown in Fig. 10.\nAccording to the claim made by [50], Hierarchical\nChange-Detection Tests (HCDTs) is the \ufb01rst attempt to\naddress concept drift using a hierarchical architecture.", "start_char_idx": 0, "end_char_idx": 453, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "baf39b75-3a17-4802-baef-b7e1ce3b34cd": {"__data__": {"id_": "baf39b75-3a17-4802-baef-b7e1ce3b34cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99b9f47a-12dc-439e-aa80-dd27bf4271ac", "node_type": "1", "metadata": {}, "hash": "299bae0d210d27f49487d6749a111c9803afddfa84ddac8077ce173405ece2ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b2900d2-e341-4ba4-8e0f-f5b37a0f0189", "node_type": "1", "metadata": {}, "hash": "a38618686e8f832734bbd79cff418b31695288a1218d95e3262fe1fc3e035634", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}}, "hash": "15f7174969d35e1d296af418f7d7cb56299907dcb876b7774fc988ea09540030", "text": "The\ndetection layer can be any existing drift detection method\nthat has a low drift delay rate and low computational\nburden. The validation layer will be activated and deacti-\nvated based on the results returned by the detection layer.\nThe authors recommend two strategies for designing the\nvalidation layer: 1) estimating the distribution of the test\nstatistics by maximizing the likelihood; 2) adapting an ex-\nisting hypothesis test, such as the Kolmogorov-Smirnov test\nor the Cramer-Von Mises test.", "start_char_idx": 454, "end_char_idx": 955, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b2900d2-e341-4ba4-8e0f-f5b37a0f0189": {"__data__": {"id_": "7b2900d2-e341-4ba4-8e0f-f5b37a0f0189", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baf39b75-3a17-4802-baef-b7e1ce3b34cd", "node_type": "1", "metadata": {}, "hash": "15f7174969d35e1d296af418f7d7cb56299907dcb876b7774fc988ea09540030", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fee084c-0639-46d9-8d25-69b264362404", "node_type": "1", "metadata": {}, "hash": "cdbc70bb8595b053293094462c0631ba26deccc06a37f4fb70f6df9a45787153", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}}, "hash": "a38618686e8f832734bbd79cff418b31695288a1218d95e3262fe1fc3e035634", "text": "Hierarchical Linear Four Rate (HLFR) [51] is another\nrecently proposed hierarchical drift detection algorithm. It\napplies the drift detection algorithm LFR as the detection\nlayer. Once a drift is con\ufb01rmed by the detection layer,\nthe validation layer will be triggered. The validation layer\nof HLFR is simply a zero-one loss, denoted as E, over\nthe ordered train-test split.", "start_char_idx": 956, "end_char_idx": 1329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fee084c-0639-46d9-8d25-69b264362404": {"__data__": {"id_": "4fee084c-0639-46d9-8d25-69b264362404", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b2900d2-e341-4ba4-8e0f-f5b37a0f0189", "node_type": "1", "metadata": {}, "hash": "a38618686e8f832734bbd79cff418b31695288a1218d95e3262fe1fc3e035634", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9", "node_type": "1", "metadata": {}, "hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "class_name": "RelatedNodeInfo"}}, "hash": "cdbc70bb8595b053293094462c0631ba26deccc06a37f4fb70f6df9a45787153", "text": "If the estimated zero-one loss\nexceeds a prede\ufb01ned threshold, \u03b7= 0.01, the validation\nlayer will con\ufb01rm the drift and report to the learning system\nto trigger a model upgradation process.\nTwo-Stage Multivariate Shift-Detection based on EWMA\n(TSMSD-EWMA) [52] has a very similar implementation,\nhowever, the authors do not claim that their method is a\nhierarchy-based algorithm.", "start_char_idx": 1330, "end_char_idx": 1707, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fbe5bec-3181-49fc-b8ee-0409e2fe711a": {"__data__": {"id_": "6fbe5bec-3181-49fc-b8ee-0409e2fe711a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e5e6fd3-3312-4969-8cb8-b2b72bdb2534", "node_type": "1", "metadata": {}, "hash": "6ee4d2500447b6f260d290064b9c97793d35ff662bc671cac24168adeacd1627", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}}, "hash": "efddc6ea25acaf7ec77c6870f76358dba47fee102be9b4eb09e09b37929062e7", "text": "HierarchicalHypoth esisTestingwith Clas si\ufb01cation Un-\ncertainty (HHT -CU) and HierarchicalHypoth esisTesting\nwith Attribute -wise \u201dGood ness -of-\ufb01t\u201d (HHT -AG) aretwo\ndrift detection algorithms based onrequest and rever ify\nstrat egy [53].ForHHT -CU, thedetection layer isahypothe -\nsestest based onHeoffding\u2019s inequal itythat mon itoring\nthechange oftheclassi\ufb01cation uncertainty measure ment.", "start_char_idx": 0, "end_char_idx": 392, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e5e6fd3-3312-4969-8cb8-b2b72bdb2534": {"__data__": {"id_": "3e5e6fd3-3312-4969-8cb8-b2b72bdb2534", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fbe5bec-3181-49fc-b8ee-0409e2fe711a", "node_type": "1", "metadata": {}, "hash": "efddc6ea25acaf7ec77c6870f76358dba47fee102be9b4eb09e09b37929062e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cd6dacb-6650-4cdd-8270-d44e5512be62", "node_type": "1", "metadata": {}, "hash": "4be169a7e46786c2f10c1977d40fa39754a4d426c6ef6f520be19f28b10a6c8d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}}, "hash": "6ee4d2500447b6f260d290064b9c97793d35ff662bc671cac24168adeacd1627", "text": "The validation layer isapermutation testthat evaluates the\nchange ofthezero -one loss ofthelearner. ForHHT -AG, the\n\n7\ndetection layer isconducted based onKolmogorov -Smirnov\n(KS) test foreach feature distribution. Then HHT -AG vali-\ndate thepotentialdrift points byrequiringtrue labels ofdata\nthat come fromwnew,and perform ingdindependent two-\ndimen sional (2D) KStest with each feature-labelbivariate\ndistribution.", "start_char_idx": 393, "end_char_idx": 810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cd6dacb-6650-4cdd-8270-d44e5512be62": {"__data__": {"id_": "2cd6dacb-6650-4cdd-8270-d44e5512be62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e5e6fd3-3312-4969-8cb8-b2b72bdb2534", "node_type": "1", "metadata": {}, "hash": "6ee4d2500447b6f260d290064b9c97793d35ff662bc671cac24168adeacd1627", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03ad6a5a-adac-4ac9-ab29-cee87b82a128", "node_type": "1", "metadata": {}, "hash": "e3fa46eee04cae91960601f46db2b03d69033d052708627a1bfbb585151f8354", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}}, "hash": "4be169a7e46786c2f10c1977d40fa39754a4d426c6ef6f520be19f28b10a6c8d", "text": "Com pare toother drift detection algorithms,\nHHT -AG can handle concept drift with less true labels,\nwhich makes itmore pow erfulwhen deal ing with high\nveri\ufb01cation latency.\n3.3 Summary of concept drift detection meth-\nods/algorithms\nTABLE 1 lists the most popular concept drift detection meth-\nods/algorithms against the general framework summarized\nin Section 3.1 (Fig. 5). Acomparative study oneight popular\ndrift detection meth odscanbefound in[54].", "start_char_idx": 811, "end_char_idx": 1264, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03ad6a5a-adac-4ac9-ab29-cee87b82a128": {"__data__": {"id_": "03ad6a5a-adac-4ac9-ab29-cee87b82a128", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cd6dacb-6650-4cdd-8270-d44e5512be62", "node_type": "1", "metadata": {}, "hash": "4be169a7e46786c2f10c1977d40fa39754a4d426c6ef6f520be19f28b10a6c8d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "node_type": "1", "metadata": {}, "hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "class_name": "RelatedNodeInfo"}}, "hash": "e3fa46eee04cae91960601f46db2b03d69033d052708627a1bfbb585151f8354", "text": "4 C ONCEPT DRIFT UNDERSTANDING\nDrift understanding refers to retrieving concept drift infor-\nmation about \u201cWhen\u201d (the time at which the concept drift\noccurs and how long the drift lasts), \u201cHow\u201d (the severity\n/degree of concept drift), and \u201cWhere\u201d (the drift regions\nof concept drift). This status information is the output of\nthe drift detection algorithms, and is used as input for drift\nadaptation.\n4.1 The time of concept drift occurs (When)\nThe most basic function of drift detection is to identify\nthe timestamp when a drift occurs.", "start_char_idx": 1265, "end_char_idx": 1802, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "445abe43-0764-45c1-ac2a-0b48e1c2c6b0": {"__data__": {"id_": "445abe43-0764-45c1-ac2a-0b48e1c2c6b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4907c2ac-f351-4641-a06c-11e130800742", "node_type": "1", "metadata": {}, "hash": "ed85be2ea5f02af7ca7eb831bb03fd31430e670a95edf745af5e9f62c10e0d72", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}}, "hash": "7612350369c09d099a9133a8dd513540ccf9c0b4cb7e81f2b35e97025e86de6a", "text": "Recalling the de\ufb01nition\nof concept drift\u2203t:Pt(X,y)\u0338=Pt+1(X,y), the variable t\nrepresents the time at which a concept drift occurs. In drift\ndetection methods/algorithms, an alarm signal is used to\nindicate whether the concept drift has or has not occurred or\nnot at the current timestamp. It is also a signal for a learning\nsystem to adapt to a new concept.", "start_char_idx": 0, "end_char_idx": 357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4907c2ac-f351-4641-a06c-11e130800742": {"__data__": {"id_": "4907c2ac-f351-4641-a06c-11e130800742", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "445abe43-0764-45c1-ac2a-0b48e1c2c6b0", "node_type": "1", "metadata": {}, "hash": "7612350369c09d099a9133a8dd513540ccf9c0b4cb7e81f2b35e97025e86de6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "298354ba-52ce-4105-817f-f17c74376cca", "node_type": "1", "metadata": {}, "hash": "c9b48538610bf8c0fef0514431d19ada3abfa1643499bc950cad786edee5a86c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}}, "hash": "ed85be2ea5f02af7ca7eb831bb03fd31430e670a95edf745af5e9f62c10e0d72", "text": "It is also a signal for a learning\nsystem to adapt to a new concept. Accurately identifying\nthe time a drift occurs is critical to the adaptation process\nof a learning system; a delay or a false alarm will lead to\nfailure of the learning system to track new concepts.\nA drift alarm usually has a statistical guarantee with a\nprede\ufb01ned false alarm rate. Error rate-based drift detection\nalgorithms monitor the performance of the learning system,\nbased on statistical process control.", "start_char_idx": 289, "end_char_idx": 771, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "298354ba-52ce-4105-817f-f17c74376cca": {"__data__": {"id_": "298354ba-52ce-4105-817f-f17c74376cca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4907c2ac-f351-4641-a06c-11e130800742", "node_type": "1", "metadata": {}, "hash": "ed85be2ea5f02af7ca7eb831bb03fd31430e670a95edf745af5e9f62c10e0d72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1a5df0d-bd6f-4aba-8423-9f43e5951535", "node_type": "1", "metadata": {}, "hash": "632f87ed174acc53bbc89fdd5ece61c21a420d1b555713edab10b303e2308bb8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}}, "hash": "c9b48538610bf8c0fef0514431d19ada3abfa1643499bc950cad786edee5a86c", "text": "For example, DDM\n[20] sends a drift signal when the learning accuracy of\nthe learner drops below a prede\ufb01ned threshold, which is\nchosen by the three-sigma rule [55]. ECCD [29] reports a\ndrift when the online error rate exceeds the control limit\nof EWMA. Most data distribution-based drift detection\nalgorithms report a drift alarm when two data samples\nhave a statistically signi\ufb01cant difference.", "start_char_idx": 772, "end_char_idx": 1168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1a5df0d-bd6f-4aba-8423-9f43e5951535": {"__data__": {"id_": "d1a5df0d-bd6f-4aba-8423-9f43e5951535", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "298354ba-52ce-4105-817f-f17c74376cca", "node_type": "1", "metadata": {}, "hash": "c9b48538610bf8c0fef0514431d19ada3abfa1643499bc950cad786edee5a86c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ec5c673-098b-4472-9067-ff417c82a766", "node_type": "1", "metadata": {}, "hash": "4c0f561c6b1a808eda78763cdfead573b6b9491a2848e1de7566c1c3fb3d6b30", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}}, "hash": "632f87ed174acc53bbc89fdd5ece61c21a420d1b555713edab10b303e2308bb8", "text": "PCA-based drift\ndetection [36] outputs a drift signal when the p-value of\nthe generalized Wilcoxon test statistic Wl\nBFis signi\ufb01cantly\nlarge. The method in [3] con\ufb01rms that a drift has occurred by\nverifying whether the empirical competence-based distance\nis signi\ufb01cantly large through permuataion test.\nTaking into account the various drift types, concept drift\nunderstanding needs to explore the start time point, the\nchange period, and the end time point of concept drift.", "start_char_idx": 1169, "end_char_idx": 1643, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ec5c673-098b-4472-9067-ff417c82a766": {"__data__": {"id_": "5ec5c673-098b-4472-9067-ff417c82a766", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1a5df0d-bd6f-4aba-8423-9f43e5951535", "node_type": "1", "metadata": {}, "hash": "632f87ed174acc53bbc89fdd5ece61c21a420d1b555713edab10b303e2308bb8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "73223af2-f20f-400d-bb4f-268ff7815ad0", "node_type": "1", "metadata": {}, "hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "class_name": "RelatedNodeInfo"}}, "hash": "4c0f561c6b1a808eda78763cdfead573b6b9491a2848e1de7566c1c3fb3d6b30", "text": "And these time information could be useful input for the\nadaptation process of the learning system. However the\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9Dt+10Dt+12Dt+11...DatadistributionTimeStart time of  concept driftTime the drift alarm is triggeredEnd time of  concept driftPeriod of  concept drift changeSeverity of  concept driftFig. 11.", "start_char_idx": 1644, "end_char_idx": 1987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62765de9-8293-4372-96bd-87dc74359ceb": {"__data__": {"id_": "62765de9-8293-4372-96bd-87dc74359ceb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d07c02d2-96f1-4a98-8a25-ddd7941c1f9c", "node_type": "1", "metadata": {}, "hash": "b1ebc2e50130c73038cfd66bfb7249f7ea887b0a09815004c39b97fec61f17e2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}}, "hash": "f1fd2f61be3446822ecccb9a204745084a5133fdd36f8ad7cc67ae92728b80f9", "text": "11. An example of the occurrence time and the severity of concept\ndrift. One incremental drift starts to change at t+ 1and ends at t+ 5.\nThe other sudden drift occurs between t+ 9andt+ 10 . The severity of\nthese two concept drifts ( Dt+1-Dt+5andDt+9-Dt+10) is marked with\nbrackets.", "start_char_idx": 0, "end_char_idx": 281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d07c02d2-96f1-4a98-8a25-ddd7941c1f9c": {"__data__": {"id_": "d07c02d2-96f1-4a98-8a25-ddd7941c1f9c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62765de9-8293-4372-96bd-87dc74359ceb", "node_type": "1", "metadata": {}, "hash": "f1fd2f61be3446822ecccb9a204745084a5133fdd36f8ad7cc67ae92728b80f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74c9a4e1-2b02-4f49-9256-965662bd0939", "node_type": "1", "metadata": {}, "hash": "99833c1362d5c72a360f2033d976f9880a65bf3ff33c151dfa0014e551751830", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}}, "hash": "b1ebc2e50130c73038cfd66bfb7249f7ea887b0a09815004c39b97fec61f17e2", "text": "drift timestamp alert in existing drift detection algorithms\nis delayed compared to the actual drifting timestamp, since\nmost drift detectors require a minimum number of new data\nto evaluate the status of the drift, as shown in Fig. 11. The\nemergence time of the new concept is therefore still vague.\nSome concept drift detection algorithms such as DDM [20],\nEDDM [26], STEPD [30], and HDDM [23], trigger a warning\nlevel to indicate a drift may have occurred.", "start_char_idx": 282, "end_char_idx": 741, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74c9a4e1-2b02-4f49-9256-965662bd0939": {"__data__": {"id_": "74c9a4e1-2b02-4f49-9256-965662bd0939", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d07c02d2-96f1-4a98-8a25-ddd7941c1f9c", "node_type": "1", "metadata": {}, "hash": "b1ebc2e50130c73038cfd66bfb7249f7ea887b0a09815004c39b97fec61f17e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd23d1c1-8d17-4b8a-ab9d-f19be8da2a9f", "node_type": "1", "metadata": {}, "hash": "1946bc54712187baff34b5cab73d9a7f29d8616a59d4912c2c7af41b6c86c743", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}}, "hash": "99833c1362d5c72a360f2033d976f9880a65bf3ff33c151dfa0014e551751830", "text": "The threshold\nused to trigger warning level is a relaxed condition of the\nthreshold used for the drift level; for example, the warning\nlevel is set p-value to 95% or 2\u03c3, and the drift level is set\np-value to 99% or 3\u03c3. The data accumulated between the\nwarning level and the drift level are used as the training set\nfor updating a learning model.", "start_char_idx": 742, "end_char_idx": 1087, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd23d1c1-8d17-4b8a-ab9d-f19be8da2a9f": {"__data__": {"id_": "cd23d1c1-8d17-4b8a-ab9d-f19be8da2a9f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74c9a4e1-2b02-4f49-9256-965662bd0939", "node_type": "1", "metadata": {}, "hash": "99833c1362d5c72a360f2033d976f9880a65bf3ff33c151dfa0014e551751830", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d0744a7-668b-4b09-8336-56b024e6edd3", "node_type": "1", "metadata": {}, "hash": "da6872dc746974fb7760f6cbe20e5c898dd784c95b69417d9524df9061afae2a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}}, "hash": "1946bc54712187baff34b5cab73d9a7f29d8616a59d4912c2c7af41b6c86c743", "text": "4.2 The severity of concept drift (How)\nThe severity of concept drift refers to using a quanti\ufb01ed\nvalue to measure the similarity between the new concept\nand the previous concept, as shown in Fig. 11. Formally,\nthe severity of concept drift can be represented as \u2206 =\n\u03b4(Pt(X,y),Pt+1(X,y)), where\u03b4is a function to measure the\ndiscrepancy of two data distributions, and tis the timestamp\nwhen the concept drift occurred. \u2206usuallyisanon-negative\nvalue indicatingthesever ityofconcept drift.", "start_char_idx": 1088, "end_char_idx": 1574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d0744a7-668b-4b09-8336-56b024e6edd3": {"__data__": {"id_": "8d0744a7-668b-4b09-8336-56b024e6edd3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd23d1c1-8d17-4b8a-ab9d-f19be8da2a9f", "node_type": "1", "metadata": {}, "hash": "1946bc54712187baff34b5cab73d9a7f29d8616a59d4912c2c7af41b6c86c743", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "01daae07-70a6-43ed-8896-0418267bbd6a", "node_type": "1", "metadata": {}, "hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "class_name": "RelatedNodeInfo"}}, "hash": "da6872dc746974fb7760f6cbe20e5c898dd784c95b69417d9524df9061afae2a", "text": "\u2206usuallyisanon-negative\nvalue indicatingthesever ityofconcept drift. The greater the\nvalue of\u2206,thelarger thesever ityoftheconcept drift is.\nIn general, error rate-based drift detection cannot di-\nrectly measure the severity of concept drift, because it\nmainly focuses on monitoring the performance of the learn-\ning system, not the changes in the concept itself. However,\nthe degree of decrease in learning accuracy can be used as\nan indirect measurement to indicate the severity of concept\ndrift.", "start_char_idx": 1506, "end_char_idx": 2003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "930db822-b155-4a9a-8d53-8eab621e98b6": {"__data__": {"id_": "930db822-b155-4a9a-8d53-8eab621e98b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86ef810a-d22d-4f17-befc-4f97dd8d22d2", "node_type": "1", "metadata": {}, "hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "86ef810a-d22d-4f17-befc-4f97dd8d22d2", "node_type": "1", "metadata": {}, "hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "class_name": "RelatedNodeInfo"}}, "hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "text": "If learning accuracy has dropped signi\ufb01cantly when\ndrift is observed, this indicates that the new concept is\ndifferent from the previous one.", "start_char_idx": 0, "end_char_idx": 141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf66fd5c-d762-4aff-8db9-e1013fa74219": {"__data__": {"id_": "cf66fd5c-d762-4aff-8db9-e1013fa74219", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7019b8a6-f42f-4837-919e-32b27c76498a", "node_type": "1", "metadata": {}, "hash": "ed6bf47b7b65c96ef62f4ed8c2e43e21bc42d5a20a6ce4ca7087b4c58e308a4d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}}, "hash": "26154d9a0fbc0bdd5206352a0d0e98bb18cd50c30d7bc95091b770fd2bd6c6a4", "text": "For example, the severity\nof concept drift could be re\ufb02ected by the difference be-\ntweenpiandpminin [20], [27] ,denoted as\u2206\u223cpi\u2212pmin;\nthe difference between overall accuracy \u02c6phistand recent\naccuracy \u02c6pnew in [30] ,expressed as\u2206\u223c\u02c6pnew\u2212\u02c6phist; and\nthe difference between test statistics in the former window\nE[\u02c6Xcut]and test statistics in the later window E[\u02c6Yi\u2212cut][23],", "start_char_idx": 0, "end_char_idx": 369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7019b8a6-f42f-4837-919e-32b27c76498a": {"__data__": {"id_": "7019b8a6-f42f-4837-919e-32b27c76498a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf66fd5c-d762-4aff-8db9-e1013fa74219", "node_type": "1", "metadata": {}, "hash": "26154d9a0fbc0bdd5206352a0d0e98bb18cd50c30d7bc95091b770fd2bd6c6a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55a511d7-d7a3-4c0d-b287-6766efcaac5f", "node_type": "1", "metadata": {}, "hash": "5f8b32d9063e270b4d4b4bcb1456a812c8cc4230adc68b6575fbb05c05875ef3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}}, "hash": "ed6bf47b7b65c96ef62f4ed8c2e43e21bc42d5a20a6ce4ca7087b4c58e308a4d", "text": "denoted as\u2206\u223cE[\u02c6Yi\u2212cut]\u2212E[\u02c6Xcut]. However, the meaning\nof these differences is not discussed in existing publications.\nThe ability of error rate-based drift detection to output the\nseverity of concept drift is still vague.\nData distribution-based drift detection methods can di-\nrectly quantify the severity of concept drift since the mea-\nsurement used to compare two data samples already re\ufb02ects\nthe difference. For example, [37] employed arelaxation ofthe\ntotalvariation distancedA(S1,", "start_char_idx": 370, "end_char_idx": 857, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "55a511d7-d7a3-4c0d-b287-6766efcaac5f": {"__data__": {"id_": "55a511d7-d7a3-4c0d-b287-6766efcaac5f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7019b8a6-f42f-4837-919e-32b27c76498a", "node_type": "1", "metadata": {}, "hash": "ed6bf47b7b65c96ef62f4ed8c2e43e21bc42d5a20a6ce4ca7087b4c58e308a4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12924ba1-b6c6-4f92-80f3-a291388fe8b0", "node_type": "1", "metadata": {}, "hash": "a60c8a1113a272e0f1b89963562a290892717dc53596062f57486b019a11f912", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}}, "hash": "5f8b32d9063e270b4d4b4bcb1456a812c8cc4230adc68b6575fbb05c05875ef3", "text": "[37] employed arelaxation ofthe\ntotalvariation distancedA(S1,S2)to measure the difference\n\n8\nTABLE 1\nSummary of drift detection algorithms\nCategory Algorithms Stage 1 Stage 2 Stage 3 Stage 4\nError\nrate-basedDDM [20] Landmark Learner Online error rate Distribution estimation\nEDDM [26] Landmark Learner Online error rate Distribution estimation\nFW-DDM [5] Landmark Learner Online error rate Distribution estimation\nDEML [27] Landmark Learner Online error rate Distribution estimation\nSTEPD [30] Prede\ufb01nedwhist,", "start_char_idx": 796, "end_char_idx": 1305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12924ba1-b6c6-4f92-80f3-a291388fe8b0": {"__data__": {"id_": "12924ba1-b6c6-4f92-80f3-a291388fe8b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55a511d7-d7a3-4c0d-b287-6766efcaac5f", "node_type": "1", "metadata": {}, "hash": "5f8b32d9063e270b4d4b4bcb1456a812c8cc4230adc68b6575fbb05c05875ef3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4565393-4c62-450a-af8f-b69ea991326d", "node_type": "1", "metadata": {}, "hash": "8ebd5750b4f2198e804501d1fe5a0fb26d828dfb5aa039a9dacfe8361bc61203", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}}, "hash": "a60c8a1113a272e0f1b89963562a290892717dc53596062f57486b019a11f912", "text": "wnew Learner Error rate difference Distribution estimation\nADWIN [31] Auto cutwhist,wnew Learner Error rate difference Hoeffding\u2019s Bound\nECDD [29] Landmark Learner Online error rate EWMA Chart\nHDDM [23] Landmark Learner Online error rate Hoeffding\u2019s Bound\nLLDD [25] Landmark, or sliding whist,\nwnewDecision trees Tree node error rate Hoeffding\u2019s Bound\nData\ndistribution-\nbasedkdqTree [22] Fixedwhist, Slidingwnew kdqTree KL divergence Bootstrapping\nCM [2],", "start_char_idx": 1305, "end_char_idx": 1761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4565393-4c62-450a-af8f-b69ea991326d": {"__data__": {"id_": "e4565393-4c62-450a-af8f-b69ea991326d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12924ba1-b6c6-4f92-80f3-a291388fe8b0", "node_type": "1", "metadata": {}, "hash": "a60c8a1113a272e0f1b89963562a290892717dc53596062f57486b019a11f912", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78", "node_type": "1", "metadata": {}, "hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "class_name": "RelatedNodeInfo"}}, "hash": "8ebd5750b4f2198e804501d1fe5a0fb26d828dfb5aa039a9dacfe8361bc61203", "text": "Slidingwnew kdqTree KL divergence Bootstrapping\nCM [2], [3] Fixedwhist,", "start_char_idx": 1706, "end_char_idx": 1777, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e165a9d8-d1e9-4534-99da-de8081928cd8": {"__data__": {"id_": "e165a9d8-d1e9-4534-99da-de8081928cd8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ea7aa75-1dd5-409b-9538-cab43ef61517", "node_type": "1", "metadata": {}, "hash": "7e313631f7eb0c2dcf1f38425815840f275d0a14084255f12afa338ecd06b4a5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}}, "hash": "2f5ae090549015aa4dabc702fd49ee0893522d7b511082efea633dbb7bd61261", "text": "[3] Fixedwhist, Slidingwnew Competence model Competence distance Permutation test\nRD [37] Fixedwhist, Slidingwnew KS structure Relativized Discrepancy VC-Dimension\nSCD [38] Fixedwhist, Slidingwnew kernel density estima-\ntorlog-likelihood Distribution estimation\nEDE [40] Fixedwhist, Slidingwnew Nearest neighbor Density scale Permutation test\nSyncStream [36] Fixedwhist, Slidingwnew PCA P-Tree Wilcoxon test\nPCA -CD [39] Fixedwhist,", "start_char_idx": 0, "end_char_idx": 432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ea7aa75-1dd5-409b-9538-cab43ef61517": {"__data__": {"id_": "0ea7aa75-1dd5-409b-9538-cab43ef61517", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e165a9d8-d1e9-4534-99da-de8081928cd8", "node_type": "1", "metadata": {}, "hash": "2f5ae090549015aa4dabc702fd49ee0893522d7b511082efea633dbb7bd61261", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0281183b-80e2-4daa-8552-0d6cc5e8c484", "node_type": "1", "metadata": {}, "hash": "905009a7bdac6b1e7e2e2c6377479956edddeb1f501f0da08bfd7f047ef1b776", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}}, "hash": "7e313631f7eb0c2dcf1f38425815840f275d0a14084255f12afa338ecd06b4a5", "text": "Slidingwnew PCA Change -Score Page -Hink leytest\nLSDD-CDT [21] Fixedwhist, Slidingwnew Learner Relative difference Distribution estimation\nLSDD-INC [41] Fixedwhist, Slidingwnew Learner Relative difference Distribution estimation\nLDD-DSDA [4] Fixedwhist, Slidingwnew k-nearest neighbor Local drift degree Distribution estimation\nMultiple\nHypothesis\nTestsJIT [19] Landmark Selected features 4 con\ufb01gurations Distribution estimation\nLFR [46] Landmark Learner TP , TN, FP ,", "start_char_idx": 432, "end_char_idx": 900, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0281183b-80e2-4daa-8552-0d6cc5e8c484": {"__data__": {"id_": "0281183b-80e2-4daa-8552-0d6cc5e8c484", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ea7aa75-1dd5-409b-9538-cab43ef61517", "node_type": "1", "metadata": {}, "hash": "7e313631f7eb0c2dcf1f38425815840f275d0a14084255f12afa338ecd06b4a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f32007a-9d77-4d55-a937-57acdecfbf03", "node_type": "1", "metadata": {}, "hash": "7bb29931679a7e2d0a6f43b1273fd7ef7cebe166d93a84ec3f52dd8d3e956503", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}}, "hash": "905009a7bdac6b1e7e2e2c6377479956edddeb1f501f0da08bfd7f047ef1b776", "text": "TN, FP , FN Distribution estimation\nThree-layer [47] Sliding both whist,wnew Learner P(y),P(X),P(X|y) Distribution estimation\ne-Detector[48] depends onbase detector depends depends depends\nDDE [49] depends onbase detector depends depends depends\nTSMSD-EWMA [52] Landmark Learner Online error rate EWMA Chart\nHCDTs [50] Landmark Depending on layers Depending on layers Depending on layer\nHLFR [51] Landmark Learner TP , TN, FP ,", "start_char_idx": 892, "end_char_idx": 1319, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f32007a-9d77-4d55-a937-57acdecfbf03": {"__data__": {"id_": "4f32007a-9d77-4d55-a937-57acdecfbf03", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0281183b-80e2-4daa-8552-0d6cc5e8c484", "node_type": "1", "metadata": {}, "hash": "905009a7bdac6b1e7e2e2c6377479956edddeb1f501f0da08bfd7f047ef1b776", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c01acb18-9f36-4e8d-b563-46169bb6724a", "node_type": "1", "metadata": {}, "hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "class_name": "RelatedNodeInfo"}}, "hash": "7bb29931679a7e2d0a6f43b1273fd7ef7cebe166d93a84ec3f52dd8d3e956503", "text": "TN, FP , FN Distribution estimation\nHHT -CU[53] Land mark Learner Clas si\ufb01cation uncertainty Layer -IHoeffding\u2019s Bound,\nLayer -IIPermutation Test\nHHT -AG[53] Fixedwhist,Slidingwnew N/A KS statis ticon each at-\ntributeLayer -IKStest, Layer -II2D\nKStest\nbetween two data distributions. [3] proposed acompetence -\nbased empiricaldistancedCB(S1,S2)to show the difference\nbetween two data samples.", "start_char_idx": 1311, "end_char_idx": 1703, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ae5b141-e04a-42b6-9a34-1ed37340cd7e": {"__data__": {"id_": "5ae5b141-e04a-42b6-9a34-1ed37340cd7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3fb53d68-7a58-4c8a-8bf4-87e2dfe04b0a", "node_type": "1", "metadata": {}, "hash": "0dc76cffc28122f6d6b6c05bbea9d2c915b1cbc3ab62b6def0b31fb583d66060", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}}, "hash": "b681cfd65513331d4a87aab02fbd90cb8ece5594071192b2a54c7c6fd2327f8b", "text": "Other drift detection meth-\nods have used information-theoretic distance; for example,\nKullback-Leibler divergenceD(W1||W2), also called relative\nentropy, was used in the study reported in [22]. The range of\nthese distances is [0,1]. The greater the distance, the larger\nthe severity of the concept drift is. The distance \u201c1\u201d means\nthat a new concept is different from the pervious one, while\nthe distance \u201c0\u201d means that two data concepts are identical.", "start_char_idx": 0, "end_char_idx": 453, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3fb53d68-7a58-4c8a-8bf4-87e2dfe04b0a": {"__data__": {"id_": "3fb53d68-7a58-4c8a-8bf4-87e2dfe04b0a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ae5b141-e04a-42b6-9a34-1ed37340cd7e", "node_type": "1", "metadata": {}, "hash": "b681cfd65513331d4a87aab02fbd90cb8ece5594071192b2a54c7c6fd2327f8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8a36283-6d70-45ba-8bf3-5d325f530264", "node_type": "1", "metadata": {}, "hash": "dd274d8f62dbe055fa698d44b7c681111931cf05d1511322c692f93bcfd4bd6d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}}, "hash": "0dc76cffc28122f6d6b6c05bbea9d2c915b1cbc3ab62b6def0b31fb583d66060", "text": "The test statis tic\u03b4used in [38] gives an extremely small\nnegative value if the new concept is quite different from\nthe previous concept. The degree of concept drift in [36] is\nmeasured by the resulting p-value of thetest statis ticWl\nBF\nand thede\ufb01nedAngle (Dt,Dt+1)oftwo datasetsDtand\nDt+1.\nThe severity of concept drift can be used as a guideline\nfor choosing drift adaptation strategies.", "start_char_idx": 454, "end_char_idx": 844, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8a36283-6d70-45ba-8bf3-5d325f530264": {"__data__": {"id_": "b8a36283-6d70-45ba-8bf3-5d325f530264", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3fb53d68-7a58-4c8a-8bf4-87e2dfe04b0a", "node_type": "1", "metadata": {}, "hash": "0dc76cffc28122f6d6b6c05bbea9d2c915b1cbc3ab62b6def0b31fb583d66060", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b818744a-6f81-4afc-91d1-9fa195615bd4", "node_type": "1", "metadata": {}, "hash": "5d6636b82e342b54ee98b0b59d884770f47903d1c82c02721e635ee6c9b68545", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}}, "hash": "dd274d8f62dbe055fa698d44b7c681111931cf05d1511322c692f93bcfd4bd6d", "text": "The severity of concept drift can be used as a guideline\nfor choosing drift adaptation strategies. For example, if the\nseverity of drift in a classi\ufb01cation task is low, the decision\nboundary may not move much in the new concept. Thus,\nadjusting the current learner by incremental learning will\nbe adequate. In contrast, if the severity of the concept drift\nis high, the decision boundary could change signi\ufb01cantly,\ntherefore discarding the old learner and retraining a new\none could be better than incrementally updating the old\nlearner.", "start_char_idx": 746, "end_char_idx": 1283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b818744a-6f81-4afc-91d1-9fa195615bd4": {"__data__": {"id_": "b818744a-6f81-4afc-91d1-9fa195615bd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8a36283-6d70-45ba-8bf3-5d325f530264", "node_type": "1", "metadata": {}, "hash": "dd274d8f62dbe055fa698d44b7c681111931cf05d1511322c692f93bcfd4bd6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9d49e08-7c21-4e9a-81c8-ac4cc2e0e4c3", "node_type": "1", "metadata": {}, "hash": "4330dcb8a215de869a539e630dada08254ff8c71fd41360c7e22ea7648ba25bc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}}, "hash": "5d6636b82e342b54ee98b0b59d884770f47903d1c82c02721e635ee6c9b68545", "text": "We would like to mention that, even though some\nresearches have promoted the ability to describe and quan-\ntify the severity of the detected drift, this information is not\nyet widely utilized in drift adaptation.\n012345678910\n012345678910012345678910\n012345678910(a) Data at time t\n012345678910\n012345678910012345678910\n012345678910(b) Data at time t+1\n012345678910\n012345678910012345678910\n012345678910(c) Data in drift re-\ngions\nFig.", "start_char_idx": 1284, "end_char_idx": 1719, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9d49e08-7c21-4e9a-81c8-ac4cc2e0e4c3": {"__data__": {"id_": "e9d49e08-7c21-4e9a-81c8-ac4cc2e0e4c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b818744a-6f81-4afc-91d1-9fa195615bd4", "node_type": "1", "metadata": {}, "hash": "5d6636b82e342b54ee98b0b59d884770f47903d1c82c02721e635ee6c9b68545", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fe322443-9f9c-4894-9d41-59040db525c0", "node_type": "1", "metadata": {}, "hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "class_name": "RelatedNodeInfo"}}, "hash": "4330dcb8a215de869a539e630dada08254ff8c71fd41360c7e22ea7648ba25bc", "text": "12. An example of the drift regions of concept drift.\n4.3 The drift regions of concept drift (Where)\nThe drift regions of concept drift are the regions of con\ufb02ict\nbetween a new concept and the previous concept.", "start_char_idx": 1720, "end_char_idx": 1930, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46c6dbc8-05f0-410c-9e0f-c2b8fbf4f6dd": {"__data__": {"id_": "46c6dbc8-05f0-410c-9e0f-c2b8fbf4f6dd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d84281b7-94af-4a97-a42a-c7598800476e", "node_type": "1", "metadata": {}, "hash": "608ad6f082a17f5ebf58d76db0d30c16ab85311b839060d349eebc98187e9536", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}}, "hash": "2ded58b6fdfba7af4749141eb248877b249237fa01342ec04db1e6c8aa63b238", "text": "Drift re-\ngions are located by \ufb01nding regions in data feature spaceX\nwherePt(X,y)andPt+1(X,y)have signi\ufb01cant difference.\nTo illustrate this, we give an example of a classi\ufb01cation task\nin Fig. 12. The data used in this task are uniformly sampled\nin the range of [0,10]2. The left sub-\ufb01gure is the data sample\naccumulated at time t, where the decision boundary is\nx1+x2= 8.", "start_char_idx": 0, "end_char_idx": 371, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d84281b7-94af-4a97-a42a-c7598800476e": {"__data__": {"id_": "d84281b7-94af-4a97-a42a-c7598800476e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46c6dbc8-05f0-410c-9e0f-c2b8fbf4f6dd", "node_type": "1", "metadata": {}, "hash": "2ded58b6fdfba7af4749141eb248877b249237fa01342ec04db1e6c8aa63b238", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a39292f-9ff0-4566-825a-68968d95bd8f", "node_type": "1", "metadata": {}, "hash": "b0574451bbcbb586ef0cc086667ef173f0d95ca33f828dbedc9936dc1bc51820", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}}, "hash": "608ad6f082a17f5ebf58d76db0d30c16ab85311b839060d349eebc98187e9536", "text": "The middle sub-\ufb01gure is the data accumulated\nat timet+ 1, where the decision boundary is x1+x2= 9.\nIntuitively, data located in regions 8\u2264x1+x2<9have\ndifferent classes in time tand timet+ 1, since the decision\nboundary has changed. The right sub-\ufb01gure shows the data\nlocated in the drift regions.\nThe techniques to identify drift regions are highly de-\npendent on the data model used in the drift detection\n\n9\nmethods/algorithms.", "start_char_idx": 372, "end_char_idx": 801, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a39292f-9ff0-4566-825a-68968d95bd8f": {"__data__": {"id_": "8a39292f-9ff0-4566-825a-68968d95bd8f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d84281b7-94af-4a97-a42a-c7598800476e", "node_type": "1", "metadata": {}, "hash": "608ad6f082a17f5ebf58d76db0d30c16ab85311b839060d349eebc98187e9536", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09596724-639b-4b6d-b242-42c3a2cafc9b", "node_type": "1", "metadata": {}, "hash": "6d87ba164b5c54dc9a92d908d04234b5b47e64db0e6aff272fac5d762ef055c0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}}, "hash": "b0574451bbcbb586ef0cc086667ef173f0d95ca33f828dbedc9936dc1bc51820", "text": "Paper [25] detected drift data in lo-\ncal regions of the instance space by using online error-\nrate inside the inner-nodes of a decision tree. The whole\ndata feature space is partitioned by decision tree. Each\nleaf of this decision tree corresponds to a hyper-rectangle\nin the data feature space. All leaf nodes contain a drift\ndetector. When the leaf nodes are alerted to a drift, the\ncorresponding hyper-rectangles indicate the regions of drift\nin the data feature space.", "start_char_idx": 802, "end_char_idx": 1275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09596724-639b-4b6d-b242-42c3a2cafc9b": {"__data__": {"id_": "09596724-639b-4b6d-b242-42c3a2cafc9b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a39292f-9ff0-4566-825a-68968d95bd8f", "node_type": "1", "metadata": {}, "hash": "b0574451bbcbb586ef0cc086667ef173f0d95ca33f828dbedc9936dc1bc51820", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03715c56-d486-42e1-84c6-ee545c04b46d", "node_type": "1", "metadata": {}, "hash": "9e72bf8d333ecb5e4558c89275e0f90ea44703af33c9ed4b54da1dddae68cd17", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}}, "hash": "6d87ba164b5c54dc9a92d908d04234b5b47e64db0e6aff272fac5d762ef055c0", "text": "Similar to [25], [22] utilized the\nnodes of the kdq-tree with Kulldorff\u2019s spatial scan statistic\nto identify the regions in which data had changed the\nmost. Once a drift has been reported, Kulldorff\u2019s statistic\nmeasures how the two datasets differ only with respect\nto the region associated with the leaf node of the kdq-tree .\nThe leaf nodes with the greater statistical value of show\nthe drift regions. [2] highlighted the most severe regions\nof concept drift through top- p-competence areas.", "start_char_idx": 1276, "end_char_idx": 1770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03715c56-d486-42e1-84c6-ee545c04b46d": {"__data__": {"id_": "03715c56-d486-42e1-84c6-ee545c04b46d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09596724-639b-4b6d-b242-42c3a2cafc9b", "node_type": "1", "metadata": {}, "hash": "6d87ba164b5c54dc9a92d908d04234b5b47e64db0e6aff272fac5d762ef055c0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839", "node_type": "1", "metadata": {}, "hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "class_name": "RelatedNodeInfo"}}, "hash": "9e72bf8d333ecb5e4558c89275e0f90ea44703af33c9ed4b54da1dddae68cd17", "text": "Utilizing\ntheRelatedSets of the competence model, the data feature\nspace is partitioned by a set of overlapping hyperspheres.", "start_char_idx": 1771, "end_char_idx": 1896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d83e2f28-88c6-4a87-9b48-bb0f5bc45f57": {"__data__": {"id_": "d83e2f28-88c6-4a87-9b48-bb0f5bc45f57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d0292a66-da79-4af5-aef1-d6c1049174ee", "node_type": "1", "metadata": {}, "hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d0292a66-da79-4af5-aef1-d6c1049174ee", "node_type": "1", "metadata": {}, "hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "class_name": "RelatedNodeInfo"}}, "hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "text": "The RelatedSet -based empirical distance de\ufb01nes the distance\nbetween two datasets on a particular hypersphere. The drift\nregions are identi\ufb01ed by the corresponding hyperspheres\nwith large empirical distance at top p% level. [4] identi\ufb01ed\ndrift regions by monitoring the discrepancy in the regional\ndensity of data, which is called the local drift degree.", "start_char_idx": 0, "end_char_idx": 354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "949e6d23-0b8c-4597-84fa-6cadb6b1f450": {"__data__": {"id_": "949e6d23-0b8c-4597-84fa-6cadb6b1f450", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef8c56a3-8282-44dd-9671-1d4cc3215316", "node_type": "1", "metadata": {}, "hash": "a68ad720545f634ddc914d6490ea87ca4d157440a4f7ebc0966532fd9c2c2f02", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}}, "hash": "343bc47ae239ca56301a8fc41c7e8d9a599b8b41aea317f497a10d4c494bb165", "text": "A local\nregion with a corresponding increase or decrease in density\nwill be highlighted as a critical drift region.\nLocating concept drift regions bene\ufb01ts drift adaptation.\nPaper [56] pointed out that even if the concept of the entire\ndataset drifts, there are regions of the feature space that\nwill remain stable signi\ufb01cantly longer than other regions.\nIn an ensemble scenario, the old learning models of stable\nregions could still be useful for predicting data instances\nlocated within stable regions, or data instances located in\ndrift regions could be used to build a more updated current\nmodel.", "start_char_idx": 0, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef8c56a3-8282-44dd-9671-1d4cc3215316": {"__data__": {"id_": "ef8c56a3-8282-44dd-9671-1d4cc3215316", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "949e6d23-0b8c-4597-84fa-6cadb6b1f450", "node_type": "1", "metadata": {}, "hash": "343bc47ae239ca56301a8fc41c7e8d9a599b8b41aea317f497a10d4c494bb165", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f49097b-ab25-4492-93ab-f0cfdcd6012b", "node_type": "1", "metadata": {}, "hash": "9138f20e4853ce839adb1c50dfa963ab2e515e679a6aa5d699b68eacdb6424d8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}}, "hash": "a68ad720545f634ddc914d6490ea87ca4d157440a4f7ebc0966532fd9c2c2f02", "text": "The authors of [3] also pointed out that identifying\ndrift regions can help in recognizing obsolete data that\ncon\ufb02ict with current concepts and distinguish noise data\nfrom novel data. In their later research [2], they utilized top-\np-competence areas to edit cases in a case-based reasoning\nsystem for fast new concept switching. One step in their\ndrift adaptation is to remove con\ufb02ict instances. To preserve\nas many instances of a new concept as possible, they only\nremove obsolete con\ufb02ict instances which are outside the\ndrift regions.", "start_char_idx": 600, "end_char_idx": 1137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f49097b-ab25-4492-93ab-f0cfdcd6012b": {"__data__": {"id_": "9f49097b-ab25-4492-93ab-f0cfdcd6012b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef8c56a3-8282-44dd-9671-1d4cc3215316", "node_type": "1", "metadata": {}, "hash": "a68ad720545f634ddc914d6490ea87ca4d157440a4f7ebc0966532fd9c2c2f02", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6", "node_type": "1", "metadata": {}, "hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "class_name": "RelatedNodeInfo"}}, "hash": "9138f20e4853ce839adb1c50dfa963ab2e515e679a6aa5d699b68eacdb6424d8", "text": "LDD-DSDA [4] utilized drift regions as an\ninstance selection strategy to construct a training set that\ncontinually tracked a new concept.\n4.4 Summary of drift understanding\nWe summarize concept drift detection algorithms according\nto their ability to identify when, how, and where concept\ndrift occurs, as shown in TABLE 2.", "start_char_idx": 1138, "end_char_idx": 1461, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b15067b8-789f-449e-8f51-43b4378cf77b": {"__data__": {"id_": "b15067b8-789f-449e-8f51-43b4378cf77b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d42cf75-f774-4a70-a495-fa66f170ff51", "node_type": "1", "metadata": {}, "hash": "9c50679c49f07ba963012967798c298c835f06433378436ddccafce7773d06ed", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}}, "hash": "31564e2aff30afb34064b8266d3a2c1ee4666f4b8d99ca5fdbf89c9e92961740", "text": "All drift detection al-\ngorithms can identify the occurrence time of concept drift\n(when), and most data distribution-based drift detection\nalgorithms can also measure the severity of concept drift\n(how) through the test statistics, but only a few algorithms\nhave the ability to locate drift regions (where).", "start_char_idx": 0, "end_char_idx": 308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d42cf75-f774-4a70-a495-fa66f170ff51": {"__data__": {"id_": "8d42cf75-f774-4a70-a495-fa66f170ff51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b15067b8-789f-449e-8f51-43b4378cf77b", "node_type": "1", "metadata": {}, "hash": "31564e2aff30afb34064b8266d3a2c1ee4666f4b8d99ca5fdbf89c9e92961740", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d2f4d0c-c688-40b4-8a95-952e2e15bfc0", "node_type": "1", "metadata": {}, "hash": "e4673feeb58b1aa5d3d0427b33e75ae10c1a335e8dbda2ded03c30413c0fa76d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}}, "hash": "9c50679c49f07ba963012967798c298c835f06433378436ddccafce7773d06ed", "text": "but only a few algorithms\nhave the ability to locate drift regions (where).TABLE 2\nSummary of drift understanding for drift detection algorithms\nCategory Algorithms When How Where\nError rate-based DDM [20]\u221a\nEDDM [26]\u221a\nFW-DDM [5]\u221a\nDEML [27]\u221a\nSTEPD [30]\u221a\nADWIN [31]\u221a\nECDD [29]\u221a\nHDDM [23]\u221a\nLLDD [25]\u221a\u221a\nData distribution-\nbasedkdqTree [22]\u221a\u221a\u221a\nCM [2],", "start_char_idx": 233, "end_char_idx": 579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d2f4d0c-c688-40b4-8a95-952e2e15bfc0": {"__data__": {"id_": "0d2f4d0c-c688-40b4-8a95-952e2e15bfc0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d42cf75-f774-4a70-a495-fa66f170ff51", "node_type": "1", "metadata": {}, "hash": "9c50679c49f07ba963012967798c298c835f06433378436ddccafce7773d06ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fbc2e46-da9e-467a-aa38-cfc6de24c614", "node_type": "1", "metadata": {}, "hash": "ebdea23d5542065c9a40a60c9d82c5c0774eaf6dad8ae4d8ee9b216422b3d880", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}}, "hash": "e4673feeb58b1aa5d3d0427b33e75ae10c1a335e8dbda2ded03c30413c0fa76d", "text": "[3]\u221a\u221a\u221a\nRD [37]\u221a\u221a\nSCD [38]\u221a\u221a\nEDE [40]\u221a\nSyncStream [36]\u221a\u221a\nPCA -CD [39]\u221a\u221a\nLSDD-CDT [21]\u221a\nLSDD-INC [41]\u221a\nLDD-DSDA [4]\u221a\u221a\u221a\nMultiple\nhypothesis testsJIT [19]\u221a\nLFR [46]\u221a\nThree-layer drift detection", "start_char_idx": 580, "end_char_idx": 769, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0fbc2e46-da9e-467a-aa38-cfc6de24c614": {"__data__": {"id_": "0fbc2e46-da9e-467a-aa38-cfc6de24c614", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d2f4d0c-c688-40b4-8a95-952e2e15bfc0", "node_type": "1", "metadata": {}, "hash": "e4673feeb58b1aa5d3d0427b33e75ae10c1a335e8dbda2ded03c30413c0fa76d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f65629cc-8205-4271-aab4-5a4312022559", "node_type": "1", "metadata": {}, "hash": "d3780ca81f3fd1c6a91a1808bcae404fcd0601d10c141f9c408305e1f45d281e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}}, "hash": "ebdea23d5542065c9a40a60c9d82c5c0774eaf6dad8ae4d8ee9b216422b3d880", "text": "[19]\u221a\nLFR [46]\u221a\nThree-layer drift detection [47]\u221a\ne-Detector[48]\u221a\nDDE [49]\u221a\nEWMA [52]\u221a\nHCDTs [50]\u221a\nHLFR [51]\u221a\nHHT -CU[53]\u221a\nHHT -AG[53]\u221a\n.DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f65629cc-8205-4271-aab4-5a4312022559": {"__data__": {"id_": "f65629cc-8205-4271-aab4-5a4312022559", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fbc2e46-da9e-467a-aa38-cfc6de24c614", "node_type": "1", "metadata": {}, "hash": "ebdea23d5542065c9a40a60c9d82c5c0774eaf6dad8ae4d8ee9b216422b3d880", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9", "node_type": "1", "metadata": {}, "hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "class_name": "RelatedNodeInfo"}}, "hash": "d3780ca81f3fd1c6a91a1808bcae404fcd0601d10c141f9c408305e1f45d281e", "text": "DatadistributionTimeOld conceptNew conceptOld modelDrift detected and retrainNew model\nFig. 13. A new model is trained with latest data to replace the old model\nwhen a concept drift is detected.\n5 D RIFT ADAPTATION\nThis section focuses on strategies for updating existing\nlearning models according to the drift, which is known as\ndrift adaptation or reaction.", "start_char_idx": 906, "end_char_idx": 1265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5eda6e2-08a9-44cf-9885-ab55bb7e9632": {"__data__": {"id_": "d5eda6e2-08a9-44cf-9885-ab55bb7e9632", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11f6cf1e-4bc8-4cab-bc97-8f6e9dfc9de1", "node_type": "1", "metadata": {}, "hash": "41d23e4293dfa47cd6e584210ebd392edd91b9c6f665ae71de155d2bf5c21233", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}}, "hash": "8097fcd526c92389b2d3c7432dc85acbbe660cb9b0ebb54de4324b32845028f8", "text": "There are three main groups\nof drift adaptation methods, namely simple retraining, en-\nsemble retraining and model adjusting, that aim to handle\ndifferent types of drift.\n5.1 Training new models for global drift\nPerhaps the most straightforward way of reacting to concept\ndrift is to retrain a new model with the latest data to replace\nthe obsolete model, as shown in Fig. 13. An explicit concept\ndrift detector is required to decide when to retrain the model\n(see Section 3 on drift detection).", "start_char_idx": 0, "end_char_idx": 495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11f6cf1e-4bc8-4cab-bc97-8f6e9dfc9de1": {"__data__": {"id_": "11f6cf1e-4bc8-4cab-bc97-8f6e9dfc9de1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5eda6e2-08a9-44cf-9885-ab55bb7e9632", "node_type": "1", "metadata": {}, "hash": "8097fcd526c92389b2d3c7432dc85acbbe660cb9b0ebb54de4324b32845028f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c882face-3ddd-46d4-857e-ea76dd01afb4", "node_type": "1", "metadata": {}, "hash": "6d7fcd2fa5b488ae5cc714223a2c79d74e04c7f8f644a6f35ca033ad7456f354", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}}, "hash": "41d23e4293dfa47cd6e584210ebd392edd91b9c6f665ae71de155d2bf5c21233", "text": "A window strategy is\noften adopted in this method to preserve the most recent\ndata for retraining and/or old data for distribution change\ntest. Paired Learners [57] follows this strategy and uses two\nlearners: the stable learner and the reactive learner . If the stable\nlearner frequently misclassi\ufb01es instances that the reactive\nlearner correctly classi\ufb01es, a new concept is detected and\nthe stable learner will be replaced with the reactive learner.\nThis method is simple to understand and easy to implement,\nand can be applied at any point in the data stream.", "start_char_idx": 496, "end_char_idx": 1058, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c882face-3ddd-46d4-857e-ea76dd01afb4": {"__data__": {"id_": "c882face-3ddd-46d4-857e-ea76dd01afb4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11f6cf1e-4bc8-4cab-bc97-8f6e9dfc9de1", "node_type": "1", "metadata": {}, "hash": "41d23e4293dfa47cd6e584210ebd392edd91b9c6f665ae71de155d2bf5c21233", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfaf903b-a589-43f6-9961-b11ba89b8854", "node_type": "1", "metadata": {}, "hash": "3acde2ed73d925a07953dbb2cbd4a5be1770e92d896eb80a83a940cb5de410f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}}, "hash": "6d7fcd2fa5b488ae5cc714223a2c79d74e04c7f8f644a6f35ca033ad7456f354", "text": "10\nWhen adopting a window-based strategy, a trade-off\nmust be made in order to decide an appropriate window\nsize. A small window can better re\ufb02ect the latest data\ndistribution, but a large window provides more data for\ntraining a new model. A popular window scheme algorithm\nthat aims to mitigate this problem is ADWIN [31].", "start_char_idx": 1060, "end_char_idx": 1384, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfaf903b-a589-43f6-9961-b11ba89b8854": {"__data__": {"id_": "bfaf903b-a589-43f6-9961-b11ba89b8854", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c882face-3ddd-46d4-857e-ea76dd01afb4", "node_type": "1", "metadata": {}, "hash": "6d7fcd2fa5b488ae5cc714223a2c79d74e04c7f8f644a6f35ca033ad7456f354", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1968188e-7731-4e04-8ebf-c5c07fe83736", "node_type": "1", "metadata": {}, "hash": "3ecbc55187597677bac06a7f23fd81b4241ebc2d3f1ce12fbfe4833a09e99bda", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}}, "hash": "3acde2ed73d925a07953dbb2cbd4a5be1770e92d896eb80a83a940cb5de410f5", "text": "A popular window scheme algorithm\nthat aims to mitigate this problem is ADWIN [31]. Unlike\nmost earlier works, it does not require the user to guess\na \ufb01xed size of the windows being compared in advance;\ninstead, it examines all possible cuts of the window and\ncomputes optimal sub-window sizes according to the rate\nof change between the two sub-windows. After the optimal\nwindow cut has been found, the window containing old\ndata is dropped and a new model can be trained with the\nlatest window data.", "start_char_idx": 1301, "end_char_idx": 1802, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1968188e-7731-4e04-8ebf-c5c07fe83736": {"__data__": {"id_": "1968188e-7731-4e04-8ebf-c5c07fe83736", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfaf903b-a589-43f6-9961-b11ba89b8854", "node_type": "1", "metadata": {}, "hash": "3acde2ed73d925a07953dbb2cbd4a5be1770e92d896eb80a83a940cb5de410f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "node_type": "1", "metadata": {}, "hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "class_name": "RelatedNodeInfo"}}, "hash": "3ecbc55187597677bac06a7f23fd81b4241ebc2d3f1ce12fbfe4833a09e99bda", "text": "Instead of directly retraining the model, researchers\nhave also attempted to integrate the drift detection process\nwith the retraining process for speci\ufb01c machine learning\nalgorithms. DELM [27] extends the traditional ELM algo-\nrithm with the ability to handle concept drift by adaptively\nadjusting the number of hidden layer nodes.", "start_char_idx": 1803, "end_char_idx": 2135, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "372f1532-8ef2-4a7b-96c2-e0da12bcb1d3": {"__data__": {"id_": "372f1532-8ef2-4a7b-96c2-e0da12bcb1d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39fa2e1a-4513-4125-be6d-a3fbec3c5391", "node_type": "1", "metadata": {}, "hash": "96f3c6f4c61ea61c3a180f18c8615d9e04f50ad8d82d44026c31463a536fa9d7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}}, "hash": "953895b08fe740c88d49dea6ffd258a248e04cfe076ad42a8a9ecfbc51ee9807", "text": "When the\nclassi\ufb01cation error rate increases \u2014 which could indicate\nthe emergence of a concept drift \u2014 more nodes are added to\nthe network layers to improve its approximation capability.\nSimilarly, FP-ELM [58] is an ELM-extended method that\nadapts to drift by introducing a forgetting parameter to the\nELM model. A parallel version of ELM-based method [59]\nhas also been developed for high-speed classi\ufb01cation tasks\nunder concept drift.", "start_char_idx": 0, "end_char_idx": 435, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39fa2e1a-4513-4125-be6d-a3fbec3c5391": {"__data__": {"id_": "39fa2e1a-4513-4125-be6d-a3fbec3c5391", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "372f1532-8ef2-4a7b-96c2-e0da12bcb1d3", "node_type": "1", "metadata": {}, "hash": "953895b08fe740c88d49dea6ffd258a248e04cfe076ad42a8a9ecfbc51ee9807", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd84b8ba-f308-4d3c-922f-a63d059a2657", "node_type": "1", "metadata": {}, "hash": "b68077e84bb9d3031cf75f4f91fd337528b4fd7a83e5d186b0d0d3069ad8fb33", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}}, "hash": "96f3c6f4c61ea61c3a180f18c8615d9e04f50ad8d82d44026c31463a536fa9d7", "text": "OS-ELM [60] is another online learning\nensemble of repressor models that integrates ELM using an\nordered aggregation (OA) technique, which overcomes the\nproblem of de\ufb01ning the optimal ensemble size.\nInstance-based lazy learners for handling concept drift\nhave also been studied intensively. The Just-in-Time adaptive\nclassi\ufb01er [19], [42] is such a method which follows the\n\u201ddetect and update model\u201d strategy. For drift detection,\nit extends the traditional CUSUM test [61] to a pdf-free\nform.", "start_char_idx": 436, "end_char_idx": 928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd84b8ba-f308-4d3c-922f-a63d059a2657": {"__data__": {"id_": "bd84b8ba-f308-4d3c-922f-a63d059a2657", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39fa2e1a-4513-4125-be6d-a3fbec3c5391", "node_type": "1", "metadata": {}, "hash": "96f3c6f4c61ea61c3a180f18c8615d9e04f50ad8d82d44026c31463a536fa9d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f1acae8-83f4-4cef-9f27-6fdeb5bee113", "node_type": "1", "metadata": {}, "hash": "a74f6edf97584292f2d3c7c83db773fda4890c0a468e960f3c87e2cc3ed041bd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}}, "hash": "b68077e84bb9d3031cf75f4f91fd337528b4fd7a83e5d186b0d0d3069ad8fb33", "text": "This detection method is then integrated with a kNN\nclassi\ufb01er [42]. When a concept drift is detected, old instances\n(more than the last Tsamples) are removed from the case\nbase. In later work, the authors of [11], [45] extended this\nalgorithm to handle recurrent concepts by computing and\ncomparing current concept to previously stored concepts.\nNEFCS [2] is another kNN-based adaptive model.", "start_char_idx": 929, "end_char_idx": 1321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f1acae8-83f4-4cef-9f27-6fdeb5bee113": {"__data__": {"id_": "3f1acae8-83f4-4cef-9f27-6fdeb5bee113", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd84b8ba-f308-4d3c-922f-a63d059a2657", "node_type": "1", "metadata": {}, "hash": "b68077e84bb9d3031cf75f4f91fd337528b4fd7a83e5d186b0d0d3069ad8fb33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bc13663-1e09-4ea3-ac6e-6798c452a91b", "node_type": "1", "metadata": {}, "hash": "656f913f0cef2200ca88c7456941159a0e34ac9940339fba2936be04e1daae48", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}}, "hash": "a74f6edf97584292f2d3c7c83db773fda4890c0a468e960f3c87e2cc3ed041bd", "text": "NEFCS [2] is another kNN-based adaptive model. A compe-\ntence model-based drift detection algorithm [3] was used to\nlocate drift instances in the case base and distinguish them\nfrom noise instances and a redundancy removal algorithm,\nStepwise Redundancy Removal (SRR), was developed to\nremove redundant instances in a uniform way, guaranteeing\nthat the reduced case base would still preserve enough\ninformation for future drift detection.", "start_char_idx": 1275, "end_char_idx": 1713, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4bc13663-1e09-4ea3-ac6e-6798c452a91b": {"__data__": {"id_": "4bc13663-1e09-4ea3-ac6e-6798c452a91b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f1acae8-83f4-4cef-9f27-6fdeb5bee113", "node_type": "1", "metadata": {}, "hash": "a74f6edf97584292f2d3c7c83db773fda4890c0a468e960f3c87e2cc3ed041bd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "8759913d-865c-4f74-9d55-3017e37d91b4", "node_type": "1", "metadata": {}, "hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "class_name": "RelatedNodeInfo"}}, "hash": "656f913f0cef2200ca88c7456941159a0e34ac9940339fba2936be04e1daae48", "text": "5.2 Model ensemble for recurring drift\nIn the case of recurring concept drift, preserving and reusing\nold models can save signi\ufb01cant effort to retrain a new\nmodel for recurring concepts. This is the core idea of using\nensemble methods to handle concept drift. Ensemble meth-\nods have received much attention in stream data mining\nresearch community in recent years. Ensemble methods\ncomprise a set of base classi\ufb01ers that may have different\ntypes or different parameters.", "start_char_idx": 1714, "end_char_idx": 2185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9aed1e6-edab-4f5a-be13-9a85b0d806f3": {"__data__": {"id_": "f9aed1e6-edab-4f5a-be13-9a85b0d806f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f530631-fe7e-4ea1-8957-97936e95ff1e", "node_type": "1", "metadata": {}, "hash": "824d6dd1b51dff20d7998680a027afec90566ba0ddae927594644cb53a7c252a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}}, "hash": "c832ed2ae0f14a1807c8062adf0d56d34a26b9fab59eb8436a255b4b2c47b1c3", "text": "The output of each base\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptEnsembleAdd new model to ensemble...Fig. 14. A new base classi\ufb01er is added to the ensemble when a concept\ndrift occurs.\nclassi\ufb01er is combined using certain voting rules to predict\nthe newly arrived data.", "start_char_idx": 0, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f530631-fe7e-4ea1-8957-97936e95ff1e": {"__data__": {"id_": "1f530631-fe7e-4ea1-8957-97936e95ff1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9aed1e6-edab-4f5a-be13-9a85b0d806f3", "node_type": "1", "metadata": {}, "hash": "c832ed2ae0f14a1807c8062adf0d56d34a26b9fab59eb8436a255b4b2c47b1c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b510875-83ce-4659-a050-bfa0ef8ef3d6", "node_type": "1", "metadata": {}, "hash": "3a0f2d876b6c5891c2073ad063d7b6130e06320655aedb94d0eb3de9b73ee291", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}}, "hash": "824d6dd1b51dff20d7998680a027afec90566ba0ddae927594644cb53a7c252a", "text": "classi\ufb01er is combined using certain voting rules to predict\nthe newly arrived data. Many adaptive ensemble methods\nhave been developed that aim to handle concept drift by\nextending classical ensemble methods or by creating speci\ufb01c\nadaptive voting rules. An example is shown in Fig. 14,\nwhere new base classi\ufb01er is added to the ensemble when\nconcept drift occurs.\nBagging, Boosting and Random Forests are classical\nensemble methods used to improve the performance of\nsingle classi\ufb01ers.", "start_char_idx": 230, "end_char_idx": 714, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b510875-83ce-4659-a050-bfa0ef8ef3d6": {"__data__": {"id_": "6b510875-83ce-4659-a050-bfa0ef8ef3d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f530631-fe7e-4ea1-8957-97936e95ff1e", "node_type": "1", "metadata": {}, "hash": "824d6dd1b51dff20d7998680a027afec90566ba0ddae927594644cb53a7c252a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24", "node_type": "1", "metadata": {}, "hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "class_name": "RelatedNodeInfo"}}, "hash": "3a0f2d876b6c5891c2073ad063d7b6130e06320655aedb94d0eb3de9b73ee291", "text": "They have all been extended for handling\nstreaming data with concept drift. An online version of the\nbagging method was \ufb01rst proposed in [62] which uses each\ninstance only once to simulate the batch mode bagging.", "start_char_idx": 715, "end_char_idx": 927, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8efd933-7dbb-4d34-ab3e-d033f9cdc242": {"__data__": {"id_": "b8efd933-7dbb-4d34-ab3e-d033f9cdc242", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8520a7f-84a4-4e0e-8e83-a4634470a5f8", "node_type": "1", "metadata": {}, "hash": "15d83c23f7ac09220f2064521f5d84f9bfa4d1b03f0ae918119b4b80a046d15a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}}, "hash": "228d1c7ebfdcdf7b38d7e0725cc6334c194cfca04010539d6aa12ffcf4266361", "text": "In a later study [63], this method was combined with the\nADWIN drift detection algorithm [31] to handle concept\ndrift. When a concept drift is reported, the newly proposed\nmethod, called Leveraging Bagging, trains a new classi\ufb01er\non the latest data to replace the existing classi\ufb01er with the\nworst performance.", "start_char_idx": 0, "end_char_idx": 310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8520a7f-84a4-4e0e-8e83-a4634470a5f8": {"__data__": {"id_": "d8520a7f-84a4-4e0e-8e83-a4634470a5f8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8efd933-7dbb-4d34-ab3e-d033f9cdc242", "node_type": "1", "metadata": {}, "hash": "228d1c7ebfdcdf7b38d7e0725cc6334c194cfca04010539d6aa12ffcf4266361", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00c645fe-b22b-4a55-820b-bad248c0f88a", "node_type": "1", "metadata": {}, "hash": "6a8146886f6b5ada2a2c95a61e66fcd7a55bfd212392dc4741d3c1cc890b6d6e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}}, "hash": "15d83c23f7ac09220f2064521f5d84f9bfa4d1b03f0ae918119b4b80a046d15a", "text": "Similarly, an adaptive boosting method\nwas developed in [64] which handles concept drift by moni-\ntoring prediction accuracy using a hypothesis test, assuming\nthat classi\ufb01cation errors on non-drifting data should follow\nGaussian distribution. In a recent work [35], the Adaptive\nRandom Forest (ARF) algorithm was proposed, which ex-\ntends the random forest tree algorithm with a concept drift\ndetection method, such as ADWIN [31], to decide when to\nreplace an obsolete tree with a new one.", "start_char_idx": 311, "end_char_idx": 800, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "00c645fe-b22b-4a55-820b-bad248c0f88a": {"__data__": {"id_": "00c645fe-b22b-4a55-820b-bad248c0f88a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8520a7f-84a4-4e0e-8e83-a4634470a5f8", "node_type": "1", "metadata": {}, "hash": "15d83c23f7ac09220f2064521f5d84f9bfa4d1b03f0ae918119b4b80a046d15a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "beb6abd4-79be-40f9-aa24-6e1db2c45118", "node_type": "1", "metadata": {}, "hash": "932441036570d0c0a49744595db777ddffea0b7f09ce74d95a93cffc5dde46d5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}}, "hash": "6a8146886f6b5ada2a2c95a61e66fcd7a55bfd212392dc4741d3c1cc890b6d6e", "text": "A similar work can\nbe found in [65], which uses Hoeffding bound to distinguish\nconcept drift from noise within decision trees.\nBesides extending classical methods, many new ensem-\nble methods have been developed to handle concept drift\nusing novel voting techniques. Dynamic Weighted Majority\n(DWM) [66] is such an ensemble method that is capable of\nadapting to drifts with a simple set of weighted voting rules.\nIt manages base classi\ufb01ers according to the performance\nof both the individual classi\ufb01ers and the global ensemble.", "start_char_idx": 801, "end_char_idx": 1328, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "beb6abd4-79be-40f9-aa24-6e1db2c45118": {"__data__": {"id_": "beb6abd4-79be-40f9-aa24-6e1db2c45118", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00c645fe-b22b-4a55-820b-bad248c0f88a", "node_type": "1", "metadata": {}, "hash": "6a8146886f6b5ada2a2c95a61e66fcd7a55bfd212392dc4741d3c1cc890b6d6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5177bd74-e433-45c8-9640-f64fab7455aa", "node_type": "1", "metadata": {}, "hash": "0a809ea9245ff0341483d40162f3307a3cb9a21194a572af9d89f609d5cb99ff", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}}, "hash": "932441036570d0c0a49744595db777ddffea0b7f09ce74d95a93cffc5dde46d5", "text": "If the ensemble misclassi\ufb01es an instance, DWM will train\na new base classi\ufb01er and add it to ensemble. If a base\nclassi\ufb01er misclassi\ufb01es an instance, DWM reduces its weight\nby a factor. When the weight of a base classi\ufb01er drops\nbelow a user de\ufb01ned threshold, DWM removes it from\nthe ensemble.", "start_char_idx": 1329, "end_char_idx": 1619, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5177bd74-e433-45c8-9640-f64fab7455aa": {"__data__": {"id_": "5177bd74-e433-45c8-9640-f64fab7455aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "beb6abd4-79be-40f9-aa24-6e1db2c45118", "node_type": "1", "metadata": {}, "hash": "932441036570d0c0a49744595db777ddffea0b7f09ce74d95a93cffc5dde46d5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959", "node_type": "1", "metadata": {}, "hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "class_name": "RelatedNodeInfo"}}, "hash": "0a809ea9245ff0341483d40162f3307a3cb9a21194a572af9d89f609d5cb99ff", "text": "The drawback of this method is that the\nadding classi\ufb01er process may be triggered too frequently,\nintroducing performance issues on some occasions, such as\nwhen gradual drift occurs. A well-known ensemble method,\nLearn++NSE [67], mitigates this issue by weighting base\nclassi\ufb01ers according to their prediction error rate on the\nlatest batch of data.", "start_char_idx": 1620, "end_char_idx": 1969, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9846b948-028e-4d12-aea1-8b41f55638d4": {"__data__": {"id_": "9846b948-028e-4d12-aea1-8b41f55638d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d80cdbf-7524-46fb-9a3d-34c75c0bf1c5", "node_type": "1", "metadata": {}, "hash": "75de22b90e2fb51ce4c59c577748cb06d80281acc9047a6ea3b64e8e5300850f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}}, "hash": "11b00e1237fc4e3a5e40bac849ea2091226173e1acb865b36ca03ece5a78383e", "text": "If the error rate of the youngest classi\ufb01er\nexceeds 50%, a new classi\ufb01er will be trained based on\nthe latest data. This method has several other bene\ufb01ts: it\n\n11\n...DtDt+1Dt+2Dt+3Dt+4Dt+5Dt+6Dt+7Dt+8Dt+9...DatadistributionTimeOld conceptNew conceptDrift detected in subregionPartially update model\nFig. 15.", "start_char_idx": 0, "end_char_idx": 305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d80cdbf-7524-46fb-9a3d-34c75c0bf1c5": {"__data__": {"id_": "8d80cdbf-7524-46fb-9a3d-34c75c0bf1c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9846b948-028e-4d12-aea1-8b41f55638d4", "node_type": "1", "metadata": {}, "hash": "11b00e1237fc4e3a5e40bac849ea2091226173e1acb865b36ca03ece5a78383e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "264fe587-7d33-448d-804e-e163e7c9de53", "node_type": "1", "metadata": {}, "hash": "1fc8c7cc8f0f103b306b2f52b9f1fb56986cb328cc867bce0019175a843505c9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}}, "hash": "75de22b90e2fb51ce4c59c577748cb06d80281acc9047a6ea3b64e8e5300850f", "text": "15. A decision tree node is replaced with a new one as its perfor-\nmance deteriorates when a concept drift occurs in a subregion.\ncan easily adopt almost any base classi\ufb01er algorithm; it\ndoes not store history data, only the latest batch of data,\nwhich it only uses once to train a new classi\ufb01er; and it\ncan handle sudden drift, gradual drift, and recurrent drift\nbecause underperforming classi\ufb01ers can be reactivated or\ndeactivated as needed by adjusting their weights.", "start_char_idx": 302, "end_char_idx": 772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "264fe587-7d33-448d-804e-e163e7c9de53": {"__data__": {"id_": "264fe587-7d33-448d-804e-e163e7c9de53", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d80cdbf-7524-46fb-9a3d-34c75c0bf1c5", "node_type": "1", "metadata": {}, "hash": "75de22b90e2fb51ce4c59c577748cb06d80281acc9047a6ea3b64e8e5300850f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c507d608-441c-4d1a-9709-baa02505ac28", "node_type": "1", "metadata": {}, "hash": "30b67eeb43c9b48c46f7420e3e48f042c0d669ca2c511331357bafa34b9083a9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}}, "hash": "1fc8c7cc8f0f103b306b2f52b9f1fb56986cb328cc867bce0019175a843505c9", "text": "Other\nvoting strategies than standard weighted voting have also\nbeen applied to handle concept drift. Examples include\nhierarchical ensemble structure [68], [69], short term and\nlong term memory [13], [70] and dynamic ensemble sizes\n[71], [72].\nA number of research efforts have been made that focus\non developing ensemble methods for handling concept drift\nof certain types. Accuracy Update Ensemble (AUE2) [73]\nwas proposed with an emphasis on handling both sudden\ndrift and gradual drift equally well.", "start_char_idx": 773, "end_char_idx": 1277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c507d608-441c-4d1a-9709-baa02505ac28": {"__data__": {"id_": "c507d608-441c-4d1a-9709-baa02505ac28", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "264fe587-7d33-448d-804e-e163e7c9de53", "node_type": "1", "metadata": {}, "hash": "1fc8c7cc8f0f103b306b2f52b9f1fb56986cb328cc867bce0019175a843505c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb30bb4d-a47a-414b-9c79-d9cad1b89dc8", "node_type": "1", "metadata": {}, "hash": "6ddbc3df3502dea8552166429eef0fd33b505ab0b2ebf07f8cc5aeb587d9de0f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}}, "hash": "30b67eeb43c9b48c46f7420e3e48f042c0d669ca2c511331357bafa34b9083a9", "text": "It is a batch mode\nweighted voting ensemble method based on incremental\nbase classi\ufb01ers. By doing re-weighting, the ensemble is\nable react quickly to sudden drift. All classi\ufb01ers are also\nincrementally trained with the latest data, which ensures\nthat the ensemble evolves with gradual drift. The Optimal\nWeights Adjustment (OWA) method [74] achieves the same\ngoal by building ensembles using both weighted instances\nand weighted classi\ufb01ers for different concept drift types.", "start_char_idx": 1278, "end_char_idx": 1752, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb30bb4d-a47a-414b-9c79-d9cad1b89dc8": {"__data__": {"id_": "cb30bb4d-a47a-414b-9c79-d9cad1b89dc8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c507d608-441c-4d1a-9709-baa02505ac28", "node_type": "1", "metadata": {}, "hash": "30b67eeb43c9b48c46f7420e3e48f042c0d669ca2c511331357bafa34b9083a9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "node_type": "1", "metadata": {}, "hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "class_name": "RelatedNodeInfo"}}, "hash": "6ddbc3df3502dea8552166429eef0fd33b505ab0b2ebf07f8cc5aeb587d9de0f", "text": "The authors of [75] considered a special case of concept drift\n\u2014 class evolution \u2014 the phenomenon of class emergence\nand disappearance. Recurring concepts are handled in [76],\n[77], which monitor concept information to decide when to\nreactivate previously stored obsolete models.", "start_char_idx": 1753, "end_char_idx": 2032, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59c32184-e5e4-4649-ac3e-1a303bcbcd1f": {"__data__": {"id_": "59c32184-e5e4-4649-ac3e-1a303bcbcd1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04e05e96-e8ac-42d2-83b9-ab87641b140b", "node_type": "1", "metadata": {}, "hash": "c19bc036004060dc18b77187e7429294648285617fdafb8bd234103c9f80f6d8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}}, "hash": "e9a926607fe6b2330d94400e79782aab4425bf325a490ea750f1b9242cf4400e", "text": "[78] is another\nmethod that handles recurring concepts by re\ufb01ning the\nconcept pool to avoid redundancy.\n5.3 Adjusting existing models for regional drift\nAn alternative to retraining an entire model is to develop\na model that adaptively learns from the changing data.\nSuch models have the ability to partially update themselves\nwhen the underlying data distribution changes, as shown\nin Fig. 15. This approach is arguably more ef\ufb01cient than\nretraining when the drift only occurs in local regions.", "start_char_idx": 0, "end_char_idx": 495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04e05e96-e8ac-42d2-83b9-ab87641b140b": {"__data__": {"id_": "04e05e96-e8ac-42d2-83b9-ab87641b140b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59c32184-e5e4-4649-ac3e-1a303bcbcd1f", "node_type": "1", "metadata": {}, "hash": "e9a926607fe6b2330d94400e79782aab4425bf325a490ea750f1b9242cf4400e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0233cb17-25cb-4233-b6d7-c129b1ad5395", "node_type": "1", "metadata": {}, "hash": "a7fef0ee01a3c081cd1d52841d5472222c60aaf210ab3d757d4cc56c2cde74ca", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}}, "hash": "c19bc036004060dc18b77187e7429294648285617fdafb8bd234103c9f80f6d8", "text": "Many\nmethods in this category are based on the decision tree\nalgorithm because trees have the ability to examine and\nadapt to each sub-region separately.\nIn a foundational work [79], an online decision tree\nalgorithm, called VeryFastDecision Tree classi\ufb01er (VFDT)\nwas proposed, which is especially tailored for high speed\ndata streams. It uses Hoeffding bound to limit the num-\nber of instances required for node splitting.", "start_char_idx": 496, "end_char_idx": 919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0233cb17-25cb-4233-b6d7-c129b1ad5395": {"__data__": {"id_": "0233cb17-25cb-4233-b6d7-c129b1ad5395", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04e05e96-e8ac-42d2-83b9-ab87641b140b", "node_type": "1", "metadata": {}, "hash": "c19bc036004060dc18b77187e7429294648285617fdafb8bd234103c9f80f6d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1d24b2b-7c49-4cdf-b6be-a01329053673", "node_type": "1", "metadata": {}, "hash": "5eb42b2f35fda77c7d622af0cba109069cd3b41e4850b3ebd084b066ec8e2935", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}}, "hash": "a7fef0ee01a3c081cd1d52841d5472222c60aaf210ab3d757d4cc56c2cde74ca", "text": "It uses Hoeffding bound to limit the num-\nber of instances required for node splitting. This method\nhas become very popular because of its several distinct\nadvantages: 1) it only needs to process each instance once\nand does not store instances in memory or disk; 2) thetree itself only consumes a small amount of space and\ndoes not grow with the number of instances it processes\nunless there is new information in the data; 3) the cost of\ntree maintenance is very low. An extended version, called\nCVFDT [80], was later proposed to handle concept drift.", "start_char_idx": 832, "end_char_idx": 1384, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1d24b2b-7c49-4cdf-b6be-a01329053673": {"__data__": {"id_": "b1d24b2b-7c49-4cdf-b6be-a01329053673", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0233cb17-25cb-4233-b6d7-c129b1ad5395", "node_type": "1", "metadata": {}, "hash": "a7fef0ee01a3c081cd1d52841d5472222c60aaf210ab3d757d4cc56c2cde74ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "35198889-328a-4933-a4e4-47bef39cf559", "node_type": "1", "metadata": {}, "hash": "ee64ce79076c9a4f31081e51a7d531cbd8fba759e1679146a66aff3cafaea37e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}}, "hash": "5eb42b2f35fda77c7d622af0cba109069cd3b41e4850b3ebd084b066ec8e2935", "text": "In\nCVFDT, a sliding window is maintained to hold the latest\ndata. An alternative sub-tree is trained based on the window\nand its performance is monitored. If the alternative sub-\ntree outperforms its original counterpart, it will be used for\nfuture prediction and the original obsolete sub-tree will be\npruned. VFDTc [81] is another attempt to make improve-\nments to VFDT with several enhancements: the ability to\nhandle numerical attributes; the application of naive Bayes\nclassi\ufb01ers in tree leaves and the ability to detect and adapt to\nconcept drift.", "start_char_idx": 1385, "end_char_idx": 1938, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "35198889-328a-4933-a4e4-47bef39cf559": {"__data__": {"id_": "35198889-328a-4933-a4e4-47bef39cf559", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1d24b2b-7c49-4cdf-b6be-a01329053673", "node_type": "1", "metadata": {}, "hash": "5eb42b2f35fda77c7d622af0cba109069cd3b41e4850b3ebd084b066ec8e2935", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "node_type": "1", "metadata": {}, "hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "class_name": "RelatedNodeInfo"}}, "hash": "ee64ce79076c9a4f31081e51a7d531cbd8fba759e1679146a66aff3cafaea37e", "text": "Two node-level drift detection methods were\nproposed based on monitoring differences between a node\nand its sub-nodes. The \ufb01rst method uses classi\ufb01cation error\nrate and the second directly checks distribution difference.\nWhen a drift is detected on a node, the node becomes a leaf\nand its descending sub-tree is removed.", "start_char_idx": 1939, "end_char_idx": 2259, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8dccb543-77f3-46f3-a5c5-44072861b5d7": {"__data__": {"id_": "8dccb543-77f3-46f3-a5c5-44072861b5d7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29195ba9-e065-431a-8dd8-a8e519cad023", "node_type": "1", "metadata": {}, "hash": "99b00c7babeb942fd31a9e3b15a3673537ccaec7add4d5256c981a61c3f7415b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}}, "hash": "3e2e7554c31324315e942f2098cd07af5914ab8983609c4d88854b402cd20dae", "text": "Later work [82],\n[83] further extended VFDTc using an adaptive leaf strategy\nthat chooses the best classi\ufb01er from three options: majority\nvoting, Naive Bayes and Weighted Naive Bayes.\nDespite the success of VFDT, recent studies [84], [85]\nhave shown that its foundation, the Hoeffding bound, may\nnot be appropriate for the node splitting calculation because\nthe variables it computes, the information gain, are not\nindependent. A new online decision tree model [86] was\ndeveloped based on an alternative impurity measure.", "start_char_idx": 0, "end_char_idx": 521, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29195ba9-e065-431a-8dd8-a8e519cad023": {"__data__": {"id_": "29195ba9-e065-431a-8dd8-a8e519cad023", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8dccb543-77f3-46f3-a5c5-44072861b5d7", "node_type": "1", "metadata": {}, "hash": "3e2e7554c31324315e942f2098cd07af5914ab8983609c4d88854b402cd20dae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a22e57da-699a-4823-94ea-c3bb70232920", "node_type": "1", "metadata": {}, "hash": "8a4e4ee19462831bbe75a09906e744a12c59350409722abcdcc211ea113d3e25", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}}, "hash": "99b00c7babeb942fd31a9e3b15a3673537ccaec7add4d5256c981a61c3f7415b", "text": "The\npaper shows that this measure also re\ufb02ects concept drift\nand can be used as a replacement measure in CVFDT. In the\nsame spirit, another decision tree algorithm (IADEM-3) [87]\naims to rectify the use of Hoeffding bound by computing\nthe sum of independent random variables, called relative\nfrequencies . The error rate of sub-trees are monitored to\ndetect drift and are used for tree pruning.", "start_char_idx": 522, "end_char_idx": 916, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a22e57da-699a-4823-94ea-c3bb70232920": {"__data__": {"id_": "a22e57da-699a-4823-94ea-c3bb70232920", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29195ba9-e065-431a-8dd8-a8e519cad023", "node_type": "1", "metadata": {}, "hash": "99b00c7babeb942fd31a9e3b15a3673537ccaec7add4d5256c981a61c3f7415b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ac06141-9f97-4548-ad07-3650a62157bc", "node_type": "1", "metadata": {}, "hash": "33546d9722994b5010cb9f31c320b4a9053204b01ddcca6d0c9db341e70eeb6f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}}, "hash": "8a4e4ee19462831bbe75a09906e744a12c59350409722abcdcc211ea113d3e25", "text": "The error rate of sub-trees are monitored to\ndetect drift and are used for tree pruning.\n6 E VALUATION , DATASETS AND BENCHMARKS\nSection 6.1 discusses the evaluation systems used for learn-\ning algorithms handling concept drift. Section 6.2 introduces\nsynthetic datasets, which used to simulate speci\ufb01c and\ncontrollable types of concept drift. Section 6.3 describes real-\nworld datasets, which used to test the overall performance\nin a real-life scenario.", "start_char_idx": 828, "end_char_idx": 1283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ac06141-9f97-4548-ad07-3650a62157bc": {"__data__": {"id_": "6ac06141-9f97-4548-ad07-3650a62157bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a22e57da-699a-4823-94ea-c3bb70232920", "node_type": "1", "metadata": {}, "hash": "8a4e4ee19462831bbe75a09906e744a12c59350409722abcdcc211ea113d3e25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a48e7990-1575-4b80-8df3-6e725e4c6f17", "node_type": "1", "metadata": {}, "hash": "c7735e28fc125bcb8c26e2946419dd872395ce9eac1917140e7c525c91e9a90b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}}, "hash": "33546d9722994b5010cb9f31c320b4a9053204b01ddcca6d0c9db341e70eeb6f", "text": "6.1 Evaluation Systems\nThe evaluation systems is an important part for learning\nalgorithms. Some evaluation methodologies used in learn-\ning under concept drift have been mentioned in [8]. We\nenrich this previous research by reviewing the evaluation\nsystems from three aspects: 1) validation methodology, 2)\nevaluation metrics, and 3) statistical signi\ufb01cance, and each\nevaluation is followed by its computation equation and\nusage introduction.", "start_char_idx": 1284, "end_char_idx": 1727, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a48e7990-1575-4b80-8df3-6e725e4c6f17": {"__data__": {"id_": "a48e7990-1575-4b80-8df3-6e725e4c6f17", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ac06141-9f97-4548-ad07-3650a62157bc", "node_type": "1", "metadata": {}, "hash": "33546d9722994b5010cb9f31c320b4a9053204b01ddcca6d0c9db341e70eeb6f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "node_type": "1", "metadata": {}, "hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "class_name": "RelatedNodeInfo"}}, "hash": "c7735e28fc125bcb8c26e2946419dd872395ce9eac1917140e7c525c91e9a90b", "text": "Validation methodology refers to the procedure for a\nlearning algorithm to determine which data instances are\nused as the training set and which are used as the testing\nset. There are three procedures peculiar to the evaluation\nfor learning algorithms capable of handling concept drift:\n\n12\n1)holdout , 2)prequential , and 3) controlled permutation .", "start_char_idx": 1728, "end_char_idx": 2078, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fbbb742-7b71-454d-a50c-9eeb048ea353": {"__data__": {"id_": "7fbbb742-7b71-454d-a50c-9eeb048ea353", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b038c328-0caa-4be1-99bd-e9e4bceb30b5", "node_type": "1", "metadata": {}, "hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b038c328-0caa-4be1-99bd-e9e4bceb30b5", "node_type": "1", "metadata": {}, "hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "class_name": "RelatedNodeInfo"}}, "hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "text": "In the\nscenario of a dataset involving concept drift, holdout should\nfollow the rule: when testing a learning algorithm at time\nt, the holdout set represents exactly the same concept at\nthat timet. Unfortunately, it is only applied on synthetic\ndatasets with prede\ufb01ned concept drift times. Prequential is\na popular evaluation scheme used in streaming data.", "start_char_idx": 0, "end_char_idx": 356, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cf9f21e-0c30-4c8f-b0bf-521eba867bba": {"__data__": {"id_": "4cf9f21e-0c30-4c8f-b0bf-521eba867bba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5af83030-6aad-4126-a9ef-b0bc77aa540f", "node_type": "1", "metadata": {}, "hash": "94b1ff59d8cfc963c120cee133510c47174cecaef49ef61d2b6801de7abab89f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}}, "hash": "0d4008dc5c31837d03bed2894766d385002834f8f1664769317bf6831a9dee2d", "text": "Prequential is\na popular evaluation scheme used in streaming data. Each\ndata instance is \ufb01rst used to test the learning algorithm, and\nthen to train the learning algorithm. This scheme has the\nadvantage that there is no need to know the drift time of\nconcepts, and it makes maximum use of the available data.\nThe prequential error is computed based on an accumulated\nsum of a loss function between the prediction and observed\nlabel:S=\u2211n\nt=1f(\u02c6yt,yt).", "start_char_idx": 0, "end_char_idx": 450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5af83030-6aad-4126-a9ef-b0bc77aa540f": {"__data__": {"id_": "5af83030-6aad-4126-a9ef-b0bc77aa540f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cf9f21e-0c30-4c8f-b0bf-521eba867bba", "node_type": "1", "metadata": {}, "hash": "0d4008dc5c31837d03bed2894766d385002834f8f1664769317bf6831a9dee2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "407b390a-e65c-4c34-8f94-c244910b8997", "node_type": "1", "metadata": {}, "hash": "2dca47d10b577fc5e12ce6dbc2f7d9a4ef6eec2e4eeb91dddc8102edabd79546", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}}, "hash": "94b1ff59d8cfc963c120cee133510c47174cecaef49ef61d2b6801de7abab89f", "text": "There are three prequential error\nrate estimates: a landmark window (interleaved-test-then-\ntrain), a sliding window, and a forgetting mechanism [88].\nControlled permutation [89] runs multiple test datasets in\nwhich the data order has been permutated in a controlled\nway to preserve the local distribution, which means that\ndata instances that were originally close to one another in\ntime need to remain close after a permutation. Controlled\npermutation reduces the risk that their prequential evalua-\ntion may produce biased results for the \ufb01xed order of data\nin a sequence.", "start_char_idx": 451, "end_char_idx": 1026, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "407b390a-e65c-4c34-8f94-c244910b8997": {"__data__": {"id_": "407b390a-e65c-4c34-8f94-c244910b8997", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5af83030-6aad-4126-a9ef-b0bc77aa540f", "node_type": "1", "metadata": {}, "hash": "94b1ff59d8cfc963c120cee133510c47174cecaef49ef61d2b6801de7abab89f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "node_type": "1", "metadata": {}, "hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "class_name": "RelatedNodeInfo"}}, "hash": "2dca47d10b577fc5e12ce6dbc2f7d9a4ef6eec2e4eeb91dddc8102edabd79546", "text": "Evaluation metrics for datasets involving concept drift\ncould be selected from traditional accuracy measures, such\nas precision/recall in retrieval tasks, mean absolute scaled\nerror in regression, or root mean square error in recom-\nmender systems.", "start_char_idx": 1027, "end_char_idx": 1275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f55f0f60-ffb4-4a71-9221-4c60f592eb60": {"__data__": {"id_": "f55f0f60-ffb4-4a71-9221-4c60f592eb60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc9bc022-2a29-4cf5-9fd8-e1d050157557", "node_type": "1", "metadata": {}, "hash": "a23ae669f593dabe9afa9b61cf4ff9e5feeee7efc618bc5e359b93a16518c84a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}}, "hash": "b090f405157b33bd61e2b3eac786fbfdbf7c968d60f8cc3905395d471417a4c7", "text": "In addition to that, the following measures\nshould be examined: 1) RAM-hours [90] for the computation\ncost of the mining process; 2) Kappa statistic \u03ba=p\u2212pran\n1\u2212pran[91] for classi\ufb01cation taking into account class imbalance,\nwherepis the accuracy of the classi\ufb01er under consideration\n(reference classi\ufb01er) and pranis the accuracy of the random\nclassi\ufb01er;", "start_char_idx": 0, "end_char_idx": 353, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc9bc022-2a29-4cf5-9fd8-e1d050157557": {"__data__": {"id_": "bc9bc022-2a29-4cf5-9fd8-e1d050157557", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f55f0f60-ffb4-4a71-9221-4c60f592eb60", "node_type": "1", "metadata": {}, "hash": "b090f405157b33bd61e2b3eac786fbfdbf7c968d60f8cc3905395d471417a4c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa0ff2e3-a3c3-4127-b732-e218bac3e714", "node_type": "1", "metadata": {}, "hash": "2425c5f94b2f67e811b9b57409dab51b3025739a2d4db6d32fe33a5262bcf901", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}}, "hash": "a23ae669f593dabe9afa9b61cf4ff9e5feeee7efc618bc5e359b93a16518c84a", "text": "3) Kappa-Temporal statistic \u03baper=p\u2212pper\n1\u2212pper[92] for the\nclassi\ufb01cation of streaming data with temporal dependence,\nwherepperis the accuracy of the persistent classi\ufb01er (a clas-\nsi\ufb01er that predicts the same label as previously observed);\n4)Combined Kappa statistic \u03ba+=\u221a\nmax(0,\u03ba) max(0,\u03baper)\n[92], which combines the \u03baand\u03baperby taking the geometric\naverage; 5) Prequential AUC [93];", "start_char_idx": 354, "end_char_idx": 736, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa0ff2e3-a3c3-4127-b732-e218bac3e714": {"__data__": {"id_": "aa0ff2e3-a3c3-4127-b732-e218bac3e714", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc9bc022-2a29-4cf5-9fd8-e1d050157557", "node_type": "1", "metadata": {}, "hash": "a23ae669f593dabe9afa9b61cf4ff9e5feeee7efc618bc5e359b93a16518c84a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee21da57-786a-4b89-968d-023f598575c6", "node_type": "1", "metadata": {}, "hash": "75c4bd33b05babc5c7de6ccc6d3855dad726e3ecfd09b159f39b73e116bc559f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}}, "hash": "2425c5f94b2f67e811b9b57409dab51b3025739a2d4db6d32fe33a5262bcf901", "text": "5) Prequential AUC [93]; and 6)theAveraged Nor-\nmalized Area Under theCurve (NAUC) values forPreci-\nsion-Range curve and Recall-Range curve [53], for the clas-\nsi\ufb01cation of streaming data involving concept drift. Apart\nfrom evaluating the performance of learning algorithms, the\naccuracy of the concept drift detection method/algorithm\ncan be accessed according to the following criteria: 1) true\ndetection rate , 2)false detection rate , 3)miss detection rate , and\n4) delay of detection [22].", "start_char_idx": 712, "end_char_idx": 1206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee21da57-786a-4b89-968d-023f598575c6": {"__data__": {"id_": "ee21da57-786a-4b89-968d-023f598575c6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa0ff2e3-a3c3-4127-b732-e218bac3e714", "node_type": "1", "metadata": {}, "hash": "2425c5f94b2f67e811b9b57409dab51b3025739a2d4db6d32fe33a5262bcf901", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b43f1625-a2ce-4867-a68b-f9def6e36d22", "node_type": "1", "metadata": {}, "hash": "94f10d8109e3e5d65f202b401c9f727317d54dc4640cad98b25914a391f6a801", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}}, "hash": "75c4bd33b05babc5c7de6ccc6d3855dad726e3ecfd09b159f39b73e116bc559f", "text": "Statistical signi\ufb01cance is used to compare learning algo-\nrithms on achieved error rates. The three most frequently\nused statistical tests for comparing two learning algorithms\n[94], [95] are: 1) McNemar test [96]: denote the number\nof data instances misclassi\ufb01ed by the \ufb01rst classi\ufb01er and\ncorrectly classi\ufb01ed by the second classi\ufb01er by a, and denote\nbin the opposite way.", "start_char_idx": 1207, "end_char_idx": 1579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b43f1625-a2ce-4867-a68b-f9def6e36d22": {"__data__": {"id_": "b43f1625-a2ce-4867-a68b-f9def6e36d22", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee21da57-786a-4b89-968d-023f598575c6", "node_type": "1", "metadata": {}, "hash": "75c4bd33b05babc5c7de6ccc6d3855dad726e3ecfd09b159f39b73e116bc559f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "node_type": "1", "metadata": {}, "hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "class_name": "RelatedNodeInfo"}}, "hash": "94f10d8109e3e5d65f202b401c9f727317d54dc4640cad98b25914a391f6a801", "text": "The McNemar statistic is computed\nasM=sign(a\u2212b)\u00d7(a\u2212b)2/(a+b)to test whether\ntwo classi\ufb01ers perform equally well.", "start_char_idx": 1580, "end_char_idx": 1692, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba76b114-43a2-4950-919f-e3e3dbcbf86a": {"__data__": {"id_": "ba76b114-43a2-4950-919f-e3e3dbcbf86a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87ec7b4b-2729-4e67-805c-62426258728b", "node_type": "1", "metadata": {}, "hash": "a7fde4bbaf8b08d5bf369d47cd80bfd4e7be2e7cff1cb45d6bcda57b60f7ffd9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}}, "hash": "4998138dc72e5f433ad539d032f527658aa2e3cc98caf6a52dc4efeccd84969c", "text": "The test follows the\n\u03c72distribution; 2) Sign test: for Ndata instances, denote\nthe number of data instances misclassi\ufb01ed by the \ufb01rstclassi\ufb01er and correctly classi\ufb01ed by the second classi\ufb01er by\nBand the number of ties by T. Conduct one-sided sign\ntest by computing p=\u2211N\u2212T\nk=B(N\u2212T\nk)0.5k\u00d70.5N\u2212T\u2212k.", "start_char_idx": 0, "end_char_idx": 295, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87ec7b4b-2729-4e67-805c-62426258728b": {"__data__": {"id_": "87ec7b4b-2729-4e67-805c-62426258728b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba76b114-43a2-4950-919f-e3e3dbcbf86a", "node_type": "1", "metadata": {}, "hash": "4998138dc72e5f433ad539d032f527658aa2e3cc98caf6a52dc4efeccd84969c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edecd0b1-9066-4f98-976c-a0c894554643", "node_type": "1", "metadata": {}, "hash": "fff8ee168d4d9ebaf61acfce9b62d1cdea9c186fac5f71109ec6e8ec955e688a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}}, "hash": "a7fde4bbaf8b08d5bf369d47cd80bfd4e7be2e7cff1cb45d6bcda57b60f7ffd9", "text": "If\npless than a signi\ufb01cant level, then the second classi\ufb01er\nis better than the \ufb01rst classi\ufb01er. and 3) Wilcoxon\u2019s sign-\nrank test: For testing two classi\ufb01ers on Ndatasets, let xi,1\nandxi,2(i= 1,...,N )denote the measurements. The\nnumber of ties is TandNr=N\u2212T.", "start_char_idx": 296, "end_char_idx": 554, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edecd0b1-9066-4f98-976c-a0c894554643": {"__data__": {"id_": "edecd0b1-9066-4f98-976c-a0c894554643", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87ec7b4b-2729-4e67-805c-62426258728b", "node_type": "1", "metadata": {}, "hash": "a7fde4bbaf8b08d5bf369d47cd80bfd4e7be2e7cff1cb45d6bcda57b60f7ffd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2094ca8-69c8-4279-a4b8-54d7016a3a67", "node_type": "1", "metadata": {}, "hash": "f6312d7979379ada688985137586fe13afb3d7abf6bdb436c669204590b634f4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}}, "hash": "fff8ee168d4d9ebaf61acfce9b62d1cdea9c186fac5f71109ec6e8ec955e688a", "text": "The\nnumber of ties is TandNr=N\u2212T. The test statistic\nW=\u2211Nr\ni=1(sign(xi,1\u2212xi,2)\u00d7Ri)whereRiis the rank\nordered by|xi,1\u2212xi,2|increasingly. Two classi\ufb01ers perform\nequally is rejected if |W|> W critical,Nr(two-sided), where\nWcritical,Nrcan be acquired from the statistical table. All\nthree tests are non-parametric.", "start_char_idx": 521, "end_char_idx": 831, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2094ca8-69c8-4279-a4b8-54d7016a3a67": {"__data__": {"id_": "a2094ca8-69c8-4279-a4b8-54d7016a3a67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edecd0b1-9066-4f98-976c-a0c894554643", "node_type": "1", "metadata": {}, "hash": "fff8ee168d4d9ebaf61acfce9b62d1cdea9c186fac5f71109ec6e8ec955e688a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "206b0777-a998-4b40-b119-d4cbdb335f45", "node_type": "1", "metadata": {}, "hash": "6db029f78a8ead2ed988154986ebebf937d9a85c90c6e592e097e7227b5a424d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}}, "hash": "f6312d7979379ada688985137586fe13afb3d7abf6bdb436c669204590b634f4", "text": "All\nthree tests are non-parametric. The Nemenyi test [97] is\nused to compare more than two learning algorithms. It is\nan appropriate test for comparing all learning algorithms\nwith multiple datasets, based on the average rank of algo-\nrithms over all datasets.", "start_char_idx": 796, "end_char_idx": 1056, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "206b0777-a998-4b40-b119-d4cbdb335f45": {"__data__": {"id_": "206b0777-a998-4b40-b119-d4cbdb335f45", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2094ca8-69c8-4279-a4b8-54d7016a3a67", "node_type": "1", "metadata": {}, "hash": "f6312d7979379ada688985137586fe13afb3d7abf6bdb436c669204590b634f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc7a2dc9-58ee-478d-b945-e409383334f6", "node_type": "1", "metadata": {}, "hash": "ace761c221c96444987af040d57073d07a11178146f961624cd75d7542fd124c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}}, "hash": "6db029f78a8ead2ed988154986ebebf937d9a85c90c6e592e097e7227b5a424d", "text": "The Nemenyi test consists of the\nfollowing: two classi\ufb01ers are performing differently if the\ncorresponding average ranks differ by at least the critical\ndifference CD =q\u03b1\u221a\nk(k+ 1)/6N, wherekis the number\nof learners, Nis the number of datasets, and critical values\nq\u03b1are based on the Studentized range statistic divided by\u221a\n2. Other tests can be used to compare learning algorithms\nwith a control algorithm [97].", "start_char_idx": 1057, "end_char_idx": 1469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc7a2dc9-58ee-478d-b945-e409383334f6": {"__data__": {"id_": "dc7a2dc9-58ee-478d-b945-e409383334f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "206b0777-a998-4b40-b119-d4cbdb335f45", "node_type": "1", "metadata": {}, "hash": "6db029f78a8ead2ed988154986ebebf937d9a85c90c6e592e097e7227b5a424d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5867d46-56e8-4485-9627-2dbf45487f95", "node_type": "1", "metadata": {}, "hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "class_name": "RelatedNodeInfo"}}, "hash": "ace761c221c96444987af040d57073d07a11178146f961624cd75d7542fd124c", "text": "Other tests can be used to compare learning algorithms\nwith a control algorithm [97].\n6.2 Synthetic datasets\nWe list several widely used synthetic datasets for evaluat-\ning the performance of learning algorithms dealing with\nconcept drift.", "start_char_idx": 1384, "end_char_idx": 1623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d752f7e7-ab5f-41a9-a2a8-1f39f8338397": {"__data__": {"id_": "d752f7e7-ab5f-41a9-a2a8-1f39f8338397", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cc40d4c-d959-41be-b8a7-d569a48eccae", "node_type": "1", "metadata": {}, "hash": "20e382513e0295f363cdb640a79b7ac0a41013bdd51ecbe19e9b4e3289dc076c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}}, "hash": "5b45258da08f98f85afc640332f6074873026c1f29f9f9dec28b784ebbc980df", "text": "Since data instances are generated by prede-\n\ufb01ned rules and speci\ufb01c parameters, a synthetic dataset is\na good option for evaluating the performance of learning\nalgorithms in different concept drift scenarios. The dataset\nprovider, the number of instances (#Insts.), the number\nof attributes (#Attrs.), the number of classes (#Cls.), types\nof drift (Types), sources of drift (Sources), and used by\nreferences, are listed in TABLE 3.", "start_char_idx": 0, "end_char_idx": 431, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cc40d4c-d959-41be-b8a7-d569a48eccae": {"__data__": {"id_": "2cc40d4c-d959-41be-b8a7-d569a48eccae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d752f7e7-ab5f-41a9-a2a8-1f39f8338397", "node_type": "1", "metadata": {}, "hash": "5b45258da08f98f85afc640332f6074873026c1f29f9f9dec28b784ebbc980df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bbe7983-9422-4e77-ace4-24d65ac0f7f3", "node_type": "1", "metadata": {}, "hash": "8eb4814f5eca3980e6d1987339f86ce8af0e1179e33fd5ae7690f0323be11de0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}}, "hash": "20e382513e0295f363cdb640a79b7ac0a41013bdd51ecbe19e9b4e3289dc076c", "text": "6.3 Real-world datasets\nIn this section, we collect several publicly available real-\nworld datasets, including real-world datasets with syn-\nthetic drifts. The dataset provider, the number of instances\n(#Insts.), the number of attributes (#Attrs.), the number\nof classes (#Cls.), and used by references, are shown in\nTABLE 4.\nMost ofthese datasets contain temporalconcept drift\nspan ning over differentperiod range -e.g.", "start_char_idx": 432, "end_char_idx": 852, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bbe7983-9422-4e77-ace4-24d65ac0f7f3": {"__data__": {"id_": "5bbe7983-9422-4e77-ace4-24d65ac0f7f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cc40d4c-d959-41be-b8a7-d569a48eccae", "node_type": "1", "metadata": {}, "hash": "20e382513e0295f363cdb640a79b7ac0a41013bdd51ecbe19e9b4e3289dc076c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "425efa9e-e1c3-49e7-a1e6-4c777f2a5177", "node_type": "1", "metadata": {}, "hash": "3bcd7b3a82f5e1eb0affcd4b8a5f92f6015b57f01b458aec85c79a0e700670e6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}}, "hash": "8eb4814f5eca3980e6d1987339f86ce8af0e1179e33fd5ae7690f0323be11de0", "text": "Most ofthese datasets contain temporalconcept drift\nspan ning over differentperiod range -e.g. daily (Sen sor\n[108]), seasonally (Elec tricity [109] )oryearly (Airlines\n[104], NOAA weather [67]).Othersinclude geograph ical\n(Cover type [106] )orcategorical(Poker -Hand [106] )concept\ndrift.", "start_char_idx": 758, "end_char_idx": 1047, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "425efa9e-e1c3-49e7-a1e6-4c777f2a5177": {"__data__": {"id_": "425efa9e-e1c3-49e7-a1e6-4c777f2a5177", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5bbe7983-9422-4e77-ace4-24d65ac0f7f3", "node_type": "1", "metadata": {}, "hash": "8eb4814f5eca3980e6d1987339f86ce8af0e1179e33fd5ae7690f0323be11de0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f8c1072-d305-4515-bbef-30cf55df4a4b", "node_type": "1", "metadata": {}, "hash": "4b912061bb6336b81fd4231a0b6d438b7dc2cef2e54b9241fc1881dd1b507778", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}}, "hash": "3bcd7b3a82f5e1eb0affcd4b8a5f92f6015b57f01b458aec85c79a0e700670e6", "text": "Certain date sets, mainly text based, aretargetingat\nspeci\ufb01c drift types, such assudden drift (Email data [110] ),\ngradu raldrift (Spam assassincorpus [111] ),recurrent drift\n(Usenet [112]) ornovel class (KDDCup\u201999 [106] ,ECUE drift\ndataset 2[113] )\nThese datasets provide realisticbench mark forevaluat-\ningdiffernent concept drift handling meth ods.", "start_char_idx": 1048, "end_char_idx": 1399, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f8c1072-d305-4515-bbef-30cf55df4a4b": {"__data__": {"id_": "3f8c1072-d305-4515-bbef-30cf55df4a4b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "425efa9e-e1c3-49e7-a1e6-4c777f2a5177", "node_type": "1", "metadata": {}, "hash": "3bcd7b3a82f5e1eb0affcd4b8a5f92f6015b57f01b458aec85c79a0e700670e6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "117be70c-93da-4351-b313-0892a4bff3a0", "node_type": "1", "metadata": {}, "hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "class_name": "RelatedNodeInfo"}}, "hash": "4b912061bb6336b81fd4231a0b6d438b7dc2cef2e54b9241fc1881dd1b507778", "text": "There are,\nhow ever, two limitations ofreal world data sets: 1)the\ngroud truth ofprecise start and end time ofdrifts isun-\nknown; 2)some real datasets may include mixed drift types.\nThese limitations make itdif\ufb01cult toevaluatemeth ods for\n\n13\nTABLE 3\nList of synthetic datasets for performance evaluation of learning under concept drift.\nDataset #Insts. #Attrs. #Cls.", "start_char_idx": 1400, "end_char_idx": 1767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "247470a6-5590-464a-b095-84bc71d0fa16": {"__data__": {"id_": "247470a6-5590-464a-b095-84bc71d0fa16", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f2c2788-719b-4bf1-aed2-830e6802d26f", "node_type": "1", "metadata": {}, "hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "2f2c2788-719b-4bf1-aed2-830e6802d26f", "node_type": "1", "metadata": {}, "hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "class_name": "RelatedNodeInfo"}}, "hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "text": "Dataset #Insts. #Attrs. #Cls.", "start_char_idx": 0, "end_char_idx": 29, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbc35541-45d1-4477-894b-f311df75f13f": {"__data__": {"id_": "cbc35541-45d1-4477-894b-f311df75f13f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffc320d3-fe79-4ea5-a290-024fac04f277", "node_type": "1", "metadata": {}, "hash": "bbaff95f32c5c95fe45557113df4adca45d80d9efc6aa16c14b8793513e2f2d3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}}, "hash": "2e446f98b2533164c98e4991285be8c6ecc9ccc1ac335c9374e2883df4851b5a", "text": "Dataset #Insts. #Attrs. #Cls. Types Sources Used by references\n1 STAGGER [1] Custom 3 2 Sudden II [20], [23], [27], [30], [41], [57], [65], [72], [87], [98],\n[99]\n2 SEA [100] Custom 3 2 Sudden II [2], [5], [13], [20], [27], [32], [35], [51], [57], [58],\n[63], [65], [67], [73], [76],", "start_char_idx": 0, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffc320d3-fe79-4ea5-a290-024fac04f277": {"__data__": {"id_": "ffc320d3-fe79-4ea5-a290-024fac04f277", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbc35541-45d1-4477-894b-f311df75f13f", "node_type": "1", "metadata": {}, "hash": "2e446f98b2533164c98e4991285be8c6ecc9ccc1ac335c9374e2883df4851b5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e835e945-3306-40be-a0ac-552f586827a2", "node_type": "1", "metadata": {}, "hash": "28b91e96138145b4998274ef27af6cdc08b2614fa587737d5413239746bacdb0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}}, "hash": "bbaff95f32c5c95fe45557113df4adca45d80d9efc6aa16c14b8793513e2f2d3", "text": "[58],\n[63], [65], [67], [73], [76], [99]\u2013[102]\n3 Rotating hyperplane [80],\n[103]Custom 10 2 Gradual; Incremental II [2], [13], [21], [27], [30], [32], [35], [36], [41], [51],\n[58], [59], [63], [71]\u2013[73], [78], [80], [83], [87], [102]\n4 Random RBF [104] Custom Custom Custom Sudden; Gradual;", "start_char_idx": 248, "end_char_idx": 538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e835e945-3306-40be-a0ac-552f586827a2": {"__data__": {"id_": "e835e945-3306-40be-a0ac-552f586827a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffc320d3-fe79-4ea5-a290-024fac04f277", "node_type": "1", "metadata": {}, "hash": "bbaff95f32c5c95fe45557113df4adca45d80d9efc6aa16c14b8793513e2f2d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "735c94b6-9f76-4236-8a0d-eab7a60e6b80", "node_type": "1", "metadata": {}, "hash": "59d84ddb54f232aa1f6d7470b47017bfcc4dbbddc8867d6e996ef14010563274", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}}, "hash": "28b91e96138145b4998274ef27af6cdc08b2614fa587737d5413239746bacdb0", "text": "[102]\n4 Random RBF [104] Custom Custom Custom Sudden; Gradual; Incre-\nmentalIII [13], [20], [21], [26], [27], [29], [30], [35], [41], [50],\n[63], [67], [72]\u2013[74], [87], [102], [105]\n5 Random Tree [79], [104] Custom Custom Custom Sudden; Reoccurring II [27], [35], [73], [82],", "start_char_idx": 476, "end_char_idx": 751, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "735c94b6-9f76-4236-8a0d-eab7a60e6b80": {"__data__": {"id_": "735c94b6-9f76-4236-8a0d-eab7a60e6b80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e835e945-3306-40be-a0ac-552f586827a2", "node_type": "1", "metadata": {}, "hash": "28b91e96138145b4998274ef27af6cdc08b2614fa587737d5413239746bacdb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72d079c8-6923-40f8-9643-69172452565a", "node_type": "1", "metadata": {}, "hash": "dbaea4fd261932b72e5bb9c4b77dc20361a97374769d11c3fad8ddfe602c97ec", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}}, "hash": "59d84ddb54f232aa1f6d7470b47017bfcc4dbbddc8867d6e996ef14010563274", "text": "Reoccurring II [27], [35], [73], [82], [84]\u2013[87]\n6 LED [106] Custom 24 10 Sudden II [23], [27], [35], [63], [73], [81], [82], [87], [99], [102]\n7 Waveform [106] Custom 40 3 Sudden II [18], [27], [78], [81]\u2013[83], [87], [102]\n8 Sine [20] Custom 2 2 Sudden II [20], [21], [26], [29],", "start_char_idx": 713, "end_char_idx": 993, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72d079c8-6923-40f8-9643-69172452565a": {"__data__": {"id_": "72d079c8-6923-40f8-9643-69172452565a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "735c94b6-9f76-4236-8a0d-eab7a60e6b80", "node_type": "1", "metadata": {}, "hash": "59d84ddb54f232aa1f6d7470b47017bfcc4dbbddc8867d6e996ef14010563274", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "node_type": "1", "metadata": {}, "hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "class_name": "RelatedNodeInfo"}}, "hash": "dbaea4fd261932b72e5bb9c4b77dc20361a97374769d11c3fad8ddfe602c97ec", "text": "[21], [26], [29], [72], [107]\n9 Circle [20] Custom 2 2 Gradual III [20], [21], [26], [30], [41], [72], [101], [107]\n10 Rotating chessboard [67] Custom 2 2 Gradual II [13], [45], [51], [67], [107]\nunderstand ing the drift, and could introduce bias when\ncomparingdifferentmachine learn ingmod els.", "start_char_idx": 976, "end_char_idx": 1271, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da01ed74-b897-40c6-bea0-66e9c80aea3c": {"__data__": {"id_": "da01ed74-b897-40c6-bea0-66e9c80aea3c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cbbc6fd-36c3-4b93-b59e-6b6f8bc3d58e", "node_type": "1", "metadata": {}, "hash": "51f49907a57fd7f07422eef37829a1ba14e7033d922f46e32a49e8dce46faa16", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}}, "hash": "9dafc5459e9c6ec0ec6e1f416c946600415570435fb00be35cdc08c2163112e5", "text": "7 T HECONCEPT DRIFT PROBLEM IN OTHER RE-\nSEARCH AREAS\nWe have observed that handling the concept drift problem is\nnot a standalone research subject but has a large number of\nindirect usage scenarios. In this section, we adopt this new\nperspective to review recent developments in other research\nareas that bene\ufb01t from handling the concept drift problem.\n7.1 Class imbalance\nClass imbalance is a common problem in stream data min-\ning in addition to concept drift. Research effort has been\nmade to develop effective learning algorithms to tackle\nboth problems at same time.", "start_char_idx": 0, "end_char_idx": 572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6cbbc6fd-36c3-4b93-b59e-6b6f8bc3d58e": {"__data__": {"id_": "6cbbc6fd-36c3-4b93-b59e-6b6f8bc3d58e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da01ed74-b897-40c6-bea0-66e9c80aea3c", "node_type": "1", "metadata": {}, "hash": "9dafc5459e9c6ec0ec6e1f416c946600415570435fb00be35cdc08c2163112e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25311c55-52c7-4155-9b16-de76102aaf16", "node_type": "1", "metadata": {}, "hash": "35dcd9f3a8d9f6d0c758514af87c027d31fd6825fabd045e04f299a31b13b66f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}}, "hash": "51f49907a57fd7f07422eef37829a1ba14e7033d922f46e32a49e8dce46faa16", "text": "[117] presented two ensemble\nmethods for learning under concept drift with imbalanced\nclass. The \ufb01rst method, Learn++.CDS, is extended from\nLearn++.NSE and combined with the Synthetic Minority\nclass Oversampling Technique (SMOTE). The second al-\ngorithm, Learn++.NIE, improves on the previous method\nby employing a different penalty constraint to prevent\nprediction accuracy bias and replacing SMOTE with bag-\nging to avoid oversampling.", "start_char_idx": 573, "end_char_idx": 1010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25311c55-52c7-4155-9b16-de76102aaf16": {"__data__": {"id_": "25311c55-52c7-4155-9b16-de76102aaf16", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6cbbc6fd-36c3-4b93-b59e-6b6f8bc3d58e", "node_type": "1", "metadata": {}, "hash": "51f49907a57fd7f07422eef37829a1ba14e7033d922f46e32a49e8dce46faa16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ab662f4-3dd7-4565-ae83-d8e6f4592435", "node_type": "1", "metadata": {}, "hash": "76a47f8d30eebff46ea7b1bd482d9a6930f6cc348cc9e50469aa926b65283d42", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}}, "hash": "35dcd9f3a8d9f6d0c758514af87c027d31fd6825fabd045e04f299a31b13b66f", "text": "ESOS-ELM [118] is another\nensemble method which uses Online Sequential Extreme\nLearning Machine (OS-ELM) as a basic classi\ufb01er to improve\nperformance with class imbalanced data. A concept drift\ndetector is integrated to retrain the classi\ufb01er when drift\noccurs. The author then developed another algorithm [119],\nwhich is able to tackle multi-class imbalanced data with\nconcept drift.", "start_char_idx": 1011, "end_char_idx": 1393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ab662f4-3dd7-4565-ae83-d8e6f4592435": {"__data__": {"id_": "9ab662f4-3dd7-4565-ae83-d8e6f4592435", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25311c55-52c7-4155-9b16-de76102aaf16", "node_type": "1", "metadata": {}, "hash": "35dcd9f3a8d9f6d0c758514af87c027d31fd6825fabd045e04f299a31b13b66f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2aa3467-c436-4697-8f27-716fc2ac1fe8", "node_type": "1", "metadata": {}, "hash": "621b16a6c91e25c1b0028ef78f230836dc8ace40e4e5606deff967e47804bb97", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}}, "hash": "76a47f8d30eebff46ea7b1bd482d9a6930f6cc348cc9e50469aa926b65283d42", "text": "[120] proposed two learning algorithms OOB\nand UOB, which build an ensemble model to overcome\nthe class imbalance in real time through resampling and\ntime-decayed metrics. [121] developed an ensemble method\nwhich handles concept drift and class imbalance with addi-\ntional true label data limitation.", "start_char_idx": 1394, "end_char_idx": 1694, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2aa3467-c436-4697-8f27-716fc2ac1fe8": {"__data__": {"id_": "d2aa3467-c436-4697-8f27-716fc2ac1fe8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ab662f4-3dd7-4565-ae83-d8e6f4592435", "node_type": "1", "metadata": {}, "hash": "76a47f8d30eebff46ea7b1bd482d9a6930f6cc348cc9e50469aa926b65283d42", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5", "node_type": "1", "metadata": {}, "hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "class_name": "RelatedNodeInfo"}}, "hash": "621b16a6c91e25c1b0028ef78f230836dc8ace40e4e5606deff967e47804bb97", "text": "7.2 Big data mining\nData mining in big data environments faces similar chal-\nlenges to stream data mining [122]: data is generated at\na fast rate (Velocity) and distribution uncertainty always\nexists in the data, which means that handling concept drift is\nalso crucial in big data applications. Additionally, scalabilityis an important consideration because in big data environ-\nments, a data stream may come in very large and potentially\nunpredictable quantities (Volume) and cannot be processed\nin a single computer server.", "start_char_idx": 1695, "end_char_idx": 2220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72385497-f400-4454-998f-417428afd2e7": {"__data__": {"id_": "72385497-f400-4454-998f-417428afd2e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5c69e11-f394-4208-afa1-7bed909c5773", "node_type": "1", "metadata": {}, "hash": "4be3aa8c27ed7a842da335bc6b9940ce676dbafb00796d81525d590da00da956", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}}, "hash": "3c7bd3782a49dabeca1cd22185b5b65af2fdabe9c5fd51cd31a35b479b2d932e", "text": "An attempt to handle concept\ndrift in a distributed computing environment was made\nby [123] in which an Online Map-Reduce Drift Detection\nMethod (OMR-DDM) was proposed, using the combined\nonline error rate of the parallel classi\ufb01cation algorithms to\nidentify the changes in a big data stream. A recent study\n[124] proposed another scalable stream data mining algo-\nrithm, called Micro-Cluster Nearest Neighbor (MC-NN),\nbased on nearest neighbor classi\ufb01er.", "start_char_idx": 0, "end_char_idx": 455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5c69e11-f394-4208-afa1-7bed909c5773": {"__data__": {"id_": "e5c69e11-f394-4208-afa1-7bed909c5773", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72385497-f400-4454-998f-417428afd2e7", "node_type": "1", "metadata": {}, "hash": "3c7bd3782a49dabeca1cd22185b5b65af2fdabe9c5fd51cd31a35b479b2d932e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2365d4aa-87b8-426e-a4b3-3532842e4297", "node_type": "1", "metadata": {}, "hash": "77777757e9630437d596d7641e98221622498353cb6b3b72a91d103e2564abdb", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}}, "hash": "4be3aa8c27ed7a842da335bc6b9940ce676dbafb00796d81525d590da00da956", "text": "This method extends\nthe original Micro-Cluster algorithm [125] to adapt to con-\ncept drift by monitoring classi\ufb01cation error. This micro-\ncluster algorithm was further extended to a parallel version\nusing the map-reduce technique in [126] and applied to\nsolve the label-drift classi\ufb01cation problem where class labels\nare not known in advance [127].\n7.3 Active learning and semi-supervised learning\nActive learning is based on the assumption that there is a\nlarge amount of unlabeled data but only a fraction of them\ncan be labeled by human effort.", "start_char_idx": 456, "end_char_idx": 1003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2365d4aa-87b8-426e-a4b3-3532842e4297": {"__data__": {"id_": "2365d4aa-87b8-426e-a4b3-3532842e4297", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5c69e11-f394-4208-afa1-7bed909c5773", "node_type": "1", "metadata": {}, "hash": "4be3aa8c27ed7a842da335bc6b9940ce676dbafb00796d81525d590da00da956", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "199ed4b9-3388-4c28-a636-27765c600418", "node_type": "1", "metadata": {}, "hash": "3fca96003faf625f1d4202ce538a3a2d2f0449bdc9d26d802cc29198e09ac35c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}}, "hash": "77777757e9630437d596d7641e98221622498353cb6b3b72a91d103e2564abdb", "text": "This is a common situation\nin stream data applications, which are often also subject to\nthe concept drift problem. [115] presented a general frame-\nwork that combines active learning and concept drift adap-\ntation. It \ufb01rst compares different instance-sampling strate-\ngies for labeling to guarantee that the labeling cost will be\nunder budget, and that distribution bias will be prevented.\nA drift adaptation mechanism is then adopted, based on the\nDDM detection method [20].", "start_char_idx": 1004, "end_char_idx": 1479, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "199ed4b9-3388-4c28-a636-27765c600418": {"__data__": {"id_": "199ed4b9-3388-4c28-a636-27765c600418", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2365d4aa-87b8-426e-a4b3-3532842e4297", "node_type": "1", "metadata": {}, "hash": "77777757e9630437d596d7641e98221622498353cb6b3b72a91d103e2564abdb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b893e1a-29ad-44b5-825a-07813c5345c8", "node_type": "1", "metadata": {}, "hash": "453140c6405aa226c2b4f5248ddd1ee72c9dffebffb4b9e2c8fa94aa44667b1f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}}, "hash": "3fca96003faf625f1d4202ce538a3a2d2f0449bdc9d26d802cc29198e09ac35c", "text": "A drift adaptation mechanism is then adopted, based on the\nDDM detection method [20]. In [128], the authors proposed\na new active learning algorithm that primarily aims to\navoid bias in the sampling process of choosing instances\nfor labeling. They also introduced a memory loss factor to\nthe model, enabling it to adapt to concept drift.\nSemi-supervised learning concerns how to use limited\ntrue label data more ef\ufb01ciently by leveraging unsupervised\ntechniques. In this scenario, additional design effort is re-\nquired to handle concept drift.", "start_char_idx": 1394, "end_char_idx": 1937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b893e1a-29ad-44b5-825a-07813c5345c8": {"__data__": {"id_": "7b893e1a-29ad-44b5-825a-07813c5345c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "199ed4b9-3388-4c28-a636-27765c600418", "node_type": "1", "metadata": {}, "hash": "3fca96003faf625f1d4202ce538a3a2d2f0449bdc9d26d802cc29198e09ac35c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "node_type": "1", "metadata": {}, "hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "class_name": "RelatedNodeInfo"}}, "hash": "453140c6405aa226c2b4f5248ddd1ee72c9dffebffb4b9e2c8fa94aa44667b1f", "text": "In this scenario, additional design effort is re-\nquired to handle concept drift. For example, in [129], the au-\nthors applied a Gaussian Mixture model to both labeled and\nunlabeled data, and assigned labels, which has the ability\nto adapt to gradual drift.", "start_char_idx": 1856, "end_char_idx": 2113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4858438f-5190-4c93-b4b7-21805f58f8ec": {"__data__": {"id_": "4858438f-5190-4c93-b4b7-21805f58f8ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "06fa7e6d-3d91-4114-8381-86e8e6a7b958", "node_type": "1", "metadata": {}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "06fa7e6d-3d91-4114-8381-86e8e6a7b958", "node_type": "1", "metadata": {}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "class_name": "RelatedNodeInfo"}}, "hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "text": "Similarly, [99], [130], [131] are all\ncluster-based semi-supervised ensemble methods that aim\nto adapt to drift with limited true label data. The latter\n\n14\nTABLE 4\nList of real-world datasets for performance evaluation of learning under concept drift.\nDataset #Insts. #Attrs. #Cls.", "start_char_idx": 0, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "129112fb-017d-4ebb-b230-dead7e443d9b": {"__data__": {"id_": "129112fb-017d-4ebb-b230-dead7e443d9b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44eba23e-468f-4311-a472-fbbb4d9a9c76", "node_type": "1", "metadata": {}, "hash": "251221ea580ad2069c735798431c5fb8b9d9f0b260bbbeb93f3bbec6ba1b16d4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}}, "hash": "9aca7ce67e75022b0b8881fb6ced75340f764c6afd5324e24efb6f9ae59e7059", "text": "Dataset #Insts. #Attrs. #Cls. Used by references\n1 Airlines [104] 539384 7 2 [4], [5], [35], [73], [102], [114], [115]\n2 Covertype [106] 581012 54 7 [13], [23], [35], [36], [59], [63], [73], [81]\u2013[83], [86], [87], [102], [115]\n3 Electricity [109] 45312 8 2 [4], [5], [13], [20],", "start_char_idx": 0, "end_char_idx": 278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44eba23e-468f-4311-a472-fbbb4d9a9c76": {"__data__": {"id_": "44eba23e-468f-4311-a472-fbbb4d9a9c76", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "129112fb-017d-4ebb-b230-dead7e443d9b", "node_type": "1", "metadata": {}, "hash": "9aca7ce67e75022b0b8881fb6ced75340f764c6afd5324e24efb6f9ae59e7059", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "208af18e-bb01-480f-8d6a-129091d1904e", "node_type": "1", "metadata": {}, "hash": "0ba595825feb1605b3bff77b352c4b6d2aadb983de37bb02279da30940a0dcd5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}}, "hash": "251221ea580ad2069c735798431c5fb8b9d9f0b260bbbeb93f3bbec6ba1b16d4", "text": "[5], [13], [20], [23], [26], [29], [31], [35], [36], [57], [63], [72], [73], [78], [86], [87], [101],\n[102], [115]\n4 Poker-Hand [106] 1025010 10 10 [13], [32], [63], [73], [102]\n5 NOAA weather [67] 18159 8 2 [2], [4], [13], [67], [68], [78],", "start_char_idx": 262, "end_char_idx": 503, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "208af18e-bb01-480f-8d6a-129091d1904e": {"__data__": {"id_": "208af18e-bb01-480f-8d6a-129091d1904e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44eba23e-468f-4311-a472-fbbb4d9a9c76", "node_type": "1", "metadata": {}, "hash": "251221ea580ad2069c735798431c5fb8b9d9f0b260bbbeb93f3bbec6ba1b16d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f11ceec4-f1c0-4ef1-9ae2-3d9419a99707", "node_type": "1", "metadata": {}, "hash": "fce514b7b491500adeea051b40623deb02ffae84aa169a8e6e8b00e6677424f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}}, "hash": "0ba595825feb1605b3bff77b352c4b6d2aadb983de37bb02279da30940a0dcd5", "text": "[4], [13], [67], [68], [78], [105]\n6 Sensor [108] 2219803 5 54 [36], [78]\n7 KDDCup\u201999 [106] 494021 41 23 [35], [47], [65], [69], [74], [84], [86], [99], [102]\n8 Usenet1 [112] 1500 99 2 [23], [51], [87]\n9 Usenet2 [112] 1500 99 2 [23],", "start_char_idx": 475, "end_char_idx": 708, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f11ceec4-f1c0-4ef1-9ae2-3d9419a99707": {"__data__": {"id_": "f11ceec4-f1c0-4ef1-9ae2-3d9419a99707", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "208af18e-bb01-480f-8d6a-129091d1904e", "node_type": "1", "metadata": {}, "hash": "0ba595825feb1605b3bff77b352c4b6d2aadb983de37bb02279da30940a0dcd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e27e8184-7438-424d-aa2b-ce1c97362a36", "node_type": "1", "metadata": {}, "hash": "e34d2b88f7ba24e20d98398ec255f246f7decc0961b2975d146d26afaaa2b958", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}}, "hash": "fce514b7b491500adeea051b40623deb02ffae84aa169a8e6e8b00e6677424f5", "text": "[87]\n9 Usenet2 [112] 1500 99 2 [23], [87]\n10 Email data [110] 1500 913 2 [45], [76], [77]\n11 Spam data [110] 9324 499 2 [4], [5], [23], [36], [102], [116]\n12 Spam assassin corpus [111] 9324 39916 2 [4], [35], [76], [87]\n13 ECUE drift dataset 1 [113] 10983 287034 2 [2],", "start_char_idx": 672, "end_char_idx": 941, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e27e8184-7438-424d-aa2b-ce1c97362a36": {"__data__": {"id_": "e27e8184-7438-424d-aa2b-ce1c97362a36", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f11ceec4-f1c0-4ef1-9ae2-3d9419a99707", "node_type": "1", "metadata": {}, "hash": "fce514b7b491500adeea051b40623deb02ffae84aa169a8e6e8b00e6677424f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a", "node_type": "1", "metadata": {}, "hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "class_name": "RelatedNodeInfo"}}, "hash": "e34d2b88f7ba24e20d98398ec255f246f7decc0961b2975d146d26afaaa2b958", "text": "[3]\n14 ECUE drift dataset 2 [113] 11905 166047 2 [2], [3]\nare also able to recognize recurring concepts.", "start_char_idx": 942, "end_char_idx": 1046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b267f96-67b2-4711-84c1-8b626d9fdef7": {"__data__": {"id_": "0b267f96-67b2-4711-84c1-8b626d9fdef7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "817e21c4-9867-407c-aadc-16dc3348ab47", "node_type": "1", "metadata": {}, "hash": "225dcae15445bcde92f3a3b957efbc25f143f8713fe99034c760ab0bcf60c7dc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}}, "hash": "6da1b24b10a244926f2fd90abdbefd2489f1f12cd1bc7106679e4a330cbe9a76", "text": "In [132], the\nauthor adopted a new perspective on the true label scarcity\nproblem by considering the true labeled data and unlabeled\ndata as two independent non-stationary data generating\nprocesses. Concept drift is handled asynchronously on these\ntwo streams. The SAND algorithm [133], [134] is another\nsemi-supervised adaptive method which detects concept\ndrift on cluster boundaries. There are also studies [90, 91]\nthat focus on adapting to concept drift in circumstances\nwhere true label data is completely unavailable.", "start_char_idx": 0, "end_char_idx": 524, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "817e21c4-9867-407c-aadc-16dc3348ab47": {"__data__": {"id_": "817e21c4-9867-407c-aadc-16dc3348ab47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b267f96-67b2-4711-84c1-8b626d9fdef7", "node_type": "1", "metadata": {}, "hash": "6da1b24b10a244926f2fd90abdbefd2489f1f12cd1bc7106679e4a330cbe9a76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5640b407-5048-485d-ad5c-b32b8e6fdfdd", "node_type": "1", "metadata": {}, "hash": "1fcf7be1705ee06a00eb3d34055b3da79f219f242f35614805bc254ab595ff21", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}}, "hash": "225dcae15445bcde92f3a3b957efbc25f143f8713fe99034c760ab0bcf60c7dc", "text": "7.4 Decision Rules\nData-driven decision support systems need to be able to\nadapt to concept drift in order to make accurate decisions\nand decision rules is the main technique for this purpose.\n[102] proposed a decision rule induction algorithm, Very\nFast Decision Rules (VFDR), to effectively process stream\ndata. An extended version, Adaptive VFDR, was developed\nto handle concept drift by dynamically adding and remov-\ning decision rules according to their error rate which is mon-\nitored by drift detector.", "start_char_idx": 525, "end_char_idx": 1034, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5640b407-5048-485d-ad5c-b32b8e6fdfdd": {"__data__": {"id_": "5640b407-5048-485d-ad5c-b32b8e6fdfdd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "817e21c4-9867-407c-aadc-16dc3348ab47", "node_type": "1", "metadata": {}, "hash": "225dcae15445bcde92f3a3b957efbc25f143f8713fe99034c760ab0bcf60c7dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9fcd441-872c-4410-b07c-b90524b3a2dd", "node_type": "1", "metadata": {}, "hash": "9fcecb65a1ce76458850d861e7851f748c1402f66c83d9be957aab143dc7ff9c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}}, "hash": "1fcf7be1705ee06a00eb3d34055b3da79f219f242f35614805bc254ab595ff21", "text": "Instead of inducing rules from de-\ncision trees, [135] proposed another decision rule algorithm\nbased on PRISM [136] to directly induce rules from data.\nThis algorithm is also able to adapt to drift by monitoring\nthe performance of each rule on a sliding window of latest\ndata. [137] also developed an adaptive decision making\nalgorithm based on fuzzy rules. The algorithm includes a\nrule pruning procedure, which removes obsolete rules to\nadapt to changes, and a rule recal procedure to adapt to\nrecurring concepts.", "start_char_idx": 1035, "end_char_idx": 1551, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9fcd441-872c-4410-b07c-b90524b3a2dd": {"__data__": {"id_": "c9fcd441-872c-4410-b07c-b90524b3a2dd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5640b407-5048-485d-ad5c-b32b8e6fdfdd", "node_type": "1", "metadata": {}, "hash": "1fcf7be1705ee06a00eb3d34055b3da79f219f242f35614805bc254ab595ff21", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "node_type": "1", "metadata": {}, "hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "class_name": "RelatedNodeInfo"}}, "hash": "9fcecb65a1ce76458850d861e7851f748c1402f66c83d9be957aab143dc7ff9c", "text": "This section by no means attempts to cover every re-\nsearch \ufb01eld in which concept drift handling is used. There\nare many other studies that also consider concept drift as a\ndual problem.", "start_char_idx": 1552, "end_char_idx": 1738, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b3ccc8b-de50-4899-a501-f923556fec33": {"__data__": {"id_": "0b3ccc8b-de50-4899-a501-f923556fec33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0af3c8ad-78cb-436c-83be-970f9d5a004c", "node_type": "1", "metadata": {}, "hash": "1004769447ecc4d5282d725ffb96d7f17392964f285c9173b3ac31fe08136adf", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}}, "hash": "e2814e45a1c227470a5acd77e181a126a59ee2fa4b068c4f171be8372ed009e6", "text": "There\nare many other studies that also consider concept drift as a\ndual problem. For example, [138] is a dimension reduction\nalgorithm to separate classes based on least squares linear\ndiscovery analysis (LSLDA), which is then extended to\nadapt to drift; [139] considered the concept drift problem in\ntime series and developed an online explicit drift detection\nmethod by monitoring time series features; and [140] devel-\noped an incremental scaffolding classi\ufb01cation algorithm for\ncomplex tasks that also involve concept drift.", "start_char_idx": 0, "end_char_idx": 528, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0af3c8ad-78cb-436c-83be-970f9d5a004c": {"__data__": {"id_": "0af3c8ad-78cb-436c-83be-970f9d5a004c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b3ccc8b-de50-4899-a501-f923556fec33", "node_type": "1", "metadata": {}, "hash": "e2814e45a1c227470a5acd77e181a126a59ee2fa4b068c4f171be8372ed009e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbf6e4c1-fa5c-4332-a47c-b01ace58645e", "node_type": "1", "metadata": {}, "hash": "b045dfcd1344f4bb05d42e0ab49c18490c7a58b51048805250f96b64e645d2d8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}}, "hash": "1004769447ecc4d5282d725ffb96d7f17392964f285c9173b3ac31fe08136adf", "text": "8 C ONCLUSIONS :FINDINGS AND FUTURE DIREC -\nTIONS\nWe summarize the recent developments of concept drift\nresearch, and the following important \ufb01ndings can be ex-\ntracted:\n1) Error rate-based and data distribution-based drift de-\ntection methods are still playing a dominant role in con-\ncept drift detection research, while multiple hypothesis\ntest methods emerge in recent years;\n2) Regarding to concept drift understanding, all drift\ndetection methods can answer \u201cWhen\u201d, but very\nfew methods have the ability to answer \u201cHow\u201d and\n\u201cWhere\u201d;", "start_char_idx": 528, "end_char_idx": 1066, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbf6e4c1-fa5c-4332-a47c-b01ace58645e": {"__data__": {"id_": "fbf6e4c1-fa5c-4332-a47c-b01ace58645e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0af3c8ad-78cb-436c-83be-970f9d5a004c", "node_type": "1", "metadata": {}, "hash": "1004769447ecc4d5282d725ffb96d7f17392964f285c9173b3ac31fe08136adf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc87eb70-010f-4abe-9ad3-a78fd253a970", "node_type": "1", "metadata": {}, "hash": "5e5b4f6bf7b5e46adaf48834597e3415b0efbec5da308cd58d561246a82db0ba", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}}, "hash": "b045dfcd1344f4bb05d42e0ab49c18490c7a58b51048805250f96b64e645d2d8", "text": "but very\nfew methods have the ability to answer \u201cHow\u201d and\n\u201cWhere\u201d;\n3) Adaptive models and ensemble techniques have played\nan increasingly important role in recent concept drift\nadaptation developments. In contrast, research of re-\ntraining models with explicit drift detection has slowed;\n4) Most existingdrift detection and adap tation algorithms\nassume theground true labelisavail able afterclassi\ufb01-\ncation/prediction, orextreme veri\ufb01cation latency. Very\nfew research has been conducted toaddress unsuper-\nvised orsemi -supervised drift detection and adap ta-\ntion.", "start_char_idx": 1000, "end_char_idx": 1567, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc87eb70-010f-4abe-9ad3-a78fd253a970": {"__data__": {"id_": "dc87eb70-010f-4abe-9ad3-a78fd253a970", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbf6e4c1-fa5c-4332-a47c-b01ace58645e", "node_type": "1", "metadata": {}, "hash": "b045dfcd1344f4bb05d42e0ab49c18490c7a58b51048805250f96b64e645d2d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd5d52a9-7eab-4e29-bcad-57c285abc859", "node_type": "1", "metadata": {}, "hash": "e62df570ecb792c6d730c196b3e3d7d60cc15eb9c1d787f4a869f17ffb6634ac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}}, "hash": "5e5b4f6bf7b5e46adaf48834597e3415b0efbec5da308cd58d561246a82db0ba", "text": "5) Some computational intelligence techniques, such as\nfuzzy logic, competence model, have been applied in\nconcept drift;\n6) There is no comprehensive analysis on real-world data\nstreams from the concept drift aspect, such as the drift\noccurrence time, the severity of drift, and the drift\nregions.\n7) An increasing number of other research areas have\nrecognized the importance of handling concept drift,\nespecially in big data community.", "start_char_idx": 1568, "end_char_idx": 2006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd5d52a9-7eab-4e29-bcad-57c285abc859": {"__data__": {"id_": "dd5d52a9-7eab-4e29-bcad-57c285abc859", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc87eb70-010f-4abe-9ad3-a78fd253a970", "node_type": "1", "metadata": {}, "hash": "5e5b4f6bf7b5e46adaf48834597e3415b0efbec5da308cd58d561246a82db0ba", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "758fa473-e100-43ca-8417-d815b23374f7", "node_type": "1", "metadata": {}, "hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "class_name": "RelatedNodeInfo"}}, "hash": "e62df570ecb792c6d730c196b3e3d7d60cc15eb9c1d787f4a869f17ffb6634ac", "text": "Based on these \ufb01ndings, we suggest four new directions\nin future concept drift research:\n1) Drift detection research should not only focus on identi-\nfying drift occurrence time accurately, but also need to\nprovide the information of drift severity and regions.\nThese information could be utilized for better concept\ndrift adaptation.", "start_char_idx": 2007, "end_char_idx": 2341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba20e39e-9045-44b1-92a5-227727a1d13c": {"__data__": {"id_": "ba20e39e-9045-44b1-92a5-227727a1d13c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b400ad3-2b49-4973-b694-a974560f2600", "node_type": "1", "metadata": {}, "hash": "e9ecb6e74144f88445ef518bc249eb13321d1d33c3dddf8f202fe7a01eee325e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}}, "hash": "ed2f03e5eb7a466394b4f0b08c50d359bc83290477c2928b0fcaef11743bc32f", "text": "These information could be utilized for better concept\ndrift adaptation.\n2) Inthereal-world scenario, thecost toacquire true label\ncould beexpensive, that is,unsupervised orsemi -su-\n\n15\npervised drift detection and adap tation could still be\npromis inginthefuture.\n3) A framework for selecting real-world data streams\nshould be established for evaluating learning algo-\nrithms handling concept drift.\n4) Research on effectively integrating concept drift han-\ndling techniques with machine learning methodologies\nfor data-driven applications is highly desired.", "start_char_idx": 0, "end_char_idx": 560, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b400ad3-2b49-4973-b694-a974560f2600": {"__data__": {"id_": "7b400ad3-2b49-4973-b694-a974560f2600", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba20e39e-9045-44b1-92a5-227727a1d13c", "node_type": "1", "metadata": {}, "hash": "ed2f03e5eb7a466394b4f0b08c50d359bc83290477c2928b0fcaef11743bc32f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9ac7ced-4418-4f35-a842-d8206fe1c6ea", "node_type": "1", "metadata": {}, "hash": "32783b887ebdd1662c650fb27ce9bc0116fc3fd6467d43502d71ce49002a6693", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}}, "hash": "e9ecb6e74144f88445ef518bc249eb13321d1d33c3dddf8f202fe7a01eee325e", "text": "We hope this paper can provide researchers with state-\nof-the-art knowledge on concept drift research develop-\nments and provide guidelines about how to apply concept\ndrift techniques in different domains to support users in\nvarious prediction and decision activities.\nACKNOWLEDGMENTS\nThe work presented in this paper was supported by the\nAustralian Research Council (ARC) under discovery grant\nDP150101645. We signi\ufb01cantly thank Yiliao Song for her\nhelp in preparation of datasets and applications shown in\nSections 6.", "start_char_idx": 561, "end_char_idx": 1080, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9ac7ced-4418-4f35-a842-d8206fe1c6ea": {"__data__": {"id_": "a9ac7ced-4418-4f35-a842-d8206fe1c6ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b400ad3-2b49-4973-b694-a974560f2600", "node_type": "1", "metadata": {}, "hash": "e9ecb6e74144f88445ef518bc249eb13321d1d33c3dddf8f202fe7a01eee325e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9db3c62-3c95-43de-8ab8-19810e173553", "node_type": "1", "metadata": {}, "hash": "c3a806bedfa066b007044e35797e186cfcf63ffeb1a88a135ebbd1ffb24df801", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}}, "hash": "32783b887ebdd1662c650fb27ce9bc0116fc3fd6467d43502d71ce49002a6693", "text": "REFERENCES\n[1] G. Widmer and M. Kubat, \u201cLearning in the presence of concept\ndrift and hidden contexts,\u201d Machine Learning , vol. 23, no. 1, pp.\n69\u2013101, 1996.\n[2] N. Lu, J. Lu, G. Zhang, and R. Lopez de Mantaras, \u201cA concept\ndrift-tolerant case-base editing technique,\u201d Artif. Intell. , vol. 230,\npp. 108\u2013133, 2016.", "start_char_idx": 1081, "end_char_idx": 1393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9db3c62-3c95-43de-8ab8-19810e173553": {"__data__": {"id_": "a9db3c62-3c95-43de-8ab8-19810e173553", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9ac7ced-4418-4f35-a842-d8206fe1c6ea", "node_type": "1", "metadata": {}, "hash": "32783b887ebdd1662c650fb27ce9bc0116fc3fd6467d43502d71ce49002a6693", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "884d37b3-abae-49d1-a9c7-b172847b38ad", "node_type": "1", "metadata": {}, "hash": "a0d6fd573f16484c8f7012a7cbda115d8881fa6d99f34ac7424b35597a3c6008", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}}, "hash": "c3a806bedfa066b007044e35797e186cfcf63ffeb1a88a135ebbd1ffb24df801", "text": ", vol. 230,\npp. 108\u2013133, 2016.\n[3] N. Lu, G. Zhang, and J. Lu, \u201cConcept drift detection via compe-\ntence models,\u201d Artif. Intell. , vol. 209, pp. 11\u201328, 2014.\n[4] A. Liu, Y. Song, G. Zhang, and J. Lu, \u201cRegional concept drift\ndetection and density synchronized drift adaptation,\u201d in Proc.\n26th Int. Joint Conf. Arti\ufb01cial Intelligence .", "start_char_idx": 1363, "end_char_idx": 1696, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "884d37b3-abae-49d1-a9c7-b172847b38ad": {"__data__": {"id_": "884d37b3-abae-49d1-a9c7-b172847b38ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9db3c62-3c95-43de-8ab8-19810e173553", "node_type": "1", "metadata": {}, "hash": "c3a806bedfa066b007044e35797e186cfcf63ffeb1a88a135ebbd1ffb24df801", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "41490dba-fd83-4981-bf70-93354e0968c8", "node_type": "1", "metadata": {}, "hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "class_name": "RelatedNodeInfo"}}, "hash": "a0d6fd573f16484c8f7012a7cbda115d8881fa6d99f34ac7424b35597a3c6008", "text": "26th Int. Joint Conf. Arti\ufb01cial Intelligence . Accept, 2017, Conference\nProceedings.\n[5] A. Liu, G. Zhang, and J. Lu, \u201cFuzzy time windowing for gradual\nconcept drift adaptation,\u201d in Proc. 26th IEEE Int. Conf. Fuzzy\nSystems .", "start_char_idx": 1650, "end_char_idx": 1874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "899153c1-ceec-4038-9f80-55cfb59b264d": {"__data__": {"id_": "899153c1-ceec-4038-9f80-55cfb59b264d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "750c52dd-d02e-4e0c-9ea4-2c5f7679478c", "node_type": "1", "metadata": {}, "hash": "5f3956c962a754640fc9803410f84abffa28ff4d1f72ec9422641af53864e4e7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}}, "hash": "85dee91fc80e4df9c71dc3c38736e6352df3c9e53ea7170ef76b1597072bb28e", "text": "26th IEEE Int. Conf. Fuzzy\nSystems . IEEE, 2017, Conference Proceedings.\n[6] B. Krawczyk, L. L. Minku, J. Gama, J. Stefanowski, and M. Wo-\nniak, \u201cEnsemble learning for data stream analysis: A survey,\u201d\nInformation Fusion , vol. 37, pp. 132\u2013156, 2017.", "start_char_idx": 0, "end_char_idx": 249, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "750c52dd-d02e-4e0c-9ea4-2c5f7679478c": {"__data__": {"id_": "750c52dd-d02e-4e0c-9ea4-2c5f7679478c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "899153c1-ceec-4038-9f80-55cfb59b264d", "node_type": "1", "metadata": {}, "hash": "85dee91fc80e4df9c71dc3c38736e6352df3c9e53ea7170ef76b1597072bb28e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05166966-4323-4b7c-8874-191148d608ee", "node_type": "1", "metadata": {}, "hash": "560dce65adf14b6c1a31c5e788e27c3731e90f484b7a878146f3defb15de7065", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}}, "hash": "5f3956c962a754640fc9803410f84abffa28ff4d1f72ec9422641af53864e4e7", "text": "37, pp. 132\u2013156, 2017.\n[7] S. Ram \u00b4\u0131rez-Gallego, B. Krawczyk, S. Garc \u00b4\u0131a, M. Wo \u00b4zniak, and\nF. Herrera, \u201cA survey on data preprocessing for data stream\nmining: Current status and future directions,\u201d Neurocomputing ,\nvol. 239, pp. 39\u201357, 2017.\n[8] J. Gama, I.", "start_char_idx": 227, "end_char_idx": 486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05166966-4323-4b7c-8874-191148d608ee": {"__data__": {"id_": "05166966-4323-4b7c-8874-191148d608ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "750c52dd-d02e-4e0c-9ea4-2c5f7679478c", "node_type": "1", "metadata": {}, "hash": "5f3956c962a754640fc9803410f84abffa28ff4d1f72ec9422641af53864e4e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4fc80a9-d649-461c-9f9c-bb4b12463205", "node_type": "1", "metadata": {}, "hash": "f896350414e78d27d41b92457c08e7e8560670a8a9897d4887cd5e2a0412610c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}}, "hash": "560dce65adf14b6c1a31c5e788e27c3731e90f484b7a878146f3defb15de7065", "text": "39\u201357, 2017.\n[8] J. Gama, I. \u02c7Zliobait \u02d9e, A. Bifet, M. Pechenizkiy, and A. Bouchachia,\n\u201cA survey on concept drift adaptation,\u201d ACM Comput. Surv. ,\nvol. 46, no. 4, pp. 1\u201337, 2014.", "start_char_idx": 458, "end_char_idx": 637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4fc80a9-d649-461c-9f9c-bb4b12463205": {"__data__": {"id_": "b4fc80a9-d649-461c-9f9c-bb4b12463205", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05166966-4323-4b7c-8874-191148d608ee", "node_type": "1", "metadata": {}, "hash": "560dce65adf14b6c1a31c5e788e27c3731e90f484b7a878146f3defb15de7065", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc11d256-8d20-4c3a-9096-18abfea92a5d", "node_type": "1", "metadata": {}, "hash": "a3d0537c10bb8c3c909ef7b71843110d1682f7e7f9a9b4a1b2bcf8dd1b5a158f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}}, "hash": "f896350414e78d27d41b92457c08e7e8560670a8a9897d4887cd5e2a0412610c", "text": "46, no. 4, pp. 1\u201337, 2014.\n[9] G. Ditzler, M. Roveri, C. Alippi, and R. Polikar, \u201cLearning in\nnonstationary environments: a survey,\u201d IEEE Comput. Intell. Mag. ,\nvol. 10, no. 4, pp. 12\u201325, 2015.\n[10] J. Gama, \u201cA survey on learning from data streams: current and\nfuture trends,\u201d Progress in Arti\ufb01cial Intelligence , vol.", "start_char_idx": 611, "end_char_idx": 929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc11d256-8d20-4c3a-9096-18abfea92a5d": {"__data__": {"id_": "cc11d256-8d20-4c3a-9096-18abfea92a5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4fc80a9-d649-461c-9f9c-bb4b12463205", "node_type": "1", "metadata": {}, "hash": "f896350414e78d27d41b92457c08e7e8560670a8a9897d4887cd5e2a0412610c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95a6c95b-283e-4458-8199-dea6eac77548", "node_type": "1", "metadata": {}, "hash": "a4fc8853bde239048db4a908ef8709cac9aea14c57147000b753b0077866068b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}}, "hash": "a3d0537c10bb8c3c909ef7b71843110d1682f7e7f9a9b4a1b2bcf8dd1b5a158f", "text": "1, no. 1, pp.\n45\u201355, 2012.\n[11] J. A. Silva, E. R. Faria, R. C. Barros, E. R. Hruschka, A. C. P . L.\nF. d. Carvalho, and J. Gama, \u201cData stream clustering: A survey,\u201d\nACM Comput. Surv. , vol. 46, no. 1, pp. 1\u201331, 2013.", "start_char_idx": 930, "end_char_idx": 1147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95a6c95b-283e-4458-8199-dea6eac77548": {"__data__": {"id_": "95a6c95b-283e-4458-8199-dea6eac77548", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc11d256-8d20-4c3a-9096-18abfea92a5d", "node_type": "1", "metadata": {}, "hash": "a3d0537c10bb8c3c909ef7b71843110d1682f7e7f9a9b4a1b2bcf8dd1b5a158f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d", "node_type": "1", "metadata": {}, "hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "class_name": "RelatedNodeInfo"}}, "hash": "a4fc8853bde239048db4a908ef8709cac9aea14c57147000b753b0077866068b", "text": "46, no. 1, pp. 1\u201331, 2013.\n[12] J. C. Schlimmer and R. H. Granger Jr, \u201cIncremental learning from\nnoisy data,\u201d Machine learning , vol.", "start_char_idx": 1121, "end_char_idx": 1254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc107fb0-2378-4e0a-b49e-636936208833": {"__data__": {"id_": "fc107fb0-2378-4e0a-b49e-636936208833", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657", "node_type": "1", "metadata": {}, "hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6030918b-685f-4118-80e3-cad90bb083c8", "node_type": "1", "metadata": {}, "hash": "3807ef97a9fdccc9e63c5c318ec78921fadab311c06e35fefa3ba22f7d59f906", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657", "node_type": "1", "metadata": {}, "hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "class_name": "RelatedNodeInfo"}}, "hash": "a8dcae3807e434b990ce1de496f00c1ca7208caa9048315458d014a1a98d2a4b", "text": "1, no. 3, pp. 317\u2013354, 1986.\n[13] V . Losing, B. Hammer, and H. Wersing, \u201cKnn classi\ufb01er with self\nadjusting memory for heterogeneous concept drift,\u201d in Proc. 16th\nInt. Conf. Data Mining , 2016, Conference Proceedings, pp. 291\u2013\n300.\n[14] I.", "start_char_idx": 0, "end_char_idx": 239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6030918b-685f-4118-80e3-cad90bb083c8": {"__data__": {"id_": "6030918b-685f-4118-80e3-cad90bb083c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657", "node_type": "1", "metadata": {}, "hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc107fb0-2378-4e0a-b49e-636936208833", "node_type": "1", "metadata": {}, "hash": "a8dcae3807e434b990ce1de496f00c1ca7208caa9048315458d014a1a98d2a4b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657", "node_type": "1", "metadata": {}, "hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "class_name": "RelatedNodeInfo"}}, "hash": "3807ef97a9fdccc9e63c5c318ec78921fadab311c06e35fefa3ba22f7d59f906", "text": "291\u2013\n300.\n[14] I. \u02c7Zliobait \u02d9e and J. Hollm \u00b4en, \u201cOptimizing regression models for\ndata streams with missing values,\u201d Machine Learning , vol. 99,\nno. 1, pp. 47\u201373, 2014.\n[15] S. Amos, \u201cWhen training and test sets are different: characteriz-\ning learning transfer,\u201d Dataset Shift in Machine Learning , pp. 3\u201328,\n2009.", "start_char_idx": 222, "end_char_idx": 538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ce6a3a7-6b2a-47e7-8ff5-8b6b96763c03": {"__data__": {"id_": "3ce6a3a7-6b2a-47e7-8ff5-8b6b96763c03", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df01db1e-4bf9-41ab-8d34-726c6e4dc2d2", "node_type": "1", "metadata": {}, "hash": "d5c140e5f5af70855ffbcee09eff540bca0c3823764e1fd54da2ce97e8438733", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}}, "hash": "ee3f2bc7fd2a85d4a1a324f1a012d51ba0eeb395f598154bceeaef2592863f8e", "text": "3\u201328,\n2009.[16] J. G. Moreno-Torres, T. Raeder, R. Alaiz-Rodr \u00b4\u0131guez, N. V . Chawla,\nand F. Herrera, \u201cA unifying view on dataset shift in classi\ufb01ca-\ntion,\u201d Pattern Recognit. , vol. 45, no. 1, pp. 521\u2013530, 2012.\n[17] M. Basseville and I. V . Nikiforov, Detection of abrupt changes: theory\nand application .", "start_char_idx": 0, "end_char_idx": 305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df01db1e-4bf9-41ab-8d34-726c6e4dc2d2": {"__data__": {"id_": "df01db1e-4bf9-41ab-8d34-726c6e4dc2d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ce6a3a7-6b2a-47e7-8ff5-8b6b96763c03", "node_type": "1", "metadata": {}, "hash": "ee3f2bc7fd2a85d4a1a324f1a012d51ba0eeb395f598154bceeaef2592863f8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1b1ada7-0833-4708-bff3-8a0f38e233bd", "node_type": "1", "metadata": {}, "hash": "0efca29a46781769def3f06e62904f096294d21ccb1a59b7d579af17688fbfe9", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}}, "hash": "d5c140e5f5af70855ffbcee09eff540bca0c3823764e1fd54da2ce97e8438733", "text": "Nikiforov, Detection of abrupt changes: theory\nand application . Prentice Hall Englewood Cliffs, 1993, vol. 104.\n[18] A. Dries and U. R \u00a8uckert, \u201cAdaptive concept drift detection,\u201d\nStatistical Analysis and Data Mining: The ASA Data Science Journal ,\nvol. 2, no. 5\u20136, pp. 311\u2013327, 2009.", "start_char_idx": 241, "end_char_idx": 526, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1b1ada7-0833-4708-bff3-8a0f38e233bd": {"__data__": {"id_": "f1b1ada7-0833-4708-bff3-8a0f38e233bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df01db1e-4bf9-41ab-8d34-726c6e4dc2d2", "node_type": "1", "metadata": {}, "hash": "d5c140e5f5af70855ffbcee09eff540bca0c3823764e1fd54da2ce97e8438733", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e0c7ae6-f406-4716-9e4f-49a92443af3e", "node_type": "1", "metadata": {}, "hash": "f79dcb52adaa34fba4cbd411dc590851833d85819b335c9e1b63d4d04cabbd9b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}}, "hash": "0efca29a46781769def3f06e62904f096294d21ccb1a59b7d579af17688fbfe9", "text": "2, no. 5\u20136, pp. 311\u2013327, 2009.\n[19] C. Alippi and M. Roveri, \u201cJust-in-time adaptive classi\ufb01ers part i:\nDetecting nonstationary changes,\u201d IEEE Trans. Neural Networks ,\nvol. 19, no. 7, pp. 1145\u20131153, 2008.\n[20] J. Gama, P . Medas, G. Castillo, and P . Rodrigues, \u201cLearning with\ndrift detection,\u201d in Proc.", "start_char_idx": 496, "end_char_idx": 798, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e0c7ae6-f406-4716-9e4f-49a92443af3e": {"__data__": {"id_": "8e0c7ae6-f406-4716-9e4f-49a92443af3e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1b1ada7-0833-4708-bff3-8a0f38e233bd", "node_type": "1", "metadata": {}, "hash": "0efca29a46781769def3f06e62904f096294d21ccb1a59b7d579af17688fbfe9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb90ec1a-01a5-43b3-a8d9-aa0a96b8b911", "node_type": "1", "metadata": {}, "hash": "62973d039ce55059dd6606544d0d32f3420200d9c7ed3dcd352429fbe60d3c8a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}}, "hash": "f79dcb52adaa34fba4cbd411dc590851833d85819b335c9e1b63d4d04cabbd9b", "text": "Rodrigues, \u201cLearning with\ndrift detection,\u201d in Proc. 17th Brazilian Symp. Arti\ufb01cial Intelligence ,\nser. Lecture Notes in Computer Science. Springer, 2004, Book\nSection, pp. 286\u2013295.\n[21] L. Bu, C. Alippi, and D. Zhao, \u201cA pdf-free change detection\ntest based on density difference estimation,\u201d IEEE Trans. Neural\nNetworks Learn. Syst. , vol. PP , no. 99, pp. 1\u201311, 2016.", "start_char_idx": 746, "end_char_idx": 1115, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb90ec1a-01a5-43b3-a8d9-aa0a96b8b911": {"__data__": {"id_": "bb90ec1a-01a5-43b3-a8d9-aa0a96b8b911", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e0c7ae6-f406-4716-9e4f-49a92443af3e", "node_type": "1", "metadata": {}, "hash": "f79dcb52adaa34fba4cbd411dc590851833d85819b335c9e1b63d4d04cabbd9b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "71018116-7d3f-4c49-98b6-e8b322aff129", "node_type": "1", "metadata": {}, "hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "class_name": "RelatedNodeInfo"}}, "hash": "62973d039ce55059dd6606544d0d32f3420200d9c7ed3dcd352429fbe60d3c8a", "text": "PP , no. 99, pp. 1\u201311, 2016.\n[22] T. Dasu, S. Krishnan, S. Venkatasubramanian, and K. Yi, \u201cAn\ninformation-theoretic approach to detecting changes in multi-\ndimensional data streams,\u201d in Proc. Symp. the Interface of Statistics,\nComputing Science, and Applications . Citeseer, 2006, Conference\nProceedings, pp. 1\u201324.", "start_char_idx": 1087, "end_char_idx": 1401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61324c0c-0e6e-43f0-aacd-04ac8c28a1c8": {"__data__": {"id_": "61324c0c-0e6e-43f0-aacd-04ac8c28a1c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1aa02aa8-f4a1-4d40-bb41-fb192347f2d4", "node_type": "1", "metadata": {}, "hash": "91539fe3448674a241fb5d7387b4282c0b04bcbd0e0cff1a8415dbcb7913a1aa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}}, "hash": "ce69126a251312e57db20372aec093343dfdd1cffc4c5a5ea524dfb4218c3f9a", "text": "Citeseer, 2006, Conference\nProceedings, pp. 1\u201324.\n[23] I. Frias-Blanco, J. d. Campo-Avila, G. Ramos-Jimenez, R. Morales-\nBueno, A. Ortiz-Diaz, and Y. Caballero-Mota, \u201cOnline and\nnon-parametric drift detection methods based on hoeffding\u2019s\nbounds,\u201d IEEE Trans. Knowl. Data Eng. , vol. 27, no. 3, pp. 810\u2013\n823, 2015.", "start_char_idx": 0, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1aa02aa8-f4a1-4d40-bb41-fb192347f2d4": {"__data__": {"id_": "1aa02aa8-f4a1-4d40-bb41-fb192347f2d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61324c0c-0e6e-43f0-aacd-04ac8c28a1c8", "node_type": "1", "metadata": {}, "hash": "ce69126a251312e57db20372aec093343dfdd1cffc4c5a5ea524dfb4218c3f9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaa3d8b2-e7d3-44eb-b6df-60253c59d6fe", "node_type": "1", "metadata": {}, "hash": "51b3a4278a1b6ab1c80012672c2ef21bd58a29ab8dcf8256daa4dd29463d9b41", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}}, "hash": "91539fe3448674a241fb5d7387b4282c0b04bcbd0e0cff1a8415dbcb7913a1aa", "text": "27, no. 3, pp. 810\u2013\n823, 2015.\n[24] M. Yamada, A. Kimura, F. Naya, and H. Sawada, \u201cChange-point\ndetection with feature selection in high-dimensional time-series\ndata,\u201d in Proc. 23rd Int. Joint Conf. Arti\ufb01cial Intelligence , 2013,\nConference Proceedings, pp. 1827\u20131833.\n[25] J. Gama and G. Castillo, \u201cLearning with local drift detection,\u201d\ninProc. 2nd Int. Conf.", "start_char_idx": 283, "end_char_idx": 643, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aaa3d8b2-e7d3-44eb-b6df-60253c59d6fe": {"__data__": {"id_": "aaa3d8b2-e7d3-44eb-b6df-60253c59d6fe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1aa02aa8-f4a1-4d40-bb41-fb192347f2d4", "node_type": "1", "metadata": {}, "hash": "91539fe3448674a241fb5d7387b4282c0b04bcbd0e0cff1a8415dbcb7913a1aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ae8c366-22e6-479b-bace-c2691f626c34", "node_type": "1", "metadata": {}, "hash": "1e06e88465c9228692e2f9b7d56eac1b1b480177933b380ad0af6ba386440c1c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}}, "hash": "51b3a4278a1b6ab1c80012672c2ef21bd58a29ab8dcf8256daa4dd29463d9b41", "text": "2nd Int. Conf. Advanced Data Mining and Applications .\nSpringer, 2006, Conference Proceedings, pp. 42\u201355.\n[26] M. Baena-Garc \u00b4\u0131a, J. del Campo- \u00b4Avila, R. Fidalgo, A. Bifet,\nR. Gavald `a, and R. Morales-Bueno, \u201cEarly drift detection\nmethod,\u201d in Proc. 4th Int. Workshop Knowledge Discovery from Data\nStreams , 2006, Conference Paper.", "start_char_idx": 629, "end_char_idx": 961, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ae8c366-22e6-479b-bace-c2691f626c34": {"__data__": {"id_": "5ae8c366-22e6-479b-bace-c2691f626c34", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aaa3d8b2-e7d3-44eb-b6df-60253c59d6fe", "node_type": "1", "metadata": {}, "hash": "51b3a4278a1b6ab1c80012672c2ef21bd58a29ab8dcf8256daa4dd29463d9b41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e32f504e-f8f4-406a-80c8-b57fce425a9e", "node_type": "1", "metadata": {}, "hash": "6715b991841ad808f0bc135f89c1b9b5e1662c31d77a78700421dd21394156d7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}}, "hash": "1e06e88465c9228692e2f9b7d56eac1b1b480177933b380ad0af6ba386440c1c", "text": "Workshop Knowledge Discovery from Data\nStreams , 2006, Conference Paper.\n[27] S. Xu and J. Wang, \u201cDynamic extreme learning machine for\ndata stream classi\ufb01cation,\u201d Neurocomputing , vol. 238, pp. 433\u2013449,\n2017.\n[28] G.-B. Huang, Q.-Y. Zhu, and C.-K. Siew, \u201cExtreme learning ma-\nchine: Theory and applications,\u201d Neurocomputing , vol. 70, no. 1\u20133,\npp. 489\u2013501, 2006.", "start_char_idx": 889, "end_char_idx": 1251, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e32f504e-f8f4-406a-80c8-b57fce425a9e": {"__data__": {"id_": "e32f504e-f8f4-406a-80c8-b57fce425a9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ae8c366-22e6-479b-bace-c2691f626c34", "node_type": "1", "metadata": {}, "hash": "1e06e88465c9228692e2f9b7d56eac1b1b480177933b380ad0af6ba386440c1c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "node_type": "1", "metadata": {}, "hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "class_name": "RelatedNodeInfo"}}, "hash": "6715b991841ad808f0bc135f89c1b9b5e1662c31d77a78700421dd21394156d7", "text": "70, no. 1\u20133,\npp. 489\u2013501, 2006.\n[29] G. J. Ross, N. M. Adams, D. K. Tasoulis, and D. J. Hand, \u201cExpo-\nnentially weighted moving average charts for detecting concept\ndrift,\u201d Pattern Recognit. Lett. , vol.", "start_char_idx": 1220, "end_char_idx": 1422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2af8361-1340-4f58-88a3-fbc8574c4573": {"__data__": {"id_": "f2af8361-1340-4f58-88a3-fbc8574c4573", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88b5c8eb-19dd-4394-aec7-47845f494aff", "node_type": "1", "metadata": {}, "hash": "5a0ab0e4e9afacf9bd5f9c10f46af32c548d583b70067ea08b504ebba6f61dfa", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}}, "hash": "6e2c1ea274715942bab3d80586ea31b6fd3fda947275af6a7ac6caa1d549ce52", "text": "Lett. , vol. 33, no. 2, pp. 191\u2013198, 2012.\n[30] K. Nishida and K. Yamauchi, \u201cDetecting concept drift using\nstatistical testing,\u201d in Proc. 10th Int. Conf. Discovery Science , V . Cor-\nruble, M. Takeda, and E. Suzuki, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2007, Conference Proceedings, pp.\n264\u2013269.", "start_char_idx": 0, "end_char_idx": 311, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88b5c8eb-19dd-4394-aec7-47845f494aff": {"__data__": {"id_": "88b5c8eb-19dd-4394-aec7-47845f494aff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2af8361-1340-4f58-88a3-fbc8574c4573", "node_type": "1", "metadata": {}, "hash": "6e2c1ea274715942bab3d80586ea31b6fd3fda947275af6a7ac6caa1d549ce52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecafdc72-a12e-40c9-9424-9a3a7ab764f6", "node_type": "1", "metadata": {}, "hash": "4dda3c2bd4d9e0d8891fea183cfe9fc418989f11461328c92b603c3791e7b92a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}}, "hash": "5a0ab0e4e9afacf9bd5f9c10f46af32c548d583b70067ea08b504ebba6f61dfa", "text": "264\u2013269.\n[31] A. Bifet and R. Gavald `a, \u201cLearning from time-changing data with\nadaptive windowing,\u201d in Proc. 2007 SIAM Int. Conf. Data Mining ,\nvol. 7. SIAM, 2007, Conference Proceedings, p. 2007.\n[32] \u2014\u2014, \u201cAdaptive learning from evolving data streams,\u201d in Proc.\n8th Int. Symp. Intelligent Data Analysis . Springer, 2009, Confer-\nence Proceedings, pp. 249\u2013260.", "start_char_idx": 303, "end_char_idx": 664, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecafdc72-a12e-40c9-9424-9a3a7ab764f6": {"__data__": {"id_": "ecafdc72-a12e-40c9-9424-9a3a7ab764f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88b5c8eb-19dd-4394-aec7-47845f494aff", "node_type": "1", "metadata": {}, "hash": "5a0ab0e4e9afacf9bd5f9c10f46af32c548d583b70067ea08b504ebba6f61dfa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e64a049a-bfbe-4967-996e-b3db7d363465", "node_type": "1", "metadata": {}, "hash": "7d24f4538193becf193a87bf1d33ca7e789c68df32ed88466733c506c8def182", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}}, "hash": "4dda3c2bd4d9e0d8891fea183cfe9fc418989f11461328c92b603c3791e7b92a", "text": "Springer, 2009, Confer-\nence Proceedings, pp. 249\u2013260.\n[33] A. Bifet, G. Holmes, B. Pfahringer, and R. Gavald `a, \u201cImproving\nadaptive bagging methods for evolving data streams,\u201d in Proc.\n1st Asian Conf. Machine Learning , ser. Lecture Notes in Computer\nScience, Z.-H. Zhou and T. Washio, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2009, Book Section, pp. 23\u201337.", "start_char_idx": 610, "end_char_idx": 981, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e64a049a-bfbe-4967-996e-b3db7d363465": {"__data__": {"id_": "e64a049a-bfbe-4967-996e-b3db7d363465", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecafdc72-a12e-40c9-9424-9a3a7ab764f6", "node_type": "1", "metadata": {}, "hash": "4dda3c2bd4d9e0d8891fea183cfe9fc418989f11461328c92b603c3791e7b92a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0da46959-7b8e-4ab4-9599-117826b1390f", "node_type": "1", "metadata": {}, "hash": "78b23feb340d8d6386e1fee1b13ef461f34c8fa6a43af4e0e024436749694280", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}}, "hash": "7d24f4538193becf193a87bf1d33ca7e789c68df32ed88466733c506c8def182", "text": "23\u201337.\n[34] A. Bifet, G. Holmes, B. Pfahringer, R. Kirkby, and R. Gavald `a,\n\u201cNew ensemble methods for evolving data streams,\u201d in Proc. 15th\nACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining .\nACM, 2009, Conference Proceedings, pp. 139\u2013148.\n[35] H. M. Gomes, A. Bifet, J. Read, J. P .", "start_char_idx": 975, "end_char_idx": 1267, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0da46959-7b8e-4ab4-9599-117826b1390f": {"__data__": {"id_": "0da46959-7b8e-4ab4-9599-117826b1390f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e64a049a-bfbe-4967-996e-b3db7d363465", "node_type": "1", "metadata": {}, "hash": "7d24f4538193becf193a87bf1d33ca7e789c68df32ed88466733c506c8def182", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "node_type": "1", "metadata": {}, "hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "class_name": "RelatedNodeInfo"}}, "hash": "78b23feb340d8d6386e1fee1b13ef461f34c8fa6a43af4e0e024436749694280", "text": "Barddal, F. Enembreck,\nB. Pfharinger, G. Holmes, and T. Abdessalem, \u201cAdaptive random\nforests for evolving data stream classi\ufb01cation,\u201d Machine Learning ,\n2017.", "start_char_idx": 1268, "end_char_idx": 1426, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89512852-1182-4b47-bc53-3122513474f5": {"__data__": {"id_": "89512852-1182-4b47-bc53-3122513474f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6850b1b-5167-44af-bcb7-198006c02e6d", "node_type": "1", "metadata": {}, "hash": "c8e71a6220631764acdf7a37134190cfe62e635f0f8d0538eae68a9a108898c6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}}, "hash": "0f5b08fdad11455042c91c0323e028c98f5b68e45b08dbeea758ba69076518e1", "text": "[36] J. Shao, Z. Ahmadi, and S. Kramer, \u201cPrototype-based learning\non concept-drifting data streams,\u201d in Proc. 20th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . 2623609: ACM,\n2014, Conference Proceedings, pp. 412\u2013421.\n\n16\n[37] D. Kifer, S. Ben-David, and J. Gehrke, \u201cDetecting change in data\nstreams,\u201d in Proc. 30th Int. Conf. Very Large Databases , vol. 30.", "start_char_idx": 0, "end_char_idx": 372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6850b1b-5167-44af-bcb7-198006c02e6d": {"__data__": {"id_": "d6850b1b-5167-44af-bcb7-198006c02e6d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89512852-1182-4b47-bc53-3122513474f5", "node_type": "1", "metadata": {}, "hash": "0f5b08fdad11455042c91c0323e028c98f5b68e45b08dbeea758ba69076518e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "152fb1e3-0732-4faa-95a2-47960a2e00d2", "node_type": "1", "metadata": {}, "hash": "b90a1c0ffa16a6f115481e545746932a983534ebcdd5c819a3893d8eb8e5d854", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}}, "hash": "c8e71a6220631764acdf7a37134190cfe62e635f0f8d0538eae68a9a108898c6", "text": "30th Int. Conf. Very Large Databases , vol. 30.\nVLDB Endowment, 2004, Conference Proceedings, pp. 180\u2013191.\n[38] X. Song, M. Wu, C. Jermaine, and S. Ranka, \u201cStatistical change de-\ntection for multi-dimensional data,\u201d in Proc. 13th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . San Jose, Cali-\nfornia, USA: ACM, 2007, Conference Paper, pp. 667\u2013676.", "start_char_idx": 325, "end_char_idx": 685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "152fb1e3-0732-4faa-95a2-47960a2e00d2": {"__data__": {"id_": "152fb1e3-0732-4faa-95a2-47960a2e00d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6850b1b-5167-44af-bcb7-198006c02e6d", "node_type": "1", "metadata": {}, "hash": "c8e71a6220631764acdf7a37134190cfe62e635f0f8d0538eae68a9a108898c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0bd414c6-e7bc-4793-9c72-f411cd5d8649", "node_type": "1", "metadata": {}, "hash": "20d2926e053b292ff24f86e5033712f95b2939b448c9576a6cafd25edb19f436", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}}, "hash": "b90a1c0ffa16a6f115481e545746932a983534ebcdd5c819a3893d8eb8e5d854", "text": "667\u2013676.\n[39] A. A. Qahtan, B. Alharbi, S. Wang, and X. Zhang, \u201cA pca-based\nchange detection framework for multidimensional data streams,\u201d\ninProc. 21th Int. Conf. on Knowledge Discovery and Data Mining .\nACM, 2015, Conference Proceedings, pp. 935\u2013944.\n[40] F. Gu, G. Zhang, J. Lu, and C.-T. Lin, \u201cConcept drift detection\nbased on equal density estimation,\u201d in Proc. 2016 Int. Joint Conf.", "start_char_idx": 677, "end_char_idx": 1064, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0bd414c6-e7bc-4793-9c72-f411cd5d8649": {"__data__": {"id_": "0bd414c6-e7bc-4793-9c72-f411cd5d8649", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "152fb1e3-0732-4faa-95a2-47960a2e00d2", "node_type": "1", "metadata": {}, "hash": "b90a1c0ffa16a6f115481e545746932a983534ebcdd5c819a3893d8eb8e5d854", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc0e4385-952f-4591-8849-e56b51033304", "node_type": "1", "metadata": {}, "hash": "09aad9e14554a581a5d768fecd48ccdb47cf19c1dd54e8c5a7a0a2a6393334f2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}}, "hash": "20d2926e053b292ff24f86e5033712f95b2939b448c9576a6cafd25edb19f436", "text": "2016 Int. Joint Conf.\nNeural Networks . IEEE, 2016, Conference Proceedings, pp. 24\u201330.\n[41] L. Bu, D. Zhao, and C. Alippi, \u201cAn incremental change detection\ntest based on density difference estimation,\u201d IEEE Transactions on\nSystems, Man, and Cybernetics: Systems , vol. PP , no. 99, pp. 1\u201313,\n2017.", "start_char_idx": 1043, "end_char_idx": 1340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc0e4385-952f-4591-8849-e56b51033304": {"__data__": {"id_": "bc0e4385-952f-4591-8849-e56b51033304", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0bd414c6-e7bc-4793-9c72-f411cd5d8649", "node_type": "1", "metadata": {}, "hash": "20d2926e053b292ff24f86e5033712f95b2939b448c9576a6cafd25edb19f436", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b", "node_type": "1", "metadata": {}, "hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "class_name": "RelatedNodeInfo"}}, "hash": "09aad9e14554a581a5d768fecd48ccdb47cf19c1dd54e8c5a7a0a2a6393334f2", "text": "PP , no. 99, pp. 1\u201313,\n2017.\n[42] C. Alippi and M. Roveri, \u201cJust-in-time adaptive classi\ufb01ers part\nii: designing the classi\ufb01er,\u201d IEEE Trans. Neural Networks , vol. 19,\nno. 12, pp. 2053\u20132064, 2008.", "start_char_idx": 1312, "end_char_idx": 1507, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ce469bf-d6aa-49a7-a1c3-ee0d8589b35f": {"__data__": {"id_": "4ce469bf-d6aa-49a7-a1c3-ee0d8589b35f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdcb4de0-34d7-409a-adad-9997fd007040", "node_type": "1", "metadata": {}, "hash": "339c39487d48e8ce6d4b5d619a976474f56f6c4f53aafe59dd0ed13ac46fc1ce", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}}, "hash": "505a35cdd9368afef58e44e30ed776071dbc884454d577ad300b3db99bbbe367", "text": "19,\nno. 12, pp. 2053\u20132064, 2008.\n[43] C. Alippi, G. Boracchi, and M. Roveri, \u201cA just-in-time adaptive\nclassi\ufb01cation system based on the intersection of con\ufb01dence\nintervals rule,\u201d Neural Networks , vol. 24, no. 8, pp. 791\u2013800, 2011.\n[44] \u2014\u2014, \u201cJust-in-time ensemble of classi\ufb01ers,\u201d in Proc. 2012 Int. Joint\nConf.", "start_char_idx": 0, "end_char_idx": 310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bdcb4de0-34d7-409a-adad-9997fd007040": {"__data__": {"id_": "bdcb4de0-34d7-409a-adad-9997fd007040", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ce469bf-d6aa-49a7-a1c3-ee0d8589b35f", "node_type": "1", "metadata": {}, "hash": "505a35cdd9368afef58e44e30ed776071dbc884454d577ad300b3db99bbbe367", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90104d1a-d890-4c41-9600-4621fb626cc2", "node_type": "1", "metadata": {}, "hash": "bc1b9bc9f287f5c200f1e862bbcab00eec80d11c30d97e1af13fb17d651b606a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}}, "hash": "339c39487d48e8ce6d4b5d619a976474f56f6c4f53aafe59dd0ed13ac46fc1ce", "text": "2012 Int. Joint\nConf. Neural Networks . IEEE, 2012, Conference Proceedings, pp.\n1\u20138.\n[45] \u2014\u2014, \u201cJust-in-time classi\ufb01ers for recurrent concepts,\u201d IEEE Trans.\nNeural Networks Learn. Syst. , vol. 24, no. 4, pp. 620\u2013634, 2013.\n[46] W. Heng and Z. Abraham, \u201cConcept drift detection for streaming\ndata,\u201d in Proc. 2015 Int. Joint Conf.", "start_char_idx": 289, "end_char_idx": 616, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90104d1a-d890-4c41-9600-4621fb626cc2": {"__data__": {"id_": "90104d1a-d890-4c41-9600-4621fb626cc2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdcb4de0-34d7-409a-adad-9997fd007040", "node_type": "1", "metadata": {}, "hash": "339c39487d48e8ce6d4b5d619a976474f56f6c4f53aafe59dd0ed13ac46fc1ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea8d1ba2-f3a5-4175-b7ac-4e88f26d4731", "node_type": "1", "metadata": {}, "hash": "7960167552c37dff6e1a9b045177c8ae7ea97931a1bc4f235238620b8f4e975d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}}, "hash": "bc1b9bc9f287f5c200f1e862bbcab00eec80d11c30d97e1af13fb17d651b606a", "text": "2015 Int. Joint Conf. Neural Networks , 2015, Confer-\nence Proceedings, pp. 1\u20139.\n[47] Y. Zhang, G. Chu, P . Li, X. Hu, and X. Wu, \u201cThree-layer concept\ndrifting detection in text data streams,\u201d Neurocomputing , vol. 260,\npp. 393\u2013403, 2017.\n[48] L. Du, Q. Song, L. Zhu, and X. Zhu, \u201cA selective detector en-\nsemble for concept drift detection,\u201d The Computer Journal , vol.", "start_char_idx": 595, "end_char_idx": 965, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea8d1ba2-f3a5-4175-b7ac-4e88f26d4731": {"__data__": {"id_": "ea8d1ba2-f3a5-4175-b7ac-4e88f26d4731", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90104d1a-d890-4c41-9600-4621fb626cc2", "node_type": "1", "metadata": {}, "hash": "bc1b9bc9f287f5c200f1e862bbcab00eec80d11c30d97e1af13fb17d651b606a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e95c7d35-f964-409e-a8f4-90dd8ce5e869", "node_type": "1", "metadata": {}, "hash": "ab677a9a8a520d2f13a4b78a4be84c3e975ad3e75b025439e019c196f1652440", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}}, "hash": "7960167552c37dff6e1a9b045177c8ae7ea97931a1bc4f235238620b8f4e975d", "text": "58,\nno. 3, pp. 457\u2013471, 2014.\n[49] B. I. F. Maciel, S. G. T. C. Santos, and R. S. M. Barros, \u201cA\nlightweight concept drift detection ensemble,\u201d in Proc. 27th IEEE\nInt. Conf. on Tools with Arti\ufb01cial Intelligence . IEEE, 2015, pp. 1061\u2013\n1068.", "start_char_idx": 966, "end_char_idx": 1205, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e95c7d35-f964-409e-a8f4-90dd8ce5e869": {"__data__": {"id_": "e95c7d35-f964-409e-a8f4-90dd8ce5e869", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea8d1ba2-f3a5-4175-b7ac-4e88f26d4731", "node_type": "1", "metadata": {}, "hash": "7960167552c37dff6e1a9b045177c8ae7ea97931a1bc4f235238620b8f4e975d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "node_type": "1", "metadata": {}, "hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "class_name": "RelatedNodeInfo"}}, "hash": "ab677a9a8a520d2f13a4b78a4be84c3e975ad3e75b025439e019c196f1652440", "text": "IEEE, 2015, pp. 1061\u2013\n1068.\n[50] C. Alippi, G. Boracchi, and M. Roveri, \u201cHierarchical change-\ndetection tests,\u201d IEEE Trans. Neural Networks Learn. Syst. , vol. 28,\nno. 2, pp.", "start_char_idx": 1178, "end_char_idx": 1352, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e43140e-f019-489e-8e9e-93446a8b9739": {"__data__": {"id_": "8e43140e-f019-489e-8e9e-93446a8b9739", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8aee8d52-9f0b-4c4a-bd0c-8f96848febb9", "node_type": "1", "metadata": {}, "hash": "89023de0b908cfcab08cabbcd92de52ef8bf1bd81e2867d6c3c65627dc6d1d38", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}}, "hash": "8d4061bd09fb81957100322a5f8921b63237b35c68d3b0b19d15eea7395f0b49", "text": "Syst. , vol. 28,\nno. 2, pp. 246\u2013258, 2017.\n[51] S. Yu and Z. Abraham, \u201cConcept drift detection with hierarchical\nhypothesis testing,\u201d in Proc. 2017 SIAM Int. Conf. Data Mining .\nSIAM, 2017, Conference Proceedings, pp. 768\u2013776.", "start_char_idx": 0, "end_char_idx": 226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8aee8d52-9f0b-4c4a-bd0c-8f96848febb9": {"__data__": {"id_": "8aee8d52-9f0b-4c4a-bd0c-8f96848febb9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e43140e-f019-489e-8e9e-93446a8b9739", "node_type": "1", "metadata": {}, "hash": "8d4061bd09fb81957100322a5f8921b63237b35c68d3b0b19d15eea7395f0b49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e069f4af-c478-4f39-9ec6-b643cb5c7f7e", "node_type": "1", "metadata": {}, "hash": "25bc611fc5a04ea21a556d69019050a53394242de0b870951d5b068047032aff", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}}, "hash": "89023de0b908cfcab08cabbcd92de52ef8bf1bd81e2867d6c3c65627dc6d1d38", "text": "Data Mining .\nSIAM, 2017, Conference Proceedings, pp. 768\u2013776.\n[52] H. Raza, G. Prasad, and Y. Li, \u201cEwma model based shift-detection\nmethods for detecting covariate shifts in non-stationary environ-\nments,\u201d Pattern Recognit. , vol. 48, no. 3, pp. 659\u2013669, 2015.", "start_char_idx": 164, "end_char_idx": 425, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e069f4af-c478-4f39-9ec6-b643cb5c7f7e": {"__data__": {"id_": "e069f4af-c478-4f39-9ec6-b643cb5c7f7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8aee8d52-9f0b-4c4a-bd0c-8f96848febb9", "node_type": "1", "metadata": {}, "hash": "89023de0b908cfcab08cabbcd92de52ef8bf1bd81e2867d6c3c65627dc6d1d38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96d9305d-a936-4f84-8f8e-78529b1619ce", "node_type": "1", "metadata": {}, "hash": "08b92a25862dc9bc177dc56602c2ff66ceb814239ef99a312a90f70ff30d97f5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}}, "hash": "25bc611fc5a04ea21a556d69019050a53394242de0b870951d5b068047032aff", "text": "48, no. 3, pp. 659\u2013669, 2015.\n[53] S. Yu, X. Wang, and J. C. Principe, \u201cRequest-and-reverify: Hi-\nerarchical hypothesis testing for concept drift detection with\nexpensive labels,\u201d arXiv preprint arXiv:1806.10131 , 2018.\n[54] P .", "start_char_idx": 396, "end_char_idx": 624, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96d9305d-a936-4f84-8f8e-78529b1619ce": {"__data__": {"id_": "96d9305d-a936-4f84-8f8e-78529b1619ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e069f4af-c478-4f39-9ec6-b643cb5c7f7e", "node_type": "1", "metadata": {}, "hash": "25bc611fc5a04ea21a556d69019050a53394242de0b870951d5b068047032aff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "976557b7-0f70-4ec1-8ead-18a3346cbdc6", "node_type": "1", "metadata": {}, "hash": "1c4a4f188cc560f287abe104f670d43822262210899ef092f060b91ab7036327", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}}, "hash": "08b92a25862dc9bc177dc56602c2ff66ceb814239ef99a312a90f70ff30d97f5", "text": "[54] P . M. Gonc \u00b8alves Jr, S. G. de Carvalho Santos, R. S. Barros, and\nD. C. Vieira, \u201cA comparative study on concept drift detectors,\u201d\nExpert Systems with Applications , vol. 41, no. 18, pp. 8144\u20138156,\n2014.\n[55] F. Pukelsheim, \u201cThe three sigma rule,\u201d The American Statistician ,\nvol. 48, no. 2, pp. 88\u201391, 1994.", "start_char_idx": 616, "end_char_idx": 929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "976557b7-0f70-4ec1-8ead-18a3346cbdc6": {"__data__": {"id_": "976557b7-0f70-4ec1-8ead-18a3346cbdc6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96d9305d-a936-4f84-8f8e-78529b1619ce", "node_type": "1", "metadata": {}, "hash": "08b92a25862dc9bc177dc56602c2ff66ceb814239ef99a312a90f70ff30d97f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb6b1a07-d4c8-4e59-9312-e25971548c88", "node_type": "1", "metadata": {}, "hash": "5d11ee8c645347814780f33689ac430e34eb186effe11942f44247ac974786c1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}}, "hash": "1c4a4f188cc560f287abe104f670d43822262210899ef092f060b91ab7036327", "text": "48, no. 2, pp. 88\u201391, 1994.\n[56] A. Tsymbal, M. Pechenizkiy, P . Cunningham, and S. Puuronen,\n\u201cDynamic integration of classi\ufb01ers for handling concept drift,\u201d\nInformation Fusion , vol. 9, no. 1, pp. 56\u201368, 2008.\n[57] S. H. Bach and M. Maloof, \u201cPaired learners for concept drift,\u201d\ninProc. 8th Int. Conf.", "start_char_idx": 902, "end_char_idx": 1203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb6b1a07-d4c8-4e59-9312-e25971548c88": {"__data__": {"id_": "eb6b1a07-d4c8-4e59-9312-e25971548c88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "976557b7-0f70-4ec1-8ead-18a3346cbdc6", "node_type": "1", "metadata": {}, "hash": "1c4a4f188cc560f287abe104f670d43822262210899ef092f060b91ab7036327", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "4a839281-2706-409a-888e-df6840026818", "node_type": "1", "metadata": {}, "hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "class_name": "RelatedNodeInfo"}}, "hash": "5d11ee8c645347814780f33689ac430e34eb186effe11942f44247ac974786c1", "text": "8th Int. Conf. Data Mining , 2008, Conference Proceedings,\npp. 23\u201332.\n[58] D. Liu, Y. Wu, and H. Jiang, \u201cFp-elm: An online sequential learn-\ning algorithm for dealing with concept drift,\u201d Neurocomputing ,\nvol. 207, pp.", "start_char_idx": 1189, "end_char_idx": 1407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c5a91d7-1a95-4fbb-99fe-9fa82e352cce": {"__data__": {"id_": "7c5a91d7-1a95-4fbb-99fe-9fa82e352cce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bdad8b6-1144-4e70-a437-30d6df914586", "node_type": "1", "metadata": {}, "hash": "93f533181347cdc659bce397160d35011344e2733f81163783694455745a39cd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}}, "hash": "c28235ea9027a5c61e155851b2044208929aa7ba3aa7df9a52f7ae383a233597", "text": "207, pp. 322\u2013334, 2016.\n[59] D. Han, C. Giraud-Carrier, and S. Li, \u201cEf\ufb01cient mining of high-\nspeed uncertain data streams,\u201d Applied Intelligence , vol. 43, no. 4,\npp. 773\u2013785, 2015.\n[60] S. G. Soares and R. Ara \u00b4ujo, \u201cAn adaptive ensemble of on-line\nextreme learning machines with variable forgetting factor for\ndynamic system prediction,\u201d Neurocomputing , vol. 171, pp.", "start_char_idx": 0, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bdad8b6-1144-4e70-a437-30d6df914586": {"__data__": {"id_": "5bdad8b6-1144-4e70-a437-30d6df914586", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c5a91d7-1a95-4fbb-99fe-9fa82e352cce", "node_type": "1", "metadata": {}, "hash": "c28235ea9027a5c61e155851b2044208929aa7ba3aa7df9a52f7ae383a233597", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03f75a1d-74f6-49e3-b850-666037ea6aab", "node_type": "1", "metadata": {}, "hash": "67a4113ad6fc19ad65e3285b2fb894a29a0de14214ea3d083acf6e240f81b71c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}}, "hash": "93f533181347cdc659bce397160d35011344e2733f81163783694455745a39cd", "text": "171, pp. 693\u2013\n707, 2016.[61] B. F. J. Manly and D. Mackenzie, \u201cA cumulative sum type of\nmethod for environmental monitoring,\u201d Environmetrics , vol. 11,\nno. 2, pp. 151\u2013166, 2000.\n[62] N. C. Oza and S. Russell, \u201cExperimental comparisons of online\nand batch versions of bagging and boosting,\u201d in Proc. 7th ACM\nSIGKDD Int. Conf. Knowledge Discovery and Data Mining .", "start_char_idx": 362, "end_char_idx": 724, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03f75a1d-74f6-49e3-b850-666037ea6aab": {"__data__": {"id_": "03f75a1d-74f6-49e3-b850-666037ea6aab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5bdad8b6-1144-4e70-a437-30d6df914586", "node_type": "1", "metadata": {}, "hash": "93f533181347cdc659bce397160d35011344e2733f81163783694455745a39cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "424a2ab5-5827-4ca4-a740-bf377b35ce4a", "node_type": "1", "metadata": {}, "hash": "f651754369fbff21475b2db8f17e0231590b6e42a9b10003e613d584736327d3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}}, "hash": "67a4113ad6fc19ad65e3285b2fb894a29a0de14214ea3d083acf6e240f81b71c", "text": "7th ACM\nSIGKDD Int. Conf. Knowledge Discovery and Data Mining . 502565:\nACM, 2001, Conference Proceedings, pp. 359\u2013364.\n[63] A. Bifet, G. Holmes, and B. Pfahringer, \u201cLeveraging bagging for\nevolving data streams,\u201d in Proc. 2010 Joint European Conf. Machine\nLearning and Knowledge Discovery in Databases . Springer, 2010,\nConference Proceedings, pp. 135\u2013150.", "start_char_idx": 661, "end_char_idx": 1017, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "424a2ab5-5827-4ca4-a740-bf377b35ce4a": {"__data__": {"id_": "424a2ab5-5827-4ca4-a740-bf377b35ce4a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03f75a1d-74f6-49e3-b850-666037ea6aab", "node_type": "1", "metadata": {}, "hash": "67a4113ad6fc19ad65e3285b2fb894a29a0de14214ea3d083acf6e240f81b71c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e95a2a2-2d94-4f94-8185-9da4062c6e05", "node_type": "1", "metadata": {}, "hash": "0b65a292d06f8bed2d15a4ef9037a2ecfb9cc51ef29f74a685b8d44a19e9a920", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}}, "hash": "f651754369fbff21475b2db8f17e0231590b6e42a9b10003e613d584736327d3", "text": "Springer, 2010,\nConference Proceedings, pp. 135\u2013150.\n[64] F. Chu and C. Zaniolo, \u201cFast and light boosting for adaptive\nmining of data streams,\u201d in Proc. 8th Paci\ufb01c-Asia Conf. Knowledge\nDiscovery and Data Mining , H. Dai, R. Srikant, and C. Zhang,\nEds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2004, Book\nSection, pp. 282\u2013292.\n[65] P .", "start_char_idx": 965, "end_char_idx": 1306, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e95a2a2-2d94-4f94-8185-9da4062c6e05": {"__data__": {"id_": "4e95a2a2-2d94-4f94-8185-9da4062c6e05", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "424a2ab5-5827-4ca4-a740-bf377b35ce4a", "node_type": "1", "metadata": {}, "hash": "f651754369fbff21475b2db8f17e0231590b6e42a9b10003e613d584736327d3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "node_type": "1", "metadata": {}, "hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "class_name": "RelatedNodeInfo"}}, "hash": "0b65a292d06f8bed2d15a4ef9037a2ecfb9cc51ef29f74a685b8d44a19e9a920", "text": "282\u2013292.\n[65] P . Li, X. Wu, X. Hu, and H. Wang, \u201cLearning concept-drifting data\nstreams with random ensemble decision trees,\u201d Neurocomputing ,\nvol. 166, pp. 68\u201383, 2015.", "start_char_idx": 1289, "end_char_idx": 1459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c86b4d12-84da-4b85-b7e0-895dcb136999": {"__data__": {"id_": "c86b4d12-84da-4b85-b7e0-895dcb136999", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69e91903-7f52-4044-b0b1-6b432028a2af", "node_type": "1", "metadata": {}, "hash": "2dd43f8412d9d532c4d4e1dbe297eb3decabd5977a261b54d063147746b5da88", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}}, "hash": "98ce584368753a705085bc02e49f79e86c59b9fdff932b7ceadd92da7bc8783a", "text": "166, pp. 68\u201383, 2015.\n[66] J. Z. Kolter and M. A. Maloof, \u201cDynamic weighted majority:\nAn ensemble method for drifting concepts,\u201d Journal of Machine\nLearning Research , 2007.\n[67] R. Elwell and R. Polikar, \u201cIncremental learning of concept drift\nin nonstationary environments,\u201d IEEE Trans. Neural Networks ,\nvol. 22, no. 10, pp. 1517\u201331, 2011.\n[68] X.-C.", "start_char_idx": 0, "end_char_idx": 352, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69e91903-7f52-4044-b0b1-6b432028a2af": {"__data__": {"id_": "69e91903-7f52-4044-b0b1-6b432028a2af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c86b4d12-84da-4b85-b7e0-895dcb136999", "node_type": "1", "metadata": {}, "hash": "98ce584368753a705085bc02e49f79e86c59b9fdff932b7ceadd92da7bc8783a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6ca450b-3669-4b99-bf18-fed73e9af305", "node_type": "1", "metadata": {}, "hash": "a4e9b7aeca1ea4b993cfc6056c934f205494ca036364201c41021526977a940d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}}, "hash": "2dd43f8412d9d532c4d4e1dbe297eb3decabd5977a261b54d063147746b5da88", "text": "1517\u201331, 2011.\n[68] X.-C. Yin, K. Huang, and H.-W. Hao, \u201cDe2: Dynamic ensemble of\nensembles for learning nonstationary data,\u201d Neurocomputing , vol.\n165, pp. 14\u201322, 2015.\n[69] P . Zhang, J. Li, P . Wang, B. J. Gao, X. Zhu, and L. Guo, \u201cEnabling\nfast prediction for ensemble models on data streams,\u201d in Proc.", "start_char_idx": 327, "end_char_idx": 633, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6ca450b-3669-4b99-bf18-fed73e9af305": {"__data__": {"id_": "d6ca450b-3669-4b99-bf18-fed73e9af305", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69e91903-7f52-4044-b0b1-6b432028a2af", "node_type": "1", "metadata": {}, "hash": "2dd43f8412d9d532c4d4e1dbe297eb3decabd5977a261b54d063147746b5da88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f860c5a1-9b8d-4c23-a0b0-e844522a71bb", "node_type": "1", "metadata": {}, "hash": "7003c40f25eb3202db9bb2ffcad46de891f6aed386e79440e335f21a58cdedb7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}}, "hash": "a4e9b7aeca1ea4b993cfc6056c934f205494ca036364201c41021526977a940d", "text": "17th ACM SIGKDD Int. Conf. Knowledge Discovery and Data Min-\ning. San Diego, California, USA: ACM, 2011, Conference Paper,\npp. 177\u2013185.\n[70] Y. Xu, R. Xu, W. Yan, and P . Ardis, \u201cConcept drift learning with\nalternating learners,\u201d in Proc. 2017 Int. Joint Conf. Neural Networks ,\n2017, Conference Proceedings, pp. 2104\u20132111.", "start_char_idx": 634, "end_char_idx": 957, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f860c5a1-9b8d-4c23-a0b0-e844522a71bb": {"__data__": {"id_": "f860c5a1-9b8d-4c23-a0b0-e844522a71bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6ca450b-3669-4b99-bf18-fed73e9af305", "node_type": "1", "metadata": {}, "hash": "a4e9b7aeca1ea4b993cfc6056c934f205494ca036364201c41021526977a940d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02d00b49-20ca-4877-b8f8-a07ddc45664f", "node_type": "1", "metadata": {}, "hash": "5cda34cf5a76f67cea2835e3e925d548e077e19c93b103f07ca427b60a15d5dd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}}, "hash": "7003c40f25eb3202db9bb2ffcad46de891f6aed386e79440e335f21a58cdedb7", "text": "Neural Networks ,\n2017, Conference Proceedings, pp. 2104\u20132111.\n[71] L. Pietruczuk, L. Rutkowski, M. Jaworski, and P . Duda, \u201cA\nmethod for automatic adjustment of ensemble size in stream\ndata mining,\u201d in Proc. 2016 Int. Joint Conf. Neural Networks , 2016,\nConference Proceedings, pp. 9\u201315.\n[72] S.-C. You and H.-T.", "start_char_idx": 895, "end_char_idx": 1208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "02d00b49-20ca-4877-b8f8-a07ddc45664f": {"__data__": {"id_": "02d00b49-20ca-4877-b8f8-a07ddc45664f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f860c5a1-9b8d-4c23-a0b0-e844522a71bb", "node_type": "1", "metadata": {}, "hash": "7003c40f25eb3202db9bb2ffcad46de891f6aed386e79440e335f21a58cdedb7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210", "node_type": "1", "metadata": {}, "hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "class_name": "RelatedNodeInfo"}}, "hash": "5cda34cf5a76f67cea2835e3e925d548e077e19c93b103f07ca427b60a15d5dd", "text": "9\u201315.\n[72] S.-C. You and H.-T. Lin, \u201cA simple unlearning framework for\nonline learning under concept drifts,\u201d in Proc. 20th Paci\ufb01c-Asia\nConf. Knowledge Discovery and Data Mining . Springer, 2016,\nConference Proceedings, pp. 115\u2013126.", "start_char_idx": 1178, "end_char_idx": 1410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c928c2b-b1c1-40cf-88ad-d66433cc001c": {"__data__": {"id_": "4c928c2b-b1c1-40cf-88ad-d66433cc001c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7ff46e2e-66c3-447f-a174-7b41b24625aa", "node_type": "1", "metadata": {}, "hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "7ff46e2e-66c3-447f-a174-7b41b24625aa", "node_type": "1", "metadata": {}, "hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "class_name": "RelatedNodeInfo"}}, "hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "text": "Springer, 2016,\nConference Proceedings, pp. 115\u2013126.\n[73] D. Brzezinski and J. Stefanowski, \u201cReacting to different types of\nconcept drift: The accuracy updated ensemble algorithm,\u201d IEEE\nTrans. Neural Networks Learn. Syst. , vol. 25, no. 1, pp. 81\u201394, 2014.\n[74] P . Zhang, X. Zhu, and Y. Shi, \u201cCategorizing and mining concept\ndrifting data streams,\u201d in Proc.", "start_char_idx": 0, "end_char_idx": 358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93ed0e5a-31d7-4102-a580-11f1245fac0d": {"__data__": {"id_": "93ed0e5a-31d7-4102-a580-11f1245fac0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec807fbc-2203-4589-bc82-842cf1acf8f2", "node_type": "1", "metadata": {}, "hash": "393da4dd5ddeec32e0916536b7be1d5e8dbffed0de93a151682c7c73937ec77f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}}, "hash": "3c58f92fd448808554b896fdd619911d13e6da61da1c3e364c3bbaf0eb384cdd", "text": "14th ACM SIGKDD Int. Conf.\nKnowledge Discovery and Data Mining . Las Vegas, Nevada, USA:\nACM, 2008, Conference Paper, pp. 812\u2013820.\n[75] Y. Sun, K. Tang, L. L. Minku, S. Wang, and X. Yao, \u201cOnline en-\nsemble learning of data streams with gradually evolved classes,\u201d\nIEEE Trans. Knowl. Data Eng. , vol. 28, no. 6, pp. 1532\u20131545, 2016.", "start_char_idx": 0, "end_char_idx": 331, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec807fbc-2203-4589-bc82-842cf1acf8f2": {"__data__": {"id_": "ec807fbc-2203-4589-bc82-842cf1acf8f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93ed0e5a-31d7-4102-a580-11f1245fac0d", "node_type": "1", "metadata": {}, "hash": "3c58f92fd448808554b896fdd619911d13e6da61da1c3e364c3bbaf0eb384cdd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bfa1245-e0a5-42d6-b68d-fde4fc3483fd", "node_type": "1", "metadata": {}, "hash": "b5b72c856eaa9cd75c3d842a1bde2559513a7dd83978df415091f89344a52562", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}}, "hash": "393da4dd5ddeec32e0916536b7be1d5e8dbffed0de93a151682c7c73937ec77f", "text": "28, no. 6, pp. 1532\u20131545, 2016.\n[76] J. Gama and P . Kosina, \u201cRecurrent concepts in data streams\nclassi\ufb01cation,\u201d Knowledge and Information Systems , vol. 40, no. 3,\npp. 489\u2013507, 2013.\n[77] J. B. Gomes, M. M. Gaber, P . A. Sousa, and E. Menasalvas,\n\u201cMining recurring concepts in a dynamic feature space,\u201d IEEE\nTrans.", "start_char_idx": 300, "end_char_idx": 615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bfa1245-e0a5-42d6-b68d-fde4fc3483fd": {"__data__": {"id_": "9bfa1245-e0a5-42d6-b68d-fde4fc3483fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec807fbc-2203-4589-bc82-842cf1acf8f2", "node_type": "1", "metadata": {}, "hash": "393da4dd5ddeec32e0916536b7be1d5e8dbffed0de93a151682c7c73937ec77f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b443132-4cd6-41b6-ba25-2a0f7dd49978", "node_type": "1", "metadata": {}, "hash": "6479e19747b225b5bd2cbfd9e724db88aeee659f15059792eb6f60e59add8be3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}}, "hash": "b5b72c856eaa9cd75c3d842a1bde2559513a7dd83978df415091f89344a52562", "text": "Neural Networks Learn. Syst. , vol. 25, no. 1, pp. 95\u2013110, 2014.\n[78] Z. Ahmadi and S. Kramer, \u201cModeling recurring concepts in data\nstreams: a graph-based framework,\u201d Knowledge and Information\nSystems , 2017.\n[79] P . Domingos and G. Hulten, \u201cMining high-speed data streams,\u201d\ninProc. 6th ACM SIGKDD Int. Conf. Knowledge Discovery and Data\nMining .", "start_char_idx": 616, "end_char_idx": 963, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b443132-4cd6-41b6-ba25-2a0f7dd49978": {"__data__": {"id_": "8b443132-4cd6-41b6-ba25-2a0f7dd49978", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bfa1245-e0a5-42d6-b68d-fde4fc3483fd", "node_type": "1", "metadata": {}, "hash": "b5b72c856eaa9cd75c3d842a1bde2559513a7dd83978df415091f89344a52562", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0fcbe42-23c4-481c-ac6f-2c6915c9c671", "node_type": "1", "metadata": {}, "hash": "381bfb0ce49cb9e0a07099807797566d5c107c3fa5f42fdf59490fa52aa5d065", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}}, "hash": "6479e19747b225b5bd2cbfd9e724db88aeee659f15059792eb6f60e59add8be3", "text": "6th ACM SIGKDD Int. Conf. Knowledge Discovery and Data\nMining . ACM, 2000, Conference Proceedings, pp. 71\u201380.\n[80] G. Hulten, L. Spencer, and P . Domingos, \u201cMining time-changing\ndata streams,\u201d in Proc. 7th ACM SIGKDD Int. Conf. Knowledge\nDiscovery and Data Mining . San Francisco, California: ACM, 2001,\nConference Paper, pp. 97\u2013106.\n[81] J. Gama, R. Rocha, and P .", "start_char_idx": 900, "end_char_idx": 1265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0fcbe42-23c4-481c-ac6f-2c6915c9c671": {"__data__": {"id_": "f0fcbe42-23c4-481c-ac6f-2c6915c9c671", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b443132-4cd6-41b6-ba25-2a0f7dd49978", "node_type": "1", "metadata": {}, "hash": "6479e19747b225b5bd2cbfd9e724db88aeee659f15059792eb6f60e59add8be3", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b", "node_type": "1", "metadata": {}, "hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "class_name": "RelatedNodeInfo"}}, "hash": "381bfb0ce49cb9e0a07099807797566d5c107c3fa5f42fdf59490fa52aa5d065", "text": "[81] J. Gama, R. Rocha, and P . Medas, \u201cAccurate decision trees for\nmining high-speed data streams,\u201d in Proc. 9th ACM SIGKDD\nInt. Conf. Knowledge Discovery and Data Mining . ACM, 2003,\nConference Proceedings, pp. 523\u2013528.", "start_char_idx": 1234, "end_char_idx": 1455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "acfd1bfc-93f7-4912-8d94-c393f029bbc3": {"__data__": {"id_": "acfd1bfc-93f7-4912-8d94-c393f029bbc3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6108209-4ec6-412f-9697-25c4aecbaf24", "node_type": "1", "metadata": {}, "hash": "e9dc7d771e977f71265c1a3b840d15ca41af2076f80c7f691f3bcfbf401b8c9a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}}, "hash": "a6732db30935a3cd24810b44cf67325702dde5aa29870cd2c2ac35504826fcbe", "text": "ACM, 2003,\nConference Proceedings, pp. 523\u2013528.\n[82] H. Yang and S. Fong, \u201cIncrementally optimized decision tree\nfor noisy big data,\u201d in Proc. 1st Int. Workshop Big Data, Streams\nand Heterogeneous Source Mining Algorithms, Systems, Programming\n\n17\nModels and Applications . Beijing, China: ACM, 2012, Conference\nPaper, pp. 36\u201344.", "start_char_idx": 0, "end_char_idx": 329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6108209-4ec6-412f-9697-25c4aecbaf24": {"__data__": {"id_": "e6108209-4ec6-412f-9697-25c4aecbaf24", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "acfd1bfc-93f7-4912-8d94-c393f029bbc3", "node_type": "1", "metadata": {}, "hash": "a6732db30935a3cd24810b44cf67325702dde5aa29870cd2c2ac35504826fcbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86576e66-548e-4fcf-80d0-8eadb593d04e", "node_type": "1", "metadata": {}, "hash": "1c265a8d0108abffb7e01b03323befbf4a6b7c674709d970f5e9bd3587a8eb09", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}}, "hash": "e9dc7d771e977f71265c1a3b840d15ca41af2076f80c7f691f3bcfbf401b8c9a", "text": "36\u201344.\n[83] \u2014\u2014, \u201cCountering the concept-drift problems in big data by\nan incrementally optimized stream mining model,\u201d Journal of\nSystems and Software , vol. 102, pp. 158\u2013166, 2015.\n[84] L. Rutkowski, M. Jaworski, L. Pietruczuk, and P . Duda, \u201cDecision\ntrees for mining data streams based on the gaussian approxima-\ntion,\u201d IEEE Trans. Knowl. Data Eng. , vol. 26, no. 1, pp.", "start_char_idx": 323, "end_char_idx": 696, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86576e66-548e-4fcf-80d0-8eadb593d04e": {"__data__": {"id_": "86576e66-548e-4fcf-80d0-8eadb593d04e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6108209-4ec6-412f-9697-25c4aecbaf24", "node_type": "1", "metadata": {}, "hash": "e9dc7d771e977f71265c1a3b840d15ca41af2076f80c7f691f3bcfbf401b8c9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db619cbd-5285-45a0-9854-2030f19d26e4", "node_type": "1", "metadata": {}, "hash": "edc755b4f7adc33bf5422ab2a274135cd1b133592037fdfac36f445389a02e1e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}}, "hash": "1c265a8d0108abffb7e01b03323befbf4a6b7c674709d970f5e9bd3587a8eb09", "text": "Data Eng. , vol. 26, no. 1, pp. 108\u2013119,\n2014.\n[85] L. Rutkowski, L. Pietruczuk, P . Duda, and M. Jaworski, \u201cDecision\ntrees for mining data streams based on the mcdiarmid\u2019s bound,\u201d\nIEEE Trans. Knowl. Data Eng. , vol. 25, no. 6, pp. 1272\u20131279, 2013.", "start_char_idx": 665, "end_char_idx": 913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db619cbd-5285-45a0-9854-2030f19d26e4": {"__data__": {"id_": "db619cbd-5285-45a0-9854-2030f19d26e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86576e66-548e-4fcf-80d0-8eadb593d04e", "node_type": "1", "metadata": {}, "hash": "1c265a8d0108abffb7e01b03323befbf4a6b7c674709d970f5e9bd3587a8eb09", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1444c19c-dfc3-4861-bf0b-2f37be86596b", "node_type": "1", "metadata": {}, "hash": "08c815443b496245bef33a6b4e4bd43162402864b37e7d126fc9f13a0d7eb633", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}}, "hash": "edc755b4f7adc33bf5422ab2a274135cd1b133592037fdfac36f445389a02e1e", "text": "25, no. 6, pp. 1272\u20131279, 2013.\n[86] L. Rutkowski, M. Jaworski, L. Pietruczuk, and P . Duda, \u201cA new\nmethod for data stream mining based on the misclassi\ufb01cation\nerror,\u201d IEEE Trans. Neural Networks Learn. Syst. , vol. 26, no. 5, pp.\n1048\u20131059, 2015.", "start_char_idx": 882, "end_char_idx": 1129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1444c19c-dfc3-4861-bf0b-2f37be86596b": {"__data__": {"id_": "1444c19c-dfc3-4861-bf0b-2f37be86596b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db619cbd-5285-45a0-9854-2030f19d26e4", "node_type": "1", "metadata": {}, "hash": "edc755b4f7adc33bf5422ab2a274135cd1b133592037fdfac36f445389a02e1e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2", "node_type": "1", "metadata": {}, "hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "class_name": "RelatedNodeInfo"}}, "hash": "08c815443b496245bef33a6b4e4bd43162402864b37e7d126fc9f13a0d7eb633", "text": "26, no. 5, pp.\n1048\u20131059, 2015.\n[87] I. Fr \u00b4\u0131as-Blanco, J. d. Campo- \u00b4Avila, G. Ramos-Jim \u00b4enez, A. C. P .\nL. F. Carvalho, A. Ortiz-D \u00b4\u0131az, and R. Morales-Bueno, \u201cOnline\nadaptive decision trees based on concentration inequalities,\u201d\nKnowledge-Based Systems , vol. 104, pp. 179\u2013194, 2016.", "start_char_idx": 1098, "end_char_idx": 1384, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d81af57c-bde2-44f2-bad9-a4ee6ab6a5e3": {"__data__": {"id_": "d81af57c-bde2-44f2-bad9-a4ee6ab6a5e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8579fa3c-a903-4ee4-8cf1-697b2a19600a", "node_type": "1", "metadata": {}, "hash": "94645181f4465e9795acc02e60c33d60a25b067105c845ecc29e778b7c365f3e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}}, "hash": "a53710475024dbc8a03b84e48d8e473b8db75b643d25d6a3d2c423c7a61d4569", "text": "104, pp. 179\u2013194, 2016.\n[88] J. Gama, R. Sebasti \u02dcao, and P . P . Rodrigues, \u201cOn evaluating stream\nlearning algorithms,\u201d Machine Learning , vol. 90, no. 3, pp. 317\u2013\n346, 2012.\n[89] I. \u02c7Zliobait \u02d9e, \u201cControlled permutations for testing adaptive learn-\ning models,\u201d Knowledge and Information Systems , vol. 39, no. 3, pp.\n565\u2013578, 2014.", "start_char_idx": 0, "end_char_idx": 334, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8579fa3c-a903-4ee4-8cf1-697b2a19600a": {"__data__": {"id_": "8579fa3c-a903-4ee4-8cf1-697b2a19600a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d81af57c-bde2-44f2-bad9-a4ee6ab6a5e3", "node_type": "1", "metadata": {}, "hash": "a53710475024dbc8a03b84e48d8e473b8db75b643d25d6a3d2c423c7a61d4569", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7aa1ef7e-349d-4b8f-9bc5-c9231783e76b", "node_type": "1", "metadata": {}, "hash": "66b24ffe0f7062b372922f3d4e539eb2d1b24c0be982361c4b0beaf32c1e95b0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}}, "hash": "94645181f4465e9795acc02e60c33d60a25b067105c845ecc29e778b7c365f3e", "text": "39, no. 3, pp.\n565\u2013578, 2014.\n[90] A. Bifet, G. Holmes, B. Pfahringer, and E. Frank, \u201cFast perceptron\ndecision tree learning from evolving data streams,\u201d in Proc. 14th\nPaci\ufb01c-Asia Conf. Knowledge Discovery and Data Mining , M. J. Zaki,\nJ. X. Yu, B. Ravindran, and V . Pudi, Eds. Berlin, Heidelberg:\nSpringer Berlin Heidelberg, 2010, Book Section, pp.", "start_char_idx": 305, "end_char_idx": 655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7aa1ef7e-349d-4b8f-9bc5-c9231783e76b": {"__data__": {"id_": "7aa1ef7e-349d-4b8f-9bc5-c9231783e76b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8579fa3c-a903-4ee4-8cf1-697b2a19600a", "node_type": "1", "metadata": {}, "hash": "94645181f4465e9795acc02e60c33d60a25b067105c845ecc29e778b7c365f3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe617144-b71a-41d0-8c0f-4f340a10ef3b", "node_type": "1", "metadata": {}, "hash": "1a54ffd9349cbb0f5f26eaf1e44bae2636d6dff61c0e8f9127011943aac06720", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}}, "hash": "66b24ffe0f7062b372922f3d4e539eb2d1b24c0be982361c4b0beaf32c1e95b0", "text": "299\u2013310.\n[91] J. Cohen, \u201cA coef\ufb01cient of agreement for nominal scales,\u201d Edu-\ncational and Psychological Measurement , vol. 20, no. 1, pp. 37\u201346,\n1960.\n[92] I. \u02c7Zliobait \u02d9e, A. Bifet, J. Read, B. Pfahringer, and G. Holmes,\n\u201cEvaluation methods and decision theory for classi\ufb01cation of\nstreaming data with temporal dependence,\u201d Machine Learning ,\nvol. 98, no. 3, pp.", "start_char_idx": 656, "end_char_idx": 1019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe617144-b71a-41d0-8c0f-4f340a10ef3b": {"__data__": {"id_": "fe617144-b71a-41d0-8c0f-4f340a10ef3b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7aa1ef7e-349d-4b8f-9bc5-c9231783e76b", "node_type": "1", "metadata": {}, "hash": "66b24ffe0f7062b372922f3d4e539eb2d1b24c0be982361c4b0beaf32c1e95b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1eed3301-c4f0-4c0e-b8b9-56cd39a3f26c", "node_type": "1", "metadata": {}, "hash": "3c48df1ab405caeb1dfbe83c612ead36c724e5a1a26f2b693cbbf2d89344d964", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}}, "hash": "1a54ffd9349cbb0f5f26eaf1e44bae2636d6dff61c0e8f9127011943aac06720", "text": "98, no. 3, pp. 455\u2013482, 2015.\n[93] D. Brzezinski and J. Stefanowski, \u201cPrequential auc for classi\ufb01er\nevaluation and drift detection in evolving data streams,\u201d in\nProc. 3rd Int. Workshop New Frontiers in Mining Complex Patterns ,\nA. Appice, M. Ceci, C. Loglisci, G. Manco, E. Masciari, and Z. W.\nRas, Eds.", "start_char_idx": 1005, "end_char_idx": 1308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1eed3301-c4f0-4c0e-b8b9-56cd39a3f26c": {"__data__": {"id_": "1eed3301-c4f0-4c0e-b8b9-56cd39a3f26c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe617144-b71a-41d0-8c0f-4f340a10ef3b", "node_type": "1", "metadata": {}, "hash": "1a54ffd9349cbb0f5f26eaf1e44bae2636d6dff61c0e8f9127011943aac06720", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "node_type": "1", "metadata": {}, "hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "class_name": "RelatedNodeInfo"}}, "hash": "3c48df1ab405caeb1dfbe83c612ead36c724e5a1a26f2b693cbbf2d89344d964", "text": "Cham: Springer International Publishing, 2014, Book\nSection, pp. 87\u2013101.", "start_char_idx": 1309, "end_char_idx": 1381, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd879fd3-5892-4fa0-b561-9954b2357839": {"__data__": {"id_": "bd879fd3-5892-4fa0-b561-9954b2357839", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51f100c6-bbb1-4446-893b-2ef926a5aeee", "node_type": "1", "metadata": {}, "hash": "fed44462eac519514f2e5667d0dafbf89043a7353abd85c30303b7725fd5291c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}}, "hash": "7cecdca9f6c4dc1f9ef38ab73f98a84c61a11e919e565a2f5060cfd62eb37f34", "text": "87\u2013101.\n[94] A. Bifet, G. d. F. Morales, J. Read, G. Holmes, and B. Pfahringer,\n\u201cEf\ufb01cient online evaluation of big data stream classi\ufb01ers,\u201d in\nProc. 21th ACM SIGKDD Int. Conf. Knowledge Discovery and Data\nMining . Sydney, NSW, Australia: ACM, 2015, Conference Paper,\npp. 59\u201368.", "start_char_idx": 0, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51f100c6-bbb1-4446-893b-2ef926a5aeee": {"__data__": {"id_": "51f100c6-bbb1-4446-893b-2ef926a5aeee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd879fd3-5892-4fa0-b561-9954b2357839", "node_type": "1", "metadata": {}, "hash": "7cecdca9f6c4dc1f9ef38ab73f98a84c61a11e919e565a2f5060cfd62eb37f34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33363cf8-3b22-4d3a-9fc4-656af0a2e069", "node_type": "1", "metadata": {}, "hash": "258b5065ced10b163f510ae9051abaef9e7aca82bc7853b3f744f9624ac60d9e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}}, "hash": "fed44462eac519514f2e5667d0dafbf89043a7353abd85c30303b7725fd5291c", "text": "59\u201368.\n[95] N. Japkowicz and M. Shah, Evaluating learning algorithms: a clas-\nsi\ufb01cation perspective . Cambridge University Press, 2011.\n[96] Q. McNemar, \u201cNote on the sampling error of the difference\nbetween correlated proportions or percentages,\u201d Psychometrika ,\nvol. 12, no. 2, pp. 153\u2013157, 1947.\n[97] J. Dem \u02c7sar, \u201cStatistical comparisons of classi\ufb01ers over multiple\ndata sets,\u201d Journal of Machine Learning Research , vol.", "start_char_idx": 271, "end_char_idx": 695, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33363cf8-3b22-4d3a-9fc4-656af0a2e069": {"__data__": {"id_": "33363cf8-3b22-4d3a-9fc4-656af0a2e069", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51f100c6-bbb1-4446-893b-2ef926a5aeee", "node_type": "1", "metadata": {}, "hash": "fed44462eac519514f2e5667d0dafbf89043a7353abd85c30303b7725fd5291c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afe8d503-ee44-427a-980b-7ebb09312817", "node_type": "1", "metadata": {}, "hash": "f831af489ce23a6dd4bebe61e6ac8aa126a5a7875d7c97ac450061f66b8c09e4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}}, "hash": "258b5065ced10b163f510ae9051abaef9e7aca82bc7853b3f744f9624ac60d9e", "text": "7, no. Jan, pp.\n1\u201330, 2006.\n[98] J. Z. Kolter and M. A. Maloof, \u201cUsing additive expert ensembles\nto cope with concept drift,\u201d in Proc. 22nd Int. Conf. Machine\nLearning . Bonn, Germany: ACM, 2005, Conference Paper, pp.\n449\u2013456.\n[99] X. Wu, P . Li, and X. Hu, \u201cLearning from concept drifting data\nstreams with unlabeled data,\u201d Neurocomputing , vol. 92, pp.", "start_char_idx": 696, "end_char_idx": 1050, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "afe8d503-ee44-427a-980b-7ebb09312817": {"__data__": {"id_": "afe8d503-ee44-427a-980b-7ebb09312817", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33363cf8-3b22-4d3a-9fc4-656af0a2e069", "node_type": "1", "metadata": {}, "hash": "258b5065ced10b163f510ae9051abaef9e7aca82bc7853b3f744f9624ac60d9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd75d102-fd78-4d0e-9071-100c906c8375", "node_type": "1", "metadata": {}, "hash": "c77240164c55bcc01150c14aab2698394d9dcea909556056d0c731b572daef53", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}}, "hash": "f831af489ce23a6dd4bebe61e6ac8aa126a5a7875d7c97ac450061f66b8c09e4", "text": "92, pp. 145\u2013\n155, 2012.\n[100] W. N. Street and Y. Kim, \u201cA streaming ensemble algorithm (sea)\nfor large-scale classi\ufb01cation,\u201d in Proc. Seventh ACM Int. Conf.\nKnowledge Discovery and Data Mining . 502568: ACM, 2001,\nConference Proceedings, pp. 377\u2013382.\n[101] R. Fok, A. An, and X. Wang, \u201cMining evolving data streams with\nparticle \ufb01lters,\u201d Comput. Intell. , vol. 33, no.", "start_char_idx": 1043, "end_char_idx": 1411, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd75d102-fd78-4d0e-9071-100c906c8375": {"__data__": {"id_": "bd75d102-fd78-4d0e-9071-100c906c8375", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "afe8d503-ee44-427a-980b-7ebb09312817", "node_type": "1", "metadata": {}, "hash": "f831af489ce23a6dd4bebe61e6ac8aa126a5a7875d7c97ac450061f66b8c09e4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2", "node_type": "1", "metadata": {}, "hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "class_name": "RelatedNodeInfo"}}, "hash": "c77240164c55bcc01150c14aab2698394d9dcea909556056d0c731b572daef53", "text": "Intell. , vol. 33, no. 2, pp. 147\u2013180, 2017.\n[102] P .", "start_char_idx": 1389, "end_char_idx": 1443, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cac29b7-e2ac-422d-a79e-1a5cd820371d": {"__data__": {"id_": "0cac29b7-e2ac-422d-a79e-1a5cd820371d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "023d29ba-27f7-4516-bd02-a7ed63efbdb0", "node_type": "1", "metadata": {}, "hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "023d29ba-27f7-4516-bd02-a7ed63efbdb0", "node_type": "1", "metadata": {}, "hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "class_name": "RelatedNodeInfo"}}, "hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "text": "2, pp. 147\u2013180, 2017.\n[102] P . Kosina and J. Gama, \u201cVery fast decision rules for classi\ufb01cation\nin data streams,\u201d Data Mining and Knowledge Discovery , vol. 29,\nno. 1, pp. 168\u2013202, 2015.\n[103] H. Wang, W. Fan, P . S. Yu, and J. Han, \u201cMining concept-\ndrifting data streams using ensemble classi\ufb01ers,\u201d in Proc.", "start_char_idx": 0, "end_char_idx": 308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "760ab3dc-bad8-4987-95b0-de4a55c06d84": {"__data__": {"id_": "760ab3dc-bad8-4987-95b0-de4a55c06d84", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0662f6ab-37d0-4c11-acbd-fe91bf9c0809", "node_type": "1", "metadata": {}, "hash": "5340c4fdb4687da368777c069bda003924561114d69a49b5a934fa06666572d2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}}, "hash": "eceb3147cfcce4367efc731bcc090141ae8a084b99e34af77e97b6e25558d076", "text": "9th\nACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining .\nWashington, D.C.: ACM, 2003, Conference Paper, pp. 226\u2013235.[104] A. Bifet, G. Holmes, R. Kirkby, and B. Pfahringer, \u201cMoa: Massive\nonline analysis,\u201d Journal of Machine Learning Research , vol. 99, pp.\n1601\u20131604, 2010.\n[105] V .", "start_char_idx": 0, "end_char_idx": 290, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0662f6ab-37d0-4c11-acbd-fe91bf9c0809": {"__data__": {"id_": "0662f6ab-37d0-4c11-acbd-fe91bf9c0809", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "760ab3dc-bad8-4987-95b0-de4a55c06d84", "node_type": "1", "metadata": {}, "hash": "eceb3147cfcce4367efc731bcc090141ae8a084b99e34af77e97b6e25558d076", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5f646c6-b89f-499b-ad98-0cd5dddfd498", "node_type": "1", "metadata": {}, "hash": "30653398bfe3d7599522fee6fb601dcf02b7f10698d40e87b0751bbee7c0371a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}}, "hash": "5340c4fdb4687da368777c069bda003924561114d69a49b5a934fa06666572d2", "text": "99, pp.\n1601\u20131604, 2010.\n[105] V . M. Souza, D. F. Silva, J. Gama, and G. E. Batista, \u201cData\nstream classi\ufb01cation guided by clustering on nonstationary en-\nvironments and extreme veri\ufb01cation latency,\u201d in Proceedings of the\n2015 SIAM International Conference on Data Mining . SIAM, 2015,\npp. 873\u2013881.\n[106] M. Lichman, \u201cUCI machine learning repository,\u201d 2013. [Online].", "start_char_idx": 256, "end_char_idx": 623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5f646c6-b89f-499b-ad98-0cd5dddfd498": {"__data__": {"id_": "e5f646c6-b89f-499b-ad98-0cd5dddfd498", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0662f6ab-37d0-4c11-acbd-fe91bf9c0809", "node_type": "1", "metadata": {}, "hash": "5340c4fdb4687da368777c069bda003924561114d69a49b5a934fa06666572d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98e48856-29bc-4b1c-9908-1a66dc7cd2b6", "node_type": "1", "metadata": {}, "hash": "ed005981a46edfc38e58348748df4359090f43910ac641eb0a468afb1c552ea2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}}, "hash": "30653398bfe3d7599522fee6fb601dcf02b7f10698d40e87b0751bbee7c0371a", "text": "[Online].\nAvailable: http://archive.ics.uci.edu/ml\n[107] M. Harel, S. Mannor, R. El-Yaniv, and K. Crammer, \u201cConcept drift\ndetection through resampling,\u201d in Proc. 31st Int. Conf. Machine\nLearning , 2014, Conference Proceedings, pp. 1009\u20131017.\n[108] X. Zhu, \u201cStream data mining repository,\u201d 2010. [Online].", "start_char_idx": 614, "end_char_idx": 918, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98e48856-29bc-4b1c-9908-1a66dc7cd2b6": {"__data__": {"id_": "98e48856-29bc-4b1c-9908-1a66dc7cd2b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5f646c6-b89f-499b-ad98-0cd5dddfd498", "node_type": "1", "metadata": {}, "hash": "30653398bfe3d7599522fee6fb601dcf02b7f10698d40e87b0751bbee7c0371a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1581c45f-1ce1-45a6-a9b4-502d887717d0", "node_type": "1", "metadata": {}, "hash": "6216ae19b5ec217d4150640c0b4140dc77520c264e1d9f231b50e64f93280bac", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}}, "hash": "ed005981a46edfc38e58348748df4359090f43910ac641eb0a468afb1c552ea2", "text": "[Online].\nAvailable: http://www.cse.fau.edu/ \u223cxqzhu/stream.html\n[109] M. Harries and N. S. Wales, \u201cSplice-2 comparative evaluation:\nElectricity pricing,\u201d 1999.\n[110] I. Katakis, G. Tsoumakas, and I. Vlahavas, \u201cTracking recurring\ncontexts using ensemble classi\ufb01ers: an application to email \ufb01lter-\ning,\u201d Knowledge and Information Systems , vol. 22, no. 3, pp. 371\u2013\n391, 2009.", "start_char_idx": 909, "end_char_idx": 1282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1581c45f-1ce1-45a6-a9b4-502d887717d0": {"__data__": {"id_": "1581c45f-1ce1-45a6-a9b4-502d887717d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98e48856-29bc-4b1c-9908-1a66dc7cd2b6", "node_type": "1", "metadata": {}, "hash": "ed005981a46edfc38e58348748df4359090f43910ac641eb0a468afb1c552ea2", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d", "node_type": "1", "metadata": {}, "hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "class_name": "RelatedNodeInfo"}}, "hash": "6216ae19b5ec217d4150640c0b4140dc77520c264e1d9f231b50e64f93280bac", "text": "22, no. 3, pp. 371\u2013\n391, 2009.\n[111] I. Katakis, G. Tsoumakas, E. Banos, N. Bassiliades, and I. Vla-\nhavas, \u201cAn adaptive personalized news dissemination system,\u201d\nJournal of Intelligent Information Systems , vol. 32, no. 2, pp. 191\u2013212,\n2008.", "start_char_idx": 1252, "end_char_idx": 1493, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "adf3b340-ff37-4119-8f7d-aa175d699573": {"__data__": {"id_": "adf3b340-ff37-4119-8f7d-aa175d699573", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0594055-0291-4b8d-b06f-e683ebfc6eb0", "node_type": "1", "metadata": {}, "hash": "139f9a5c20a65793c4ee19de171296acf206c21535ca968ed1baca7105894efd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}}, "hash": "02fb9149d980aec130284480a526c247498c8c189cc3e9e5867e026af6899606", "text": "32, no. 2, pp. 191\u2013212,\n2008.\n[112] I. Katakis, G. Tsoumakas, and I. P . Vlahavas, \u201cAn ensemble of\nclassi\ufb01ers for coping with recurring contexts in data streams,\u201d\nin18th European Conf. Arti\ufb01cial Intelligence , 2008, Conference\nProceedings, pp. 763\u2013764.\n[113] S. J. Delany, P .", "start_char_idx": 0, "end_char_idx": 276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0594055-0291-4b8d-b06f-e683ebfc6eb0": {"__data__": {"id_": "a0594055-0291-4b8d-b06f-e683ebfc6eb0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "adf3b340-ff37-4119-8f7d-aa175d699573", "node_type": "1", "metadata": {}, "hash": "02fb9149d980aec130284480a526c247498c8c189cc3e9e5867e026af6899606", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc5a2814-a49c-4e25-b2ce-6b120be9b004", "node_type": "1", "metadata": {}, "hash": "8bd7e09b64fa700d36bef1156c283cb5944da092b7023817439da66611524946", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}}, "hash": "139f9a5c20a65793c4ee19de171296acf206c21535ca968ed1baca7105894efd", "text": "763\u2013764.\n[113] S. J. Delany, P . Cunningham, A. Tsymbal, and L. Coyle, \u201cA case-\nbased technique for tracking concept drift in spam \ufb01ltering,\u201d\nKnowledge-Based Systems , vol. 18, no. 4\u20135, pp. 187\u2013195, 2005.\n[114] L.-Y. Wang, C. Park, K. Yeon, and H. Choi, \u201cTracking concept drift\nusing a constrained penalized regression combiner,\u201d Comput.\nStat. Data Anal.", "start_char_idx": 244, "end_char_idx": 598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc5a2814-a49c-4e25-b2ce-6b120be9b004": {"__data__": {"id_": "dc5a2814-a49c-4e25-b2ce-6b120be9b004", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0594055-0291-4b8d-b06f-e683ebfc6eb0", "node_type": "1", "metadata": {}, "hash": "139f9a5c20a65793c4ee19de171296acf206c21535ca968ed1baca7105894efd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "917dc646-917d-4ef4-a872-30e4733c6eda", "node_type": "1", "metadata": {}, "hash": "52e9c04f594b2b9ab417ce6acb64c9278ecb7a159a313ca2b0f75c33dfe6835d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}}, "hash": "8bd7e09b64fa700d36bef1156c283cb5944da092b7023817439da66611524946", "text": "Stat. Data Anal. , vol. 108, pp. 52\u201369, 2017.\n[115] I. Zliobaite, A. Bifet, B. Pfahringer, and G. Holmes, \u201cActive learn-\ning with drifting streaming data,\u201d IEEE Trans. Neural Networks\nLearn. Syst. , vol. 25, no. 1, pp. 27\u201339, 2014.", "start_char_idx": 582, "end_char_idx": 813, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "917dc646-917d-4ef4-a872-30e4733c6eda": {"__data__": {"id_": "917dc646-917d-4ef4-a872-30e4733c6eda", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc5a2814-a49c-4e25-b2ce-6b120be9b004", "node_type": "1", "metadata": {}, "hash": "8bd7e09b64fa700d36bef1156c283cb5944da092b7023817439da66611524946", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9c9e96b-ac8e-4792-a2a9-8fe5751d0070", "node_type": "1", "metadata": {}, "hash": "35745004525797bb262b15ff3b21d5ae543a1a6099640d46883056fda30ccba7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}}, "hash": "52e9c04f594b2b9ab417ce6acb64c9278ecb7a159a313ca2b0f75c33dfe6835d", "text": "25, no. 1, pp. 27\u201339, 2014.\n[116] G. Song, Y. Ye, H. Zhang, X. Xu, R. Y. K. Lau, and F. Liu, \u201cDy-\nnamic clustering forest: An ensemble framework to ef\ufb01ciently\nclassify textual data stream with concept drift,\u201d Information Sci-\nences , vol. 357, pp. 125\u2013143, 2016.", "start_char_idx": 786, "end_char_idx": 1048, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9c9e96b-ac8e-4792-a2a9-8fe5751d0070": {"__data__": {"id_": "a9c9e96b-ac8e-4792-a2a9-8fe5751d0070", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "917dc646-917d-4ef4-a872-30e4733c6eda", "node_type": "1", "metadata": {}, "hash": "52e9c04f594b2b9ab417ce6acb64c9278ecb7a159a313ca2b0f75c33dfe6835d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df584730-6f71-4326-a464-f2a79d424261", "node_type": "1", "metadata": {}, "hash": "1be1b67be42eb18c470e79103b68e6a71e6184f0980f5d5c8ff7f74feefad223", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}}, "hash": "35745004525797bb262b15ff3b21d5ae543a1a6099640d46883056fda30ccba7", "text": "357, pp. 125\u2013143, 2016.\n[117] G. Ditzler and R. Polikar, \u201cIncremental learning of concept drift\nfrom streaming imbalanced data,\u201d IEEE Trans. Knowl. Data Eng. ,\nvol. 25, no. 10, pp. 2283\u20132301, 2013.\n[118] B. Mirza, Z. Lin, and N. Liu, \u201cEnsemble of subset online sequen-\ntial extreme learning machine for class imbalance and concept\ndrift,\u201d Neurocomputing , vol.", "start_char_idx": 1025, "end_char_idx": 1385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df584730-6f71-4326-a464-f2a79d424261": {"__data__": {"id_": "df584730-6f71-4326-a464-f2a79d424261", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9c9e96b-ac8e-4792-a2a9-8fe5751d0070", "node_type": "1", "metadata": {}, "hash": "35745004525797bb262b15ff3b21d5ae543a1a6099640d46883056fda30ccba7", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "49a086c2-e996-4c17-b97a-f1bf32a56730", "node_type": "1", "metadata": {}, "hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "class_name": "RelatedNodeInfo"}}, "hash": "1be1b67be42eb18c470e79103b68e6a71e6184f0980f5d5c8ff7f74feefad223", "text": "149, pp. 316\u2013329, 2015.", "start_char_idx": 1386, "end_char_idx": 1409, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c2c0f53-3fca-4464-87cd-ef3c6dd2a1cf": {"__data__": {"id_": "8c2c0f53-3fca-4464-87cd-ef3c6dd2a1cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a46ed202-5920-4523-ac4a-044596af0b1f", "node_type": "1", "metadata": {}, "hash": "ac1d6c0cfd23d7353492ef31c39968b38da0f299c68218d2940b92a6aee4691b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}}, "hash": "10a4b23560f1a1e0eb087e78f334b39f7125d8510899db398ebd1284f48c5b79", "text": "149, pp. 316\u2013329, 2015.\n[119] B. Mirza and Z. Lin, \u201cMeta-cognitive online sequential extreme\nlearning machine for imbalanced and concept-drifting data clas-\nsi\ufb01cation,\u201d Neural Networks , vol. 80, pp. 79\u201394, 2016.\n[120] S. Wang, L. L. Minku, and X. Yao, \u201cResampling-based ensemble\nmethods for online class imbalance learning,\u201d IEEE Trans. Knowl.\nData Eng. , vol. 27, no. 5, pp.", "start_char_idx": 0, "end_char_idx": 376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a46ed202-5920-4523-ac4a-044596af0b1f": {"__data__": {"id_": "a46ed202-5920-4523-ac4a-044596af0b1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c2c0f53-3fca-4464-87cd-ef3c6dd2a1cf", "node_type": "1", "metadata": {}, "hash": "10a4b23560f1a1e0eb087e78f334b39f7125d8510899db398ebd1284f48c5b79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5165dc2-c00b-4f59-905e-92e42344d9f2", "node_type": "1", "metadata": {}, "hash": "4d87855f6f9b45535c54592ad115d6b9ce49de2924d35f27b6d06d0464ebbeb8", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}}, "hash": "ac1d6c0cfd23d7353492ef31c39968b38da0f299c68218d2940b92a6aee4691b", "text": "Data Eng. , vol. 27, no. 5, pp. 1356\u20131368, 2015.\n[121] E. Arabmakki and M. Kantardzic, \u201cSom-based partial labeling of\nimbalanced data stream,\u201d Neurocomputing , vol. 262, pp. 120\u2013133,\n2017.\n[122] A. Katal, M. Wazid, and R. H. Goudar, \u201cBig data: Issues, chal-\nlenges, tools and good practices,\u201d in Proc. 6th Int. Conf.", "start_char_idx": 345, "end_char_idx": 661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5165dc2-c00b-4f59-905e-92e42344d9f2": {"__data__": {"id_": "f5165dc2-c00b-4f59-905e-92e42344d9f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a46ed202-5920-4523-ac4a-044596af0b1f", "node_type": "1", "metadata": {}, "hash": "ac1d6c0cfd23d7353492ef31c39968b38da0f299c68218d2940b92a6aee4691b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4095a970-83d0-4977-b672-03a5ee4bf29c", "node_type": "1", "metadata": {}, "hash": "13286103113f787f0f03b3cd7bbf8bc02a830af2325fbfa2b3261c9a58db373c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}}, "hash": "4d87855f6f9b45535c54592ad115d6b9ce49de2924d35f27b6d06d0464ebbeb8", "text": "6th Int. Conf. Contempo-\nrary Computing (IC3) , 2013, Conference Proceedings, pp. 404\u2013409.\n[123] A. Andrzejak and J. B. Gomes, \u201cParallel concept drift detection\nwith online map-reduce,\u201d in Proc. 12th Int. Conf. Data Mining\nWorkshops , 2012, Conference Proceedings, pp. 402\u2013407.", "start_char_idx": 647, "end_char_idx": 924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4095a970-83d0-4977-b672-03a5ee4bf29c": {"__data__": {"id_": "4095a970-83d0-4977-b672-03a5ee4bf29c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5165dc2-c00b-4f59-905e-92e42344d9f2", "node_type": "1", "metadata": {}, "hash": "4d87855f6f9b45535c54592ad115d6b9ce49de2924d35f27b6d06d0464ebbeb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dabf316c-bca1-4ff6-877d-33a95ebfee9c", "node_type": "1", "metadata": {}, "hash": "7c66499cccff96f0537191e9afca2ed0adb4aa33c85fb548c91d419e8848e543", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}}, "hash": "13286103113f787f0f03b3cd7bbf8bc02a830af2325fbfa2b3261c9a58db373c", "text": "Data Mining\nWorkshops , 2012, Conference Proceedings, pp. 402\u2013407.\n[124] M. Tennant, F. Stahl, O. Rana, and J. B. Gomes, \u201cScalable real-\ntime classi\ufb01cation of data streams with concept drift,\u201d Future\nGeneration Computer Systems , vol. 75, pp. 187\u2013199, 2017.\n[125] C. C. Aggarwal, J. Han, J. Wang, and P . S. Yu, \u201cA framework\nfor clustering evolving data streams,\u201d in Proc.", "start_char_idx": 858, "end_char_idx": 1230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dabf316c-bca1-4ff6-877d-33a95ebfee9c": {"__data__": {"id_": "dabf316c-bca1-4ff6-877d-33a95ebfee9c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4095a970-83d0-4977-b672-03a5ee4bf29c", "node_type": "1", "metadata": {}, "hash": "13286103113f787f0f03b3cd7bbf8bc02a830af2325fbfa2b3261c9a58db373c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "node_type": "1", "metadata": {}, "hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "class_name": "RelatedNodeInfo"}}, "hash": "7c66499cccff96f0537191e9afca2ed0adb4aa33c85fb548c91d419e8848e543", "text": "S. Yu, \u201cA framework\nfor clustering evolving data streams,\u201d in Proc. 29th Int. Conf. Very\nLarge Databases , vol. 29. VLDB Endowment, 2003, Conference\nProceedings, pp. 81\u201392.", "start_char_idx": 1163, "end_char_idx": 1335, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29ce92f9-9155-4c64-99f7-8f82ed2f0c63": {"__data__": {"id_": "29ce92f9-9155-4c64-99f7-8f82ed2f0c63", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53e2ecb7-130f-4d60-9175-a0ebe43e8e34", "node_type": "1", "metadata": {}, "hash": "cdbb4ee47b7da407e7a977bd8d24a9a33d0b62ffbcdffad5c882ac1e2797695d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}}, "hash": "20222007dbab4dbce54b9d03f5719c7757273d2b7bbe1f7758e9ad47cdb408f0", "text": "81\u201392.\n[126] X. Song, H. He, S. Niu, and J. Gao, \u201cA data streams analysis\nstrategy based on hoeffding tree with concept drift on hadoop\nsystem,\u201d in Proc. 4th Int. Conf. Advanced Cloud and Big Data , 2016,\nConference Proceedings, pp. 45\u201348.\n[127] V .", "start_char_idx": 0, "end_char_idx": 249, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53e2ecb7-130f-4d60-9175-a0ebe43e8e34": {"__data__": {"id_": "53e2ecb7-130f-4d60-9175-a0ebe43e8e34", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29ce92f9-9155-4c64-99f7-8f82ed2f0c63", "node_type": "1", "metadata": {}, "hash": "20222007dbab4dbce54b9d03f5719c7757273d2b7bbe1f7758e9ad47cdb408f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edaa2893-4940-4994-8b7e-2c597655f043", "node_type": "1", "metadata": {}, "hash": "8add82a6a83dab10cef45dd7ded70b437d2c7d4e97be55893b9753a0ac309046", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}}, "hash": "cdbb4ee47b7da407e7a977bd8d24a9a33d0b62ffbcdffad5c882ac1e2797695d", "text": "45\u201348.\n[127] V . Nguyen, T. D. Nguyen, T. Le, S. Venkatesh, and D. Phung,\n\u201cOne-pass logistic regression for label-drift and large-scale clas-\n\n18\nsi\ufb01cation on distributed systems,\u201d in Proc. 16th Int. Conf. Data\nMining , 2016, Conference Proceedings, pp. 1113\u20131118.", "start_char_idx": 233, "end_char_idx": 497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edaa2893-4940-4994-8b7e-2c597655f043": {"__data__": {"id_": "edaa2893-4940-4994-8b7e-2c597655f043", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53e2ecb7-130f-4d60-9175-a0ebe43e8e34", "node_type": "1", "metadata": {}, "hash": "cdbb4ee47b7da407e7a977bd8d24a9a33d0b62ffbcdffad5c882ac1e2797695d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "143182ef-ddfb-4560-a032-705e6fde4139", "node_type": "1", "metadata": {}, "hash": "b98dbbecff3b41b26fc7062aefffd8bce3d11757d37975644d0e14e8d97ea3fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}}, "hash": "8add82a6a83dab10cef45dd7ded70b437d2c7d4e97be55893b9753a0ac309046", "text": "Data\nMining , 2016, Conference Proceedings, pp. 1113\u20131118.\n[128] W. Chu, M. Zinkevich, L. Li, A. Thomas, and B. Tseng, \u201cUnbi-\nased online active learning in data streams,\u201d in Proc. 17th ACM\nSIGKDD Int. Conf. Knowledge Discovery and Data Mining . San\nDiego, California, USA: ACM, 2011, Conference Paper, pp. 195\u2013\n203.", "start_char_idx": 439, "end_char_idx": 755, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "143182ef-ddfb-4560-a032-705e6fde4139": {"__data__": {"id_": "143182ef-ddfb-4560-a032-705e6fde4139", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edaa2893-4940-4994-8b7e-2c597655f043", "node_type": "1", "metadata": {}, "hash": "8add82a6a83dab10cef45dd7ded70b437d2c7d4e97be55893b9753a0ac309046", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e787cfd-c004-46ba-b116-aeac1d32dd56", "node_type": "1", "metadata": {}, "hash": "bfa597ec1596742b989e5baee61f1087394883f38e68e21d4cc3df858c4ec8fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}}, "hash": "b98dbbecff3b41b26fc7062aefffd8bce3d11757d37975644d0e14e8d97ea3fd", "text": "195\u2013\n203.\n[129] G. Ditzler and R. Polikar, \u201cSemi-supervised learning in non-\nstationary environments,\u201d in Proc. 2011 Int. Joint Conf. Neural\nNetworks , 2011, Conference Proceedings, pp. 2741\u20132748.", "start_char_idx": 746, "end_char_idx": 942, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e787cfd-c004-46ba-b116-aeac1d32dd56": {"__data__": {"id_": "7e787cfd-c004-46ba-b116-aeac1d32dd56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "143182ef-ddfb-4560-a032-705e6fde4139", "node_type": "1", "metadata": {}, "hash": "b98dbbecff3b41b26fc7062aefffd8bce3d11757d37975644d0e14e8d97ea3fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b40c0a5-7d80-4308-8e21-dd8fecade17a", "node_type": "1", "metadata": {}, "hash": "fe7bcfea85cceac71997167417df07e9e00b74f26e52fd36be73f6c026bcc616", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}}, "hash": "bfa597ec1596742b989e5baee61f1087394883f38e68e21d4cc3df858c4ec8fd", "text": "2741\u20132748.\n[130] M. J. Hosseini, A. Gholipour, and H. Beigy, \u201cAn ensemble\nof cluster-based classi\ufb01ers for semi-supervised classi\ufb01cation of\nnon-stationary data streams,\u201d Knowledge and Information Systems ,\nvol. 46, no. 3, pp. 567\u2013597, 2015.\n[131] P .", "start_char_idx": 932, "end_char_idx": 1181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b40c0a5-7d80-4308-8e21-dd8fecade17a": {"__data__": {"id_": "2b40c0a5-7d80-4308-8e21-dd8fecade17a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e787cfd-c004-46ba-b116-aeac1d32dd56", "node_type": "1", "metadata": {}, "hash": "bfa597ec1596742b989e5baee61f1087394883f38e68e21d4cc3df858c4ec8fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "061cf19f-4851-4338-b880-7c346585665a", "node_type": "1", "metadata": {}, "hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "class_name": "RelatedNodeInfo"}}, "hash": "fe7bcfea85cceac71997167417df07e9e00b74f26e52fd36be73f6c026bcc616", "text": "3, pp. 567\u2013597, 2015.\n[131] P . Zhang, X. Zhu, J. Tan, and L. Guo, \u201cClassi\ufb01er and cluster\nensembles for mining concept drifting data streams,\u201d in Proc.\n10th Int. Conf. Data Mining , 2010, Conference Proceedings, pp.\n1175\u20131180.", "start_char_idx": 1150, "end_char_idx": 1376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cdde2dc-4363-47f0-ab09-47253342e4cc": {"__data__": {"id_": "0cdde2dc-4363-47f0-ab09-47253342e4cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0", "node_type": "1", "metadata": {}, "hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0", "node_type": "1", "metadata": {}, "hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "class_name": "RelatedNodeInfo"}}, "hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "text": "Data Mining , 2010, Conference Proceedings, pp.\n1175\u20131180.\n[132] S. Chandra, A. Haque, L. Khan, and C. Aggarwal, \u201cAn adaptive\nframework for multistream classi\ufb01cation,\u201d in Proc. 25th ACM Int.\non Conf. Information and Knowledge Management . Indianapolis,\nIndiana, USA: ACM, 2016, Conference Paper, pp. 1181\u20131190.", "start_char_idx": 0, "end_char_idx": 310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e67b4801-9484-4dc0-96ad-cfe1f18c8dd4": {"__data__": {"id_": "e67b4801-9484-4dc0-96ad-cfe1f18c8dd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c70222fb-2a36-436f-8c3e-00d9002feab5", "node_type": "1", "metadata": {}, "hash": "4778f6465655bd91f40c23e0e746307d870530b0a3fdeb8ec5eb8e57826dfe2e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}}, "hash": "0249d50abb9fc850abaee1a9e7348052e17bc3570b06d28995f03c7894c8215d", "text": "1181\u20131190.\n[133] A. Haque, L. Khan, M. Baron, B. Thuraisingham, and C. Aggar-\nwal, \u201cEf\ufb01cient handling of concept drift and concept evolution\nover stream data,\u201d in Proc. 32nd Int. Conf. Data Engineering , 2003,\nConference Proceedings, pp. 481\u2013492.", "start_char_idx": 0, "end_char_idx": 246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c70222fb-2a36-436f-8c3e-00d9002feab5": {"__data__": {"id_": "c70222fb-2a36-436f-8c3e-00d9002feab5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e67b4801-9484-4dc0-96ad-cfe1f18c8dd4", "node_type": "1", "metadata": {}, "hash": "0249d50abb9fc850abaee1a9e7348052e17bc3570b06d28995f03c7894c8215d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "119219ef-12ed-4523-b337-cef03a4cf927", "node_type": "1", "metadata": {}, "hash": "ab87ba8a6c859bbf1851f786a2e767e21d1c89cef64e55b3030666fdb2971e68", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}}, "hash": "4778f6465655bd91f40c23e0e746307d870530b0a3fdeb8ec5eb8e57826dfe2e", "text": "Conf. Data Engineering , 2003,\nConference Proceedings, pp. 481\u2013492.\n[134] A. Haque, L. Khan, and M. Baron, \u201cSand: Semi-supervised adap-\ntive novel class detection and classi\ufb01cation over data stream,\u201d in\n30th AAAI Conf. Arti\ufb01cial Intelligence , 2016, Conference Proceed-\nings, pp. 1652\u20131658.", "start_char_idx": 179, "end_char_idx": 469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "119219ef-12ed-4523-b337-cef03a4cf927": {"__data__": {"id_": "119219ef-12ed-4523-b337-cef03a4cf927", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c70222fb-2a36-436f-8c3e-00d9002feab5", "node_type": "1", "metadata": {}, "hash": "4778f6465655bd91f40c23e0e746307d870530b0a3fdeb8ec5eb8e57826dfe2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "081054ee-1681-4c38-977a-2a8419734e4e", "node_type": "1", "metadata": {}, "hash": "f748a4621d3db5b60067e6444a5129e95a5e5959ce9b1e83ff1ff5378870018e", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}}, "hash": "ab87ba8a6c859bbf1851f786a2e767e21d1c89cef64e55b3030666fdb2971e68", "text": "1652\u20131658.\n[135] T. Le, F. Stahl, M. M. Gaber, J. B. Gomes, and G. D. Fatta, \u201cOn\nexpressiveness and uncertainty awareness in rule-based classi\ufb01-\ncation for data streams,\u201d Neurocomputing , vol. 265, pp. 127\u2013141,\n2017.\n[136] J. Cendrowska, \u201cPrism: An algorithm for inducing modular\nrules,\u201d Int. J. Man Mach. Stud. , vol. 27, no.", "start_char_idx": 459, "end_char_idx": 785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "081054ee-1681-4c38-977a-2a8419734e4e": {"__data__": {"id_": "081054ee-1681-4c38-977a-2a8419734e4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "119219ef-12ed-4523-b337-cef03a4cf927", "node_type": "1", "metadata": {}, "hash": "ab87ba8a6c859bbf1851f786a2e767e21d1c89cef64e55b3030666fdb2971e68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dec5ccf3-dd6b-46bb-80a1-1da492d3aa0c", "node_type": "1", "metadata": {}, "hash": "f785f692cbde6d6dfdccb3fac790f8ac1e83e955e1bca5ab89014ae1d6205472", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}}, "hash": "f748a4621d3db5b60067e6444a5129e95a5e5959ce9b1e83ff1ff5378870018e", "text": "J. Man Mach. Stud. , vol. 27, no. 4, pp. 349\u2013370, 1987.\n[137] M. Pratama, S. G. Anavatti, M. Joo, and E. D. Lughofer, \u201cpclass:\nAn effective classi\ufb01er for streaming examples,\u201d IEEE Trans. Fuzzy\nSyst. , vol. 23, no. 2, pp. 369\u2013386, 2015.\n[138] Y.-R. Yeh and Y.-C.", "start_char_idx": 752, "end_char_idx": 1013, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dec5ccf3-dd6b-46bb-80a1-1da492d3aa0c": {"__data__": {"id_": "dec5ccf3-dd6b-46bb-80a1-1da492d3aa0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "081054ee-1681-4c38-977a-2a8419734e4e", "node_type": "1", "metadata": {}, "hash": "f748a4621d3db5b60067e6444a5129e95a5e5959ce9b1e83ff1ff5378870018e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99aacfaf-ddc2-486b-8846-dd49c5609382", "node_type": "1", "metadata": {}, "hash": "b2b5c289fb16bf55895ab706880674733cedd40d982ae0fa83c2c00b098e7985", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}}, "hash": "f785f692cbde6d6dfdccb3fac790f8ac1e83e955e1bca5ab89014ae1d6205472", "text": "[138] Y.-R. Yeh and Y.-C. F. Wang, \u201cA rank-one update method for least\nsquares linear discriminant analysis with concept drift,\u201d Pattern\nRecognit. , vol. 46, no. 5, pp. 1267\u20131276, 2013.\n[139] R. C. Cavalcante, L. L. Minku, and A. L. I. Oliveira, \u201cFedd: Fea-\nture extraction for explicit concept drift detection in time series,\u201d\ninProc. 2016 Int.", "start_char_idx": 988, "end_char_idx": 1333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99aacfaf-ddc2-486b-8846-dd49c5609382": {"__data__": {"id_": "99aacfaf-ddc2-486b-8846-dd49c5609382", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dec5ccf3-dd6b-46bb-80a1-1da492d3aa0c", "node_type": "1", "metadata": {}, "hash": "f785f692cbde6d6dfdccb3fac790f8ac1e83e955e1bca5ab89014ae1d6205472", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "887429f5-c9a2-4122-863f-4c37531d3f24", "node_type": "1", "metadata": {}, "hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "class_name": "RelatedNodeInfo"}}, "hash": "b2b5c289fb16bf55895ab706880674733cedd40d982ae0fa83c2c00b098e7985", "text": "2016 Int. Joint Conf. Neural Networks , 2016, Conference\nProceedings, pp.", "start_char_idx": 1324, "end_char_idx": 1397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52016b04-4c70-47d4-9d2c-e7c2538f4c63": {"__data__": {"id_": "52016b04-4c70-47d4-9d2c-e7c2538f4c63", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c455c1e8-4309-4815-80d0-4ee929c020fa", "node_type": "1", "metadata": {}, "hash": "f9a035e1b59729012a615e1ca2309056f71ea548a29531ba7b1b72af090d5b6f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}}, "hash": "8e26eed09201e53461e5ca168fabc14d5307574c70d22039b18a850ffdd51116", "text": "Joint Conf. Neural Networks , 2016, Conference\nProceedings, pp. 740\u2013747.\n[140] M. Pratama, J. Lu, E. Lughofer, G. Zhang, and S. Anavatti, \u201cScaf-\nfolding type-2 classi\ufb01er for incremental learning under concept\ndrifts,\u201d Neurocomputing , vol. 191, pp. 304\u2013329, 2016.", "start_char_idx": 0, "end_char_idx": 263, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c455c1e8-4309-4815-80d0-4ee929c020fa": {"__data__": {"id_": "c455c1e8-4309-4815-80d0-4ee929c020fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52016b04-4c70-47d4-9d2c-e7c2538f4c63", "node_type": "1", "metadata": {}, "hash": "8e26eed09201e53461e5ca168fabc14d5307574c70d22039b18a850ffdd51116", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0b22db5-c229-4aac-9050-b9db66700a80", "node_type": "1", "metadata": {}, "hash": "10cb88290a4d3cceb68ecd24e61f59609f7b5467c49ef73f3d5a901e18d8cc23", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}}, "hash": "f9a035e1b59729012a615e1ca2309056f71ea548a29531ba7b1b72af090d5b6f", "text": "191, pp. 304\u2013329, 2016.\nJie Lu is a Distinguished Professor, Director of\nCentre for Arti\ufb01cial Intelligence, and Associate\nDean Research with in the Faculty of Engineer-\ning and Information Technology at the University\nof Technology Sydney. Her research interests lie\nin the area of decision support systems, concept\ndrift, fuzzy transfer learning, and recommender\nsystems. She has published 10 research books\nand 400 papers, won 8 Australian Research\nCouncil discovery grants and 20 other grants.", "start_char_idx": 240, "end_char_idx": 736, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0b22db5-c229-4aac-9050-b9db66700a80": {"__data__": {"id_": "b0b22db5-c229-4aac-9050-b9db66700a80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c455c1e8-4309-4815-80d0-4ee929c020fa", "node_type": "1", "metadata": {}, "hash": "f9a035e1b59729012a615e1ca2309056f71ea548a29531ba7b1b72af090d5b6f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63646112-5667-45d1-aa8b-5aede7171646", "node_type": "1", "metadata": {}, "hash": "2b964bfec8409127b650e89cec2e2c1783c4a01a4f286377b623164cc7f9354d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}}, "hash": "10cb88290a4d3cceb68ecd24e61f59609f7b5467c49ef73f3d5a901e18d8cc23", "text": "She serves as Editor-In-Chief for KBS and IJCIS,\nand delivered 16 keynotes in international conferences.\nAnjin Liu is a Postdoctoral Research Associate\nin the A/DRsch Centre for Arti\ufb01cial Intelligence,\nFaculty of Engineering and Information Technol-\nogy, University of Technology Sydney. He re-\nceived the BIT degree (Honour) at the Univer-\nsity of Sydney in 2012.", "start_char_idx": 737, "end_char_idx": 1101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63646112-5667-45d1-aa8b-5aede7171646": {"__data__": {"id_": "63646112-5667-45d1-aa8b-5aede7171646", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0b22db5-c229-4aac-9050-b9db66700a80", "node_type": "1", "metadata": {}, "hash": "10cb88290a4d3cceb68ecd24e61f59609f7b5467c49ef73f3d5a901e18d8cc23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59092e12-9918-4a9d-8590-08b864b5bfab", "node_type": "1", "metadata": {}, "hash": "02eb94cb20e647a70b86b0b88c4f30db29292f3f43c563b1df376905308e68ba", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}}, "hash": "2b964bfec8409127b650e89cec2e2c1783c4a01a4f286377b623164cc7f9354d", "text": "His research interests\ninclude concept drift detection, adaptive data\nstream learning, multi-stream learning, machine\nlearning and big data analytics\nFan Dong is Research Fellow of Centre for\nArti\ufb01cial Intelligence, University of Technology\nSydney. He received the dual Ph.D. degree from\nUniversity of Technology Sydney and Beijing In-\nstitute of Technology in 2018. His research in-\nterests include concept drift detection, adaptive\nlearning under concept drift and data stream\nmining.\nFeng Gu is a Ph.D.", "start_char_idx": 1102, "end_char_idx": 1607, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59092e12-9918-4a9d-8590-08b864b5bfab": {"__data__": {"id_": "59092e12-9918-4a9d-8590-08b864b5bfab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63646112-5667-45d1-aa8b-5aede7171646", "node_type": "1", "metadata": {}, "hash": "2b964bfec8409127b650e89cec2e2c1783c4a01a4f286377b623164cc7f9354d", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "node_type": "1", "metadata": {}, "hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "class_name": "RelatedNodeInfo"}}, "hash": "02eb94cb20e647a70b86b0b88c4f30db29292f3f43c563b1df376905308e68ba", "text": "Feng Gu is a Ph.D. candidate at the Faculty\nof Engineering and Information Technology, the\nUniversity of Technology Sydney, NSW, Aus-\ntralia. He received bachelors degree of soft-\nware engineering at Zhejiang University, China,\nin 2012. His research interests include stream\ndata mining, adaptive learning under concept\ndrift and evolving data.\nJo\u02dcao Gama is an Associate Professor at the\nUniversity of Porto, Portugal.", "start_char_idx": 1589, "end_char_idx": 2008, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d7c066a-606e-4f19-891d-1b83ce1cea6c": {"__data__": {"id_": "6d7c066a-606e-4f19-891d-1b83ce1cea6c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ba1f78c-2f58-4007-8836-f6a66c3d33d1", "node_type": "1", "metadata": {}, "hash": "4b5884f36c1d684203be4edef8bae343e016682abaf488caf48149f6d0c15ea1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}}, "hash": "e898898c65f4b913cd8f614ed5df19dc1d1f8556be1b9a54a3407b3999769457", "text": "Jo\u02dcao Gama is an Associate Professor at the\nUniversity of Porto, Portugal. He is also a senior\nresearcher and member of the board of directors\nof the Laboratory of Arti\ufb01cial Intelligence and\nDecision Support (LIAAD), a group belonging\nto INESC Porto. He serves as the member of\nthe Editorial Board of Machine Learning Journal,\nData Mining and Knowledge Discovery, Intelli-\ngent Data Analysis and New Generation Com-\nputing. His main research interest is in knowl-\nedge discovery from data streams and evolving\ndata.", "start_char_idx": 0, "end_char_idx": 515, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ba1f78c-2f58-4007-8836-f6a66c3d33d1": {"__data__": {"id_": "4ba1f78c-2f58-4007-8836-f6a66c3d33d1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d7c066a-606e-4f19-891d-1b83ce1cea6c", "node_type": "1", "metadata": {}, "hash": "e898898c65f4b913cd8f614ed5df19dc1d1f8556be1b9a54a3407b3999769457", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "514c6494-afdb-448d-b909-f4d7271be72a", "node_type": "1", "metadata": {}, "hash": "55b7d0bd53a56245107afde3e6722fcae3e29de04703e16285e2ee79b2da25c1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}}, "hash": "4b5884f36c1d684203be4edef8bae343e016682abaf488caf48149f6d0c15ea1", "text": "His main research interest is in knowl-\nedge discovery from data streams and evolving\ndata. He has published more than 200 papers and a recent book on\nKnowledge Discovery from Data Streams. He has extensive publications\nin the area of data stream learning.\nGuangquan Zhang is an Associate Professor,\nand the Director of Decision System and e-\nService Intelligence (DeSI) lab with in the Centre\nfor Arti\ufb01cial Intelligence, in the Faculty of Engi-\nneering and Information Technology at the Uni-\nversity of Technology Sydney.", "start_char_idx": 424, "end_char_idx": 946, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "514c6494-afdb-448d-b909-f4d7271be72a": {"__data__": {"id_": "514c6494-afdb-448d-b909-f4d7271be72a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ba1f78c-2f58-4007-8836-f6a66c3d33d1", "node_type": "1", "metadata": {}, "hash": "4b5884f36c1d684203be4edef8bae343e016682abaf488caf48149f6d0c15ea1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85caeb35-23b1-44f2-ba5e-616266c9529f", "node_type": "1", "metadata": {}, "hash": "314eac99dd88f1f0fd63ab558452dd4afcfcd9971934d02d2d0c0b83d74d8a12", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}}, "hash": "55b7d0bd53a56245107afde3e6722fcae3e29de04703e16285e2ee79b2da25c1", "text": "His main research\ninterests lie in the area of uncertain information\nprocessing, fuzzy decision making, concept drift\nand fuzzy transfer learning. He has published\n4 monographs and over 400 papers in refer-\need journals, conference proceedings and book\nchapters. He has won 7 Australian Research Council discovery grants\nand guest edited many special issues for international journals.\n\nLive Metrics: Monitor and diagnose with 1-\nsecond latency\nArticle \u202208/11/2023\nMonitor your live, in-production web application by using Live Metrics (also known as QuickPulse) from\nApplication Insights .", "start_char_idx": 947, "end_char_idx": 1537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85caeb35-23b1-44f2-ba5e-616266c9529f": {"__data__": {"id_": "85caeb35-23b1-44f2-ba5e-616266c9529f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "514c6494-afdb-448d-b909-f4d7271be72a", "node_type": "1", "metadata": {}, "hash": "55b7d0bd53a56245107afde3e6722fcae3e29de04703e16285e2ee79b2da25c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47078f24-35b5-4877-a4b0-b5723e3975d2", "node_type": "1", "metadata": {}, "hash": "1effe649257b02d9187eaf1813f46df72f9b90c05c32f3a5c0bf5b1eb93ced32", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}}, "hash": "314eac99dd88f1f0fd63ab558452dd4afcfcd9971934d02d2d0c0b83d74d8a12", "text": "You can select and filter metrics and performance counters to watch in real time,\nwithout any disturbance to your service. Y ou can also inspect stack traces from sample failed requests\nand exceptions. T ogether with Profiler  and Snapshot Debugger , Live Metrics provides a powerful and\nnoninvasive diagnostic tool for your live website.\nWith Live Metrics, you can:\nValidate a fix while it's released by watching performance and failure counts.\nWatch the effect of test loads and diagnose issues live.\nFocus on particular test sessions or filter out known issues by selecting and filtering the metrics you\nwant to watch.\nGet exception traces as they happen.", "start_char_idx": 1538, "end_char_idx": 2196, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47078f24-35b5-4877-a4b0-b5723e3975d2": {"__data__": {"id_": "47078f24-35b5-4877-a4b0-b5723e3975d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85caeb35-23b1-44f2-ba5e-616266c9529f", "node_type": "1", "metadata": {}, "hash": "314eac99dd88f1f0fd63ab558452dd4afcfcd9971934d02d2d0c0b83d74d8a12", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "1818727a-8d16-4427-b43b-67ac4c435ba3", "node_type": "1", "metadata": {}, "hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "class_name": "RelatedNodeInfo"}}, "hash": "1effe649257b02d9187eaf1813f46df72f9b90c05c32f3a5c0bf5b1eb93ced32", "text": "Get exception traces as they happen.\nExperiment with filters to find the most relevant KPIs.\nMonitor any Windows performance counter live.\nEasily identify a server that's having issues and filter all the KPI/live feed to just that server.", "start_char_idx": 2160, "end_char_idx": 2398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "224ecdec-ba1c-424a-9a63-eae8150d8f57": {"__data__": {"id_": "224ecdec-ba1c-424a-9a63-eae8150d8f57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7c6172c-f875-48ff-be5d-0112297dbed1", "node_type": "1", "metadata": {}, "hash": "bdedae9c9d15293e8c95a416ceca3315a095aae0ad0d9d8183c5ac1f7379a491", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}}, "hash": "e148c70f2d36df24b6f8ad314ffc7666b8652c6f90b0848f2923eaf017aaeed7", "text": "Live Metrics is currently supported for ASP.NET, ASP.NET Core, Azure Functions, Java, and Node.js apps.\uff17 Note\nLive Metrics only supports TLS 1.2. For more information, see Troubleshooting .\n\uf80a\n\uff17 Note\n\n1. Follow language-specific guidelines to enable Live Metrics:\nASP.NET : Live Metrics is enabled by default.\nASP.NET Core : Live Metrics is enabled by default.\n.NET/.NET Core Console/W orker : Live Metrics is enabled by default.\n.NET Applications: Enable using code .\nJava: Live Metrics is enabled by default.\nNode.js\n2.", "start_char_idx": 0, "end_char_idx": 520, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7c6172c-f875-48ff-be5d-0112297dbed1": {"__data__": {"id_": "f7c6172c-f875-48ff-be5d-0112297dbed1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "224ecdec-ba1c-424a-9a63-eae8150d8f57", "node_type": "1", "metadata": {}, "hash": "e148c70f2d36df24b6f8ad314ffc7666b8652c6f90b0848f2923eaf017aaeed7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "022f46ac-061f-470f-9ce1-11830f6c4f68", "node_type": "1", "metadata": {}, "hash": "14685b78b85d4c5aa0d2d3c3ebc99dfbd239c5e56df70fb8cbb6c997e9dbf54a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}}, "hash": "bdedae9c9d15293e8c95a416ceca3315a095aae0ad0d9d8183c5ac1f7379a491", "text": "Java: Live Metrics is enabled by default.\nNode.js\n2. In the Azure portal , open the Application Insights resource for your app. Then open Live S tream.\n3. Secure the control channel  if you might use sensitive data like customer names in your filters.\nTo manually configure Live Metrics:\n1. Install the NuGet package Microsoft.ApplicationInsights.P erfCounterCollector .\n2. The following sample console app code shows setting up Live Metrics:The number of monitored server instances displayed by Live Metrics might be lower than the actual\nnumber of instances allocated for the application.", "start_char_idx": 468, "end_char_idx": 1058, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "022f46ac-061f-470f-9ce1-11830f6c4f68": {"__data__": {"id_": "022f46ac-061f-470f-9ce1-11830f6c4f68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7c6172c-f875-48ff-be5d-0112297dbed1", "node_type": "1", "metadata": {}, "hash": "bdedae9c9d15293e8c95a416ceca3315a095aae0ad0d9d8183c5ac1f7379a491", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33caff6d-abc7-41ad-aa10-bd37b07cb419", "node_type": "1", "metadata": {}, "hash": "6a631d048df7268d002bfbb5e68a5652f8bba6d19ebd4ffac2a05b7f4fec8d5a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}}, "hash": "14685b78b85d4c5aa0d2d3c3ebc99dfbd239c5e56df70fb8cbb6c997e9dbf54a", "text": "This mismatch is because many modern web\nservers will unload applications that don't receive requests over a period of time to conserve\nresources. Because Live Metrics only counts servers that are currently running the application,\nservers that have already unloaded the process won't be included in that total.\nGet started\n\uff09 Impor tant\nTo enable Application Insights, ensure that it's activated in the Azure portal and your app is using a\nrecent version of the Application Insights  NuGet package. Without the NuGet package, some\ntelemetry is sent to Application Insights, but that telemetry won't show in Live Metrics.", "start_char_idx": 1059, "end_char_idx": 1679, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33caff6d-abc7-41ad-aa10-bd37b07cb419": {"__data__": {"id_": "33caff6d-abc7-41ad-aa10-bd37b07cb419", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "022f46ac-061f-470f-9ce1-11830f6c4f68", "node_type": "1", "metadata": {}, "hash": "14685b78b85d4c5aa0d2d3c3ebc99dfbd239c5e56df70fb8cbb6c997e9dbf54a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "b13fcdee-3284-4435-8c91-eeede1e1019c", "node_type": "1", "metadata": {}, "hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "class_name": "RelatedNodeInfo"}}, "hash": "6a631d048df7268d002bfbb5e68a5652f8bba6d19ebd4ffac2a05b7f4fec8d5a", "text": "\uff17 Note\nOn March 31, 2025, support for instrumentation key ingestion will end. Instrumentation key\ningestion will continue to work, but we'll no longer provide updates or support for the feature.\nTransition t o connection strings  to take advantage of new cap abilities .\nEnable Live Metrics by using code for any .NET application\n\uff17 Note\nLive Metrics is enabled by default when you onboard it by using the recommended instructions for\n.NET applications.", "start_char_idx": 1680, "end_char_idx": 2132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f521dd4-71db-4575-8028-90af88df0807": {"__data__": {"id_": "2f521dd4-71db-4575-8028-90af88df0807", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5f52ff2-4895-416a-a9e7-92222aeb2d2d", "node_type": "1", "metadata": {}, "hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e5f52ff2-4895-416a-a9e7-92222aeb2d2d", "node_type": "1", "metadata": {}, "hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "class_name": "RelatedNodeInfo"}}, "hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "text": "C#\nThe preceding sample is for a console app, but the same code can be used in any .NET applications. If\nany other telemetry modules are enabled to autocollect telemetry, it's important to ensure that the same\nconfiguration used for initializing those modules is used for the Live Metrics module..NET 6.0+\nusing Microsoft.ApplicationInsights;\nusing Microsoft.ApplicationInsights.Extensibility;\nusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n// Create a TelemetryConfiguration instance.", "start_char_idx": 0, "end_char_idx": 521, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "271a330f-407b-4c6c-91c7-d61c9ee679f9": {"__data__": {"id_": "271a330f-407b-4c6c-91c7-d61c9ee679f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "565be5de-f563-4cf8-a2f9-313311c80ec9", "node_type": "1", "metadata": {}, "hash": "4e12acfae832831572b40916d9e842aabc80fef610c14ba1155de9a310060a05", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}}, "hash": "7ecd2d1b0184b9c5e1e069085b51c0295ae4d665622aabe685ed8406ae87b827", "text": "TelemetryConfiguration config = TelemetryConfiguration.CreateDefault();\nconfig.InstrumentationKey = \"INSTRUMENTATION-KEY-HERE\" ;\nQuickPulseTelemetryProcessor quickPulseProcessor = null;\nconfig.DefaultTelemetrySink.TelemetryProcessorChainBuilder\n    .Use((next) =>\n    {\n        quickPulseProcessor = new QuickPulseTelemetryProcessor(next);\n        return quickPulseProcessor;\n    })\n    .Build();\nvar quickPulseModule = new QuickPulseTelemetryModule();\n// Secure the control channel.\n// This is optional, but recommended.", "start_char_idx": 0, "end_char_idx": 521, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "565be5de-f563-4cf8-a2f9-313311c80ec9": {"__data__": {"id_": "565be5de-f563-4cf8-a2f9-313311c80ec9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "271a330f-407b-4c6c-91c7-d61c9ee679f9", "node_type": "1", "metadata": {}, "hash": "7ecd2d1b0184b9c5e1e069085b51c0295ae4d665622aabe685ed8406ae87b827", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba0d620a-34ca-41a8-b09e-5c46a94b7f39", "node_type": "1", "metadata": {}, "hash": "7de503e1b7ec91465d4b3a291991a694fc4e50ed242c7cf97cc2a592ac8a54b0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}}, "hash": "4e12acfae832831572b40916d9e842aabc80fef610c14ba1155de9a310060a05", "text": "// This is optional, but recommended.\nquickPulseModule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" ;\nquickPulseModule.Initialize(config);\nquickPulseModule.RegisterTelemetryProcessor(quickPulseProcessor);\n// Create a TelemetryClient instance. It is important\n// to use the same TelemetryConfiguration here as the one\n// used to set up Live Metrics.\nTelemetryClient client = new TelemetryClient(config);\n// This sample runs indefinitely. Replace with actual application logic.\nwhile (true)\n{\n    // Send dependency and request telemetry.\n    // These will be shown in Live Metrics.", "start_char_idx": 484, "end_char_idx": 1062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba0d620a-34ca-41a8-b09e-5c46a94b7f39": {"__data__": {"id_": "ba0d620a-34ca-41a8-b09e-5c46a94b7f39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "565be5de-f563-4cf8-a2f9-313311c80ec9", "node_type": "1", "metadata": {}, "hash": "4e12acfae832831572b40916d9e842aabc80fef610c14ba1155de9a310060a05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4307899f-093f-4bf0-8bcc-510368ee82fc", "node_type": "1", "metadata": {}, "hash": "b459c99e8c2dd4d806a84cd97d3d7cbe46733afa58d7afe6c05cd8755c8346da", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}}, "hash": "7de503e1b7ec91465d4b3a291991a694fc4e50ed242c7cf97cc2a592ac8a54b0", "text": "// These will be shown in Live Metrics.\n    // CPU/Memory Performance counter is also shown\n    // automatically without any additional steps.\n    client.TrackDependency( \"My dependency\" , \"target\" , \"http://sample\" ,\n        DateTimeOffset.Now, TimeSpan.FromMilliseconds( 300), true);\n    client.TrackRequest( \"My Request\" , DateTimeOffset.Now,\n        TimeSpan.FromMilliseconds( 230), \"200\", true);\n    Task.Delay( 1000).Wait();\n}\nHow does Live Metrics differ from metrics explorer\nand Log Analytics?", "start_char_idx": 1023, "end_char_idx": 1525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4307899f-093f-4bf0-8bcc-510368ee82fc": {"__data__": {"id_": "4307899f-093f-4bf0-8bcc-510368ee82fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba0d620a-34ca-41a8-b09e-5c46a94b7f39", "node_type": "1", "metadata": {}, "hash": "7de503e1b7ec91465d4b3a291991a694fc4e50ed242c7cf97cc2a592ac8a54b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8964e9cb-c2ae-443b-8e46-24e6aa6f3400", "node_type": "1", "metadata": {}, "hash": "63632f911c8705280ab5fd10ff6e575bb20af159db5fb4c7ca62ffe8b1884930", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}}, "hash": "b459c99e8c2dd4d806a84cd97d3d7cbe46733afa58d7afe6c05cd8755c8346da", "text": "\uff89Expand table\n\nCapabilities Live Stream Metr ics explor er and Log Analy tics\nLatency Data displayed within one second. Aggregated over minutes.\nNo retention Data persists while it's on the chart and is then discarded. Data retained for 90 days.\nOn demand Data is only streamed while the Live Metrics pane is\nopen.Data is sent whenever the SDK is\ninstalled and enabled.\nFree There's no charge for Live S tream data. Subject to pricing .\nSampling All selected metrics and counters are transmitted. F ailures\nand stack traces are sampled.Events can be sampled .", "start_char_idx": 1526, "end_char_idx": 2085, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8964e9cb-c2ae-443b-8e46-24e6aa6f3400": {"__data__": {"id_": "8964e9cb-c2ae-443b-8e46-24e6aa6f3400", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4307899f-093f-4bf0-8bcc-510368ee82fc", "node_type": "1", "metadata": {}, "hash": "b459c99e8c2dd4d806a84cd97d3d7cbe46733afa58d7afe6c05cd8755c8346da", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5", "node_type": "1", "metadata": {}, "hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "class_name": "RelatedNodeInfo"}}, "hash": "63632f911c8705280ab5fd10ff6e575bb20af159db5fb4c7ca62ffe8b1884930", "text": "F ailures\nand stack traces are sampled.Events can be sampled .\nControl\nchannelFilter control signals are sent to the SDK. W e recommend\nyou secure this channel.Communication is one way, to the\nportal.", "start_char_idx": 2023, "end_char_idx": 2223, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfd9b9b8-386d-4c6b-afb0-052c9bd1e8f4": {"__data__": {"id_": "bfd9b9b8-386d-4c6b-afb0-052c9bd1e8f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a05c137e-e96b-4d1c-b7ce-e0d9cd0b6999", "node_type": "1", "metadata": {}, "hash": "adade2dee394999b94741d7f7597fe6c5c1ce58485266af5b708b91391a790de", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}}, "hash": "9874214eb69c52b9eb8e811f42d96b55b13fb406643cd204b13a00098e025d3e", "text": "W e recommend\nyou secure this channel.Communication is one way, to the\nportal.\nThese capabilities are available with ASP.NET, ASP.NET Core, and Azure Functions (v2).\nYou can monitor custom KPI live by applying arbitrary filters on any Application Insights telemetry from\nthe portal. Select the filter control that shows when you mouse-over any of the charts. The following\nchart plots a custom Request  count KPI with filters on URL and Duration  attributes.", "start_char_idx": 0, "end_char_idx": 458, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a05c137e-e96b-4d1c-b7ce-e0d9cd0b6999": {"__data__": {"id_": "a05c137e-e96b-4d1c-b7ce-e0d9cd0b6999", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfd9b9b8-386d-4c6b-afb0-052c9bd1e8f4", "node_type": "1", "metadata": {}, "hash": "9874214eb69c52b9eb8e811f42d96b55b13fb406643cd204b13a00098e025d3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20ad5c14-7cdd-4520-b1a3-ccd98f4d5258", "node_type": "1", "metadata": {}, "hash": "8f873cd4237f4b67bec38b77829bf8cbfa5c0e262de44c9bf9c9177a66fcb48b", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}}, "hash": "adade2dee394999b94741d7f7597fe6c5c1ce58485266af5b708b91391a790de", "text": "V alidate your filters\nwith the stream preview section that shows a live feed of telemetry that matches the criteria you've\nspecified at any point in time.\nYou can monitor a value different from Count . The options depend on the type of stream, which could\nbe any Application Insights telemetry like requests, dependencies, exceptions, traces, events, or metrics.\nIt can also be your own custom measurement .Select and filter your metrics\n\uf80a\n\nAlong with Application Insights telemetry, you can also monitor any Windows performance counter.\nSelect it from the stream options and provide the name of the performance counter.", "start_char_idx": 459, "end_char_idx": 1080, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20ad5c14-7cdd-4520-b1a3-ccd98f4d5258": {"__data__": {"id_": "20ad5c14-7cdd-4520-b1a3-ccd98f4d5258", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a05c137e-e96b-4d1c-b7ce-e0d9cd0b6999", "node_type": "1", "metadata": {}, "hash": "adade2dee394999b94741d7f7597fe6c5c1ce58485266af5b708b91391a790de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "647ade5b-e48b-4ff5-88b5-9af529405bca", "node_type": "1", "metadata": {}, "hash": "a150741a26f96dc2e9cdd9b478a2a1882e9402fa7c940dc757787f0f9a42f5ad", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}}, "hash": "8f873cd4237f4b67bec38b77829bf8cbfa5c0e262de44c9bf9c9177a66fcb48b", "text": "Select it from the stream options and provide the name of the performance counter.\nLive Metrics are aggregated at two points: locally on each server and then across all servers. Y ou can\nchange the default at either one by selecting other options in the respective dropdown lists.\nBy default, the live feed of events shows samples of failed requests and dependency calls, exceptions,\nevents, and traces. Select the filter icon to see the applied criteria at any point in time.\nAs with metrics, you can specify any arbitrary criteria to any of the Application Insights telemetry types.\nIn this example, we're selecting specific request failures and events.", "start_char_idx": 998, "end_char_idx": 1653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "647ade5b-e48b-4ff5-88b5-9af529405bca": {"__data__": {"id_": "647ade5b-e48b-4ff5-88b5-9af529405bca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20ad5c14-7cdd-4520-b1a3-ccd98f4d5258", "node_type": "1", "metadata": {}, "hash": "8f873cd4237f4b67bec38b77829bf8cbfa5c0e262de44c9bf9c9177a66fcb48b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaf03444-b1ff-4534-86f7-c9ab1cdce027", "node_type": "1", "metadata": {}, "hash": "7a2f55228f902b5de2c460adf2dae8ff5d01387a99915c5ed701387d82808f91", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}}, "hash": "a150741a26f96dc2e9cdd9b478a2a1882e9402fa7c940dc757787f0f9a42f5ad", "text": "In this example, we're selecting specific request failures and events.\n\uf80a\nSample telemetry: Custom live diagnostic events\n\uf80a\n\uf80a\n\uff17 Note\n\nTo see the details of an item in the live feed, select it. Y ou can pause the feed either by selecting Pause  or\nby scrolling down and selecting an item. Live feed resumes after you scroll back to the top, or when you\nselect the counter of items collected while it was paused.\nIf you want to monitor a particular server role instance, you can filter by server.", "start_char_idx": 1583, "end_char_idx": 2076, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aaf03444-b1ff-4534-86f7-c9ab1cdce027": {"__data__": {"id_": "aaf03444-b1ff-4534-86f7-c9ab1cdce027", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "647ade5b-e48b-4ff5-88b5-9af529405bca", "node_type": "1", "metadata": {}, "hash": "a150741a26f96dc2e9cdd9b478a2a1882e9402fa7c940dc757787f0f9a42f5ad", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "888fe210-2bea-494c-938c-697d0feee64b", "node_type": "1", "metadata": {}, "hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "class_name": "RelatedNodeInfo"}}, "hash": "7a2f55228f902b5de2c460adf2dae8ff5d01387a99915c5ed701387d82808f91", "text": "If you want to monitor a particular server role instance, you can filter by server. T o filter, select the server\nname under Servers.Currently, for exception message-based criteria, use the outermost exception message.", "start_char_idx": 1993, "end_char_idx": 2211, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4baac2f7-d443-4120-8ff7-236b75532fc7": {"__data__": {"id_": "4baac2f7-d443-4120-8ff7-236b75532fc7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7abe026d-0927-4b47-8840-a8199cf0198c", "node_type": "1", "metadata": {}, "hash": "13b0462bb432afe87919ccc5bcc88c9d3b67549b3d9378b278a6a7a8c462e589", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}}, "hash": "59622896ce8f03ceabfca1ca8e2735d7bb20229f06c5b02dc86dbb0af008419b", "text": "In the\npreceding example, to filter out the benign exception with an inner exception message (follows the\n\"<--\" delimiter) \"The client disconnected,\" use a message not-contains \"Error reading request\ncontent\" criteria.\n\uf80a\nFilter by server instance\n\nLive Metrics custom filters allow you to control which of your application's telemetry is streamed to the\nLive Metrics view in the Azure portal. The filters criteria are sent to the apps that are instrumented with\nthe Application Insights SDK. The filter value could potentially contain sensitive information, such as the\ncustomer ID.", "start_char_idx": 0, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7abe026d-0927-4b47-8840-a8199cf0198c": {"__data__": {"id_": "7abe026d-0927-4b47-8840-a8199cf0198c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4baac2f7-d443-4120-8ff7-236b75532fc7", "node_type": "1", "metadata": {}, "hash": "59622896ce8f03ceabfca1ca8e2735d7bb20229f06c5b02dc86dbb0af008419b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fc86cb7-8248-4d8c-a595-bf66a81d5bb7", "node_type": "1", "metadata": {}, "hash": "db05b89af0c0c987ef2b1408ef5f48ed99f0c45846db49e1482e7e9cb75a5404", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}}, "hash": "13b0462bb432afe87919ccc5bcc88c9d3b67549b3d9378b278a6a7a8c462e589", "text": "The filter value could potentially contain sensitive information, such as the\ncustomer ID. T o keep this value secured and prevent potential disclosure to unauthorized applications,\nyou have two options:\nRecommended:  Secure the Live Metrics channel by using Microsoft Entra authentication .\nLegacy (no longer r ecommended):  Set up an authenticated channel by configuring a secret API\nkey as explained in the \"Legacy option\" section.\nIt's possible to try custom filters without having to set up an authenticated channel. Select any of the\nfilter icons and authorize the connected servers.", "start_char_idx": 492, "end_char_idx": 1081, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fc86cb7-8248-4d8c-a595-bf66a81d5bb7": {"__data__": {"id_": "1fc86cb7-8248-4d8c-a595-bf66a81d5bb7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7abe026d-0927-4b47-8840-a8199cf0198c", "node_type": "1", "metadata": {}, "hash": "13b0462bb432afe87919ccc5bcc88c9d3b67549b3d9378b278a6a7a8c462e589", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "409bb2c4-0948-4dd9-ba18-62418d783151", "node_type": "1", "metadata": {}, "hash": "4844c130bc43846fa37f81b4fd68f2b187d89aba622fb296dd2c04489de32a88", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}}, "hash": "db05b89af0c0c987ef2b1408ef5f48ed99f0c45846db49e1482e7e9cb75a5404", "text": "Select any of the\nfilter icons and authorize the connected servers. If you choose this option, you have to authorize the\n\uf80a\nSecure the control channel\n\uff17 Note\nOn September 30, 2025, API keys used to stream Live Metrics telemetry into Application Insights\nwill be retired. After that date, applications that use API keys won't be able to send Live Metrics data\nto your Application Insights resource. Authenticated telemetry ingestion for Live Metrics streaming\nto Application Insights will need to be done with Microsoft Entra authentication for Application\nInsights .", "start_char_idx": 1014, "end_char_idx": 1579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "409bb2c4-0948-4dd9-ba18-62418d783151": {"__data__": {"id_": "409bb2c4-0948-4dd9-ba18-62418d783151", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fc86cb7-8248-4d8c-a595-bf66a81d5bb7", "node_type": "1", "metadata": {}, "hash": "db05b89af0c0c987ef2b1408ef5f48ed99f0c45846db49e1482e7e9cb75a5404", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c2dedae-1518-4699-9ed5-cc53f7a37422", "node_type": "1", "metadata": {}, "hash": "d515a71f2e6acaa6921948b43619886045ba475be05e079103aa2732f473dd32", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}}, "hash": "4844c130bc43846fa37f81b4fd68f2b187d89aba622fb296dd2c04489de32a88", "text": "connected servers once every new session or whenever a new server comes online.\n1. Select the API Access  tab and then select Create API k ey.\n2. Select the Authenticat e SDK contr ol channel  checkbox and then select Generat e key.\uff12 Warning\nWe strongly discourage the use of unsecured channels and will disable this option six months after\nyou start using it. The Authorize connect ed ser vers dialog displays the date after which this option\nwill be disabled.", "start_char_idx": 1581, "end_char_idx": 2042, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c2dedae-1518-4699-9ed5-cc53f7a37422": {"__data__": {"id_": "6c2dedae-1518-4699-9ed5-cc53f7a37422", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "409bb2c4-0948-4dd9-ba18-62418d783151", "node_type": "1", "metadata": {}, "hash": "4844c130bc43846fa37f81b4fd68f2b187d89aba622fb296dd2c04489de32a88", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe", "node_type": "1", "metadata": {}, "hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "class_name": "RelatedNodeInfo"}}, "hash": "d515a71f2e6acaa6921948b43619886045ba475be05e079103aa2732f473dd32", "text": "The Authorize connect ed ser vers dialog displays the date after which this option\nwill be disabled.\n\uf80a\nLegacy option: Create an API key\n\uf80a\n\nYou can add an API key to configuration for ASP.NET, ASP.NET Core, W orkerService, and Azure Functions\napps.\nIn the Program.cs  file, add the following namespace:\nC#\nThen add the following service registration:\nC#\nFor more information on how to configure ASP.NET Core applications, see Configuring telemetry\nmodules in ASP.NET Core .", "start_char_idx": 1942, "end_char_idx": 2414, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a5533a9-6f4f-4618-be7e-d083062391a4": {"__data__": {"id_": "3a5533a9-6f4f-4618-be7e-d083062391a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "289b6d2d-9c43-4d17-a25f-adfa083110c0", "node_type": "1", "metadata": {}, "hash": "763a78b661b417005fa25581a0c16774789e12b427dad1b5b2cde97019b325c1", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}}, "hash": "2d08a0fc81078d9e9432479b330666ce20ccd46699e83abf9bc31cba73ff49ca", "text": "For WorkerService  applications, follow these instructions.\nAdd the following namespace:\n\uf80a\nAdd an API key to configuration\n.NET 6.0+\nusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n// Existing code which includes services.AddApplicationInsightsTelemetry() to enable \nApplication Insights.", "start_char_idx": 0, "end_char_idx": 323, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "289b6d2d-9c43-4d17-a25f-adfa083110c0": {"__data__": {"id_": "289b6d2d-9c43-4d17-a25f-adfa083110c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a5533a9-6f4f-4618-be7e-d083062391a4", "node_type": "1", "metadata": {}, "hash": "2d08a0fc81078d9e9432479b330666ce20ccd46699e83abf9bc31cba73ff49ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "979bd3a7-fcb5-4e5d-afc0-93d50aa7baef", "node_type": "1", "metadata": {}, "hash": "1ddc3ac44bcabeafb3eaf21fb25c2c16d93dc1a87d8ab30769ccd6527c0796b5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}}, "hash": "763a78b661b417005fa25581a0c16774789e12b427dad1b5b2cde97019b325c1", "text": "builder.Services.ConfigureTelemetryModule<QuickPulseTelemetryModule> ((module, o) => \nmodule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" );\nWorkerSer vice\n\nC#\nNext, add the following line before the call services.AddApplicationInsightsTelemetryWorkerService:\nC#\nFor more information on how to configure W orkerService applications, see Configuring telemetry\nmodules in W orkerServices .\nFor Azure Functions apps (v2), you can secure the channel with an API key by using an environment\nvariable.", "start_char_idx": 324, "end_char_idx": 817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "979bd3a7-fcb5-4e5d-afc0-93d50aa7baef": {"__data__": {"id_": "979bd3a7-fcb5-4e5d-afc0-93d50aa7baef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "289b6d2d-9c43-4d17-a25f-adfa083110c0", "node_type": "1", "metadata": {}, "hash": "763a78b661b417005fa25581a0c16774789e12b427dad1b5b2cde97019b325c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7cb51e4-fedd-49ee-9563-a93742d2b22e", "node_type": "1", "metadata": {}, "hash": "080c291fd4c2365b955c6ef125a4933616c8c6b4d69b32b643c042415e7702f6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}}, "hash": "1ddc3ac44bcabeafb3eaf21fb25c2c16d93dc1a87d8ab30769ccd6527c0796b5", "text": "Create an API key from within your Application Insights resource and go to Settings  > Configuration  for\nyour Azure Functions app. Select New application setting , enter a name of\nAPPINSIGHTS_QUICKPULSEAUTHAPIKEY, and enter a value that corresponds to your API key.\nLanguage Basic metr ics Performance\nmetr icsCustom\nfilteringSample\ntelemetr yCPU split by\nprocess\n.NET Framework Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)\n.NET Core (target=.", "start_char_idx": 818, "end_char_idx": 1293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7cb51e4-fedd-49ee-9563-a93742d2b22e": {"__data__": {"id_": "e7cb51e4-fedd-49ee-9563-a93742d2b22e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "979bd3a7-fcb5-4e5d-afc0-93d50aa7baef", "node_type": "1", "metadata": {}, "hash": "1ddc3ac44bcabeafb3eaf21fb25c2c16d93dc1a87d8ab30769ccd6527c0796b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3084b59a-95c1-420e-93ee-c6faa5b1d94f", "node_type": "1", "metadata": {}, "hash": "a79adcd077426eedb9c60fca4f5d368fdd31578df4b106d17634024b227f2b0f", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}}, "hash": "080c291fd4c2365b955c6ef125a4933616c8c6b4d69b32b643c042415e7702f6", "text": "NET Core (target=.NET\nFramework)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)Supported\n(LTS)\n.NET Core (target=.NET\nCore)Supported\n(LTS)Supported* Supported\n(LTS)Supported\n(LTS)Not suppor ted\nAzure Functions v2 Supported Supported Supported Supported Not suppor ted\nJava Supported\n(V2.0.0+)Supported\n(V2.0.0+)Not\nsuppor tedSupported\n(V3.2.0+)Not suppor ted\nNode.js Supported\n(V1.3.", "start_char_idx": 1275, "end_char_idx": 1671, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3084b59a-95c1-420e-93ee-c6faa5b1d94f": {"__data__": {"id_": "3084b59a-95c1-420e-93ee-c6faa5b1d94f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7cb51e4-fedd-49ee-9563-a93742d2b22e", "node_type": "1", "metadata": {}, "hash": "080c291fd4c2365b955c6ef125a4933616c8c6b4d69b32b643c042415e7702f6", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "node_type": "1", "metadata": {}, "hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "class_name": "RelatedNodeInfo"}}, "hash": "a79adcd077426eedb9c60fca4f5d368fdd31578df4b106d17634024b227f2b0f", "text": "2.0+)Not suppor ted\nNode.js Supported\n(V1.3.0+)Supported\n(V1.3.0+)Not\nsuppor tedSupported\n(V1.3.0+)Not suppor ted\nPython Not suppor ted Not suppor ted Not\nsuppor tedNot suppor ted Not suppor ted\nBasic metrics include request, dependency, and exception rate. P erformance metrics (performance\ncounters) include memory and CPU.", "start_char_idx": 1627, "end_char_idx": 1952, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecc1d12e-1ceb-4ab3-bd05-782a89dcbda7": {"__data__": {"id_": "ecc1d12e-1ceb-4ab3-bd05-782a89dcbda7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "292706ac-9541-457a-adf1-75cedb1e2873", "node_type": "1", "metadata": {}, "hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "292706ac-9541-457a-adf1-75cedb1e2873", "node_type": "1", "metadata": {}, "hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "class_name": "RelatedNodeInfo"}}, "hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "text": "P erformance metrics (performance\ncounters) include memory and CPU. Sample telemetry shows a stream of detailed information for failedusing Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse;\n    services.ConfigureTelemetryModule<QuickPulseTelemetryModule> ((module, o) => \nmodule.AuthenticationApiKey = \"YOUR-API-KEY-HERE\" );\nAzur e Functions apps\nSupported features table\n\uff89Expand table", "start_char_idx": 0, "end_char_idx": 412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58637b14-f5b1-49c2-a46e-7a5882d3931b": {"__data__": {"id_": "58637b14-f5b1-49c2-a46e-7a5882d3931b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebe7f81a-7bd6-42ea-a662-b9a33d1800a0", "node_type": "1", "metadata": {}, "hash": "e43d3f6a7c99e3860a67e9a0c4da4161c83ee74a43c40f5e8bd5aa8330dfcd7c", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}}, "hash": "0d71a87bd34bef92e3b68d63cad5e34f2ce1ebd0664c462f5d61d025ed35d986", "text": "requests and dependencies, exceptions, events, and traces.\nPerfCounters support varies slightly across versions of .NET Core that don't target the .NET Framework:\nPerfCounters metrics are supported when running in Azure App Service for Windows (ASP.NET\nCore SDK version 2.4.1 or higher).\nPerfCounters are supported when the app is running on any Windows machine for apps that target\n.NET Core LTS or higher.", "start_char_idx": 0, "end_char_idx": 407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebe7f81a-7bd6-42ea-a662-b9a33d1800a0": {"__data__": {"id_": "ebe7f81a-7bd6-42ea-a662-b9a33d1800a0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58637b14-f5b1-49c2-a46e-7a5882d3931b", "node_type": "1", "metadata": {}, "hash": "0d71a87bd34bef92e3b68d63cad5e34f2ce1ebd0664c462f5d61d025ed35d986", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd21d4b4-8b79-45dd-9d62-f86ccb9021df", "node_type": "1", "metadata": {}, "hash": "dfbe5f202aff013b9b73f5ef84c8793eca7457eca79774af44755ad11bf5f9c5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}}, "hash": "e43d3f6a7c99e3860a67e9a0c4da4161c83ee74a43c40f5e8bd5aa8330dfcd7c", "text": "PerfCounters are supported when the app is running anywher e (such as Linux, Windows, app\nservice for Linux, or containers) in the latest versions, but only for apps that target .NET Core LTS\nor higher.\nLive Metrics uses different IP addresses than other Application Insights telemetry. Make sure those IP\naddresses  are open in your firewall. Also check that outgoing ports for Live Metrics  are open in the\nfirewall of your servers.\nAs described in the Azure TLS 1.2 migration announcement , Live Metrics now only supports TLS 1.2.", "start_char_idx": 408, "end_char_idx": 941, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd21d4b4-8b79-45dd-9d62-f86ccb9021df": {"__data__": {"id_": "fd21d4b4-8b79-45dd-9d62-f86ccb9021df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebe7f81a-7bd6-42ea-a662-b9a33d1800a0", "node_type": "1", "metadata": {}, "hash": "e43d3f6a7c99e3860a67e9a0c4da4161c83ee74a43c40f5e8bd5aa8330dfcd7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "704e255e-48d6-4752-ac04-e1429b525c03", "node_type": "1", "metadata": {}, "hash": "f58cc1230a5ebf02579fa951cc8de274892ff8d0514abb82dea87c0a365b65fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}}, "hash": "dfbe5f202aff013b9b73f5ef84c8793eca7457eca79774af44755ad11bf5f9c5", "text": "If\nyou're using an older version of TLS, Live Metrics doesn't display any data. For applications based on\n.NET Framework 4.5.1, see Enable T ransport Layer Security (TLS) 1.2 on clients - Configuration Manager\nto support the newer TLS version.\n1. Verify that you're using the latest version of the NuGet package\nMicrosoft.ApplicationInsights.P erfCounterCollector .\n2. Edit the ApplicationInsights.config file:\nVerify that the connection string points to the Application Insights resource you're using.\nLocate the QuickPulseTelemetryModule configuration option.", "start_char_idx": 942, "end_char_idx": 1503, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "704e255e-48d6-4752-ac04-e1429b525c03": {"__data__": {"id_": "704e255e-48d6-4752-ac04-e1429b525c03", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd21d4b4-8b79-45dd-9d62-f86ccb9021df", "node_type": "1", "metadata": {}, "hash": "dfbe5f202aff013b9b73f5ef84c8793eca7457eca79774af44755ad11bf5f9c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e4e95bd-b2b1-415f-adfa-12952ba36a15", "node_type": "1", "metadata": {}, "hash": "20f43e549b6e44bc3c0258a919e06dd210adb6e5c7f050841347b4d663eef316", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}}, "hash": "f58cc1230a5ebf02579fa951cc8de274892ff8d0514abb82dea87c0a365b65fd", "text": "Locate the QuickPulseTelemetryModule configuration option. If it isn't there, add it.\nLocate the QuickPulseTelemetryProcessor configuration option. If it isn't there, add it.\nXML\n3. Restart the application.\nTroubleshooting\nMissing configuration for .NET\n<TelemetryModules >\n<Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.", "start_char_idx": 1445, "end_char_idx": 1795, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e4e95bd-b2b1-415f-adfa-12952ba36a15": {"__data__": {"id_": "0e4e95bd-b2b1-415f-adfa-12952ba36a15", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "704e255e-48d6-4752-ac04-e1429b525c03", "node_type": "1", "metadata": {}, "hash": "f58cc1230a5ebf02579fa951cc8de274892ff8d0514abb82dea87c0a365b65fd", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "node_type": "1", "metadata": {}, "hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "class_name": "RelatedNodeInfo"}}, "hash": "20f43e549b6e44bc3c0258a919e06dd210adb6e5c7f050841347b4d663eef316", "text": "QuickPulse.QuickPulseTelemetryModule, Microsoft.AI.PerfCounterCollector\" />\n</TelemetryModules >\n<TelemetryProcessors >\n<Add Type=\"Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.", "start_char_idx": 1796, "end_char_idx": 1992, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d803567b-799f-4219-8871-7af21e6f2b3c": {"__data__": {"id_": "d803567b-799f-4219-8871-7af21e6f2b3c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "742e7773-26df-49ac-afec-380c9fc0382d", "node_type": "1", "metadata": {}, "hash": "7c297cfab2aef14975765bbf4284e13ed0335b3023899e383b55623eaa81e873", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}}, "hash": "7b4fb3940a10692eb152239af74af2c51e727b67079e539802781ed025dea6a0", "text": "QuickPulse.QuickPulseTelemetryProcessor, Microsoft.AI.PerfCounterCollector\" />\n</TelemetryProcessors >\n\"Data is temporarily inaccessible\" status message\n\nWhen navigating to Live Metrics, you may see a banner with the status message: \"Data is temporarily\ninaccessible. The updates on our status are posted here https://aka.ms/aistatus  \"\nFollow the link to the Azure status page and check if there's an activate outage affecting Application\nInsights. V erify that firewalls and browser extensions aren't blocking access to Live Metrics if an outage\nisn't occurring.", "start_char_idx": 0, "end_char_idx": 564, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "742e7773-26df-49ac-afec-380c9fc0382d": {"__data__": {"id_": "742e7773-26df-49ac-afec-380c9fc0382d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d803567b-799f-4219-8871-7af21e6f2b3c", "node_type": "1", "metadata": {}, "hash": "7b4fb3940a10692eb152239af74af2c51e727b67079e539802781ed025dea6a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2513ea6c-d55a-468f-9ce8-4e96bdee5b55", "node_type": "1", "metadata": {}, "hash": "118cee2d285640edb59be4d8e129a9dbfc2dfcea67f5c5a12edc59b9f314b1dc", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}}, "hash": "7c297cfab2aef14975765bbf4284e13ed0335b3023899e383b55623eaa81e873", "text": "For example, some popular ad-blocker extensions block connections to\n*.monitor.azure.com. In order to use the full capabilities of Live Metrics, either disable the ad-blocker\nextension or add an exclusion rule for the domain *.livediagnostics.monitor.azure.com to your ad-\nblocker, firewall, etc.\nApplication Insights SDKs use a REST API to communicate with QuickPulse endpoints, which provide live\nmetrics for your web application. By default, the SDKs poll the endpoints once every five seconds to\ncheck if you are viewing the Live Metrics pane in the Azure portal.", "start_char_idx": 565, "end_char_idx": 1132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2513ea6c-d55a-468f-9ce8-4e96bdee5b55": {"__data__": {"id_": "2513ea6c-d55a-468f-9ce8-4e96bdee5b55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "742e7773-26df-49ac-afec-380c9fc0382d", "node_type": "1", "metadata": {}, "hash": "7c297cfab2aef14975765bbf4284e13ed0335b3023899e383b55623eaa81e873", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "102b4b64-e4b2-42ea-a347-3de4069e7ad2", "node_type": "1", "metadata": {}, "hash": "b865065351f46623eb7c8ae1588c5024bf21ebe317b523d90361fa79cccfaf30", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}}, "hash": "118cee2d285640edb59be4d8e129a9dbfc2dfcea67f5c5a12edc59b9f314b1dc", "text": "If you open the Live Metrics pane, the SDKs switch to a higher frequency mode and send new metrics to\nQuickPulse every second. This allows you to monitor and diagnose your live application with 1-second\nlatency, but also generates more network traffic. T o restore normal flow of traffic, naviage away from the\nLive Metrics pane.", "start_char_idx": 1133, "end_char_idx": 1462, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "102b4b64-e4b2-42ea-a347-3de4069e7ad2": {"__data__": {"id_": "102b4b64-e4b2-42ea-a347-3de4069e7ad2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2513ea6c-d55a-468f-9ce8-4e96bdee5b55", "node_type": "1", "metadata": {}, "hash": "118cee2d285640edb59be4d8e129a9dbfc2dfcea67f5c5a12edc59b9f314b1dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f0fa849-7ebd-46a9-a76e-b0771b99b1a3", "node_type": "1", "metadata": {}, "hash": "673921a1099c001cb04daff64045f40281833e26b4bd38047b9578e122d88a1a", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}}, "hash": "b865065351f46623eb7c8ae1588c5024bf21ebe317b523d90361fa79cccfaf30", "text": "T o restore normal flow of traffic, naviage away from the\nLive Metrics pane.\nMonitor usage with Application Insights\nUse Diagnostic Search\nProfiler\nSnapshot Debugger\nUnexpected large number of requests to\nlivediagnostics.monitor.azure.com\n\uff17 Note\nThe REST API calls made by the SDKs to QuickPulse endpoints are not tracked by Application\nInsights and do not affect your dependency calls or other metrics. However, you may see them in\nother network monitoring tools.", "start_char_idx": 1386, "end_char_idx": 1850, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f0fa849-7ebd-46a9-a76e-b0771b99b1a3": {"__data__": {"id_": "3f0fa849-7ebd-46a9-a76e-b0771b99b1a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "102b4b64-e4b2-42ea-a347-3de4069e7ad2", "node_type": "1", "metadata": {}, "hash": "b865065351f46623eb7c8ae1588c5024bf21ebe317b523d90361fa79cccfaf30", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "node_type": "1", "metadata": {}, "hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "class_name": "RelatedNodeInfo"}}, "hash": "673921a1099c001cb04daff64045f40281833e26b4bd38047b9578e122d88a1a", "text": "However, you may see them in\nother network monitoring tools.\nNext steps\n\nTitle: Understanding the Technical Architecture of Alibaba Cloud's Recommender System\n\nAlibaba Cloud's technical expert, Aohai, delves into the fundamental concepts and intricate architecture of an enterprise-level recommender system in this comprehensive article.\n\n1) What Is a Recommender System?\n\nAohai elucidates the necessity and function of recommender systems in today's digital landscape. As online platforms expand, the challenge of connecting users with suitable products intensifies. Platforms like Taobao, hosting a myriad of products, grapple with this challenge.", "start_char_idx": 1790, "end_char_idx": 2439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96f133f7-f4cf-4bb4-bebc-26b159f52c51": {"__data__": {"id_": "96f133f7-f4cf-4bb4-bebc-26b159f52c51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5b98590-4dce-4c67-a390-18305036ff73", "node_type": "1", "metadata": {}, "hash": "91e8d6819c9017fa91c9200cada9ff94a92ecc8c08cb4644db9de682f40446ea", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}}, "hash": "8b35104d3b7ee1f1e04732b6a61e628347129767b674063d625d447be7e3ad20", "text": "Platforms like Taobao, hosting a myriad of products, grapple with this challenge. Recommender systems address this by refining the matching of user information with item information, notably through query-based and feed streaming recommendations.\n\nThe system aligns user preferences with item properties. Query-based recommendations tailor item displays based on user preferences, such as color and price. In contrast, feed streaming recommendations, prevalent in apps like Hupu and Toutiao, curate content according to daily user preferences, leveraging machine learning models to understand both user inclinations and item attributes.", "start_char_idx": 0, "end_char_idx": 636, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5b98590-4dce-4c67-a390-18305036ff73": {"__data__": {"id_": "d5b98590-4dce-4c67-a390-18305036ff73", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96f133f7-f4cf-4bb4-bebc-26b159f52c51", "node_type": "1", "metadata": {}, "hash": "8b35104d3b7ee1f1e04732b6a61e628347129767b674063d625d447be7e3ad20", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7477e7d-8975-4246-8fa1-5f9827fb179e", "node_type": "1", "metadata": {}, "hash": "37aba13362fcfd0e7736e2f9f762effa47493ed3f3e308bd55191463ac149447", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}}, "hash": "91e8d6819c9017fa91c9200cada9ff94a92ecc8c08cb4644db9de682f40446ea", "text": "1.2 Personalized Recommendation Process\n\nAohai offers a schematic overview of the recommendation process, emphasizing two pivotal modules: matching and ranking. The matching module filters items based on user preferences, while the ranking module refines these choices according to the user's specific inclinations. This efficient process ensures swift feedback within milliseconds, a critical factor in user engagement strategies.\n\nMoreover, Aohai emphasizes that a recommender system encompasses not just recommendation algorithms but also robust system engineering. Addressing performance and data storage issues is paramount, especially when deploying such a system in the cloud environment.", "start_char_idx": 638, "end_char_idx": 1333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7477e7d-8975-4246-8fa1-5f9827fb179e": {"__data__": {"id_": "b7477e7d-8975-4246-8fa1-5f9827fb179e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5b98590-4dce-4c67-a390-18305036ff73", "node_type": "1", "metadata": {}, "hash": "91e8d6819c9017fa91c9200cada9ff94a92ecc8c08cb4644db9de682f40446ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64a04ed7-d2be-4dfa-8d6a-d2a89326aa83", "node_type": "1", "metadata": {}, "hash": "f31e312509fb4ac8f5499f9e10e7e2c485acc1ce7dead6a116c19bfcbe97cfe0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}}, "hash": "37aba13362fcfd0e7736e2f9f762effa47493ed3f3e308bd55191463ac149447", "text": "2) Architecture of an Enterprise-level Recommender System\n\n2.1 Requirements for an Enterprise-level Recommender System\n\nAohai outlines four fundamental requirements for designing an enterprise-level recommender system. The architecture must cater to platforms with millions of users, facilitate extensive model training with large datasets, support algorithm plug-ins for flexibility, ensure high-performance feedback within milliseconds, and allow elastic resource scaling to optimize costs.\n\n2.2 Overall Architecture of a Recommender System\n\nThis section elucidates the architecture's layers, starting with the basic data layer encompassing user profiles, item data, behavior data, and comment data.", "start_char_idx": 1335, "end_char_idx": 2036, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64a04ed7-d2be-4dfa-8d6a-d2a89326aa83": {"__data__": {"id_": "64a04ed7-d2be-4dfa-8d6a-d2a89326aa83", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7477e7d-8975-4246-8fa1-5f9827fb179e", "node_type": "1", "metadata": {}, "hash": "37aba13362fcfd0e7736e2f9f762effa47493ed3f3e308bd55191463ac149447", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c60dd06-ed3b-4626-a963-c78a9bcd8662", "node_type": "1", "metadata": {}, "hash": "3e612c37b5c24be695df8f1a4794273105b3de408bf3a634f41613845f31dcd4", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}}, "hash": "f31e312509fb4ac8f5499f9e10e7e2c485acc1ce7dead6a116c19bfcbe97cfe0", "text": "Following data processing and storage, the system employs matching and ranking modules powered by various algorithms. A new policy filters and deduplicates recommendations before online deployment, culminating in the top-layer recommendation service.\n\n2.3 PAI-based Technical Architecture for a Recommender System\n\nAlibaba Cloud's technical implementation involves leveraging PAI technology. It begins with storing demo offline data in ApsaraDB RDS for MySQL, processing real-time behavior data via Apache Kafka, and using Flink for generating real-time data. Model training employs PAI algorithms, advocating cloud-native solutions for scalability.", "start_char_idx": 2037, "end_char_idx": 2686, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c60dd06-ed3b-4626-a963-c78a9bcd8662": {"__data__": {"id_": "9c60dd06-ed3b-4626-a963-c78a9bcd8662", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64a04ed7-d2be-4dfa-8d6a-d2a89326aa83", "node_type": "1", "metadata": {}, "hash": "f31e312509fb4ac8f5499f9e10e7e2c485acc1ce7dead6a116c19bfcbe97cfe0", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "node_type": "1", "metadata": {}, "hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "class_name": "RelatedNodeInfo"}}, "hash": "3e612c37b5c24be695df8f1a4794273105b3de408bf3a634f41613845f31dcd4", "text": "Model training employs PAI algorithms, advocating cloud-native solutions for scalability. The final phase orchestrates matching, deduplication, ranking, and feedback to users, showcasing Alibaba Cloud's holistic technical architecture.", "start_char_idx": 2597, "end_char_idx": 2832, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9977e437-399b-4ee3-b728-f778151b33e0": {"__data__": {"id_": "9977e437-399b-4ee3-b728-f778151b33e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bebb1407-bcb2-450b-9ad4-4192b4ae0a94", "node_type": "1", "metadata": {}, "hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "class_name": "RelatedNodeInfo"}, "4": {"node_id": "bebb1407-bcb2-450b-9ad4-4192b4ae0a94", "node_type": "1", "metadata": {}, "hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "class_name": "RelatedNodeInfo"}}, "hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "text": "The article serves as a comprehensive guide, shedding light on the intricacies of Alibaba Cloud's advanced recommender system technology, blending cutting-edge algorithms with robust system engineering principles.", "start_char_idx": 0, "end_char_idx": 213, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"d70a6399-48cd-4459-a002-5a9d4e26c28f": {"node_ids": ["e1fc43c8-b5b7-4eb7-b896-fef63b0b152d", "faffad4d-166c-4d95-869c-dd34dfaacc44", "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4", "351fd49c-870e-439b-83e0-89bad897f1a1", "4e38d77c-a8fa-4b45-938f-e480b94d213c", "38f22fb1-4b4f-4961-808c-1caeba430163", "50136611-2063-40f7-92d4-b79ed5bdfb9c", "14b15cf5-022e-4216-bf3f-b3974574f833", "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c", "cab6704e-6c89-45ad-91ab-ecb849ccd0aa", "e5c55660-67f1-419a-b4fc-77672300517c", "29cf881f-fb52-48da-9752-b54df95c18c2", "2208170a-da2e-4eee-9bd0-9c79fdc7e26b", "57328f93-818f-4727-8222-c596382ef989", "8d55eb44-a404-484a-a3b1-8b17efc1039a", "4086eb38-25e6-4618-bcab-2f85a3d32d00", "5dee02cb-3702-43aa-ab89-7908a515b978", "c4144ce9-75c8-46ed-a669-17acb338e2a3", "6a215e7c-9ec7-4443-993c-7d022cab1064", "3a862d80-27c2-44d1-b5e1-c046d6d97794", "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2", "dcb0e4d3-f61e-45c0-9687-540682761c8f", "44195252-acf9-4acb-9103-1128599dba42", "e779dfc7-39f8-4c86-ad71-b630bec93c1a", "21e34eb2-95ff-437e-bc07-d20bae38aee2", "5f84f7d8-5367-4d2a-b67b-6a19ecca4396", "ffee4c09-1050-4acf-b72a-55be7a5da663", "2b5f988a-f343-4fb7-83a9-848a220f6fcb", "73a0a295-85e3-4391-a64a-c3a9f3cdd569", "c62c6e18-cf27-4921-8752-3833e7f12467", "a08aca1d-a78e-404c-9945-b1ef2db43bf9", "0313355c-dc51-46e5-9bdc-70efa141106f", "5add9bd3-150d-43c9-a561-6111b47ce200", "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a", "1f55b0dd-4f52-4281-a0cf-25a79ef363c2", "518c38b4-975f-4b87-b4c5-89fbc4364837", "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1", "6f183402-a660-4d3d-82ac-b45afaf73040", "18c5a06b-e2bf-4d40-9681-872357af305c", "3ca3563b-2c46-419f-b043-b4795d3ecd3a"], "metadata": {}}, "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d": {"node_ids": ["b185e45e-164d-455f-8fe4-4690a93afb42", "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624", "d201edb6-82bd-4b07-82e6-be462bb8b2d7", "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f", "8b6e6fef-c16e-45b5-9065-29a29e35da32"], "metadata": {}}, "faffad4d-166c-4d95-869c-dd34dfaacc44": {"node_ids": ["e3fa3c67-6378-40d7-b277-211f27947ad4", "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3", "4e3d97ab-0707-4722-aa79-da8bbdf78856", "c83fa5fa-7421-42f8-b613-da4d7ecb6f08", "a2088a27-5fe6-416f-9e99-830391aa20e6"], "metadata": {}}, "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4": {"node_ids": ["0d3b15b3-05fb-4c83-bbab-29c02613daa3", "444b87b8-602d-43ac-87b5-e43467864782", "04a3c7ec-b72f-420e-a583-c1107481c12c", "bdd46867-69cb-4ff5-91d0-b2774cfc7e05", "b48cc563-2c03-495c-a9b4-a3529a9ad09e"], "metadata": {}}, "351fd49c-870e-439b-83e0-89bad897f1a1": {"node_ids": ["e7183bf1-15a2-4b31-8742-869f779c113f", "0144dbce-80d3-4318-8ae5-5866f0330241", "32392c6f-4303-49ba-9a39-c4c6da1bddd2", "311bd72d-5546-4502-bbab-baee387de6f3", "cd6114a1-4263-4f9d-a493-6307f278e827"], "metadata": {}}, "4e38d77c-a8fa-4b45-938f-e480b94d213c": {"node_ids": ["044bf26b-d29b-4f80-b543-2cb3ed2443df", "752a5b4a-9053-459e-9303-400144ec6f56", "82257d0b-5b2f-4bef-871e-7f50cf0e54eb", "a379e407-7360-45ed-8be5-8adf76f86e24", "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25"], "metadata": {}}, "38f22fb1-4b4f-4961-808c-1caeba430163": {"node_ids": ["6e55a430-5f14-4057-a3f9-9364f895a8d3", "127e2699-ba49-4856-8a6d-7641c5a47611", "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd", "735bef37-1cc0-4400-886f-b6a698d8fb8a", "979d8852-deef-4e32-b16e-e3edfd902ebf"], "metadata": {}}, "50136611-2063-40f7-92d4-b79ed5bdfb9c": {"node_ids": ["26c87f96-fa3e-4816-b783-59e51995658c", "6f8ef14d-15ba-4c39-919b-64cf4b06481b", "7c1a1255-277e-419f-bf65-25a3c3bb79d3", "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9", "11d2fa45-8ced-449f-9b75-4adecdccd93a"], "metadata": {}}, "14b15cf5-022e-4216-bf3f-b3974574f833": {"node_ids": ["d85cc9e6-7cd9-4481-90c2-203747d5332f", "4cb911ed-dec2-422d-a13c-15dce190ad98", "c6e4bcc9-596e-4d62-81ff-c43577daed77", "15a861a5-591a-42ed-85e7-dfb2baa70eb9", "b384836f-88bc-4aa2-8535-0aba633151b1"], "metadata": {}}, "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c": {"node_ids": ["8212e847-90ca-4688-b6e0-e95181ddf3a1", "bcbe1df8-d675-4abe-8d15-92624af70bc4", "8e672703-bba4-4f1e-9e3b-379fc6fe65c5", "87ee291c-72d0-47ed-9d5a-9a2edcd579e5", "821dbc59-27a8-42a7-a88a-a52095ea2a16"], "metadata": {}}, "cab6704e-6c89-45ad-91ab-ecb849ccd0aa": {"node_ids": ["c098625d-e8a7-41a5-abae-3bba4ea9de78", "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4", "22d940f3-f943-4714-bc50-5bdfdbf66adf", "72551f36-ec85-45af-bae3-5423db829066", "3c491f0d-e54c-42ce-abca-cf987967a63d"], "metadata": {}}, "e5c55660-67f1-419a-b4fc-77672300517c": {"node_ids": ["b2135c83-d5c7-4455-9b06-92769a72c4bf", "3c2ac410-38f3-4b43-97aa-afe1918019c5", "bd6b745d-e8d9-495b-b6ce-333955638033", "9a9e4169-a13c-478c-942c-5617a4cbefcb", "387374e2-778f-472b-a73f-092761fffd50"], "metadata": {}}, "29cf881f-fb52-48da-9752-b54df95c18c2": {"node_ids": ["09e83244-0f60-4b37-9ec7-b77488731f88", "e5e9c2cd-2b5f-4fd6-9865-9bd318289603", "33a2425b-1dc0-4c42-b651-457a7eb4ba35", "a7a287e2-a5d5-405d-b204-1a9464cb02c8", "338c170b-8eca-4a12-bf0d-5a6a78a6439c"], "metadata": {}}, "2208170a-da2e-4eee-9bd0-9c79fdc7e26b": {"node_ids": ["df10fc68-725d-452b-abe1-a801e77316e1", "64ef4e44-872f-4b0a-8ea8-d584657679e9", "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd", "963debed-7070-4f3c-96e2-5ec66d6c6847", "f709652a-4211-4c99-bfdb-564137f3c1ff"], "metadata": {}}, "57328f93-818f-4727-8222-c596382ef989": {"node_ids": ["71a03883-c942-459b-b797-21604e74eac8", "184598be-7970-47d5-8ba1-3495d65a5982", "4fcae3af-5c06-43ee-8163-850e87e5b408", "c1b517c9-af44-40ff-a58d-2a9900695b35", "ba92c151-064a-411f-8f21-6a0dfa57c3c1"], "metadata": {}}, "8d55eb44-a404-484a-a3b1-8b17efc1039a": {"node_ids": ["e4630f66-e9d3-400a-a896-6014b851892f", "1368a402-6ab3-453c-a888-6ab05bf57a23", "4efa7cd5-9fdc-4d27-85d7-da34c73536ef", "d625f540-381d-499a-85ff-aa967dd9d39f", "c89d5173-c1a7-4bbe-8064-2fc75161e701"], "metadata": {}}, "4086eb38-25e6-4618-bcab-2f85a3d32d00": {"node_ids": ["f80aa8da-056e-480d-adcc-4ba7e1121390", "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893", "ccce360b-35a4-41ed-807b-5331211701de", "db0aa27b-ea92-4876-8486-17599745f512", "5e42b7ba-699f-4007-b796-b1828f7088eb"], "metadata": {}}, "5dee02cb-3702-43aa-ab89-7908a515b978": {"node_ids": ["568e0f92-74aa-4a54-a55d-b1b7a1bbb066", "52cf35a2-f41d-4c76-b56d-8ac809eb1556", "04a4b035-21c1-4369-9c6d-2c8256b1e9cd", "8c3144f5-b808-42a8-898e-1ba57ab8b253", "30da43e3-e957-4749-833b-2a3da21bfd1a"], "metadata": {}}, "c4144ce9-75c8-46ed-a669-17acb338e2a3": {"node_ids": ["c5e25e23-d9bf-4fd4-9d59-935cda61c3b5", "e3d9a200-8d09-4a5f-8057-525d40945061", "2f30528b-8b87-4916-8530-b167226ec7c7", "627089ab-2bd9-485b-a802-bfa4e68a989f"], "metadata": {}}, "6a215e7c-9ec7-4443-993c-7d022cab1064": {"node_ids": ["e634f7fd-ee80-4b92-bf7c-36a0460fbfd7", "09a2726e-0481-410b-ad8a-2b781b5ace20", "c16c3890-e372-4b47-a635-f842b511fff4", "57c6c99b-d287-4b37-a3f9-cd0ee460b000", "d1f6a34e-8c7f-410b-8bdd-805c045f2402"], "metadata": {}}, "3a862d80-27c2-44d1-b5e1-c046d6d97794": {"node_ids": ["664de977-ff5e-4562-a767-60f5d1a97172", "5da86237-d9b1-4d3f-aed2-88d87c182a46", "8e88707d-a88e-455f-a7ca-5b8112f2f9f0", "6ed9369e-5a39-46e3-a44d-6d2203cc83d2", "6182115c-f574-4e4a-a6a3-e3380a7b3e7e"], "metadata": {}}, "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2": {"node_ids": ["c4a72ba1-e946-4d10-9441-7af1ecc87ee4", "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1", "154e45bd-a51d-42d0-807d-deee29626d3b", "39b97a34-dc97-48a5-aaab-ae3980088068", "f9dc9003-cf40-4cb7-8940-f9a7378a3131"], "metadata": {}}, "dcb0e4d3-f61e-45c0-9687-540682761c8f": {"node_ids": ["fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4", "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b", "7f20524c-21f3-4cca-8645-a5e54a1fe9c5", "a110f60a-18c0-4758-9856-6998878bc107", "9570f67f-24c1-4375-8cef-3d21e8424125"], "metadata": {}}, "44195252-acf9-4acb-9103-1128599dba42": {"node_ids": ["7c232982-940f-4368-aa32-de082a86d3e3", "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09", "054fed5b-36d2-43da-aa06-ae481e91c1d5", "e043331c-76f3-4333-9839-e0485251b84e", "82d4131a-dd97-4e60-9cef-a3d325b5bf06"], "metadata": {}}, "e779dfc7-39f8-4c86-ad71-b630bec93c1a": {"node_ids": ["82deaf68-4a9e-463f-ba6d-bbf2bf79068d", "c6691f0b-8062-4071-a412-2655ff6353c7", "8c19038e-ee4a-4c6a-98de-106902cc08e7", "765b53cf-7565-4d78-9d06-f5b49b92ad62", "2b074dca-a7b5-44e5-a3df-e0f548a256ca"], "metadata": {}}, "21e34eb2-95ff-437e-bc07-d20bae38aee2": {"node_ids": ["b8a473ca-f564-47fe-bd55-7f6f66a1c437", "a78d9801-10ce-40f5-90fc-4051935c1c3b", "df015e01-533e-4c7f-bed8-1c62a7660f60", "20f35ed4-76d5-4170-ba0e-d1cd49ad268c", "ab1258f7-6968-4bc2-aa6f-2be71e1b0781"], "metadata": {}}, "5f84f7d8-5367-4d2a-b67b-6a19ecca4396": {"node_ids": ["ba89739c-936a-4a98-8eca-5a7a68aa46d6", "038d6614-5edc-4833-a36d-2cf1d74802e9", "7126d10f-33d9-4f69-a95d-4663f4e18b92", "cef8d741-5446-4507-8d14-60ce39224714", "247961f8-fee5-4ba0-9112-6fd68356d38c"], "metadata": {}}, "ffee4c09-1050-4acf-b72a-55be7a5da663": {"node_ids": ["d1cd7a41-58a4-42dd-bd35-6459226f65f9", "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7", "73223af2-f20f-400d-bb4f-268ff7815ad0", "01daae07-70a6-43ed-8896-0418267bbd6a", "86ef810a-d22d-4f17-befc-4f97dd8d22d2"], "metadata": {}}, "2b5f988a-f343-4fb7-83a9-848a220f6fcb": {"node_ids": ["04be5b4c-ca50-4ba0-9f46-155a04b68c78", "c01acb18-9f36-4e8d-b563-46169bb6724a", "fe322443-9f9c-4894-9d41-59040db525c0", "48f44036-107f-419f-bf8f-f4ccc9bf8839", "d0292a66-da79-4af5-aef1-d6c1049174ee"], "metadata": {}}, "73a0a295-85e3-4391-a64a-c3a9f3cdd569": {"node_ids": ["286425d5-d677-4a41-a64e-26f6ad3a0da6", "9d81d190-519d-4621-ae61-0c46ca4d50a9", "0e4e24c5-2f32-40a1-94f6-95f45665d27a", "8759913d-865c-4f74-9d55-3017e37d91b4", "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24"], "metadata": {}}, "c62c6e18-cf27-4921-8752-3833e7f12467": {"node_ids": ["40ebd08c-c34a-4c09-baa6-4fa729a72959", "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70", "7ee1d53d-6569-48f0-9eec-f32d9b4affe4", "f904eeb7-5f38-4ded-9b6e-82f4d2986316", "b038c328-0caa-4be1-99bd-e9e4bceb30b5"], "metadata": {}}, "a08aca1d-a78e-404c-9945-b1ef2db43bf9": {"node_ids": ["bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19", "2c09e34d-5c80-4675-ba51-9da9b2de6e68", "e5867d46-56e8-4485-9627-2dbf45487f95", "117be70c-93da-4351-b313-0892a4bff3a0"], "metadata": {}}, "0313355c-dc51-46e5-9bdc-70efa141106f": {"node_ids": ["2f2c2788-719b-4bf1-aed2-830e6802d26f", "bcb4d2c6-ed5d-4162-a657-83d89cdb751a", "92b7cae9-3fb6-43bb-af73-506d0da831d5", "b2aab929-70c5-48cf-9267-5dcc12abf5ea", "06fa7e6d-3d91-4114-8381-86e8e6a7b958", "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a"], "metadata": {}}, "5add9bd3-150d-43c9-a561-6111b47ce200": {"node_ids": ["9657ce5e-dab7-41de-9a91-d7cd3df09f6b", "758fa473-e100-43ca-8417-d815b23374f7", "41490dba-fd83-4981-bf70-93354e0968c8", "033b8ec2-c69f-4895-a660-e867b5e8e89d", "102fb15d-28ac-47fe-ba84-f2a1fdcf1657"], "metadata": {}}, "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a": {"node_ids": ["71018116-7d3f-4c49-98b6-e8b322aff129", "5e0dba53-a54f-4c83-9669-5f0ef70c9877", "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746", "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b"], "metadata": {}}, "1f55b0dd-4f52-4281-a0cf-25a79ef363c2": {"node_ids": ["7f4f51f1-20fa-4a33-bd94-092bc7dedce4", "4a839281-2706-409a-888e-df6840026818", "592f8b4c-f9db-4e89-9887-fa499ba1c34c", "1ad6e96c-a7b2-404a-954c-69f11cae2210", "7ff46e2e-66c3-447f-a174-7b41b24625aa"], "metadata": {}}, "518c38b4-975f-4b87-b4c5-89fbc4364837": {"node_ids": ["b1eed079-9caa-44ce-9d84-8b1a0103b79b", "486d82ff-8fd9-4f72-b068-68d25d163ab2", "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e", "bf902940-188d-41da-8edf-5cb7c4fe0db2", "023d29ba-27f7-4516-bd02-a7ed63efbdb0"], "metadata": {}}, "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1": {"node_ids": ["d1a85d97-1755-4790-a02b-51408d0d5e1d", "49a086c2-e996-4c17-b97a-f1bf32a56730", "fc1f2e92-67ca-49d2-9274-264bd6ceba8d", "061cf19f-4851-4338-b880-7c346585665a", "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0"], "metadata": {}}, "6f183402-a660-4d3d-82ac-b45afaf73040": {"node_ids": ["887429f5-c9a2-4122-863f-4c37531d3f24", "b38cd3a5-fac3-448d-acd2-099d8717ec2d", "1818727a-8d16-4427-b43b-67ac4c435ba3", "b13fcdee-3284-4435-8c91-eeede1e1019c", "e5f52ff2-4895-416a-a9e7-92222aeb2d2d"], "metadata": {}}, "18c5a06b-e2bf-4d40-9681-872357af305c": {"node_ids": ["e0d27b83-4356-4776-98c7-64a1ea6683b5", "888fe210-2bea-494c-938c-697d0feee64b", "931b3ac7-e0bc-4048-bae7-99280cd861fe", "a279c2dc-fe53-4d26-9421-4e6a42a756d4", "292706ac-9541-457a-adf1-75cedb1e2873"], "metadata": {}}, "3ca3563b-2c46-419f-b043-b4795d3ecd3a": {"node_ids": ["317db8cf-567f-4b3c-b8ea-8009f7fa17d8", "90f0b9eb-2095-4048-afc8-4e3f0ab2e150", "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d", "bebb1407-bcb2-450b-9ad4-4192b4ae0a94"], "metadata": {}}, "b185e45e-164d-455f-8fe4-4690a93afb42": {"node_ids": ["db3c733c-e5d2-4887-9248-9a57654e8d7c", "60aafb64-eda8-4dd1-80ff-e7ce8ac8e4d8", "2ad76419-66d8-4320-87c7-068feb5c9fc6", "71ff6609-6393-45da-955b-ab58805ed2de", "9bb12023-40d3-4864-8645-1bc6dcc45230"], "metadata": {}}, "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624": {"node_ids": ["189dfbdc-7077-4c4c-8b4b-6296a59ba4f4", "d453893d-f437-4111-9be7-ada682cb4f27", "1bc011a6-a5e2-4d68-8814-258d2ee40d98", "e2450f93-0a7f-41f6-be1c-415bb4f43ec3", "1de88753-ad04-4f1d-a0b1-894b18979e2d"], "metadata": {}}, "d201edb6-82bd-4b07-82e6-be462bb8b2d7": {"node_ids": ["f3719389-d4c5-488f-ba96-b89e814511ce", "39f1b555-66c5-4599-a13e-3c7ab5522b1d", "81f92843-a596-410e-98cd-9816257554be", "93f3e011-cc40-4bd0-b97b-835b46e1b5ce", "8b0e1deb-7f33-4503-a7e1-c2e7d6142ea3", "a65075ed-fc89-4453-b2b7-15b8b85b3b62"], "metadata": {}}, "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f": {"node_ids": ["26fb3c21-e301-46c8-b939-1559d59e5add", "00d74b94-ce83-4615-97b0-7d3974d6cffa", "57ab904f-09bc-426f-bd9c-4518d639ec11", "2062406c-eaa6-4b71-9d12-073ebdc471d4", "b6aa4ed2-76c6-455d-9d89-ebbd0ddc6924"], "metadata": {}}, "8b6e6fef-c16e-45b5-9065-29a29e35da32": {"node_ids": ["1a849b2b-eb0e-422f-9d4a-90e9c79e0b63"], "metadata": {}}, "e3fa3c67-6378-40d7-b277-211f27947ad4": {"node_ids": ["125ab7cb-5757-4c1e-9325-711eea81eb90", "fa59fd24-1234-4b08-9da9-820a3713cdb1", "f8632f10-ff2a-41c6-88c4-5f1fa6fcb83b", "97362a6a-e2e1-4a8e-8522-b751704c6ab1", "3e372769-c26b-4f53-b5e0-ace577df25bc"], "metadata": {}}, "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3": {"node_ids": ["5a51d814-c116-4700-97bc-4f304b4ff9be", "49f80856-452b-4668-8b36-ab456465ed97", "57b16b68-794d-4556-9da7-74970220240a", "4162606d-72c8-47a0-a826-47440fed3056", "70c11c80-5067-46aa-9e94-2266016fac1e"], "metadata": {}}, "4e3d97ab-0707-4722-aa79-da8bbdf78856": {"node_ids": ["55e30b8c-0512-400f-9a5e-04392a46d6ae", "5075fc3b-bde7-49bf-ae26-e0e25fdaef6c", "e1c46d10-1323-44e9-a98a-acb01f69c7cb", "45c9b2ed-58b4-4f03-97ff-46c923ed09cf", "7b07d9b9-d883-4bda-af66-83369cbf9fb9"], "metadata": {}}, "c83fa5fa-7421-42f8-b613-da4d7ecb6f08": {"node_ids": ["9fd3d57a-689b-48cf-89fe-1ac43363fd8b", "59112c5b-af14-4204-a884-6adfc73e6b7e", "596c5249-8745-4113-aaaa-aafc6f60dfa0", "7716de20-bef5-4c15-a790-9dcc7f5b0071", "aa53c5fd-2f00-4f92-8097-02cd762e7ef4"], "metadata": {}}, "a2088a27-5fe6-416f-9e99-830391aa20e6": {"node_ids": ["dc971e03-cd34-4d49-a07a-f8525022c66a"], "metadata": {}}, "0d3b15b3-05fb-4c83-bbab-29c02613daa3": {"node_ids": ["c63db16a-5671-4c84-a7ae-55210385c6c1", "e690edde-5105-4631-a9b8-5fb9ba9b805a", "4b381ccf-a2e7-4a5c-ba81-1498484c4b68", "1a443e7c-c9ba-452e-a008-ebaa4394ef83", "bb331bd7-dd37-4d71-b0cf-257c68c73927"], "metadata": {}}, "444b87b8-602d-43ac-87b5-e43467864782": {"node_ids": ["6859e6bf-998d-459f-b45a-4dfdde7ea1ca", "14af1033-c053-4882-bb8c-8a22c85c9c0f", "4e1a32e9-0f6b-4a12-b9be-78566fcabbf8", "b77f9223-fd0f-4aa3-b6dc-366c66836370", "79d9c03b-6e99-4fcb-8edc-7d8fffe3dd9f"], "metadata": {}}, "04a3c7ec-b72f-420e-a583-c1107481c12c": {"node_ids": ["4013eecd-6af1-4126-a353-3e354c4be33a", "ffa3fd62-0326-4174-9326-f11256f22cc8", "0c9f2743-ef3d-45bb-b4a4-89f093a6214a", "535039fc-1ba6-4485-bd97-668b16f0585a", "3996d7c9-619b-491c-8108-3367f691595e"], "metadata": {}}, "bdd46867-69cb-4ff5-91d0-b2774cfc7e05": {"node_ids": ["88931f80-f889-4a2c-a5f2-014daa4d0e22", "dbb69e8d-17ff-4235-b3a8-8335e2325f28"], "metadata": {}}, "b48cc563-2c03-495c-a9b4-a3529a9ad09e": {"node_ids": ["684d71d1-a5d6-4b4e-bb76-6083a280b65d", "b7c4feec-57ed-4901-acaa-236586fe976f", "dfc0c368-b863-4300-b1c2-8b9e4a878106", "87c282a8-9c70-4382-9bd7-67ae4960c13b"], "metadata": {}}, "e7183bf1-15a2-4b31-8742-869f779c113f": {"node_ids": ["eb3f2a26-9fde-4ee9-a559-6135e85d0d20", "0c9f35c6-7178-44df-875d-60d54fda49ee", "4aae927c-0a32-4ab6-9a96-542bcfb1a2b7", "15d0ffde-810d-4887-a2fa-bcecdbe723e5", "15aa29ea-ec2a-4578-b626-6a27664aea57"], "metadata": {}}, "0144dbce-80d3-4318-8ae5-5866f0330241": {"node_ids": ["c86cb95c-13ec-4155-bb8c-b9f920e6e8ba", "0756c2c3-572c-4226-80e4-6b368dcc42bd", "d87cbf58-b3e3-431f-90d9-bf9152478ea9", "c49c9cce-17bd-4a03-8505-729997ae4656", "cdde58b8-3042-4538-ab04-9348f0d82bc7"], "metadata": {}}, "32392c6f-4303-49ba-9a39-c4c6da1bddd2": {"node_ids": ["11e540b6-9f58-4845-b5f9-9bd38bf0d8d0", "abde40db-9714-4cd1-bebc-c1d98c6323c0", "ab5fa94c-4196-4994-beb7-0174f85b477b", "aa83d018-7c38-4aec-82ed-d81726fe2f49", "1c0ba5c4-71ee-4caf-ba7f-5f0ee137604e"], "metadata": {}}, "311bd72d-5546-4502-bbab-baee387de6f3": {"node_ids": ["4e4df545-6ba1-4bf2-bc56-84199d771183", "b4f55450-8c58-4e2d-a99f-8c413350f21d", "429c52c1-8ff8-44ee-b26a-54cf6eb8adc4", "7a98b628-84b0-47ac-9abf-12e8318dd00f", "ad955d23-c9da-4902-829b-4c43b4851a1f"], "metadata": {}}, "cd6114a1-4263-4f9d-a493-6307f278e827": {"node_ids": ["fd01ea58-a6eb-4b99-942a-3bef5880ac29"], "metadata": {}}, "044bf26b-d29b-4f80-b543-2cb3ed2443df": {"node_ids": ["cbdb8738-24da-403f-9f5a-47a2f4d24695", "9f92e116-495b-451f-8551-96fe292765b9", "886f38df-3047-4079-988e-5f9305f64a87", "0f99e99d-c4fb-43a5-918f-32210c4aeb65", "1dccd4d4-5e39-4fbb-9137-6f5daae99e57"], "metadata": {}}, "752a5b4a-9053-459e-9303-400144ec6f56": {"node_ids": ["6fcc07ff-4cc2-4d47-9d3b-0275652d7d35", "69edbff8-8022-4d94-90f5-cc40985f8ea7", "73e32222-f0e0-4269-b211-076685392039", "f0db9774-7231-4d5c-bb50-30f9a87024c5", "2b729654-7df3-4d7e-b24f-eada34b4b32c"], "metadata": {}}, "82257d0b-5b2f-4bef-871e-7f50cf0e54eb": {"node_ids": ["920563dc-9066-498f-9dcc-82e44b79f387", "684cf36d-59a3-4fca-a204-b610ccd31a78", "ff330ddd-928b-4b0b-8ba5-79b8daaccf2d", "955b35d5-9116-413e-a537-2f5c87ff7782", "7e9b3f5d-4ff8-44a8-b942-743e2980d288"], "metadata": {}}, "a379e407-7360-45ed-8be5-8adf76f86e24": {"node_ids": ["5e7bdc30-0af9-45bc-a287-6056115633aa", "5b53eb3b-af91-4917-8ed5-878084216d35", "27d2122a-59b3-49a7-8b91-82b8957b3f99", "d941a78f-fd58-4d1c-8c46-f8c6e7c46142", "b25611d8-5ec0-45e4-85df-181e37762f98"], "metadata": {}}, "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25": {"node_ids": ["d5606743-e8da-430d-87fb-31b964819a7d"], "metadata": {}}, "6e55a430-5f14-4057-a3f9-9364f895a8d3": {"node_ids": ["0132a31d-4acf-46ab-912a-6de3e4f91d6a", "3b54452e-1c6f-438e-bcea-40908e6b6adc", "0e4263d2-9b40-40b4-914a-0cd1a7aee46e", "865c13c6-ef89-42bb-9cae-5e423014804c", "2d726394-76af-4fab-b702-48e4094b5286"], "metadata": {}}, "127e2699-ba49-4856-8a6d-7641c5a47611": {"node_ids": ["fdb54770-d247-4fb9-99f1-153b7614c735", "5feacdd8-04bc-4a05-ac72-b79269b0bd2c", "f9414dbd-9a0d-47c5-bb08-43666cc4965b", "0423aca6-0545-45bf-a490-c5747584bbfb", "4edec649-9468-4fd7-ad44-748ef80a8d73"], "metadata": {}}, "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd": {"node_ids": ["d371cae5-3a25-49ba-b3b7-86ea8cfc1b3d", "fded7855-c023-4132-8501-abd549174769", "3ae92522-126c-4449-91c1-f7621ce0a45e", "b04d5b46-e351-4d23-88b6-f549f9f22c17", "c752ef3e-6058-44aa-9a8e-289234dc1012"], "metadata": {}}, "735bef37-1cc0-4400-886f-b6a698d8fb8a": {"node_ids": ["718de839-c6cd-4b80-96ae-723df437c85f", "348aca2f-2b7d-4075-a73c-7dd99279b3cc", "803bcf49-0b5c-49b5-8f43-fba6bc3505a6", "00846d48-b058-4e12-89dc-84785a74dcd5", "e83713dc-98ae-40c0-a5a3-5318450166c9"], "metadata": {}}, "979d8852-deef-4e32-b16e-e3edfd902ebf": {"node_ids": ["6e211404-5347-4e34-8b8a-66e60cdee37f"], "metadata": {}}, "26c87f96-fa3e-4816-b783-59e51995658c": {"node_ids": ["67c7ce57-c84e-4347-a604-7fbd24d3d925", "56246172-2064-47ad-8dee-5f36a84bc1b9", "c54495cf-b4a9-4f03-9d64-ab60741f1433", "e7d4af59-e7dc-4b38-adf7-71e75f3eff47", "c74bb39b-a299-4315-87cd-57e881216bfb"], "metadata": {}}, "6f8ef14d-15ba-4c39-919b-64cf4b06481b": {"node_ids": ["0577199e-ba4f-4dd0-a938-17a606d65366", "91f16057-f48a-4a89-9f86-ac8f7aa997f8", "19d5896a-fc97-445d-8681-dfd116765743", "cc47862e-791b-459e-89e3-c699f515a0b7", "c9088077-e2a5-4e99-a4a1-1ecab2da78f1"], "metadata": {}}, "7c1a1255-277e-419f-bf65-25a3c3bb79d3": {"node_ids": ["d11a66c1-5a5a-4436-8e2e-95255d267a2d", "a256d415-64c3-4020-a7ce-1ad5879da92a", "b1cb113b-ada4-4690-9734-f748fbd1ffa5", "60c55969-ff12-4dbf-8835-0e175450bebe", "0288124d-9ec7-416b-b507-0d16b949ea40"], "metadata": {}}, "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9": {"node_ids": ["0ad48f78-7771-4ca9-973b-329de59c5957", "74c92e8d-c37d-4994-8f16-9774f830962a", "f27c9074-b3b4-494f-a038-8868d8699e7c", "d0d6d758-908a-46ad-9ac9-80eb23382aa3", "a49d4f32-31fb-46ed-8a07-b93a3dc20763"], "metadata": {}}, "11d2fa45-8ced-449f-9b75-4adecdccd93a": {"node_ids": ["61563d53-dbfa-471f-928f-453d993edecd"], "metadata": {}}, "d85cc9e6-7cd9-4481-90c2-203747d5332f": {"node_ids": ["6f8d0612-7b8a-495e-b432-848449530ef5", "3efac0a4-63b4-45b6-b3b7-8e7d63726cf4", "ebbdf27d-9fb0-4b40-bb22-e70ee50c1266", "c9fcd2be-9aec-4972-8fcf-7a0c3aa810e1", "11217679-d58e-465a-8483-cb4e02b195c0", "1d0ed90d-1427-47d1-9177-3950b71ff790"], "metadata": {}}, "4cb911ed-dec2-422d-a13c-15dce190ad98": {"node_ids": ["f07d1bdc-dcea-449e-bb8f-c05682e20beb", "ae5410e4-388d-4797-b322-5c3738c20f8b", "bc2b1699-3321-498a-81a6-9f48719637f5", "2fadb8e5-0985-44d1-bf4c-439d02261b8a", "bf60b907-e849-4d2a-bed9-a51e6c7ac729"], "metadata": {}}, "c6e4bcc9-596e-4d62-81ff-c43577daed77": {"node_ids": ["42c5463d-3edb-4487-a266-6d75f5f75a42", "03387317-48f3-479e-97e1-8bf14b82411c", "0f5ce71b-d34e-469a-8960-561329a4356e", "18c1b723-e724-4f69-b3c9-3d6f1b257dcb", "7ac46e1a-7f09-4ce1-b9ef-3378ce3c5a91", "33b2ea32-a369-4ed3-ae4b-083d94792b92"], "metadata": {}}, "15a861a5-591a-42ed-85e7-dfb2baa70eb9": {"node_ids": ["2873b237-50a2-404f-a5b9-b3182ae6a93d", "9ab93845-3810-4ab7-924d-4579965c4ea7", "b87ffb98-0f67-49f7-a5b7-e08642a88344", "f7efc4b8-c791-4125-8962-6bd68f325ab4", "dc143671-3bdb-442f-bca6-0141c49597e7"], "metadata": {}}, "b384836f-88bc-4aa2-8535-0aba633151b1": {"node_ids": ["caeaa5c9-ba58-4383-8799-217e673db756"], "metadata": {}}, "8212e847-90ca-4688-b6e0-e95181ddf3a1": {"node_ids": ["7d8e3982-1435-4d8e-91b3-84a8d006dcd8", "ace8cbf6-ae5c-4b81-a5b8-17ca7b742faa", "130996ca-43b7-494d-adee-fef6b4000d9c", "1c898484-1725-4fb0-99b2-c258e3eeb3bd", "4e53b794-cab5-4b6e-9041-1f0c4cf2bf1d"], "metadata": {}}, "bcbe1df8-d675-4abe-8d15-92624af70bc4": {"node_ids": ["ddf406d9-928a-425c-8325-dd91b7d366a4", "bbc78b89-775e-4c28-9a14-ed9c5f1422f9", "6ff47426-6103-4403-9cb0-00307e504431", "a54cf6cc-cce6-4dfc-ab0d-c8532fb53740", "375e50bc-39d5-4b0b-b7cb-2c61ce33f547"], "metadata": {}}, "8e672703-bba4-4f1e-9e3b-379fc6fe65c5": {"node_ids": ["094e3db7-6011-4382-a5ae-f6def0737c12", "56092edb-3c14-422d-959e-1c0e73dcf4ed", "0ff2c95e-1eff-426d-8571-93b49341fd17", "1e3216bc-6c08-4f8c-99f3-fb5ddf46744d", "4f316f1f-32e1-486d-8fb9-0f9388cd42db"], "metadata": {}}, "87ee291c-72d0-47ed-9d5a-9a2edcd579e5": {"node_ids": ["4db9cb2c-14e1-4c4d-8e01-ca94bd87ce95", "2f564de1-1d5e-4c71-a70d-e5610bf88a51", "dcbdde15-623c-45d9-9beb-dde9c0ffb196", "e9512d88-2aec-436c-a314-fb932aaa84bb", "0ae7c6e2-8b2e-4f19-9244-371ef3906376"], "metadata": {}}, "821dbc59-27a8-42a7-a88a-a52095ea2a16": {"node_ids": ["c661d886-7f8b-4f03-af5a-7fd9fee6b1fe"], "metadata": {}}, "c098625d-e8a7-41a5-abae-3bba4ea9de78": {"node_ids": ["7714117d-bef8-4fe8-a3bd-0bc726f35583", "d0112c5b-7c32-479a-97bd-9438fa1771d3"], "metadata": {}}, "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4": {"node_ids": ["4bb71919-2013-4728-9dc2-57182a1771af", "960ab783-6d27-45f7-a6be-49f2e7532c9a", "4d093e52-87c9-46b7-b75d-1ace03bf599b", "e0c03fe3-060a-4782-a41f-e4b6ffbc3251", "b401a653-d593-42d5-9243-5d83093798f3"], "metadata": {}}, "22d940f3-f943-4714-bc50-5bdfdbf66adf": {"node_ids": ["fede8ebb-dff7-4cff-bb80-6c6c4442a37d", "4bfc7226-6269-4036-8253-89c19406915d", "72ae79f0-16f6-409f-a4b4-4dc943ca566d", "576d392c-1d49-43f9-b9c8-16ff55b735bd", "6ffe8ea6-1378-43f1-a4d3-0d51afa4108b", "6824f290-dc3b-4d35-9c22-ed22ae19fa60"], "metadata": {}}, "72551f36-ec85-45af-bae3-5423db829066": {"node_ids": ["519c17ff-67c4-45e6-8c18-1de6f686499a", "787369f8-7ee4-44c6-9cb0-a49266145a71", "9a45eb22-2399-44c0-acae-288d0e5c2159", "41a86f97-3f58-409b-b9c2-023d13c9351d", "cfd0a9a2-4770-4314-95ec-13d2acd03e4b"], "metadata": {}}, "3c491f0d-e54c-42ce-abca-cf987967a63d": {"node_ids": ["3920b6b6-165d-4081-a2f3-fd4bfd11d94b", "503ceb27-2176-427d-aed7-28fb8851714b", "8068f1ab-4c29-44c7-ade7-6aa2eb3bc2ab"], "metadata": {}}, "b2135c83-d5c7-4455-9b06-92769a72c4bf": {"node_ids": ["b29e2185-6487-4a2f-a2c7-9b78c143ec49", "d82d9a02-ea07-4b3d-80d4-46e13aed9994", "dcf6a7ce-08b1-480e-810d-bcbe837a8b0d", "f9f3614a-c2df-412b-a822-4fa748fc2000", "6eeeb8cf-4c12-4ba5-b385-b41fdcc0156e"], "metadata": {}}, "3c2ac410-38f3-4b43-97aa-afe1918019c5": {"node_ids": ["a949e8c7-ffda-49a1-b339-a6f7d2f48ef4", "6e0b48a4-47d1-4675-ac47-cd8ccd583f4d", "def231b8-c1b7-4a00-b0f9-ec23066e1f7c", "40b4fd5c-9805-473e-9457-e0a1e6ed0a4a", "f48a29ad-f064-4f99-aa42-e6481ec00bdd"], "metadata": {}}, "bd6b745d-e8d9-495b-b6ce-333955638033": {"node_ids": ["a91168b0-6ea4-472d-bc06-b081330b168f", "03e47879-f991-433d-97ca-d48ea0af7b90", "100cdae7-28de-4cf2-94c3-38d7c46e8c91", "8be279ff-ef64-4fe2-a895-abba32d58c32", "36792f86-4b31-44ca-8932-bff12013809e"], "metadata": {}}, "9a9e4169-a13c-478c-942c-5617a4cbefcb": {"node_ids": ["bb7ca060-e17d-4903-bbaa-822ab0f66438", "f90556c7-c8f4-451a-8d80-cf4ff4c8e6cb", "054cbdea-b57c-42f0-9d70-1b33eab3ad34", "247ca1b7-b46b-47f7-8a5d-fa87c9ea9c0c", "24a3a044-c310-43f3-8343-b55d949c8ffc", "91b7b727-dceb-4096-bc15-abe813e5cbbb"], "metadata": {}}, "387374e2-778f-472b-a73f-092761fffd50": {"node_ids": ["1fc134b1-5260-4e17-97a9-4d799078b18e"], "metadata": {}}, "09e83244-0f60-4b37-9ec7-b77488731f88": {"node_ids": ["88561f61-11b4-4831-80e6-56ea5a7b8884", "9a58da2c-4931-49ac-a9ad-c0851876d001", "28907271-0aca-4c70-827c-4cfdbc72fedd", "ea32f259-157b-4a72-93fe-6cc2c06718b7", "cd2c91d5-fd7a-4565-9083-819f265ba97f"], "metadata": {}}, "e5e9c2cd-2b5f-4fd6-9865-9bd318289603": {"node_ids": ["3f48fb26-925f-417f-b515-d565b88d5f7a", "b77c2312-64b7-4e9e-a4ed-2f0b59d9dc84", "92d46532-8d6c-4397-b118-804cc96b6684", "8583080e-e19d-4aa9-9ea0-26ed3dfe5eb5", "4408b453-bef7-40ec-bc82-c8ab1e20cd76"], "metadata": {}}, "33a2425b-1dc0-4c42-b651-457a7eb4ba35": {"node_ids": ["6e6f86e8-1fcf-4d35-9d83-b0c80d88bf0f", "ae094239-1e94-41ec-b537-241ea214da20", "117fa4cc-c819-4872-aa98-ec9a6615e140", "23fa5541-1de4-4a93-ba97-e8e14936ffbf", "d7f57d8a-ab05-4629-b9ea-d85cf86ff64b"], "metadata": {}}, "a7a287e2-a5d5-405d-b204-1a9464cb02c8": {"node_ids": ["cd172577-bb20-4239-8779-41c2d9cc92d8", "98cb9888-1f26-49b0-99d8-5b1023e3f8a8", "5aba2019-cc1d-491d-b3dd-b7fe5aea8359", "5f2c8335-5e09-437b-9254-9146dc3ce4c0", "87d46d85-62c5-4f6f-adaf-439bff2ac8b5"], "metadata": {}}, "338c170b-8eca-4a12-bf0d-5a6a78a6439c": {"node_ids": ["7215347a-bec8-4499-b84b-87e56d7798d7"], "metadata": {}}, "df10fc68-725d-452b-abe1-a801e77316e1": {"node_ids": ["1fd2d5d1-becb-4b8c-95ae-4d22c81751ac", "466d7896-5982-4d15-8c09-ce1b2b499fcb", "764cb45a-c263-4c13-82cf-8bcc8614f18d", "c26462c8-5ba6-409a-bdef-d32f4af76e8c", "96935e3d-077e-4077-a34c-563046a4a9af"], "metadata": {}}, "64ef4e44-872f-4b0a-8ea8-d584657679e9": {"node_ids": ["4d62f771-970b-48f8-b14a-62e26bc7e93b", "6cad24ca-86e6-4ce9-a3f9-d4300a461240", "f3d6202b-fbdb-4dd7-843c-d4c69d693507", "9c6aa033-bc49-4f28-a70c-df8fb280f9db"], "metadata": {}}, "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd": {"node_ids": ["a5b29452-7cf0-4e7c-9eef-db750abfb1f3", "153ff03a-7a5d-41b1-a225-d33f096a08d6", "983f6bcd-90a3-467c-b5c7-046b750315d0", "8a87b86b-963b-470d-b6e6-926da66a50de"], "metadata": {}}, "963debed-7070-4f3c-96e2-5ec66d6c6847": {"node_ids": ["965dbdc7-9602-43b1-80bf-018976ad93c0", "245d234e-eebb-4aa1-b998-0442e66a44a9", "18f178b4-7cd9-48ff-b80c-6bb76112b9ef", "d2ce0a4e-ad12-400f-ad9a-61193a02b616"], "metadata": {}}, "f709652a-4211-4c99-bfdb-564137f3c1ff": {"node_ids": ["305cc266-361e-46b0-a7ed-0229ed2dc951", "321fcb63-d95c-4677-9785-63b5f08cecf9", "1498a664-7df3-4580-80aa-da852b9765ca"], "metadata": {}}, "71a03883-c942-459b-b797-21604e74eac8": {"node_ids": ["6206d07c-1153-4eb0-bc74-d43fe861a882", "42583b1f-8492-4241-924f-c9f3b6a52fa1", "b890cdf5-63e3-4f21-a765-e24e1f50978b", "b384dcae-5512-4c33-a499-3776bfcf85ca"], "metadata": {}}, "184598be-7970-47d5-8ba1-3495d65a5982": {"node_ids": ["94bc3331-64ca-49c4-9998-97c7e964d574", "0f27daf2-26b8-489e-8cb6-47577e9d8900", "b33651d7-e2b9-4b0c-8002-33c07a7fe702", "8bae23d5-e668-426c-bbcb-018a6807a5e0", "f43a0660-a0cb-49c1-93fc-21f7354cf830"], "metadata": {}}, "4fcae3af-5c06-43ee-8163-850e87e5b408": {"node_ids": ["53c4be28-95c7-496d-b8a6-b771eec1ff8d", "a27df6ef-1e79-46b1-8d46-1bd60daa381e", "9e0e8481-7aad-43d0-a105-05a7a37ed67f", "5712e442-71a5-417c-ae70-c10634cbdd6f", "bed55be9-7411-435a-9b92-c6246b7a935d"], "metadata": {}}, "c1b517c9-af44-40ff-a58d-2a9900695b35": {"node_ids": ["9803418a-96e0-4315-b2ca-cabf46837209", "d808c73f-e825-461c-95d4-b0bd0b5b074d", "46339c77-c80c-433c-8ecd-43d5323a2965", "4baa4868-a654-4e4b-93d4-1eb0d850dc63", "fa8c8e40-60c3-42d9-9104-22fcac806347"], "metadata": {}}, "ba92c151-064a-411f-8f21-6a0dfa57c3c1": {"node_ids": ["7a3cd01e-bd8c-4508-b023-1f030efb5d70", "8b93a573-d8fe-4e04-a22e-a7dd5095aa52", "82c157d6-1485-4ff4-8229-f9693af9d444"], "metadata": {}}, "e4630f66-e9d3-400a-a896-6014b851892f": {"node_ids": ["a7b511c6-158d-4432-a2ba-a964d7dc3433", "7c1c5a46-c21e-4dc5-9b6a-9a3a646b4e86", "26cffffb-9a18-4402-803e-119aa55c4994", "7bab914d-da19-408a-b3bf-592abf88699b"], "metadata": {}}, "1368a402-6ab3-453c-a888-6ab05bf57a23": {"node_ids": ["2b7f456e-3a0d-441d-83f2-c29e2ff448b4", "79bd5447-1e29-4695-8cb8-96d6a94888f1", "e4e26d94-d41a-4612-a630-935e50c8be7e", "09b30c55-035e-442a-a6d5-d7c0850f9669"], "metadata": {}}, "4efa7cd5-9fdc-4d27-85d7-da34c73536ef": {"node_ids": ["e8ccf3d5-5a82-47b8-b11a-5e88799e669e", "9fcdb236-aa42-4a0c-a3a7-858e913b4446", "0a36c17f-5fd7-4296-933b-c9a39f290a66", "9240184d-6865-4a68-89e9-ef3c72284881", "432dc6bc-84d9-4165-9774-2181e5498835"], "metadata": {}}, "d625f540-381d-499a-85ff-aa967dd9d39f": {"node_ids": ["db38802c-2b7d-4ed4-8da5-a489be6f4af4", "ea4df9d3-e098-4ea5-bf19-ac641a1ec025", "74dc7ca9-d179-420a-a225-0df2ef70fb95", "13407554-22ae-4438-a991-08c9b06c15e7", "a81b5efe-769a-4b67-8d91-eb489f5d2f1b"], "metadata": {}}, "c89d5173-c1a7-4bbe-8064-2fc75161e701": {"node_ids": ["4a4cea12-5d79-406d-ad3c-21d9f227f854", "c0b1a7d4-9a50-4cbe-bee6-6f62ff47091d"], "metadata": {}}, "f80aa8da-056e-480d-adcc-4ba7e1121390": {"node_ids": ["90bd322e-2faf-4ed7-8261-65b54e740248", "7dded2c5-45d0-4ff8-9d74-34616469c23c", "5d467a4a-07af-4842-921c-2651fd28f6c4", "5b5b9057-ea0d-4db0-aef6-e8c7f9608235", "99560ed0-b14e-43b7-8a97-ced0c5f26c4b"], "metadata": {}}, "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893": {"node_ids": ["9ee7b1a2-dca2-425a-a2a4-f43643002188", "c5d6ad3e-9d97-467c-b9d8-84af28a314a7", "a8304d01-ae23-470c-bf1c-7c60396dcad6", "6462a0de-f05d-41f3-9829-6df044c4bdb0", "1a065996-cbb8-44e6-b2a4-b9f5fe3b281f"], "metadata": {}}, "ccce360b-35a4-41ed-807b-5331211701de": {"node_ids": ["31e12560-acbf-4c47-8b2d-96ad0f84d2fb", "9a4a0ea0-3fdb-41c7-ad4c-1039d675776a", "c9b28730-67fb-4a58-877d-f3d99d4fd21c", "225b5ae6-a81e-41b3-b090-84bc9dd0d278", "e6b59695-4da2-4acd-82dd-25e8d006d49b"], "metadata": {}}, "db0aa27b-ea92-4876-8486-17599745f512": {"node_ids": ["0d3b2897-8759-4e5a-b14c-e805f5e5ea97", "1ccfc152-03d2-4f6e-af81-dff5ba9055ca", "a82aa6c0-6adb-4ef3-810a-72479dd78648", "6f492e26-fa96-4d6a-bc71-14dff335e96e", "5a51a28c-2d72-45ad-ab74-730d1d8fc4cf"], "metadata": {}}, "5e42b7ba-699f-4007-b796-b1828f7088eb": {"node_ids": ["5dcf6c8a-9ef8-40a4-becb-54fddc67d134"], "metadata": {}}, "568e0f92-74aa-4a54-a55d-b1b7a1bbb066": {"node_ids": ["0f79fa48-9598-48f6-8911-8dc6cc59c128", "e6378a24-0227-4c82-8511-8c028cf5ef3d", "fb5fad50-9e27-4fb2-929e-0db25688f5af", "0e1af8fa-2b32-43cf-9927-e5001c9051df", "4eb1dcaf-b8bd-4898-bdf2-c777104d1c5f"], "metadata": {}}, "52cf35a2-f41d-4c76-b56d-8ac809eb1556": {"node_ids": ["15c961b8-fcbf-4ad8-a360-a4dc78ca4691", "6a8d2732-afa0-4cf2-8e49-5b70a0c1a13b", "5c01e908-9c6b-4c09-b732-9f9441441f6a", "4ddd9932-61e0-4107-8d22-e25f53b88f28", "04a87901-9db4-4399-ab2d-afe1f0dd996d", "c978d67c-bbcc-4149-be14-2bf06746d9a8"], "metadata": {}}, "04a4b035-21c1-4369-9c6d-2c8256b1e9cd": {"node_ids": ["3269e536-db30-4391-a2ba-a53cd3e3cf78", "6e821d96-904a-44d9-b391-308b59e81bd4", "d1ee1453-3be7-4752-8d36-d542ca0eeded", "1e41f815-cb98-42c8-9107-72f71d09f1ae", "0da85683-9ff5-4f0a-9eb0-1808af60e198"], "metadata": {}}, "8c3144f5-b808-42a8-898e-1ba57ab8b253": {"node_ids": ["135d8eae-9240-423f-9b09-448286bd0ca0", "08851b7d-3d0b-490f-850f-eab8d0d2e0a1", "a2ca7a63-6dae-416a-bbcf-defc21b90eab", "e61c134b-dcda-4ab9-a832-12457053398e", "2f7c3a15-dd9f-4072-a660-518dad9b734f"], "metadata": {}}, "30da43e3-e957-4749-833b-2a3da21bfd1a": {"node_ids": ["cc281ab0-2e4d-44b4-8c27-82ef456a8256"], "metadata": {}}, "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5": {"node_ids": ["a42c78e1-e356-4f59-a55d-73bf8c091375", "ecf1b2fa-45bf-4b80-ae9e-4d2b64fdebe9", "dd0ba1a0-a407-4c2b-af60-bcafff85a92d", "909bdfb2-03c6-469e-956c-0a85b73df27b", "4a10f491-2852-47d6-9e10-c633b60ef81a"], "metadata": {}}, "e3d9a200-8d09-4a5f-8057-525d40945061": {"node_ids": ["95a447d3-6ca9-400f-8337-60574b1cada5", "be7e36ef-fe2e-4e90-b70c-7a50ad7fc22c", "7f8ae9c4-22d3-4550-951f-0f0f82d23c2d", "eee39ce9-1e38-412b-a0e1-6093f069dcad", "9eea42c9-9132-4606-b947-d1feb67f85d6"], "metadata": {}}, "2f30528b-8b87-4916-8530-b167226ec7c7": {"node_ids": ["0b25c7cf-6f96-448a-840d-eb23b7b27cf9", "9f4e5765-af3c-4cd0-bddc-330785d407f8", "38a42ca1-e7af-41ef-b721-a3f02034f28c", "b4d490c7-956f-4df8-9f26-17f447afd45c", "52384559-246d-4e74-b894-844451d98bdd"], "metadata": {}}, "627089ab-2bd9-485b-a802-bfa4e68a989f": {"node_ids": ["562b22f2-c306-4f43-a2a8-105c451f87e2", "698fc5ad-21b3-4381-abaf-27e51cd07f06", "2e9e5cc2-9d95-4f21-8e70-3343c4119b23", "38deef60-5953-4ce6-a948-7534442a8c79", "1037093c-fc66-44ba-91e3-78a995e518c3"], "metadata": {}}, "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7": {"node_ids": ["43a2dbee-6d01-4401-96a5-61c873838777", "1bcbffa3-1812-4ad0-be4f-c849e40c34d3", "c6d8cb3b-a823-417c-b781-8a6bff348530", "3e60a303-0647-497d-9c1c-f07a7abff7e7"], "metadata": {}}, "09a2726e-0481-410b-ad8a-2b781b5ace20": {"node_ids": ["b2cdd11d-e256-467c-a3d8-aea0cacbcc29", "0b373152-101b-4199-9214-e355804544d3", "37e282cd-edbf-4c07-bc1a-c6019e9cbf42", "e8d348cd-8002-4444-9eaa-f1345eab4532", "13810b79-ed46-4c11-9300-86270dd789af"], "metadata": {}}, "c16c3890-e372-4b47-a635-f842b511fff4": {"node_ids": ["ee3fb77f-1d14-42f3-9f2c-b843ce1b8aa0", "9c2df3ac-ce65-4b47-8816-9ad2cb5c8d7e", "a078ef6b-980e-48ff-a909-46d93ae4a576", "ee55230e-af50-484c-ac4e-33b78e3c093d", "9a520d63-0b4a-480a-b1d7-906086648372"], "metadata": {}}, "57c6c99b-d287-4b37-a3f9-cd0ee460b000": {"node_ids": ["7f18dfb3-09c8-487a-b978-594b096af9a6", "fbc49e2e-35d7-4b98-8097-548fcae36e3a", "cc9ea388-20a0-40cc-8744-1723d241030a", "8a0cdde4-777c-410c-8c7b-8f6e3fe52755", "4722ed5a-e26f-4db0-a771-b57818810a64"], "metadata": {}}, "d1f6a34e-8c7f-410b-8bdd-805c045f2402": {"node_ids": ["ded51de2-58c1-4f23-997c-f2444c442fc5", "1830f899-bf77-414d-9fc1-601092e0fccd"], "metadata": {}}, "664de977-ff5e-4562-a767-60f5d1a97172": {"node_ids": ["2872a7fc-b7f0-43fd-9ace-fe70645eba38", "6efe5fe6-5200-4bf0-bf2c-b04c22545f9f", "2508fa31-feed-4f9c-9e0f-89fbb8810d5d", "39ab40c2-69ca-4a43-92e5-6f41d180871b", "3cc1cf4f-4887-49b0-bc30-d942f3571db2"], "metadata": {}}, "5da86237-d9b1-4d3f-aed2-88d87c182a46": {"node_ids": ["89922951-0d4a-49d4-9878-8a3d41466751", "bd3b3825-3d0f-4bcf-893c-cfe106989f76", "e90a575a-261d-49e7-ab32-6bc4d8c8da9f", "0959a0e6-e2da-4e24-be50-6be1d624a89c", "46ca73b5-0fc1-4ecd-8104-4106acfdb6ef", "d9846b04-65b3-4668-b41a-07d864932ed2"], "metadata": {}}, "8e88707d-a88e-455f-a7ca-5b8112f2f9f0": {"node_ids": ["d141017c-d986-45ad-9cfe-3835daeed41c", "8620ce5a-a9fe-499f-bf4d-5a767ec296a3", "f8f8943c-d4bb-4480-9bbf-8ddd6832935c", "8b06359d-3771-435b-a372-59189b4aba2f", "6cdf2fb2-48c0-4e93-8e2e-20750f82d678"], "metadata": {}}, "6ed9369e-5a39-46e3-a44d-6d2203cc83d2": {"node_ids": ["e8006a70-a8a6-406c-bc72-fc569ef4b07e", "443bcf4e-cd91-42ee-9d3e-da5317cdf5c4", "6f34f248-9736-45ab-aa35-8c61a58027a5", "8fd64ac2-9f95-4894-873c-946e502f7445", "bb31d6e6-f4ed-4f46-82e3-67516f40b86c", "21459c43-c8f1-49f9-ad53-a23a01658233"], "metadata": {}}, "6182115c-f574-4e4a-a6a3-e3380a7b3e7e": {"node_ids": ["dff98556-7886-4d53-bdcd-28c669565d6f"], "metadata": {}}, "c4a72ba1-e946-4d10-9441-7af1ecc87ee4": {"node_ids": ["54393072-7c19-4be3-9772-c8c379cdd4d4", "a716c2ee-d2d3-4cd1-994a-18b41d64d398", "dc3ba930-c2fa-4ba1-8465-93832129cc79", "4ab420e9-d5ef-4d97-94c0-e7356e9927d3", "6056e648-c18a-4623-b3db-f5e736cf2637"], "metadata": {}}, "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1": {"node_ids": ["1ac86fbe-a417-47c9-9e2e-6c14fbafbed4", "8427e9f8-72a5-4e2d-895d-3125dff55c68", "c266ed46-1c9c-4292-8658-65455e726ff5", "0a315078-9dca-4f36-b5a1-562e08e347a9", "b57869ce-b7c3-4a64-ab43-fb4019e9e285"], "metadata": {}}, "154e45bd-a51d-42d0-807d-deee29626d3b": {"node_ids": ["13436a1c-f61d-40aa-a204-7dcdf965ff4e", "2a360f7d-df7a-499b-976b-5de55b38e5e9", "640aa4f0-1e90-4d45-ac32-8ec5f52eb41d", "c2a81f52-9b2d-40ad-89c4-6f0bb9277ffb", "40138fea-aa69-44bc-836d-a2817608f3b0"], "metadata": {}}, "39b97a34-dc97-48a5-aaab-ae3980088068": {"node_ids": ["ffde2f1a-0aa1-4224-97cc-8ffe3f990812", "355fe1e7-f963-4b57-a43e-269d129451a9", "c5c4b40b-7e7b-4706-a829-b9e30c5a6d86", "55b49e46-8231-488a-aceb-eb95697abe6c", "7bbe043f-a244-4bb6-8136-40785442a1b9"], "metadata": {}}, "f9dc9003-cf40-4cb7-8940-f9a7378a3131": {"node_ids": ["4b337b71-a942-4f95-a9b0-8aec46ee3086", "e93c47c1-1a4d-4484-8aad-94e1c468b224"], "metadata": {}}, "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4": {"node_ids": ["ef006118-f471-4824-9d54-c9831da9cea0", "1241dfe3-334e-445c-bb28-d4bd5859193d", "bf99aeaa-e2d2-4c54-aaea-3cbfc1a2af4e", "c3a61a5a-9a57-4b45-be5e-8189b09df34f", "86f4ee88-f22b-43f3-8b26-6b9adcd62338"], "metadata": {}}, "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b": {"node_ids": ["eb98d67a-da22-4edc-89a6-87b01366fbb2", "65312112-b538-45c4-a0e0-bbc7f9e2a1f7", "65424a7f-5f0d-4be8-805b-f7fbc6415655", "770ea4ef-7db9-4018-be0d-939c6d6d5e75", "3945c568-a2b6-4c94-a898-ca0f073ba23f", "2ea3a0a4-db4a-48b2-ab4d-73e7fbdbcd1d"], "metadata": {}}, "7f20524c-21f3-4cca-8645-a5e54a1fe9c5": {"node_ids": ["7698b87b-8d6c-4899-aa44-22795ccb7b33", "940bb3fa-5e21-4d5c-b22c-505d38ee2ace", "0b90ad7e-5a41-4f0e-b029-70451bcbe8fc", "38c78570-11ab-41f9-a69e-b19a39338335", "ef078c9c-afed-4edd-acc6-2bde4561d073", "723caaa0-5ed9-49e4-82b7-71921282a571"], "metadata": {}}, "a110f60a-18c0-4758-9856-6998878bc107": {"node_ids": ["aed1f523-7c63-4220-82e1-62967df4ee0e", "07f7368b-2a21-49eb-8d75-34d079492665", "50ef89ce-ee76-4f86-ba32-1e0ce0d58eaf", "ca092f8f-3ef8-4958-84a5-a0c8acea722b", "2fcef97f-0f57-42c3-bb08-d3a29f982e95"], "metadata": {}}, "9570f67f-24c1-4375-8cef-3d21e8424125": {"node_ids": ["69a1468a-bf0d-466f-a014-bb02feb1a75c", "7f01b877-d71e-444a-8c59-64630095215f"], "metadata": {}}, "7c232982-940f-4368-aa32-de082a86d3e3": {"node_ids": ["cba71f56-26a3-4e6e-9f7c-5b150e86f8e0", "84fbb92e-5a96-4320-a956-f4ef22be3715", "81a50b6e-0411-4e6d-8534-52a74e0a0546", "62389c86-bb6b-4ba5-826e-3d23fcb3d30b", "ddeb5938-2f62-4b78-9a62-e6a8319a0c88"], "metadata": {}}, "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09": {"node_ids": ["748996c0-df81-4ea4-845a-4f45ff0a5ffc", "6e345121-7b60-487d-b52c-b1e83f90dbd2", "5cbeb82e-4b5c-42ee-8720-d886dce28696", "6a997008-01b3-4220-966d-e6162d01f4a9", "311e00f4-52f9-426d-ab60-02dc6c173f4e"], "metadata": {}}, "054fed5b-36d2-43da-aa06-ae481e91c1d5": {"node_ids": ["78a60409-748a-4389-bb04-17d778acc523", "0883a13e-53b7-43f4-a827-f1caa7f523c0", "e4d48728-9c7d-4eec-a6f7-ece4bc1f93f2", "c37fcfac-e84f-4814-b17e-7cb612f14b1c", "6a04c896-bba2-48c0-84f4-d6edcf349507"], "metadata": {}}, "e043331c-76f3-4333-9839-e0485251b84e": {"node_ids": ["ad6d5608-ca39-43eb-9a4e-3d009cb736bb", "88af895f-79a3-4d28-be8e-87e2ae1ee3e4", "bd464783-b7ef-45e8-a5e9-2501bd330b71", "37b83dcf-29ac-42a0-a7b9-21cdb632743b", "f1e2ae35-a5fd-4405-a687-435321d65707"], "metadata": {}}, "82d4131a-dd97-4e60-9cef-a3d325b5bf06": {"node_ids": ["b6e54add-e37f-4f79-9631-c4e851276857", "75fdbcf3-c634-4f5a-9813-742beb539cba"], "metadata": {}}, "82deaf68-4a9e-463f-ba6d-bbf2bf79068d": {"node_ids": ["a139793c-f41e-4034-9329-ba8027448489", "b84cf7ed-6563-4ef5-8f17-e46f84f1f1d4", "99a7d8b7-dea2-4b36-b361-22726e9d6ab3", "0a757b4f-27b4-4815-ab07-91e1f863e5ea", "f211b5b6-4e8d-4502-aa93-86ea66d74dc5"], "metadata": {}}, "c6691f0b-8062-4071-a412-2655ff6353c7": {"node_ids": ["1bacfb2e-54ab-4fbd-8919-073ac4fee14b", "bb513908-4dcf-4847-a40a-841cb05f958c", "96860bce-6b4b-4bb2-9d51-0061ac9a25fc", "b6e19b57-9b42-4a23-b4cd-aa4173c67352", "3e76224c-f86e-4e55-81b0-9d22f11fb5ee"], "metadata": {}}, "8c19038e-ee4a-4c6a-98de-106902cc08e7": {"node_ids": ["84f15230-8f5d-4cd7-a73f-6f5a48e1cdb9", "9bcecdd7-150c-4362-9436-57a931a59efa", "524c17d3-1318-4944-9caa-e86e167f989b", "afacf485-f5aa-4cd5-87c5-a593fb8fc08b"], "metadata": {}}, "765b53cf-7565-4d78-9d06-f5b49b92ad62": {"node_ids": ["2b425d7e-e5b2-43c4-91c4-e413758dfe0f", "8ed72ded-7ebb-46e6-a73e-e9a943d25ff9", "376ef81a-65d9-46d5-9cb2-6b268a22b204", "f153a87d-c188-45a6-89ac-390f1bc4d48b", "5577ddcf-d70a-4b99-b7df-5d992f138553"], "metadata": {}}, "2b074dca-a7b5-44e5-a3df-e0f548a256ca": {"node_ids": ["009f5a73-a8af-4a0b-aa41-a1e07008165c"], "metadata": {}}, "b8a473ca-f564-47fe-bd55-7f6f66a1c437": {"node_ids": ["38dad7ef-6574-49af-9aa8-6c7d173eb5ad", "f4be7bf4-d5e9-419a-bf13-308b1a4d04c5", "cf48e7ea-2fd7-4988-b4fd-7b34e174bf8a", "5de52c00-221a-4a60-a3b5-3b93bbd53930", "85378cce-603f-4964-b2fb-6994fc2751e0"], "metadata": {}}, "a78d9801-10ce-40f5-90fc-4051935c1c3b": {"node_ids": ["a2ace353-6b5a-4656-bfa8-9b00d255ab81", "fe7fb1d1-8389-4a3c-aabd-50f7633b81bf", "292f08cf-acab-4303-ae18-212c0a7e662b", "dd134712-a875-427c-a4f4-40928b64e25c"], "metadata": {}}, "df015e01-533e-4c7f-bed8-1c62a7660f60": {"node_ids": ["2476ded5-8c65-4c82-9cf7-4e70b129fda1", "4fa2fadb-ae8c-4610-b60f-76dc92123353", "80206edf-53fd-4a16-ac99-f51c4d6d1e7a", "c1c1fc32-bb11-4eb8-9cdc-7548fd5e73cf", "b25ddbac-0143-4838-bd9e-ec5129dfb1d8"], "metadata": {}}, "20f35ed4-76d5-4170-ba0e-d1cd49ad268c": {"node_ids": ["7be33ac1-ed56-4410-bfd9-3036bec55876", "4219af62-5e12-4118-8568-f68e67c1ef7d", "18d2d7ec-3be2-419b-87f9-d13b161411c8", "d4d42589-937e-43e0-b715-3f4cd06ecedd", "421d5d5f-ae92-4d16-a74b-04955f99b689", "fc41a6ac-8f25-4926-a478-cca9612a8a41", "b247b6ca-fa94-432c-a2a9-b73a8a30c7e2"], "metadata": {}}, "ab1258f7-6968-4bc2-aa6f-2be71e1b0781": {"node_ids": ["9df99e41-deca-4ff6-926b-093b90ca3a86"], "metadata": {}}, "ba89739c-936a-4a98-8eca-5a7a68aa46d6": {"node_ids": ["18c81449-2c53-4343-9de3-7685e7a945a9", "3583da8e-d7f3-4bbb-9a1d-28c342b525da", "1655881b-f265-4dc3-925b-904c584e1f82", "7912cc16-945d-4284-9ecb-2eb6ce729e03"], "metadata": {}}, "038d6614-5edc-4833-a36d-2cf1d74802e9": {"node_ids": ["4611b322-6f35-421e-9a52-a313c6079dc8", "596cedd6-c530-4af3-b5db-cb6e05345f6d", "0831e5c4-84b9-4ec6-a383-0cfb49a329ff", "7461f993-a9b2-4119-87de-15a9b58d135d"], "metadata": {}}, "7126d10f-33d9-4f69-a95d-4663f4e18b92": {"node_ids": ["c68847af-dd34-4ef6-9343-8fd25b5f421d", "82d6ed69-4dc2-4406-b7c3-6ceb5c7455c5", "c0bd485b-8372-4438-8b5f-6c44f424141a", "6165b090-90c4-4fb5-bd6a-d01fb82ef377", "830d4ce9-cac9-423e-9548-0ff427dac856"], "metadata": {}}, "cef8d741-5446-4507-8d14-60ce39224714": {"node_ids": ["58376796-ba93-4601-8a86-791f0ad4b85b", "32f87a88-6dd9-4ff9-869a-a465bcc1610e", "58d8aa90-c64b-4ada-8274-d89efa13986e", "ce66c3b1-747d-440c-b127-a28657981a60"], "metadata": {}}, "247961f8-fee5-4ba0-9112-6fd68356d38c": {"node_ids": ["05f7b91a-c82d-4f09-987d-1354483ab246", "9d6f4d52-e242-490a-9cf5-c42b4652ca38"], "metadata": {}}, "d1cd7a41-58a4-42dd-bd35-6459226f65f9": {"node_ids": ["99b9f47a-12dc-439e-aa80-dd27bf4271ac", "baf39b75-3a17-4802-baef-b7e1ce3b34cd", "7b2900d2-e341-4ba4-8e0f-f5b37a0f0189", "4fee084c-0639-46d9-8d25-69b264362404"], "metadata": {}}, "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7": {"node_ids": ["6fbe5bec-3181-49fc-b8ee-0409e2fe711a", "3e5e6fd3-3312-4969-8cb8-b2b72bdb2534", "2cd6dacb-6650-4cdd-8270-d44e5512be62", "03ad6a5a-adac-4ac9-ab29-cee87b82a128"], "metadata": {}}, "73223af2-f20f-400d-bb4f-268ff7815ad0": {"node_ids": ["445abe43-0764-45c1-ac2a-0b48e1c2c6b0", "4907c2ac-f351-4641-a06c-11e130800742", "298354ba-52ce-4105-817f-f17c74376cca", "d1a5df0d-bd6f-4aba-8423-9f43e5951535", "5ec5c673-098b-4472-9067-ff417c82a766"], "metadata": {}}, "01daae07-70a6-43ed-8896-0418267bbd6a": {"node_ids": ["62765de9-8293-4372-96bd-87dc74359ceb", "d07c02d2-96f1-4a98-8a25-ddd7941c1f9c", "74c9a4e1-2b02-4f49-9256-965662bd0939", "cd23d1c1-8d17-4b8a-ab9d-f19be8da2a9f", "8d0744a7-668b-4b09-8336-56b024e6edd3"], "metadata": {}}, "86ef810a-d22d-4f17-befc-4f97dd8d22d2": {"node_ids": ["930db822-b155-4a9a-8d53-8eab621e98b6"], "metadata": {}}, "04be5b4c-ca50-4ba0-9f46-155a04b68c78": {"node_ids": ["cf66fd5c-d762-4aff-8db9-e1013fa74219", "7019b8a6-f42f-4837-919e-32b27c76498a", "55a511d7-d7a3-4c0d-b287-6766efcaac5f", "12924ba1-b6c6-4f92-80f3-a291388fe8b0", "e4565393-4c62-450a-af8f-b69ea991326d"], "metadata": {}}, "c01acb18-9f36-4e8d-b563-46169bb6724a": {"node_ids": ["e165a9d8-d1e9-4534-99da-de8081928cd8", "0ea7aa75-1dd5-409b-9538-cab43ef61517", "0281183b-80e2-4daa-8552-0d6cc5e8c484", "4f32007a-9d77-4d55-a937-57acdecfbf03"], "metadata": {}}, "fe322443-9f9c-4894-9d41-59040db525c0": {"node_ids": ["5ae5b141-e04a-42b6-9a34-1ed37340cd7e", "3fb53d68-7a58-4c8a-8bf4-87e2dfe04b0a", "b8a36283-6d70-45ba-8bf3-5d325f530264", "b818744a-6f81-4afc-91d1-9fa195615bd4", "e9d49e08-7c21-4e9a-81c8-ac4cc2e0e4c3"], "metadata": {}}, "48f44036-107f-419f-bf8f-f4ccc9bf8839": {"node_ids": ["46c6dbc8-05f0-410c-9e0f-c2b8fbf4f6dd", "d84281b7-94af-4a97-a42a-c7598800476e", "8a39292f-9ff0-4566-825a-68968d95bd8f", "09596724-639b-4b6d-b242-42c3a2cafc9b", "03715c56-d486-42e1-84c6-ee545c04b46d"], "metadata": {}}, "d0292a66-da79-4af5-aef1-d6c1049174ee": {"node_ids": ["d83e2f28-88c6-4a87-9b48-bb0f5bc45f57"], "metadata": {}}, "286425d5-d677-4a41-a64e-26f6ad3a0da6": {"node_ids": ["949e6d23-0b8c-4597-84fa-6cadb6b1f450", "ef8c56a3-8282-44dd-9671-1d4cc3215316", "9f49097b-ab25-4492-93ab-f0cfdcd6012b"], "metadata": {}}, "9d81d190-519d-4621-ae61-0c46ca4d50a9": {"node_ids": ["b15067b8-789f-449e-8f51-43b4378cf77b", "8d42cf75-f774-4a70-a495-fa66f170ff51", "0d2f4d0c-c688-40b4-8a95-952e2e15bfc0", "0fbc2e46-da9e-467a-aa38-cfc6de24c614", "f65629cc-8205-4271-aab4-5a4312022559"], "metadata": {}}, "0e4e24c5-2f32-40a1-94f6-95f45665d27a": {"node_ids": ["d5eda6e2-08a9-44cf-9885-ab55bb7e9632", "11f6cf1e-4bc8-4cab-bc97-8f6e9dfc9de1", "c882face-3ddd-46d4-857e-ea76dd01afb4", "bfaf903b-a589-43f6-9961-b11ba89b8854", "1968188e-7731-4e04-8ebf-c5c07fe83736"], "metadata": {}}, "8759913d-865c-4f74-9d55-3017e37d91b4": {"node_ids": ["372f1532-8ef2-4a7b-96c2-e0da12bcb1d3", "39fa2e1a-4513-4125-be6d-a3fbec3c5391", "bd84b8ba-f308-4d3c-922f-a63d059a2657", "3f1acae8-83f4-4cef-9f27-6fdeb5bee113", "4bc13663-1e09-4ea3-ac6e-6798c452a91b"], "metadata": {}}, "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24": {"node_ids": ["f9aed1e6-edab-4f5a-be13-9a85b0d806f3", "1f530631-fe7e-4ea1-8957-97936e95ff1e", "6b510875-83ce-4659-a050-bfa0ef8ef3d6"], "metadata": {}}, "40ebd08c-c34a-4c09-baa6-4fa729a72959": {"node_ids": ["b8efd933-7dbb-4d34-ab3e-d033f9cdc242", "d8520a7f-84a4-4e0e-8e83-a4634470a5f8", "00c645fe-b22b-4a55-820b-bad248c0f88a", "beb6abd4-79be-40f9-aa24-6e1db2c45118", "5177bd74-e433-45c8-9640-f64fab7455aa"], "metadata": {}}, "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70": {"node_ids": ["9846b948-028e-4d12-aea1-8b41f55638d4", "8d80cdbf-7524-46fb-9a3d-34c75c0bf1c5", "264fe587-7d33-448d-804e-e163e7c9de53", "c507d608-441c-4d1a-9709-baa02505ac28", "cb30bb4d-a47a-414b-9c79-d9cad1b89dc8"], "metadata": {}}, "7ee1d53d-6569-48f0-9eec-f32d9b4affe4": {"node_ids": ["59c32184-e5e4-4649-ac3e-1a303bcbcd1f", "04e05e96-e8ac-42d2-83b9-ab87641b140b", "0233cb17-25cb-4233-b6d7-c129b1ad5395", "b1d24b2b-7c49-4cdf-b6be-a01329053673", "35198889-328a-4933-a4e4-47bef39cf559"], "metadata": {}}, "f904eeb7-5f38-4ded-9b6e-82f4d2986316": {"node_ids": ["8dccb543-77f3-46f3-a5c5-44072861b5d7", "29195ba9-e065-431a-8dd8-a8e519cad023", "a22e57da-699a-4823-94ea-c3bb70232920", "6ac06141-9f97-4548-ad07-3650a62157bc", "a48e7990-1575-4b80-8df3-6e725e4c6f17"], "metadata": {}}, "b038c328-0caa-4be1-99bd-e9e4bceb30b5": {"node_ids": ["7fbbb742-7b71-454d-a50c-9eeb048ea353"], "metadata": {}}, "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19": {"node_ids": ["4cf9f21e-0c30-4c8f-b0bf-521eba867bba", "5af83030-6aad-4126-a9ef-b0bc77aa540f", "407b390a-e65c-4c34-8f94-c244910b8997"], "metadata": {}}, "2c09e34d-5c80-4675-ba51-9da9b2de6e68": {"node_ids": ["f55f0f60-ffb4-4a71-9221-4c60f592eb60", "bc9bc022-2a29-4cf5-9fd8-e1d050157557", "aa0ff2e3-a3c3-4127-b732-e218bac3e714", "ee21da57-786a-4b89-968d-023f598575c6", "b43f1625-a2ce-4867-a68b-f9def6e36d22"], "metadata": {}}, "e5867d46-56e8-4485-9627-2dbf45487f95": {"node_ids": ["ba76b114-43a2-4950-919f-e3e3dbcbf86a", "87ec7b4b-2729-4e67-805c-62426258728b", "edecd0b1-9066-4f98-976c-a0c894554643", "a2094ca8-69c8-4279-a4b8-54d7016a3a67", "206b0777-a998-4b40-b119-d4cbdb335f45", "dc7a2dc9-58ee-478d-b945-e409383334f6"], "metadata": {}}, "117be70c-93da-4351-b313-0892a4bff3a0": {"node_ids": ["d752f7e7-ab5f-41a9-a2a8-1f39f8338397", "2cc40d4c-d959-41be-b8a7-d569a48eccae", "5bbe7983-9422-4e77-ace4-24d65ac0f7f3", "425efa9e-e1c3-49e7-a1e6-4c777f2a5177", "3f8c1072-d305-4515-bbef-30cf55df4a4b"], "metadata": {}}, "2f2c2788-719b-4bf1-aed2-830e6802d26f": {"node_ids": ["247470a6-5590-464a-b095-84bc71d0fa16"], "metadata": {}}, "bcb4d2c6-ed5d-4162-a657-83d89cdb751a": {"node_ids": ["cbc35541-45d1-4477-894b-f311df75f13f", "ffc320d3-fe79-4ea5-a290-024fac04f277", "e835e945-3306-40be-a0ac-552f586827a2", "735c94b6-9f76-4236-8a0d-eab7a60e6b80", "72d079c8-6923-40f8-9643-69172452565a"], "metadata": {}}, "92b7cae9-3fb6-43bb-af73-506d0da831d5": {"node_ids": ["da01ed74-b897-40c6-bea0-66e9c80aea3c", "6cbbc6fd-36c3-4b93-b59e-6b6f8bc3d58e", "25311c55-52c7-4155-9b16-de76102aaf16", "9ab662f4-3dd7-4565-ae83-d8e6f4592435", "d2aa3467-c436-4697-8f27-716fc2ac1fe8"], "metadata": {}}, "b2aab929-70c5-48cf-9267-5dcc12abf5ea": {"node_ids": ["72385497-f400-4454-998f-417428afd2e7", "e5c69e11-f394-4208-afa1-7bed909c5773", "2365d4aa-87b8-426e-a4b3-3532842e4297", "199ed4b9-3388-4c28-a636-27765c600418", "7b893e1a-29ad-44b5-825a-07813c5345c8"], "metadata": {}}, "06fa7e6d-3d91-4114-8381-86e8e6a7b958": {"node_ids": ["4858438f-5190-4c93-b4b7-21805f58f8ec"], "metadata": {}}, "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a": {"node_ids": ["129112fb-017d-4ebb-b230-dead7e443d9b", "44eba23e-468f-4311-a472-fbbb4d9a9c76", "208af18e-bb01-480f-8d6a-129091d1904e", "f11ceec4-f1c0-4ef1-9ae2-3d9419a99707", "e27e8184-7438-424d-aa2b-ce1c97362a36"], "metadata": {}}, "9657ce5e-dab7-41de-9a91-d7cd3df09f6b": {"node_ids": ["0b267f96-67b2-4711-84c1-8b626d9fdef7", "817e21c4-9867-407c-aadc-16dc3348ab47", "5640b407-5048-485d-ad5c-b32b8e6fdfdd", "c9fcd441-872c-4410-b07c-b90524b3a2dd"], "metadata": {}}, "758fa473-e100-43ca-8417-d815b23374f7": {"node_ids": ["0b3ccc8b-de50-4899-a501-f923556fec33", "0af3c8ad-78cb-436c-83be-970f9d5a004c", "fbf6e4c1-fa5c-4332-a47c-b01ace58645e", "dc87eb70-010f-4abe-9ad3-a78fd253a970", "dd5d52a9-7eab-4e29-bcad-57c285abc859"], "metadata": {}}, "41490dba-fd83-4981-bf70-93354e0968c8": {"node_ids": ["ba20e39e-9045-44b1-92a5-227727a1d13c", "7b400ad3-2b49-4973-b694-a974560f2600", "a9ac7ced-4418-4f35-a842-d8206fe1c6ea", "a9db3c62-3c95-43de-8ab8-19810e173553", "884d37b3-abae-49d1-a9c7-b172847b38ad"], "metadata": {}}, "033b8ec2-c69f-4895-a660-e867b5e8e89d": {"node_ids": ["899153c1-ceec-4038-9f80-55cfb59b264d", "750c52dd-d02e-4e0c-9ea4-2c5f7679478c", "05166966-4323-4b7c-8874-191148d608ee", "b4fc80a9-d649-461c-9f9c-bb4b12463205", "cc11d256-8d20-4c3a-9096-18abfea92a5d", "95a6c95b-283e-4458-8199-dea6eac77548"], "metadata": {}}, "102fb15d-28ac-47fe-ba84-f2a1fdcf1657": {"node_ids": ["fc107fb0-2378-4e0a-b49e-636936208833", "6030918b-685f-4118-80e3-cad90bb083c8"], "metadata": {}}, "71018116-7d3f-4c49-98b6-e8b322aff129": {"node_ids": ["3ce6a3a7-6b2a-47e7-8ff5-8b6b96763c03", "df01db1e-4bf9-41ab-8d34-726c6e4dc2d2", "f1b1ada7-0833-4708-bff3-8a0f38e233bd", "8e0c7ae6-f406-4716-9e4f-49a92443af3e", "bb90ec1a-01a5-43b3-a8d9-aa0a96b8b911"], "metadata": {}}, "5e0dba53-a54f-4c83-9669-5f0ef70c9877": {"node_ids": ["61324c0c-0e6e-43f0-aacd-04ac8c28a1c8", "1aa02aa8-f4a1-4d40-bb41-fb192347f2d4", "aaa3d8b2-e7d3-44eb-b6df-60253c59d6fe", "5ae8c366-22e6-479b-bace-c2691f626c34", "e32f504e-f8f4-406a-80c8-b57fce425a9e"], "metadata": {}}, "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746": {"node_ids": ["f2af8361-1340-4f58-88a3-fbc8574c4573", "88b5c8eb-19dd-4394-aec7-47845f494aff", "ecafdc72-a12e-40c9-9424-9a3a7ab764f6", "e64a049a-bfbe-4967-996e-b3db7d363465", "0da46959-7b8e-4ab4-9599-117826b1390f"], "metadata": {}}, "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b": {"node_ids": ["89512852-1182-4b47-bc53-3122513474f5", "d6850b1b-5167-44af-bcb7-198006c02e6d", "152fb1e3-0732-4faa-95a2-47960a2e00d2", "0bd414c6-e7bc-4793-9c72-f411cd5d8649", "bc0e4385-952f-4591-8849-e56b51033304"], "metadata": {}}, "7f4f51f1-20fa-4a33-bd94-092bc7dedce4": {"node_ids": ["4ce469bf-d6aa-49a7-a1c3-ee0d8589b35f", "bdcb4de0-34d7-409a-adad-9997fd007040", "90104d1a-d890-4c41-9600-4621fb626cc2", "ea8d1ba2-f3a5-4175-b7ac-4e88f26d4731", "e95c7d35-f964-409e-a8f4-90dd8ce5e869"], "metadata": {}}, "4a839281-2706-409a-888e-df6840026818": {"node_ids": ["8e43140e-f019-489e-8e9e-93446a8b9739", "8aee8d52-9f0b-4c4a-bd0c-8f96848febb9", "e069f4af-c478-4f39-9ec6-b643cb5c7f7e", "96d9305d-a936-4f84-8f8e-78529b1619ce", "976557b7-0f70-4ec1-8ead-18a3346cbdc6", "eb6b1a07-d4c8-4e59-9312-e25971548c88"], "metadata": {}}, "592f8b4c-f9db-4e89-9887-fa499ba1c34c": {"node_ids": ["7c5a91d7-1a95-4fbb-99fe-9fa82e352cce", "5bdad8b6-1144-4e70-a437-30d6df914586", "03f75a1d-74f6-49e3-b850-666037ea6aab", "424a2ab5-5827-4ca4-a740-bf377b35ce4a", "4e95a2a2-2d94-4f94-8185-9da4062c6e05"], "metadata": {}}, "1ad6e96c-a7b2-404a-954c-69f11cae2210": {"node_ids": ["c86b4d12-84da-4b85-b7e0-895dcb136999", "69e91903-7f52-4044-b0b1-6b432028a2af", "d6ca450b-3669-4b99-bf18-fed73e9af305", "f860c5a1-9b8d-4c23-a0b0-e844522a71bb", "02d00b49-20ca-4877-b8f8-a07ddc45664f"], "metadata": {}}, "7ff46e2e-66c3-447f-a174-7b41b24625aa": {"node_ids": ["4c928c2b-b1c1-40cf-88ad-d66433cc001c"], "metadata": {}}, "b1eed079-9caa-44ce-9d84-8b1a0103b79b": {"node_ids": ["93ed0e5a-31d7-4102-a580-11f1245fac0d", "ec807fbc-2203-4589-bc82-842cf1acf8f2", "9bfa1245-e0a5-42d6-b68d-fde4fc3483fd", "8b443132-4cd6-41b6-ba25-2a0f7dd49978", "f0fcbe42-23c4-481c-ac6f-2c6915c9c671"], "metadata": {}}, "486d82ff-8fd9-4f72-b068-68d25d163ab2": {"node_ids": ["acfd1bfc-93f7-4912-8d94-c393f029bbc3", "e6108209-4ec6-412f-9697-25c4aecbaf24", "86576e66-548e-4fcf-80d0-8eadb593d04e", "db619cbd-5285-45a0-9854-2030f19d26e4", "1444c19c-dfc3-4861-bf0b-2f37be86596b"], "metadata": {}}, "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e": {"node_ids": ["d81af57c-bde2-44f2-bad9-a4ee6ab6a5e3", "8579fa3c-a903-4ee4-8cf1-697b2a19600a", "7aa1ef7e-349d-4b8f-9bc5-c9231783e76b", "fe617144-b71a-41d0-8c0f-4f340a10ef3b", "1eed3301-c4f0-4c0e-b8b9-56cd39a3f26c"], "metadata": {}}, "bf902940-188d-41da-8edf-5cb7c4fe0db2": {"node_ids": ["bd879fd3-5892-4fa0-b561-9954b2357839", "51f100c6-bbb1-4446-893b-2ef926a5aeee", "33363cf8-3b22-4d3a-9fc4-656af0a2e069", "afe8d503-ee44-427a-980b-7ebb09312817", "bd75d102-fd78-4d0e-9071-100c906c8375"], "metadata": {}}, "023d29ba-27f7-4516-bd02-a7ed63efbdb0": {"node_ids": ["0cac29b7-e2ac-422d-a79e-1a5cd820371d"], "metadata": {}}, "d1a85d97-1755-4790-a02b-51408d0d5e1d": {"node_ids": ["760ab3dc-bad8-4987-95b0-de4a55c06d84", "0662f6ab-37d0-4c11-acbd-fe91bf9c0809", "e5f646c6-b89f-499b-ad98-0cd5dddfd498", "98e48856-29bc-4b1c-9908-1a66dc7cd2b6", "1581c45f-1ce1-45a6-a9b4-502d887717d0"], "metadata": {}}, "49a086c2-e996-4c17-b97a-f1bf32a56730": {"node_ids": ["adf3b340-ff37-4119-8f7d-aa175d699573", "a0594055-0291-4b8d-b06f-e683ebfc6eb0", "dc5a2814-a49c-4e25-b2ce-6b120be9b004", "917dc646-917d-4ef4-a872-30e4733c6eda", "a9c9e96b-ac8e-4792-a2a9-8fe5751d0070", "df584730-6f71-4326-a464-f2a79d424261"], "metadata": {}}, "fc1f2e92-67ca-49d2-9274-264bd6ceba8d": {"node_ids": ["8c2c0f53-3fca-4464-87cd-ef3c6dd2a1cf", "a46ed202-5920-4523-ac4a-044596af0b1f", "f5165dc2-c00b-4f59-905e-92e42344d9f2", "4095a970-83d0-4977-b672-03a5ee4bf29c", "dabf316c-bca1-4ff6-877d-33a95ebfee9c"], "metadata": {}}, "061cf19f-4851-4338-b880-7c346585665a": {"node_ids": ["29ce92f9-9155-4c64-99f7-8f82ed2f0c63", "53e2ecb7-130f-4d60-9175-a0ebe43e8e34", "edaa2893-4940-4994-8b7e-2c597655f043", "143182ef-ddfb-4560-a032-705e6fde4139", "7e787cfd-c004-46ba-b116-aeac1d32dd56", "2b40c0a5-7d80-4308-8e21-dd8fecade17a"], "metadata": {}}, "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0": {"node_ids": ["0cdde2dc-4363-47f0-ab09-47253342e4cc"], "metadata": {}}, "887429f5-c9a2-4122-863f-4c37531d3f24": {"node_ids": ["e67b4801-9484-4dc0-96ad-cfe1f18c8dd4", "c70222fb-2a36-436f-8c3e-00d9002feab5", "119219ef-12ed-4523-b337-cef03a4cf927", "081054ee-1681-4c38-977a-2a8419734e4e", "dec5ccf3-dd6b-46bb-80a1-1da492d3aa0c", "99aacfaf-ddc2-486b-8846-dd49c5609382"], "metadata": {}}, "b38cd3a5-fac3-448d-acd2-099d8717ec2d": {"node_ids": ["52016b04-4c70-47d4-9d2c-e7c2538f4c63", "c455c1e8-4309-4815-80d0-4ee929c020fa", "b0b22db5-c229-4aac-9050-b9db66700a80", "63646112-5667-45d1-aa8b-5aede7171646", "59092e12-9918-4a9d-8590-08b864b5bfab"], "metadata": {}}, "1818727a-8d16-4427-b43b-67ac4c435ba3": {"node_ids": ["6d7c066a-606e-4f19-891d-1b83ce1cea6c", "4ba1f78c-2f58-4007-8836-f6a66c3d33d1", "514c6494-afdb-448d-b909-f4d7271be72a", "85caeb35-23b1-44f2-ba5e-616266c9529f", "47078f24-35b5-4877-a4b0-b5723e3975d2"], "metadata": {}}, "b13fcdee-3284-4435-8c91-eeede1e1019c": {"node_ids": ["224ecdec-ba1c-424a-9a63-eae8150d8f57", "f7c6172c-f875-48ff-be5d-0112297dbed1", "022f46ac-061f-470f-9ce1-11830f6c4f68", "33caff6d-abc7-41ad-aa10-bd37b07cb419"], "metadata": {}}, "e5f52ff2-4895-416a-a9e7-92222aeb2d2d": {"node_ids": ["2f521dd4-71db-4575-8028-90af88df0807"], "metadata": {}}, "e0d27b83-4356-4776-98c7-64a1ea6683b5": {"node_ids": ["271a330f-407b-4c6c-91c7-d61c9ee679f9", "565be5de-f563-4cf8-a2f9-313311c80ec9", "ba0d620a-34ca-41a8-b09e-5c46a94b7f39", "4307899f-093f-4bf0-8bcc-510368ee82fc", "8964e9cb-c2ae-443b-8e46-24e6aa6f3400"], "metadata": {}}, "888fe210-2bea-494c-938c-697d0feee64b": {"node_ids": ["bfd9b9b8-386d-4c6b-afb0-052c9bd1e8f4", "a05c137e-e96b-4d1c-b7ce-e0d9cd0b6999", "20ad5c14-7cdd-4520-b1a3-ccd98f4d5258", "647ade5b-e48b-4ff5-88b5-9af529405bca", "aaf03444-b1ff-4534-86f7-c9ab1cdce027"], "metadata": {}}, "931b3ac7-e0bc-4048-bae7-99280cd861fe": {"node_ids": ["4baac2f7-d443-4120-8ff7-236b75532fc7", "7abe026d-0927-4b47-8840-a8199cf0198c", "1fc86cb7-8248-4d8c-a595-bf66a81d5bb7", "409bb2c4-0948-4dd9-ba18-62418d783151", "6c2dedae-1518-4699-9ed5-cc53f7a37422"], "metadata": {}}, "a279c2dc-fe53-4d26-9421-4e6a42a756d4": {"node_ids": ["3a5533a9-6f4f-4618-be7e-d083062391a4", "289b6d2d-9c43-4d17-a25f-adfa083110c0", "979bd3a7-fcb5-4e5d-afc0-93d50aa7baef", "e7cb51e4-fedd-49ee-9563-a93742d2b22e", "3084b59a-95c1-420e-93ee-c6faa5b1d94f"], "metadata": {}}, "292706ac-9541-457a-adf1-75cedb1e2873": {"node_ids": ["ecc1d12e-1ceb-4ab3-bd05-782a89dcbda7"], "metadata": {}}, "317db8cf-567f-4b3c-b8ea-8009f7fa17d8": {"node_ids": ["58637b14-f5b1-49c2-a46e-7a5882d3931b", "ebe7f81a-7bd6-42ea-a662-b9a33d1800a0", "fd21d4b4-8b79-45dd-9d62-f86ccb9021df", "704e255e-48d6-4752-ac04-e1429b525c03", "0e4e95bd-b2b1-415f-adfa-12952ba36a15"], "metadata": {}}, "90f0b9eb-2095-4048-afc8-4e3f0ab2e150": {"node_ids": ["d803567b-799f-4219-8871-7af21e6f2b3c", "742e7773-26df-49ac-afec-380c9fc0382d", "2513ea6c-d55a-468f-9ce8-4e96bdee5b55", "102b4b64-e4b2-42ea-a347-3de4069e7ad2", "3f0fa849-7ebd-46a9-a76e-b0771b99b1a3"], "metadata": {}}, "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d": {"node_ids": ["96f133f7-f4cf-4bb4-bebc-26b159f52c51", "d5b98590-4dce-4c67-a390-18305036ff73", "b7477e7d-8975-4246-8fa1-5f9827fb179e", "64a04ed7-d2be-4dfa-8d6a-d2a89326aa83", "9c60dd06-ed3b-4626-a963-c78a9bcd8662"], "metadata": {}}, "bebb1407-bcb2-450b-9ad4-4192b4ae0a94": {"node_ids": ["9977e437-399b-4ee3-b728-f778151b33e0"], "metadata": {}}}, "docstore/metadata": {"e1fc43c8-b5b7-4eb7-b896-fef63b0b152d": {"doc_hash": "5c3ec5a9b899106a96b2f56a8484d0d6c8dfc679a5531f699380e69553659f01", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "faffad4d-166c-4d95-869c-dd34dfaacc44": {"doc_hash": "9845a75d89e7cc192d8a5cbaadda1765c5a92d2de285344bdf5fcc5949fa4ce8", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4": {"doc_hash": "52f481ed19bfad83181cd46c7a90eab68e950203fa1a70b2433eb10377059ab6", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "351fd49c-870e-439b-83e0-89bad897f1a1": {"doc_hash": "fbf91cec158294a5488e5b3fd8d5d0a483dc98945ba9f1a3f5fbc6cf31ae0ecf", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "4e38d77c-a8fa-4b45-938f-e480b94d213c": {"doc_hash": "d124bc59603ad7a8884957fd20309e5ae26e7bcb3b082adb7a4de92f726f2892", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "38f22fb1-4b4f-4961-808c-1caeba430163": {"doc_hash": "f614c80b0f6fdc561abee8d5e3eb226541f2a12a8251ca10e33db3f422a6cad2", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "50136611-2063-40f7-92d4-b79ed5bdfb9c": {"doc_hash": "48ce453f7c295e1de16aa0ebab20f2037dc797489472a4981d0c7f68d5c351bc", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "14b15cf5-022e-4216-bf3f-b3974574f833": {"doc_hash": "0e407f6636fc386a76183384a4eee0035a0ccbea3ea6edc860876bd5aca4326d", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c": {"doc_hash": "4df288b4fabaa190b3d3a266903c505036deba612c956ecf71d8f59964140799", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "cab6704e-6c89-45ad-91ab-ecb849ccd0aa": {"doc_hash": "4646723cb8c5e09e36e620fc35a93e62b5403c7c304f9cdc7d2e8442de697ad5", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "e5c55660-67f1-419a-b4fc-77672300517c": {"doc_hash": "1e54a9575e132774f3ed318495e66a6a706ec991b969f919eb76a16692cf6d66", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "29cf881f-fb52-48da-9752-b54df95c18c2": {"doc_hash": "313c0b88dca62d41c41fc9f7c79c508bc08a6e45ed4358a7a1f6c6bbc49f2ada", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "2208170a-da2e-4eee-9bd0-9c79fdc7e26b": {"doc_hash": "ccbb6ad4f15e80e46d2a0adf12a768ed130e418bd21d6598552d24eddf17fc67", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "57328f93-818f-4727-8222-c596382ef989": {"doc_hash": "2237480ade15c3dc8888f39c85231025b521abb379d576cad1856f72a40b4c19", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "8d55eb44-a404-484a-a3b1-8b17efc1039a": {"doc_hash": "d6665c0dcfc845d77ea5d9f43563f9f2a6ad326bb86e83d7f73a871778baf4a3", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "4086eb38-25e6-4618-bcab-2f85a3d32d00": {"doc_hash": "57cac7338a4dd6b00a78f7ca8e95150971056f1df664691d9bb740ae4ff88fc4", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "5dee02cb-3702-43aa-ab89-7908a515b978": {"doc_hash": "1440d18c78722c1be64bb7ba8b05ae607ce5a565f2a8c472b122d31a6e66260f", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "c4144ce9-75c8-46ed-a669-17acb338e2a3": {"doc_hash": "9dfee6d2ddb2a91553f0566747d2d0bcaaa59ecc9c56cce38ee42a4100004467", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "6a215e7c-9ec7-4443-993c-7d022cab1064": {"doc_hash": "c4d17160493d8b1ed337a49277a922660792f3082cd6179edf979b420beb16e7", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "3a862d80-27c2-44d1-b5e1-c046d6d97794": {"doc_hash": "2be7e164449e90fdb0c5d215f5b9fbf81114c6a3aafa553c2405ba24ccd503f5", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2": {"doc_hash": "902ad6033a2e376b435f845a0940f1721874199eb35ac37856d0bdd0ae3786c1", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "dcb0e4d3-f61e-45c0-9687-540682761c8f": {"doc_hash": "eca6ac6f0fed0f59c7f048a293de8902918ebc9c5f940dfc9da942ce00052686", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "44195252-acf9-4acb-9103-1128599dba42": {"doc_hash": "da52db20eb2912a680481421f2d773b64cd557507d8a8ae6ddcce7c5740f5401", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "e779dfc7-39f8-4c86-ad71-b630bec93c1a": {"doc_hash": "d77e12961d6a39a19df0110845ea33c2dbd016797f6e511119ab5f9a956b4cc5", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "21e34eb2-95ff-437e-bc07-d20bae38aee2": {"doc_hash": "842df6e90d5476c92b677910694667d77730b1ff93bfda084aba651d6c550469", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "5f84f7d8-5367-4d2a-b67b-6a19ecca4396": {"doc_hash": "fdecf85a3f35a43f47494e3e614933121c64907ff7b6ff08f57c02a773440604", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "ffee4c09-1050-4acf-b72a-55be7a5da663": {"doc_hash": "3ef33c6bc871d481e9ab8ff9dc6e3444ef7dff186aacabf75fb6b27e473520a8", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "2b5f988a-f343-4fb7-83a9-848a220f6fcb": {"doc_hash": "a4dd6226af4ecc4937bf9f6995b9773be3c68a3e3c731b3c235b6a83a43a33f5", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "73a0a295-85e3-4391-a64a-c3a9f3cdd569": {"doc_hash": "509efe4cae0a1f0253d877a9e1ec36afa62976b0a2ccdf90ae1428ab188ba9f9", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "c62c6e18-cf27-4921-8752-3833e7f12467": {"doc_hash": "10ff6b459796a016fe1d0eb04d63245a47c9b168f3f0b6cc1515357b68018ece", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "a08aca1d-a78e-404c-9945-b1ef2db43bf9": {"doc_hash": "0ff9751cbb66c92f57e6442117e32b2c3d7cad5bcc2d6e0b392807a83e1e3dea", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "0313355c-dc51-46e5-9bdc-70efa141106f": {"doc_hash": "87b7f29e97c39db0dfeaba9fd9dfafa933b6722b54320c7cf2475e3a2746e64e", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "5add9bd3-150d-43c9-a561-6111b47ce200": {"doc_hash": "3b087955d990d415472a7d660f6b50e08dbd1903c4dac52ae69467566314c158", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a": {"doc_hash": "c931c12eaf9f2f34026a003d680a26adedf409693dcac6e31ffb13142cb22bfc", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "1f55b0dd-4f52-4281-a0cf-25a79ef363c2": {"doc_hash": "5813360b81d9ec232a9691a02604e25ac8b7145151cf62a593add35bf451ed0b", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "518c38b4-975f-4b87-b4c5-89fbc4364837": {"doc_hash": "80400cba40db494a1a36665290b9868e255de495e9389a03fe3c17239d93cce7", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1": {"doc_hash": "2c930ea6d5c2a33610dc9f885a99ef15fd3a7182fca87c5c3d3527714b016efb", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "6f183402-a660-4d3d-82ac-b45afaf73040": {"doc_hash": "857dd6b6005da848cbf01fb5a3b5794d3aa3f3525d00801d07df383c359a0554", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "18c5a06b-e2bf-4d40-9681-872357af305c": {"doc_hash": "579ba71af70afa3dbab2f79f481336ecc7957f14179760e2100a48d4af21967e", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "3ca3563b-2c46-419f-b043-b4795d3ecd3a": {"doc_hash": "ee5fab3fe319a05da7ae160c75efcc215ff1dd34433c52811c576558e509cac5", "ref_doc_id": "d70a6399-48cd-4459-a002-5a9d4e26c28f"}, "b185e45e-164d-455f-8fe4-4690a93afb42": {"doc_hash": "afed8b4f0d7e859e8152baf1e7c64c0b1b3ac5ee89e815df976627322f1eaa4d", "ref_doc_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d"}, "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624": {"doc_hash": "095cdf0cfcc5f459d1270fbc264e53d8c3bac4ad5a056eff8dc85addac3a76f5", "ref_doc_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d"}, "d201edb6-82bd-4b07-82e6-be462bb8b2d7": {"doc_hash": "3f70b4d840e60305e052ee6bd1498476abcc6f8cc8e480d0cc18f8af40f5b90d", "ref_doc_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d"}, "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f": {"doc_hash": "dfbc34aea9e40e7385d857294acd64153ce9538e631b5a33691442a1369d89b4", "ref_doc_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d"}, "8b6e6fef-c16e-45b5-9065-29a29e35da32": {"doc_hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "ref_doc_id": "e1fc43c8-b5b7-4eb7-b896-fef63b0b152d"}, "e3fa3c67-6378-40d7-b277-211f27947ad4": {"doc_hash": "ff94eed9898052c212c5ee0641f621505b1c6589894f47f3b0c8aa85fc0071bf", "ref_doc_id": "faffad4d-166c-4d95-869c-dd34dfaacc44"}, "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3": {"doc_hash": "63e052c45df8fff0fda69b7238b2d8929d5fca1f0717a73e32a117d854e5d5f1", "ref_doc_id": "faffad4d-166c-4d95-869c-dd34dfaacc44"}, "4e3d97ab-0707-4722-aa79-da8bbdf78856": {"doc_hash": "655f2a0cdb2f52c0ca2251434ef7e6c7fb7e0b8701625555eb132eb640c9d43c", "ref_doc_id": "faffad4d-166c-4d95-869c-dd34dfaacc44"}, "c83fa5fa-7421-42f8-b613-da4d7ecb6f08": {"doc_hash": "c0cd0d6ad0c03f244763f165148b24d1cfb53d390d8bcef820ec68e1186db77f", "ref_doc_id": "faffad4d-166c-4d95-869c-dd34dfaacc44"}, "a2088a27-5fe6-416f-9e99-830391aa20e6": {"doc_hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "ref_doc_id": "faffad4d-166c-4d95-869c-dd34dfaacc44"}, "0d3b15b3-05fb-4c83-bbab-29c02613daa3": {"doc_hash": "656d544852e9dc50f9388dd18b8f201b746c275a92de0002270833d7c1a6cb69", "ref_doc_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4"}, "444b87b8-602d-43ac-87b5-e43467864782": {"doc_hash": "80ec2f154a0fd189395d29abef7b4ee0d5766fe8fb11353c7b0875a3468ba6fd", "ref_doc_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4"}, "04a3c7ec-b72f-420e-a583-c1107481c12c": {"doc_hash": "8ad7621426dc4e9da7b2d2e0dcc922105e74891b903524c91d655757246ed3fd", "ref_doc_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4"}, "bdd46867-69cb-4ff5-91d0-b2774cfc7e05": {"doc_hash": "bf29782b12a849bf2082543d5689413f90e84d8b7a78dbd0d1cdd03f6e1f7a25", "ref_doc_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4"}, "b48cc563-2c03-495c-a9b4-a3529a9ad09e": {"doc_hash": "dcdefaeaa4c33385374b7a8109e5d937eccf8a8a7060ab26cb91cc662c11f169", "ref_doc_id": "8ac427a8-c24c-4dea-93a8-2718c6bfa6e4"}, "e7183bf1-15a2-4b31-8742-869f779c113f": {"doc_hash": "0e6304cd65a4a680e9aaae404947adb39b51626238770195c69e908681ed6327", "ref_doc_id": "351fd49c-870e-439b-83e0-89bad897f1a1"}, "0144dbce-80d3-4318-8ae5-5866f0330241": {"doc_hash": "9e096df8f9a62c0a3779d0bca0cb13f719366ecee7c4a5749b9284e9d430338d", "ref_doc_id": "351fd49c-870e-439b-83e0-89bad897f1a1"}, "32392c6f-4303-49ba-9a39-c4c6da1bddd2": {"doc_hash": "7d85201bcbe7a2c4d61aae4ec76d6c8d9be5f9a5775b7868d7db513162ff58de", "ref_doc_id": "351fd49c-870e-439b-83e0-89bad897f1a1"}, "311bd72d-5546-4502-bbab-baee387de6f3": {"doc_hash": "607c50a24515e3618efd164fb20b1968fb88920f2ff426d0c20749e77830a840", "ref_doc_id": "351fd49c-870e-439b-83e0-89bad897f1a1"}, "cd6114a1-4263-4f9d-a493-6307f278e827": {"doc_hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "ref_doc_id": "351fd49c-870e-439b-83e0-89bad897f1a1"}, "044bf26b-d29b-4f80-b543-2cb3ed2443df": {"doc_hash": "9ea7c9c49e40e8539aef0ca2540ea34496e7f3267f9c411717dce384ef529a97", "ref_doc_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c"}, "752a5b4a-9053-459e-9303-400144ec6f56": {"doc_hash": "2d2db3b51bf3e25d2282f66dd1733d33ab3da228400851dc0d69a5d9cd4783d0", "ref_doc_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c"}, "82257d0b-5b2f-4bef-871e-7f50cf0e54eb": {"doc_hash": "b4f7414728f345abceeee5dc2c0e54fe7d2925a90585ce9d122be5a156b32c8e", "ref_doc_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c"}, "a379e407-7360-45ed-8be5-8adf76f86e24": {"doc_hash": "1a89956b1de084031504f63e9c0e55646fc1afc4cda0325e7305fcde8705c7cd", "ref_doc_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c"}, "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25": {"doc_hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "ref_doc_id": "4e38d77c-a8fa-4b45-938f-e480b94d213c"}, "6e55a430-5f14-4057-a3f9-9364f895a8d3": {"doc_hash": "6ea7b98526ff6020483f8a16234293758e17147cd295baf7afa6ef461454f980", "ref_doc_id": "38f22fb1-4b4f-4961-808c-1caeba430163"}, "127e2699-ba49-4856-8a6d-7641c5a47611": {"doc_hash": "44a12ea0023062ab079033a7c59eba10aa1da4fd2f83fe5d88b2a61ef5579f18", "ref_doc_id": "38f22fb1-4b4f-4961-808c-1caeba430163"}, "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd": {"doc_hash": "13411f407b7fdb8a49dd5c159c3cadf10f7cb731b09de28e647bf270cc704872", "ref_doc_id": "38f22fb1-4b4f-4961-808c-1caeba430163"}, "735bef37-1cc0-4400-886f-b6a698d8fb8a": {"doc_hash": "be59dd2519abf3feb52344002b56f9870e28e0ff0e744d21e649e188556fc1cc", "ref_doc_id": "38f22fb1-4b4f-4961-808c-1caeba430163"}, "979d8852-deef-4e32-b16e-e3edfd902ebf": {"doc_hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "ref_doc_id": "38f22fb1-4b4f-4961-808c-1caeba430163"}, "26c87f96-fa3e-4816-b783-59e51995658c": {"doc_hash": "3cf6a7c3bf42bfe03e1cda7ed6832c551a3f8197db02e80a522d82482e56035a", "ref_doc_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c"}, "6f8ef14d-15ba-4c39-919b-64cf4b06481b": {"doc_hash": "e99e9d46ab6081064e5b0691f9a319c5d707897307a77627a46c80431159fe39", "ref_doc_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c"}, "7c1a1255-277e-419f-bf65-25a3c3bb79d3": {"doc_hash": "a55ad80e98810d343150af847624d95fcdafa138760575362fc7a7534e3c140a", "ref_doc_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c"}, "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9": {"doc_hash": "fef7352a849390a853c6a0e6f52cfb2a1284d98d8ee0a28d18334f3bdef2d3e7", "ref_doc_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c"}, "11d2fa45-8ced-449f-9b75-4adecdccd93a": {"doc_hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "ref_doc_id": "50136611-2063-40f7-92d4-b79ed5bdfb9c"}, "d85cc9e6-7cd9-4481-90c2-203747d5332f": {"doc_hash": "27b0219861d8b295289528906004d77717edfbaa60ba4885e205cd36e6cdeaed", "ref_doc_id": "14b15cf5-022e-4216-bf3f-b3974574f833"}, "4cb911ed-dec2-422d-a13c-15dce190ad98": {"doc_hash": "9ad3bdd184f79e5a472433e80324fe2f29ff2b6ed312f382a85e34116b8b3665", "ref_doc_id": "14b15cf5-022e-4216-bf3f-b3974574f833"}, "c6e4bcc9-596e-4d62-81ff-c43577daed77": {"doc_hash": "3f6ff6d0de03db29d0a7609b3c9949bd1bc97740c5608af64514bbe914edef33", "ref_doc_id": "14b15cf5-022e-4216-bf3f-b3974574f833"}, "15a861a5-591a-42ed-85e7-dfb2baa70eb9": {"doc_hash": "521fa1b1cf491663cf9144a862f08bc42fac71a2237368d306d23ce904893a71", "ref_doc_id": "14b15cf5-022e-4216-bf3f-b3974574f833"}, "b384836f-88bc-4aa2-8535-0aba633151b1": {"doc_hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "ref_doc_id": "14b15cf5-022e-4216-bf3f-b3974574f833"}, "8212e847-90ca-4688-b6e0-e95181ddf3a1": {"doc_hash": "c7fc3a41a0f2bdacdaeae004f13fcf2f94b248800125eea712adee7181df5d1c", "ref_doc_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c"}, "bcbe1df8-d675-4abe-8d15-92624af70bc4": {"doc_hash": "86316da48b7d8971f852a065973c0ce67b1d8e54a6a989802d027c6945be5465", "ref_doc_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c"}, "8e672703-bba4-4f1e-9e3b-379fc6fe65c5": {"doc_hash": "5a2774f40fe9aa6eb3e6f8e41d9dba53e7765ef85a0029696f07f6f576e18f37", "ref_doc_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c"}, "87ee291c-72d0-47ed-9d5a-9a2edcd579e5": {"doc_hash": "6a49b1f03bf7e2e4299925c9c7af9f63f76c224eebdb383a5ad7db6460974ecb", "ref_doc_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c"}, "821dbc59-27a8-42a7-a88a-a52095ea2a16": {"doc_hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "ref_doc_id": "172eae43-8ca7-4eb3-80e7-0e475e6c6e8c"}, "c098625d-e8a7-41a5-abae-3bba4ea9de78": {"doc_hash": "a0273f87b5b458d7185a496352e8c3d6c1cd54062e58a21e3679ae9cf9086c30", "ref_doc_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa"}, "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4": {"doc_hash": "12a02defc9c6d09e13212ba5c573e7bc577ba5dbd7f3689a064883372812bf52", "ref_doc_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa"}, "22d940f3-f943-4714-bc50-5bdfdbf66adf": {"doc_hash": "b16c1093e32112bf019fd36123a0f29f34b94f90dc21fdc2a32c3d0928b444ab", "ref_doc_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa"}, "72551f36-ec85-45af-bae3-5423db829066": {"doc_hash": "a71268204f3ee2e5b12d1db2d4fae3385f59f944e7e1ab5c200e22a5ad871882", "ref_doc_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa"}, "3c491f0d-e54c-42ce-abca-cf987967a63d": {"doc_hash": "66ee3a9a79160ca5cd6d1ecb3e6b58f34f6ed622bb5238139472444a8b9139a5", "ref_doc_id": "cab6704e-6c89-45ad-91ab-ecb849ccd0aa"}, "b2135c83-d5c7-4455-9b06-92769a72c4bf": {"doc_hash": "495b435d22a1d7809cc6623671705f407b9b71b80263b0030a60a13ff27d3c0b", "ref_doc_id": "e5c55660-67f1-419a-b4fc-77672300517c"}, "3c2ac410-38f3-4b43-97aa-afe1918019c5": {"doc_hash": "ac6015c3ae8019c07564a177ba14758ce656648501ffc2f677e8cd50b1c083da", "ref_doc_id": "e5c55660-67f1-419a-b4fc-77672300517c"}, "bd6b745d-e8d9-495b-b6ce-333955638033": {"doc_hash": "c0030b6f00c8405cf1a670a70483c34ea0d40272d7924e0bdb30c2adc86068b5", "ref_doc_id": "e5c55660-67f1-419a-b4fc-77672300517c"}, "9a9e4169-a13c-478c-942c-5617a4cbefcb": {"doc_hash": "71d54290ef6ded0bf1e97e89c539fcfe061c8ca658809485b18f9b2f796c4d51", "ref_doc_id": "e5c55660-67f1-419a-b4fc-77672300517c"}, "387374e2-778f-472b-a73f-092761fffd50": {"doc_hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "ref_doc_id": "e5c55660-67f1-419a-b4fc-77672300517c"}, "09e83244-0f60-4b37-9ec7-b77488731f88": {"doc_hash": "100c72a9aa852a8f3644091d0964c631542f9bc7ad36c6d4fd5fba70ebf42d1d", "ref_doc_id": "29cf881f-fb52-48da-9752-b54df95c18c2"}, "e5e9c2cd-2b5f-4fd6-9865-9bd318289603": {"doc_hash": "d412994d8d2a8252c7c6c31ce027e1f65f8a436d8138ae26795ff4e636849fc1", "ref_doc_id": "29cf881f-fb52-48da-9752-b54df95c18c2"}, "33a2425b-1dc0-4c42-b651-457a7eb4ba35": {"doc_hash": "2bd7d457bd9b44702ec4fa1e12707229e1326a020923a936a053d2a6847028a9", "ref_doc_id": "29cf881f-fb52-48da-9752-b54df95c18c2"}, "a7a287e2-a5d5-405d-b204-1a9464cb02c8": {"doc_hash": "9398aa22ec171e8f8ee55a4d135c4329607418c4d4db3b277c606d38f101044f", "ref_doc_id": "29cf881f-fb52-48da-9752-b54df95c18c2"}, "338c170b-8eca-4a12-bf0d-5a6a78a6439c": {"doc_hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "ref_doc_id": "29cf881f-fb52-48da-9752-b54df95c18c2"}, "df10fc68-725d-452b-abe1-a801e77316e1": {"doc_hash": "3eeb270a236c481300724220bb3acd6628eeeedf9983ee950bec5a7ac819a7c8", "ref_doc_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b"}, "64ef4e44-872f-4b0a-8ea8-d584657679e9": {"doc_hash": "d397a4b6bc1b17d5eaf960e37c490416a3d2f00bcc80b89690774ec3938818e9", "ref_doc_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b"}, "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd": {"doc_hash": "b134fe275f8e76bdeeb5f99414a250cad47a194f2788e05afdb5ba080fd95432", "ref_doc_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b"}, "963debed-7070-4f3c-96e2-5ec66d6c6847": {"doc_hash": "26ea5c0b70e2643359f83879c3fb0471fba1a0c0acf23e9549e18702e30ef950", "ref_doc_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b"}, "f709652a-4211-4c99-bfdb-564137f3c1ff": {"doc_hash": "7a57df187b27bb4b4a578f75ebb71d6318c107b74174c2907f6b9ef561ae2224", "ref_doc_id": "2208170a-da2e-4eee-9bd0-9c79fdc7e26b"}, "71a03883-c942-459b-b797-21604e74eac8": {"doc_hash": "62dc5b8839b5ac1287e32c099698d458e97fe336e2a1e61e1b1b6c06e3d40315", "ref_doc_id": "57328f93-818f-4727-8222-c596382ef989"}, "184598be-7970-47d5-8ba1-3495d65a5982": {"doc_hash": "c5ba6ed57093f877c0922c3d22682e2ceb3d59983522057749e7becb3625e665", "ref_doc_id": "57328f93-818f-4727-8222-c596382ef989"}, "4fcae3af-5c06-43ee-8163-850e87e5b408": {"doc_hash": "fea3338f3dbc749e3abaf57df90e8350cd3c680ae2cb92303c985f226ed193b5", "ref_doc_id": "57328f93-818f-4727-8222-c596382ef989"}, "c1b517c9-af44-40ff-a58d-2a9900695b35": {"doc_hash": "dda0ebabdb5560c8d2cd6c3b9bef3c7d53e1e7d814030741df6f29a88e07dfcb", "ref_doc_id": "57328f93-818f-4727-8222-c596382ef989"}, "ba92c151-064a-411f-8f21-6a0dfa57c3c1": {"doc_hash": "0e5df37bd7955d925c7c6b116c6c6da9c122d94aad1c81dbbcf913e24eb33f74", "ref_doc_id": "57328f93-818f-4727-8222-c596382ef989"}, "e4630f66-e9d3-400a-a896-6014b851892f": {"doc_hash": "a89802ca844ba2c290027a473a8b154763b262568eace29d74caef1b058adbfb", "ref_doc_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a"}, "1368a402-6ab3-453c-a888-6ab05bf57a23": {"doc_hash": "6b566a155217dc496ee0fca2b375bd23076f5b4877a3cebbdf5d6878dc66c2eb", "ref_doc_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a"}, "4efa7cd5-9fdc-4d27-85d7-da34c73536ef": {"doc_hash": "f8cfb41e628a7e39505648ccfdcf13a9ab1a41d62d04b48cf1a66128e2850627", "ref_doc_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a"}, "d625f540-381d-499a-85ff-aa967dd9d39f": {"doc_hash": "9c31e4fe98deeab928bdb62dfb9a47aa8ce72749619816941327cf322bcf39f1", "ref_doc_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a"}, "c89d5173-c1a7-4bbe-8064-2fc75161e701": {"doc_hash": "7619dff237112746d068328826828750a84d159eca08515e07c9376cb786af98", "ref_doc_id": "8d55eb44-a404-484a-a3b1-8b17efc1039a"}, "f80aa8da-056e-480d-adcc-4ba7e1121390": {"doc_hash": "d02f5ad9dddf7a0f403caf84cda2d5914cd1c85a887d8eec6c338d6fde15fe97", "ref_doc_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00"}, "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893": {"doc_hash": "4581174c67c86baa26ed04672a528072ed9e31d7edf7c98fcbf877c27e033ace", "ref_doc_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00"}, "ccce360b-35a4-41ed-807b-5331211701de": {"doc_hash": "690c2fcc49084f900115a3d42a9f0f5a18c30f50eb535d68a580c676da5a17a0", "ref_doc_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00"}, "db0aa27b-ea92-4876-8486-17599745f512": {"doc_hash": "cde2b8f21c99bd65ee32e5e5fccca20fd5f349f8ee8b19059f7d86346d3c1a26", "ref_doc_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00"}, "5e42b7ba-699f-4007-b796-b1828f7088eb": {"doc_hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "ref_doc_id": "4086eb38-25e6-4618-bcab-2f85a3d32d00"}, "568e0f92-74aa-4a54-a55d-b1b7a1bbb066": {"doc_hash": "c24d8bfd736b2a58871449891419c5248f238af37697c44020a12d2e9256614c", "ref_doc_id": "5dee02cb-3702-43aa-ab89-7908a515b978"}, "52cf35a2-f41d-4c76-b56d-8ac809eb1556": {"doc_hash": "bdf51d08f563d97f82315194d58893b0ab06b12c98c18dea24baaac3f093a7d5", "ref_doc_id": "5dee02cb-3702-43aa-ab89-7908a515b978"}, "04a4b035-21c1-4369-9c6d-2c8256b1e9cd": {"doc_hash": "cd575ad21a976a83e7ad7d94bb1b41cdb12dcf908dbd17ce38e6c932066bf655", "ref_doc_id": "5dee02cb-3702-43aa-ab89-7908a515b978"}, "8c3144f5-b808-42a8-898e-1ba57ab8b253": {"doc_hash": "f5d3a66be92349eaf1f26608f353f40dbee956d5107fe0479fe042b5a0b53ab0", "ref_doc_id": "5dee02cb-3702-43aa-ab89-7908a515b978"}, "30da43e3-e957-4749-833b-2a3da21bfd1a": {"doc_hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "ref_doc_id": "5dee02cb-3702-43aa-ab89-7908a515b978"}, "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5": {"doc_hash": "ec582a88e4d5524a23effbb90797c686b583d736b23b15e39ba801b6ef7d66a0", "ref_doc_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3"}, "e3d9a200-8d09-4a5f-8057-525d40945061": {"doc_hash": "17b04326555bacf34dcbd2849d7a62f8677fc309473c3f3a116036794d1972df", "ref_doc_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3"}, "2f30528b-8b87-4916-8530-b167226ec7c7": {"doc_hash": "4f76fe8d089fd4d3ab3c6c2ada8951572caf2590a20493c08d1a2132dfef5861", "ref_doc_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3"}, "627089ab-2bd9-485b-a802-bfa4e68a989f": {"doc_hash": "e11d080b51ceeb5a0046ba51f02d6cf0003b3ba77165cb2197704753676443a1", "ref_doc_id": "c4144ce9-75c8-46ed-a669-17acb338e2a3"}, "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7": {"doc_hash": "781cec43361a33dc6a9ffc6a12e0cb7030d69ef1afe291b95708088ca86ace8f", "ref_doc_id": "6a215e7c-9ec7-4443-993c-7d022cab1064"}, "09a2726e-0481-410b-ad8a-2b781b5ace20": {"doc_hash": "e29ce758294782fafb03b1b3d6ace5ea7452ab6d0fa426e2910a6449381806ea", "ref_doc_id": "6a215e7c-9ec7-4443-993c-7d022cab1064"}, "c16c3890-e372-4b47-a635-f842b511fff4": {"doc_hash": "9553268f2b6d446f4c72e864f555b0b8a4384bc863fc9bd53ea8aa0014fb8b67", "ref_doc_id": "6a215e7c-9ec7-4443-993c-7d022cab1064"}, "57c6c99b-d287-4b37-a3f9-cd0ee460b000": {"doc_hash": "ecafb084d8546a03aa29b5a36f67943b423d9303003155323263f4926e8081cf", "ref_doc_id": "6a215e7c-9ec7-4443-993c-7d022cab1064"}, "d1f6a34e-8c7f-410b-8bdd-805c045f2402": {"doc_hash": "a4539a4ca497be610c390935767b44fc48e10d0fc654c9d58f18407099948731", "ref_doc_id": "6a215e7c-9ec7-4443-993c-7d022cab1064"}, "664de977-ff5e-4562-a767-60f5d1a97172": {"doc_hash": "76265c39f6fba94ab1558c70e11809fa158590fb9b63b36cfdd6f7e5de2cc01e", "ref_doc_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794"}, "5da86237-d9b1-4d3f-aed2-88d87c182a46": {"doc_hash": "e69afce68dbebf63652217e8b66ca8038d297a994d0ddcb5157ab68a72d6dd32", "ref_doc_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794"}, "8e88707d-a88e-455f-a7ca-5b8112f2f9f0": {"doc_hash": "26fc06ce138eab649a8801ef96de004ce3a9da952315bd4cbcd5cd7269bb270a", "ref_doc_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794"}, "6ed9369e-5a39-46e3-a44d-6d2203cc83d2": {"doc_hash": "e3b782f9c29b51a728095a3e98bae4517809a61da143edb6b2fab421ad18ed11", "ref_doc_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794"}, "6182115c-f574-4e4a-a6a3-e3380a7b3e7e": {"doc_hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "ref_doc_id": "3a862d80-27c2-44d1-b5e1-c046d6d97794"}, "c4a72ba1-e946-4d10-9441-7af1ecc87ee4": {"doc_hash": "8b828d005b0d6e909185df4093507c3f6d15a1a02720d3061859dad486199f15", "ref_doc_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2"}, "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1": {"doc_hash": "fad67cb4541d3b5339d3cb2998c314218b2393b7f055dceba737fb2945a7ff89", "ref_doc_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2"}, "154e45bd-a51d-42d0-807d-deee29626d3b": {"doc_hash": "e201bdf95edb56f75e05b6dc7974a3ac80c3416a2fbe8e3aafe4385d639ffc7b", "ref_doc_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2"}, "39b97a34-dc97-48a5-aaab-ae3980088068": {"doc_hash": "6d09cbd9cba0767e2f1cdafa1104302f8e5d44e6eeb366b36bfac597a5cdf9f2", "ref_doc_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2"}, "f9dc9003-cf40-4cb7-8940-f9a7378a3131": {"doc_hash": "4cd22a75467743164df52096623657d0ed03fcdd17ee320b1e1404fc06eaeed6", "ref_doc_id": "e9f1ed56-708d-4cf1-8b22-edc6d46f02b2"}, "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4": {"doc_hash": "6bb709a379cd44a6adebcf246ce758c9408910365bfd99ca5d27cb5d707c8dcf", "ref_doc_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f"}, "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b": {"doc_hash": "febad9658693d3f8eeb353d06075a4a7a0cba8bf9482d4fa5309960e5c1c926c", "ref_doc_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f"}, "7f20524c-21f3-4cca-8645-a5e54a1fe9c5": {"doc_hash": "490ab99dfbe6b5ac3359aa7c09c9cd6bf6c22bb0772116e504baae59c46e7f78", "ref_doc_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f"}, "a110f60a-18c0-4758-9856-6998878bc107": {"doc_hash": "63c6fb1122b72c1337c4c1a8c6472fe25a8ac9620786476010728fc3cb19df04", "ref_doc_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f"}, "9570f67f-24c1-4375-8cef-3d21e8424125": {"doc_hash": "69dde9e49d3ed5e1c009283d92845d1b5052a41b0b3789764f2e4fb7220377e3", "ref_doc_id": "dcb0e4d3-f61e-45c0-9687-540682761c8f"}, "7c232982-940f-4368-aa32-de082a86d3e3": {"doc_hash": "7d9aaab41b6e87bdf2f421664090984fc0a03619cd72b3ce801b9d63878862ca", "ref_doc_id": "44195252-acf9-4acb-9103-1128599dba42"}, "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09": {"doc_hash": "168dbdb9ea5b4f77be437d783c91da4821d01fda22c7c77352df7d36ae83543a", "ref_doc_id": "44195252-acf9-4acb-9103-1128599dba42"}, "054fed5b-36d2-43da-aa06-ae481e91c1d5": {"doc_hash": "a462c1a5a54128353f00d4ffe69fd77bfdd3f05cf6e4495090ccaa8213225e9d", "ref_doc_id": "44195252-acf9-4acb-9103-1128599dba42"}, "e043331c-76f3-4333-9839-e0485251b84e": {"doc_hash": "506395666e30ed7adcbebf46827416e163d3fe8f0d689c89dc2f3da26f9e57a6", "ref_doc_id": "44195252-acf9-4acb-9103-1128599dba42"}, "82d4131a-dd97-4e60-9cef-a3d325b5bf06": {"doc_hash": "660319c267200f36210329398ba6545d7766491acb88dc80f79282193ed421dd", "ref_doc_id": "44195252-acf9-4acb-9103-1128599dba42"}, "82deaf68-4a9e-463f-ba6d-bbf2bf79068d": {"doc_hash": "e1d703b6b6779f2f18c9dea29a719ec0c9856c70793012ab234101a88db3ee2d", "ref_doc_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a"}, "c6691f0b-8062-4071-a412-2655ff6353c7": {"doc_hash": "de90e86bc6e2a622dfbc296927c55c8c4414a69af8230b2956c2cd56499ea0a8", "ref_doc_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a"}, "8c19038e-ee4a-4c6a-98de-106902cc08e7": {"doc_hash": "d39da8b6911a544fea588caedbd7118df3c801d0be41e67e0816f1ee85eb83b6", "ref_doc_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a"}, "765b53cf-7565-4d78-9d06-f5b49b92ad62": {"doc_hash": "8ed21fed9404bf050b179361fe9615d715d2eba05abf114a2563fa0bc5a7e588", "ref_doc_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a"}, "2b074dca-a7b5-44e5-a3df-e0f548a256ca": {"doc_hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "ref_doc_id": "e779dfc7-39f8-4c86-ad71-b630bec93c1a"}, "b8a473ca-f564-47fe-bd55-7f6f66a1c437": {"doc_hash": "9507f37a6d5c921076cd957f8c0b0567f746fe4f221c33a8200e30b8284a680a", "ref_doc_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2"}, "a78d9801-10ce-40f5-90fc-4051935c1c3b": {"doc_hash": "ab047e52fa13942bda6bb0080a38603815383f54ee170cc54857d00d61573c29", "ref_doc_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2"}, "df015e01-533e-4c7f-bed8-1c62a7660f60": {"doc_hash": "1d69bfb0f445fb62609fca34fb40d7d1cf080c45afe8500835b35f1c0e8d44a5", "ref_doc_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2"}, "20f35ed4-76d5-4170-ba0e-d1cd49ad268c": {"doc_hash": "a5e7cabf68d3b5854b9d67b4de999f9f95b602ef43c9abc0931b1c3f916430f5", "ref_doc_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2"}, "ab1258f7-6968-4bc2-aa6f-2be71e1b0781": {"doc_hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "ref_doc_id": "21e34eb2-95ff-437e-bc07-d20bae38aee2"}, "ba89739c-936a-4a98-8eca-5a7a68aa46d6": {"doc_hash": "b401522f3d89551aaa2726e07a30ed43bcc0464f9465fa5dd7a42f388cbb13a2", "ref_doc_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396"}, "038d6614-5edc-4833-a36d-2cf1d74802e9": {"doc_hash": "d59ed0a54f9b703eca5b59003e9165467162b435415be42c8174b06a921f1fc1", "ref_doc_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396"}, "7126d10f-33d9-4f69-a95d-4663f4e18b92": {"doc_hash": "f29b568e04b31f6857138a11ce3797c979b48afec8e9f3f5aacb4e337d5b6602", "ref_doc_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396"}, "cef8d741-5446-4507-8d14-60ce39224714": {"doc_hash": "32bc9be4064865fcd5c491122db96588ff2f6f4fdb36b55e697fc878548b82dd", "ref_doc_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396"}, "247961f8-fee5-4ba0-9112-6fd68356d38c": {"doc_hash": "a244d699f7faf0d7b2a1a27cbe324e1122bca51cfe614f8657fe8204b6630597", "ref_doc_id": "5f84f7d8-5367-4d2a-b67b-6a19ecca4396"}, "d1cd7a41-58a4-42dd-bd35-6459226f65f9": {"doc_hash": "cb515f4bc0fa6658b8baefa9ca3f18b030cdf53e1c152cbd8ec1f685ced14ea9", "ref_doc_id": "ffee4c09-1050-4acf-b72a-55be7a5da663"}, "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7": {"doc_hash": "0f86713eef5ed0eb453feb341a78e4585d9d0ab5975a7494db691ba2a2a54285", "ref_doc_id": "ffee4c09-1050-4acf-b72a-55be7a5da663"}, "73223af2-f20f-400d-bb4f-268ff7815ad0": {"doc_hash": "6812c5a048ed02fcbc3fca52d7b3f0c182b7e9a795e719b27c76992752091570", "ref_doc_id": "ffee4c09-1050-4acf-b72a-55be7a5da663"}, "01daae07-70a6-43ed-8896-0418267bbd6a": {"doc_hash": "3b87f669827e23a7949745bbcf554b08e0883276555b5679cad841856299f9dd", "ref_doc_id": "ffee4c09-1050-4acf-b72a-55be7a5da663"}, "86ef810a-d22d-4f17-befc-4f97dd8d22d2": {"doc_hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "ref_doc_id": "ffee4c09-1050-4acf-b72a-55be7a5da663"}, "04be5b4c-ca50-4ba0-9f46-155a04b68c78": {"doc_hash": "f96e29d1883b8c8c49a348370c9f6709807b8a985153d75b4bde2cafc5d86936", "ref_doc_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb"}, "c01acb18-9f36-4e8d-b563-46169bb6724a": {"doc_hash": "74722eda60bf9483d42c4324576f842405292cda3c8bce970bf499eff6a548f3", "ref_doc_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb"}, "fe322443-9f9c-4894-9d41-59040db525c0": {"doc_hash": "09aef3be3cfb741d3a24bc70faba56222c92d2876f73b826eb7feb160ce49211", "ref_doc_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb"}, "48f44036-107f-419f-bf8f-f4ccc9bf8839": {"doc_hash": "9050f9b901dac9f25e95f5f9ac20a9dd3ed5227be6c320c8ba7b0fcfe53c1b4d", "ref_doc_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb"}, "d0292a66-da79-4af5-aef1-d6c1049174ee": {"doc_hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "ref_doc_id": "2b5f988a-f343-4fb7-83a9-848a220f6fcb"}, "286425d5-d677-4a41-a64e-26f6ad3a0da6": {"doc_hash": "edd7b590173c753d7062c9be292adaf70dacaa753e14a3f10c9db3569699ea19", "ref_doc_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569"}, "9d81d190-519d-4621-ae61-0c46ca4d50a9": {"doc_hash": "0421a2da945e4411705b9efe3070bea128bf9a148960391e0156065fed6beeda", "ref_doc_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569"}, "0e4e24c5-2f32-40a1-94f6-95f45665d27a": {"doc_hash": "46a40e6043d03522dfffd8c9b67f79a87a2e8500328a2ac61cfba7d5f9cc6504", "ref_doc_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569"}, "8759913d-865c-4f74-9d55-3017e37d91b4": {"doc_hash": "0bfbb2a3ae197f9217daaf78fe7eecdc9cdbf411c3c8679b5ceaad6ddf5b9fba", "ref_doc_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569"}, "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24": {"doc_hash": "a97cf476358b408412e00b68b11ffee3c0eb14c75669c57c9fedb7a830b78c10", "ref_doc_id": "73a0a295-85e3-4391-a64a-c3a9f3cdd569"}, "40ebd08c-c34a-4c09-baa6-4fa729a72959": {"doc_hash": "356ac9daf19398dabd91ef63e7d7dcd07257366d9a540752c6996ba86b952d19", "ref_doc_id": "c62c6e18-cf27-4921-8752-3833e7f12467"}, "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70": {"doc_hash": "6071f25827b643fdc7f301a411c180a1312a8661c7c0f1310f828d3185162707", "ref_doc_id": "c62c6e18-cf27-4921-8752-3833e7f12467"}, "7ee1d53d-6569-48f0-9eec-f32d9b4affe4": {"doc_hash": "da3f03a57c3f0b6f18fe4548d797a0a8dadce400d230a883fd54894174b07209", "ref_doc_id": "c62c6e18-cf27-4921-8752-3833e7f12467"}, "f904eeb7-5f38-4ded-9b6e-82f4d2986316": {"doc_hash": "5a113ea3955d6deeaf42092128694da615c60f14cf3e6047bebfb7d83c31459a", "ref_doc_id": "c62c6e18-cf27-4921-8752-3833e7f12467"}, "b038c328-0caa-4be1-99bd-e9e4bceb30b5": {"doc_hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "ref_doc_id": "c62c6e18-cf27-4921-8752-3833e7f12467"}, "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19": {"doc_hash": "54b290378ad2721388d8f9c205ea1c4bdd9b4d12bb6b826df6b8a8c4fd606aa3", "ref_doc_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9"}, "2c09e34d-5c80-4675-ba51-9da9b2de6e68": {"doc_hash": "e5b030b85efd3d06a00bd935001ab286945dc20bada65c8d51df02fe704251e5", "ref_doc_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9"}, "e5867d46-56e8-4485-9627-2dbf45487f95": {"doc_hash": "231ca21240d7d2bf367be749d301b6d12773063c3da2e0a700b0af3c3b50af2f", "ref_doc_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9"}, "117be70c-93da-4351-b313-0892a4bff3a0": {"doc_hash": "19d452a213f5e6e4196ca6597ee7610144b30a01ef22b8a8c9ef6bf1217d82a4", "ref_doc_id": "a08aca1d-a78e-404c-9945-b1ef2db43bf9"}, "2f2c2788-719b-4bf1-aed2-830e6802d26f": {"doc_hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "ref_doc_id": "0313355c-dc51-46e5-9bdc-70efa141106f"}, "bcb4d2c6-ed5d-4162-a657-83d89cdb751a": {"doc_hash": "ba0b6fe828f4850fa2293058da2e0021cdff3f35f01e023369f4e5d97a5d0769", "ref_doc_id": "0313355c-dc51-46e5-9bdc-70efa141106f"}, "92b7cae9-3fb6-43bb-af73-506d0da831d5": {"doc_hash": "fc17d178f2443d291692db5c8d9d3963777dcaf7abb78c20610940e4ecf92f1e", "ref_doc_id": "0313355c-dc51-46e5-9bdc-70efa141106f"}, "b2aab929-70c5-48cf-9267-5dcc12abf5ea": {"doc_hash": "d005059c636e34a98b85b042bd137c0c7d3ade1088670bfea5fe5b22cd12b9ce", "ref_doc_id": "0313355c-dc51-46e5-9bdc-70efa141106f"}, "06fa7e6d-3d91-4114-8381-86e8e6a7b958": {"doc_hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "ref_doc_id": "0313355c-dc51-46e5-9bdc-70efa141106f"}, "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a": {"doc_hash": "400f8a4bb692c50517a7aeecdf7418e7acb8b33c6905de540d5e132fd9e88672", "ref_doc_id": "0313355c-dc51-46e5-9bdc-70efa141106f"}, "9657ce5e-dab7-41de-9a91-d7cd3df09f6b": {"doc_hash": "6e69c22ccfc8c616f0176e45745edde8fd14234ab788a9eac21f72671b62d973", "ref_doc_id": "5add9bd3-150d-43c9-a561-6111b47ce200"}, "758fa473-e100-43ca-8417-d815b23374f7": {"doc_hash": "268f047ec94cd43f564fc9b18b4c090750f33d0ac0b870278740da5e701703a0", "ref_doc_id": "5add9bd3-150d-43c9-a561-6111b47ce200"}, "41490dba-fd83-4981-bf70-93354e0968c8": {"doc_hash": "506f2013ed0078a6b806272ced980a73540e5a7610dc3b55ea906bbad66c5cdf", "ref_doc_id": "5add9bd3-150d-43c9-a561-6111b47ce200"}, "033b8ec2-c69f-4895-a660-e867b5e8e89d": {"doc_hash": "02c3f76d0acdc2c623af6baae9926ec987d56a96800384c4e2df833f9749ebd0", "ref_doc_id": "5add9bd3-150d-43c9-a561-6111b47ce200"}, "102fb15d-28ac-47fe-ba84-f2a1fdcf1657": {"doc_hash": "9e06e2483254cc7011a71832ee0efa717b46a4717e22a0c5f3eeeeb2d69132c9", "ref_doc_id": "5add9bd3-150d-43c9-a561-6111b47ce200"}, "71018116-7d3f-4c49-98b6-e8b322aff129": {"doc_hash": "b6448a7b90da02bbe6bd53b0346b88484eb3b1773bc79dbdd49b9bd11aa3d051", "ref_doc_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a"}, "5e0dba53-a54f-4c83-9669-5f0ef70c9877": {"doc_hash": "f59985c667c08978d779a442f3bf2dd0c3ec0bef6bcd482b953ea164887f51d6", "ref_doc_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a"}, "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746": {"doc_hash": "c4863c8b0c5dcd704de3d1158919416952087cfc10d45a5793894ec28ff44ec4", "ref_doc_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a"}, "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b": {"doc_hash": "120a5ea6e6004c0bcfd7797815494ffa165f6bba839e7a5e5a6967609cb0e3cd", "ref_doc_id": "3dcdb3b4-e1dc-408c-83e0-f0a95cda808a"}, "7f4f51f1-20fa-4a33-bd94-092bc7dedce4": {"doc_hash": "b5b9329b85d85e73c103e0ea2a6476eaabad369a9973c825c35b2fef5fcba330", "ref_doc_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2"}, "4a839281-2706-409a-888e-df6840026818": {"doc_hash": "98a45ad0aa2b85aaa94484cfc04898113e368f97c7ad0a8b5f14d52eed5bb36b", "ref_doc_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2"}, "592f8b4c-f9db-4e89-9887-fa499ba1c34c": {"doc_hash": "01a9f986130ce2c6229c46ef846350fff42b66ec7e8652172383a4e5f9fde628", "ref_doc_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2"}, "1ad6e96c-a7b2-404a-954c-69f11cae2210": {"doc_hash": "0aafb97c59a7af246d25498a0c776fe914e3de9a0bf29222ce4feefadaa09688", "ref_doc_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2"}, "7ff46e2e-66c3-447f-a174-7b41b24625aa": {"doc_hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "ref_doc_id": "1f55b0dd-4f52-4281-a0cf-25a79ef363c2"}, "b1eed079-9caa-44ce-9d84-8b1a0103b79b": {"doc_hash": "c47f02dcc76312d57c50e78fb700446e79a2ce0bdd64a938d500875418861699", "ref_doc_id": "518c38b4-975f-4b87-b4c5-89fbc4364837"}, "486d82ff-8fd9-4f72-b068-68d25d163ab2": {"doc_hash": "cca36c487411649498aca8216a7338e83daaa3648e5bd6682969227118583ee3", "ref_doc_id": "518c38b4-975f-4b87-b4c5-89fbc4364837"}, "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e": {"doc_hash": "ad692fb53e23fcd616898548f32271c60429dae2a60b95fb8ec59b5c29204294", "ref_doc_id": "518c38b4-975f-4b87-b4c5-89fbc4364837"}, "bf902940-188d-41da-8edf-5cb7c4fe0db2": {"doc_hash": "0af428fc843cd244ab074049735b78b0543d9c026d4746569c179726f71bd7eb", "ref_doc_id": "518c38b4-975f-4b87-b4c5-89fbc4364837"}, "023d29ba-27f7-4516-bd02-a7ed63efbdb0": {"doc_hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "ref_doc_id": "518c38b4-975f-4b87-b4c5-89fbc4364837"}, "d1a85d97-1755-4790-a02b-51408d0d5e1d": {"doc_hash": "543a4db69e2369df82540148f17c32f9891b1e2477fc021b16c0713ab3dfbab1", "ref_doc_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1"}, "49a086c2-e996-4c17-b97a-f1bf32a56730": {"doc_hash": "13b8aa4405cfe614107ed80ff1e24e776d30ccd8a36133eba3b242d55d0816a0", "ref_doc_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1"}, "fc1f2e92-67ca-49d2-9274-264bd6ceba8d": {"doc_hash": "acbe0ecf9c1902ea4c06dcfd75b1bc3625e57c4edfe5b61ff4d91e4c6f85a23d", "ref_doc_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1"}, "061cf19f-4851-4338-b880-7c346585665a": {"doc_hash": "e1a1d1a9a2b251b078e7f037b9a2392955d6fa3f00d0cc48cdadc1884b9ed4be", "ref_doc_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1"}, "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0": {"doc_hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "ref_doc_id": "9ae7c15c-2d51-420f-bd3b-cf98ecccd2c1"}, "887429f5-c9a2-4122-863f-4c37531d3f24": {"doc_hash": "6fefd47b21f4da7cb3f1324a74e3997624b93a3d25d01e93c794666440066437", "ref_doc_id": "6f183402-a660-4d3d-82ac-b45afaf73040"}, "b38cd3a5-fac3-448d-acd2-099d8717ec2d": {"doc_hash": "424f521809ba58574a0dffe7d6f199caf845ff2bf86f052eaa790e23cbc6cd8c", "ref_doc_id": "6f183402-a660-4d3d-82ac-b45afaf73040"}, "1818727a-8d16-4427-b43b-67ac4c435ba3": {"doc_hash": "8f72988c065005d2812faf4419f215d489d54ccc4660ba0fc784e143a94d4c60", "ref_doc_id": "6f183402-a660-4d3d-82ac-b45afaf73040"}, "b13fcdee-3284-4435-8c91-eeede1e1019c": {"doc_hash": "e4d9d924e688f33d997a7569753c165482bdefb259aea545e977c2f9b51f596e", "ref_doc_id": "6f183402-a660-4d3d-82ac-b45afaf73040"}, "e5f52ff2-4895-416a-a9e7-92222aeb2d2d": {"doc_hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "ref_doc_id": "6f183402-a660-4d3d-82ac-b45afaf73040"}, "e0d27b83-4356-4776-98c7-64a1ea6683b5": {"doc_hash": "e0efc1a2a864440b9ac51c41ef6dd688cd3afabeb669115bf258a6b416f6dc3c", "ref_doc_id": "18c5a06b-e2bf-4d40-9681-872357af305c"}, "888fe210-2bea-494c-938c-697d0feee64b": {"doc_hash": "5ba151d57f8d4600f4f8c71fa3cafcda29af86ecc2a02191b68d7b824898fc36", "ref_doc_id": "18c5a06b-e2bf-4d40-9681-872357af305c"}, "931b3ac7-e0bc-4048-bae7-99280cd861fe": {"doc_hash": "b041e310d2a9327f16ffe71017eaf4e4b1e8b4f9b81809e4ce79fadfd31136af", "ref_doc_id": "18c5a06b-e2bf-4d40-9681-872357af305c"}, "a279c2dc-fe53-4d26-9421-4e6a42a756d4": {"doc_hash": "db1eb9b18ccafadeb0896c78f2b619ea89d1b2d602b4c4840b7f1493f527d9b3", "ref_doc_id": "18c5a06b-e2bf-4d40-9681-872357af305c"}, "292706ac-9541-457a-adf1-75cedb1e2873": {"doc_hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "ref_doc_id": "18c5a06b-e2bf-4d40-9681-872357af305c"}, "317db8cf-567f-4b3c-b8ea-8009f7fa17d8": {"doc_hash": "43550323945971343bd70f984bbe2b7abe59a8e5a56327a84e587c676cb8bdb0", "ref_doc_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a"}, "90f0b9eb-2095-4048-afc8-4e3f0ab2e150": {"doc_hash": "59e54d9ceae14050f30f0ee2d3d9234e78c211651aa57defba64012dd2531550", "ref_doc_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a"}, "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d": {"doc_hash": "824b0646b9061434b973e97b22b9f572cd9e99bd33bb7aefe064c2d2f9c6dae4", "ref_doc_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a"}, "bebb1407-bcb2-450b-9ad4-4192b4ae0a94": {"doc_hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "ref_doc_id": "3ca3563b-2c46-419f-b043-b4795d3ecd3a"}, "db3c733c-e5d2-4887-9248-9a57654e8d7c": {"doc_hash": "20391dd0c2e11eca0f2e5dbb1ff1f862da631f5ec95f0c2b1b86c2fb2129d72f", "ref_doc_id": "b185e45e-164d-455f-8fe4-4690a93afb42"}, "60aafb64-eda8-4dd1-80ff-e7ce8ac8e4d8": {"doc_hash": "3df3716b3795fd80b60c857f2d1f23e52b386b0a7aeb24e78f06f52675bc0076", "ref_doc_id": "b185e45e-164d-455f-8fe4-4690a93afb42"}, "2ad76419-66d8-4320-87c7-068feb5c9fc6": {"doc_hash": "388e1844c11226b527b6e9cf8ef2a279ddaa7ba5a9cb971f5ea42ee5912137e6", "ref_doc_id": "b185e45e-164d-455f-8fe4-4690a93afb42"}, "71ff6609-6393-45da-955b-ab58805ed2de": {"doc_hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "ref_doc_id": "b185e45e-164d-455f-8fe4-4690a93afb42"}, "9bb12023-40d3-4864-8645-1bc6dcc45230": {"doc_hash": "88884bd86c88c55592e2ae98b074cff945e012c170704d2009edc0ca33ff73f1", "ref_doc_id": "b185e45e-164d-455f-8fe4-4690a93afb42"}, "189dfbdc-7077-4c4c-8b4b-6296a59ba4f4": {"doc_hash": "464a908edb135df8680c780a4f5346864d1e233777600c78065962728ced98d8", "ref_doc_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624"}, "d453893d-f437-4111-9be7-ada682cb4f27": {"doc_hash": "22bbbc725f2f41b7d5fe02c35e4ab04c4212baad64058d3564b0a6c760b79ca3", "ref_doc_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624"}, "1bc011a6-a5e2-4d68-8814-258d2ee40d98": {"doc_hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "ref_doc_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624"}, "e2450f93-0a7f-41f6-be1c-415bb4f43ec3": {"doc_hash": "34cfcc691ee933162f14abfa1300aa4be7eb605ee1c202b6710b9fcf3a49516c", "ref_doc_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624"}, "1de88753-ad04-4f1d-a0b1-894b18979e2d": {"doc_hash": "17fd0af85a3ef5cf768c56128b95bbd98784e767ecfaa4eaaa03263d8eb06004", "ref_doc_id": "56e4fea6-0432-4c6a-94b4-a6d4bf8c2624"}, "f3719389-d4c5-488f-ba96-b89e814511ce": {"doc_hash": "58c524d74e2296458c8b70bd5b1cbd431702d27b439dbe8c920618ab37a5b7ba", "ref_doc_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7"}, "39f1b555-66c5-4599-a13e-3c7ab5522b1d": {"doc_hash": "e921b11706703ceaadcf4c243fb0b1154f69a5dc4a2ff723a21024cdfd0e3320", "ref_doc_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7"}, "81f92843-a596-410e-98cd-9816257554be": {"doc_hash": "fb096e63e14b0f18aeafe5d67800173a0d34884a90678ab03b4b10377417a35c", "ref_doc_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7"}, "93f3e011-cc40-4bd0-b97b-835b46e1b5ce": {"doc_hash": "28dd6f7fbe7afff5d87bc1fc977493d0c6b4d5bd90aad614182914b8e36e4ff7", "ref_doc_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7"}, "8b0e1deb-7f33-4503-a7e1-c2e7d6142ea3": {"doc_hash": "98035fb869b6617f135c29eb964777295f78c68e5a1f25b5e43af14137f7a4bc", "ref_doc_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7"}, "a65075ed-fc89-4453-b2b7-15b8b85b3b62": {"doc_hash": "60f9b4660e335f61750edaed64f0e1f82018a75505b70f500073467a92b7c600", "ref_doc_id": "d201edb6-82bd-4b07-82e6-be462bb8b2d7"}, "26fb3c21-e301-46c8-b939-1559d59e5add": {"doc_hash": "688149212f192683bfeb8e245e64f08c33c870fde34044254ffcfc474a64192a", "ref_doc_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f"}, "00d74b94-ce83-4615-97b0-7d3974d6cffa": {"doc_hash": "d79c7a91b9077d834e67f1d8d422b28893c0debae4a9ddae7b8a6f9ff271e3a9", "ref_doc_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f"}, "57ab904f-09bc-426f-bd9c-4518d639ec11": {"doc_hash": "3da84ef670b0093642107853be2c86c3f9b17d36be00c4c1010a25be8c94afb9", "ref_doc_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f"}, "2062406c-eaa6-4b71-9d12-073ebdc471d4": {"doc_hash": "8a12d7b9e62f0b3ca61c291f87e8626e3d2016712e1ec8d9433acac1a65211e3", "ref_doc_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f"}, "b6aa4ed2-76c6-455d-9d89-ebbd0ddc6924": {"doc_hash": "764aa212e91f710dd297c5068868b34f93657f7da23932cdb4b37ef67648d239", "ref_doc_id": "5ba71b8d-82d2-4f5d-96a6-14d8bb37cc1f"}, "1a849b2b-eb0e-422f-9d4a-90e9c79e0b63": {"doc_hash": "e04b2aa9ee83c28822bf4b77876b0879b05e2931556188a4e7754137773d48f5", "ref_doc_id": "8b6e6fef-c16e-45b5-9065-29a29e35da32"}, "125ab7cb-5757-4c1e-9325-711eea81eb90": {"doc_hash": "b2f1ca50778f5648f96ee97a0371307732a8914c4c040b346c769aaf50c9a73f", "ref_doc_id": "e3fa3c67-6378-40d7-b277-211f27947ad4"}, "fa59fd24-1234-4b08-9da9-820a3713cdb1": {"doc_hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "ref_doc_id": "e3fa3c67-6378-40d7-b277-211f27947ad4"}, "f8632f10-ff2a-41c6-88c4-5f1fa6fcb83b": {"doc_hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "ref_doc_id": "e3fa3c67-6378-40d7-b277-211f27947ad4"}, "97362a6a-e2e1-4a8e-8522-b751704c6ab1": {"doc_hash": "f2a4de20681599a4f43a85a0ba213f47bce8390da85ab6983751a812ce4d2874", "ref_doc_id": "e3fa3c67-6378-40d7-b277-211f27947ad4"}, "3e372769-c26b-4f53-b5e0-ace577df25bc": {"doc_hash": "278473d5daf2102bad66eb58fd9a3730528d94254f7bdde937dce5ca18fbeb58", "ref_doc_id": "e3fa3c67-6378-40d7-b277-211f27947ad4"}, "5a51d814-c116-4700-97bc-4f304b4ff9be": {"doc_hash": "fadc2f40e7e89f7c0439eee3e23e5947a977425fad102a7068a38cda608dc989", "ref_doc_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3"}, "49f80856-452b-4668-8b36-ab456465ed97": {"doc_hash": "4187134a8a9598155aed81e21f8f5ccfd8dbddd05199a212592a5bfbf84b4a1b", "ref_doc_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3"}, "57b16b68-794d-4556-9da7-74970220240a": {"doc_hash": "ef3bbe06d551be9f9b528b3420638bb609a8edad38adf9f67ea79b952554ce1d", "ref_doc_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3"}, "4162606d-72c8-47a0-a826-47440fed3056": {"doc_hash": "6f98476c29745909757c8f1238fca3b16a29cd4a3c7d1a11f67aa4e766903534", "ref_doc_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3"}, "70c11c80-5067-46aa-9e94-2266016fac1e": {"doc_hash": "d4f2a2c543fa4dcf11876f2743f5346271c5cc0807d451471199337d6238e1fe", "ref_doc_id": "c1fbd047-1c8d-4cef-9a95-56c7b69a7bc3"}, "55e30b8c-0512-400f-9a5e-04392a46d6ae": {"doc_hash": "d3c827d6a12eba71f81d7618ee0148bff3bad1aff94c0acff86c0f7f00cd02cb", "ref_doc_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856"}, "5075fc3b-bde7-49bf-ae26-e0e25fdaef6c": {"doc_hash": "30e080706974ed1e2a18f98add5bd62416430d9338f9bb390e5a45bac89543fd", "ref_doc_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856"}, "e1c46d10-1323-44e9-a98a-acb01f69c7cb": {"doc_hash": "38c68c1c1b6c6fe9525d10975d45f06a6b186bc8397e8882dc9d79f3fc0e3707", "ref_doc_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856"}, "45c9b2ed-58b4-4f03-97ff-46c923ed09cf": {"doc_hash": "1f9ef09b2b6b63c117181861813f8e3be4fbfbff9c985e54b3bde7a378306751", "ref_doc_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856"}, "7b07d9b9-d883-4bda-af66-83369cbf9fb9": {"doc_hash": "ae61bc195fcdf484938059d0892dbf791376a57d1d2b86c2999dea2553e0e002", "ref_doc_id": "4e3d97ab-0707-4722-aa79-da8bbdf78856"}, "9fd3d57a-689b-48cf-89fe-1ac43363fd8b": {"doc_hash": "514b0977660358bff68155cc4fd3a34ba6e15ed2613fbe45ae504e86ed57a4e4", "ref_doc_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08"}, "59112c5b-af14-4204-a884-6adfc73e6b7e": {"doc_hash": "143c3cd34d548fdaf85282ca4653c3e9f4d0b09e4068d735faded81ca3200c71", "ref_doc_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08"}, "596c5249-8745-4113-aaaa-aafc6f60dfa0": {"doc_hash": "903b34d4c31eed3440474e34f7b387d635d0dc82ca9c88abcfa37a53da6d63db", "ref_doc_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08"}, "7716de20-bef5-4c15-a790-9dcc7f5b0071": {"doc_hash": "6ae182af8f9941c9a416e9c6451b1a590457768028c68f2a8b5a36ddb202b11e", "ref_doc_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08"}, "aa53c5fd-2f00-4f92-8097-02cd762e7ef4": {"doc_hash": "8b03c4899f07e07dcf30b5099d9e3e1accd721dd1017ad58116d19f3ecd40323", "ref_doc_id": "c83fa5fa-7421-42f8-b613-da4d7ecb6f08"}, "dc971e03-cd34-4d49-a07a-f8525022c66a": {"doc_hash": "1e226e494da38fd4ad796dfbed39fb4a05518f2078aae7f0aa5a6844c698fef3", "ref_doc_id": "a2088a27-5fe6-416f-9e99-830391aa20e6"}, "c63db16a-5671-4c84-a7ae-55210385c6c1": {"doc_hash": "286af3f436c36d014c08e0123318264b96b880acb61bef19b9d597c3294f1996", "ref_doc_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3"}, "e690edde-5105-4631-a9b8-5fb9ba9b805a": {"doc_hash": "890c5aadefba855a89c1b8af524330019878c4b992c753e57b5a6aa88d3ed921", "ref_doc_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3"}, "4b381ccf-a2e7-4a5c-ba81-1498484c4b68": {"doc_hash": "e8488350feaa8b729a1f9df97a93e8c09693bc6b01d2802a72bc7173dfe10a2f", "ref_doc_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3"}, "1a443e7c-c9ba-452e-a008-ebaa4394ef83": {"doc_hash": "1499ebc7f9bc3adb7133a76f065bd2268c44147f39cb10c44683983e2555f8b9", "ref_doc_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3"}, "bb331bd7-dd37-4d71-b0cf-257c68c73927": {"doc_hash": "95c26fa84d8998a599905d3479a3bb2367b64ce9c66a98efae219d73eccc4a68", "ref_doc_id": "0d3b15b3-05fb-4c83-bbab-29c02613daa3"}, "6859e6bf-998d-459f-b45a-4dfdde7ea1ca": {"doc_hash": "92ec555ec6ed234f62fa44cf7a4d4a067625358a32cc56c7c65d06127bc72689", "ref_doc_id": "444b87b8-602d-43ac-87b5-e43467864782"}, "14af1033-c053-4882-bb8c-8a22c85c9c0f": {"doc_hash": "a0fed716c4d9133fb9df4c3aa427083266117a091c375f0169b2253e8419b370", "ref_doc_id": "444b87b8-602d-43ac-87b5-e43467864782"}, "4e1a32e9-0f6b-4a12-b9be-78566fcabbf8": {"doc_hash": "a352b5c7a10923821a18690388a3bf6919d9eb990d8b26835f062f8cc5cae99e", "ref_doc_id": "444b87b8-602d-43ac-87b5-e43467864782"}, "b77f9223-fd0f-4aa3-b6dc-366c66836370": {"doc_hash": "7cc56f1f81a5afd969bdba943d9c7ac7534570ea5ec0245a5b5e12f0c6e207a4", "ref_doc_id": "444b87b8-602d-43ac-87b5-e43467864782"}, "79d9c03b-6e99-4fcb-8edc-7d8fffe3dd9f": {"doc_hash": "ba7d679180b4563e92a0efbf2d78d0172abbe9474fb5d2cdc2539a59d01e2e36", "ref_doc_id": "444b87b8-602d-43ac-87b5-e43467864782"}, "4013eecd-6af1-4126-a353-3e354c4be33a": {"doc_hash": "e1a5e10fb60512ee23e44a098fcae129cddab41ce5ccef8c028e6c9144f82083", "ref_doc_id": "04a3c7ec-b72f-420e-a583-c1107481c12c"}, "ffa3fd62-0326-4174-9326-f11256f22cc8": {"doc_hash": "ab350a8554c634a07d1f2c85ab383cb4227dde058af2d483b9da02e1d5059705", "ref_doc_id": "04a3c7ec-b72f-420e-a583-c1107481c12c"}, "0c9f2743-ef3d-45bb-b4a4-89f093a6214a": {"doc_hash": "fc16175da2460a218ad4f98ecf555612d9e857bc3824f6c703481039ba3e807e", "ref_doc_id": "04a3c7ec-b72f-420e-a583-c1107481c12c"}, "535039fc-1ba6-4485-bd97-668b16f0585a": {"doc_hash": "6df15212bfc5c202638475d6c963cc3d6964267f3a18040695d84dcc8d2425a8", "ref_doc_id": "04a3c7ec-b72f-420e-a583-c1107481c12c"}, "3996d7c9-619b-491c-8108-3367f691595e": {"doc_hash": "cfe1ca63f998eddc1bd3c5953d156fd580f4a340da18ac7a03eac68cbec36a9a", "ref_doc_id": "04a3c7ec-b72f-420e-a583-c1107481c12c"}, "88931f80-f889-4a2c-a5f2-014daa4d0e22": {"doc_hash": "13e4c9dab536da3c4f0c5348d18084620f6a50327ca79922c74eb24b6861872c", "ref_doc_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05"}, "dbb69e8d-17ff-4235-b3a8-8335e2325f28": {"doc_hash": "ca1e003c124f03c05168e9ae43cb078e6ee67ae31a7d6d240876f67731df6eae", "ref_doc_id": "bdd46867-69cb-4ff5-91d0-b2774cfc7e05"}, "684d71d1-a5d6-4b4e-bb76-6083a280b65d": {"doc_hash": "49b57bbfb97fc346d441a1416a1860e6223c285bf876549d80dcf3baa989be0e", "ref_doc_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e"}, "b7c4feec-57ed-4901-acaa-236586fe976f": {"doc_hash": "bc7c7d1595e6864f83a277549cf34accd779fc169a9de2c9244d3bd09df7fcd6", "ref_doc_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e"}, "dfc0c368-b863-4300-b1c2-8b9e4a878106": {"doc_hash": "76f8820ac5a984a41228f033dfd387a71d602ee973f4df25b02b519f263648a7", "ref_doc_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e"}, "87c282a8-9c70-4382-9bd7-67ae4960c13b": {"doc_hash": "600c2bb4e12c3860337d293aaf1a7151fa1fe97f5c5815da707704a30fb7cb0e", "ref_doc_id": "b48cc563-2c03-495c-a9b4-a3529a9ad09e"}, "eb3f2a26-9fde-4ee9-a559-6135e85d0d20": {"doc_hash": "3166ff77dbfee0c7aaefa81ee63bd8bc574fc8e1aef3da6b016eea01efeafd4e", "ref_doc_id": "e7183bf1-15a2-4b31-8742-869f779c113f"}, "0c9f35c6-7178-44df-875d-60d54fda49ee": {"doc_hash": "f35392a9e22dfe103b5bb9ab3201d1017901804b3a2018aed29539acb56eab11", "ref_doc_id": "e7183bf1-15a2-4b31-8742-869f779c113f"}, "4aae927c-0a32-4ab6-9a96-542bcfb1a2b7": {"doc_hash": "283b81914ae7a50e59462eab51def8542457fffb16c0de5f2bf018b37d49234d", "ref_doc_id": "e7183bf1-15a2-4b31-8742-869f779c113f"}, "15d0ffde-810d-4887-a2fa-bcecdbe723e5": {"doc_hash": "b8190d6d22e9a45001a61c42dc82bed0812c360eeaa47d1b7dc5cd2594faab04", "ref_doc_id": "e7183bf1-15a2-4b31-8742-869f779c113f"}, "15aa29ea-ec2a-4578-b626-6a27664aea57": {"doc_hash": "f66263c737817bae7a572d241fe9d56173b9b31c16338a12292ae71da3f1953a", "ref_doc_id": "e7183bf1-15a2-4b31-8742-869f779c113f"}, "c86cb95c-13ec-4155-bb8c-b9f920e6e8ba": {"doc_hash": "3544f68aee3515401c4a1017964e820becea8d00f130d336b49af4fe809d3d66", "ref_doc_id": "0144dbce-80d3-4318-8ae5-5866f0330241"}, "0756c2c3-572c-4226-80e4-6b368dcc42bd": {"doc_hash": "24738a7b67ae03b4dc67fec4cc1abf674f65bf09f75421a5b67c92e149e66515", "ref_doc_id": "0144dbce-80d3-4318-8ae5-5866f0330241"}, "d87cbf58-b3e3-431f-90d9-bf9152478ea9": {"doc_hash": "240b4ccd08551e993ae8347e374d07942cd62b19d193f3887348dbe5cd8f55fa", "ref_doc_id": "0144dbce-80d3-4318-8ae5-5866f0330241"}, "c49c9cce-17bd-4a03-8505-729997ae4656": {"doc_hash": "f39d770337ea38856ad66fa14041b9ec4b1eafbf9cadafb549aa616091cb5910", "ref_doc_id": "0144dbce-80d3-4318-8ae5-5866f0330241"}, "cdde58b8-3042-4538-ab04-9348f0d82bc7": {"doc_hash": "499a547df128c145c64faff02beb578c12e4ebdf7ce7470e803cfc5f376b097c", "ref_doc_id": "0144dbce-80d3-4318-8ae5-5866f0330241"}, "11e540b6-9f58-4845-b5f9-9bd38bf0d8d0": {"doc_hash": "4ec62737f936cdacdda6ad895550218fda2519d48a910f6391a29ae3b1511803", "ref_doc_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2"}, "abde40db-9714-4cd1-bebc-c1d98c6323c0": {"doc_hash": "9c0deb8f051bee9115a54cea72fc25188aad727d389b7e900597c6e23648fb71", "ref_doc_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2"}, "ab5fa94c-4196-4994-beb7-0174f85b477b": {"doc_hash": "11f8ce3110cae7a28f5951fbd2d15212a1c4b41f5e82de5e4653f9146827b27a", "ref_doc_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2"}, "aa83d018-7c38-4aec-82ed-d81726fe2f49": {"doc_hash": "3918799c5f1d56724cfdfc3c0bb92a4586ef8582b0c89dec4dd8f1a3bb103ae8", "ref_doc_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2"}, "1c0ba5c4-71ee-4caf-ba7f-5f0ee137604e": {"doc_hash": "f5dcfe03c874b5f1326190fe146cd79a5ff3c5c8b0234c0171ef9d7fdf144250", "ref_doc_id": "32392c6f-4303-49ba-9a39-c4c6da1bddd2"}, "4e4df545-6ba1-4bf2-bc56-84199d771183": {"doc_hash": "fb40cd3aad769da672b56151d75f29e2628c891a226b9152a15631d66e17958e", "ref_doc_id": "311bd72d-5546-4502-bbab-baee387de6f3"}, "b4f55450-8c58-4e2d-a99f-8c413350f21d": {"doc_hash": "8f617bf4d209167ca8fc09164c9a7c1650d3bb8064d1efd622490e11494c7bab", "ref_doc_id": "311bd72d-5546-4502-bbab-baee387de6f3"}, "429c52c1-8ff8-44ee-b26a-54cf6eb8adc4": {"doc_hash": "0798a09527aa64b6367d2dec802e50bfb004dcf0c20d8e122b13894f8e2cf065", "ref_doc_id": "311bd72d-5546-4502-bbab-baee387de6f3"}, "7a98b628-84b0-47ac-9abf-12e8318dd00f": {"doc_hash": "65350e1c106f67b51bad5efdffcef26b1f0d483f25873918c7ce7ac857196b0d", "ref_doc_id": "311bd72d-5546-4502-bbab-baee387de6f3"}, "ad955d23-c9da-4902-829b-4c43b4851a1f": {"doc_hash": "499552db6fa5b03974503f054b95cd08764b7edeb4d941755c4d21b4f62aa014", "ref_doc_id": "311bd72d-5546-4502-bbab-baee387de6f3"}, "fd01ea58-a6eb-4b99-942a-3bef5880ac29": {"doc_hash": "ef87e8ec60c21da93f8e0823b67b8ab2499104152e777b4095eebc8ed41bc4f5", "ref_doc_id": "cd6114a1-4263-4f9d-a493-6307f278e827"}, "cbdb8738-24da-403f-9f5a-47a2f4d24695": {"doc_hash": "9b942a240550d5702850f39416215c7450450cfdc3c1891d85961a58830d4ee1", "ref_doc_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df"}, "9f92e116-495b-451f-8551-96fe292765b9": {"doc_hash": "ba368a53304de339eb7e71d889e1a38541bdf5746296fbbfb51e2487cdaf930d", "ref_doc_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df"}, "886f38df-3047-4079-988e-5f9305f64a87": {"doc_hash": "308973e0b286bebdbe13e4d460f2ecac6a32edae7f353cd198b96f0a248fcdd0", "ref_doc_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df"}, "0f99e99d-c4fb-43a5-918f-32210c4aeb65": {"doc_hash": "bd0306237fe0098dcff37280cd0ff8532a07df15574695b19dc07c1bef1690bf", "ref_doc_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df"}, "1dccd4d4-5e39-4fbb-9137-6f5daae99e57": {"doc_hash": "258f643c42b7d544a76e599ebe9e67337bc937551e09ecfe9226e3ba66332b3d", "ref_doc_id": "044bf26b-d29b-4f80-b543-2cb3ed2443df"}, "6fcc07ff-4cc2-4d47-9d3b-0275652d7d35": {"doc_hash": "f75361005be8605b1d7342d966b236566ed4e809f3468a4d43eef7a337ab5c45", "ref_doc_id": "752a5b4a-9053-459e-9303-400144ec6f56"}, "69edbff8-8022-4d94-90f5-cc40985f8ea7": {"doc_hash": "281a3c9836f1c86031a2006eaac64d4b5d8ea7d21213a5a805908b54bb19b6f5", "ref_doc_id": "752a5b4a-9053-459e-9303-400144ec6f56"}, "73e32222-f0e0-4269-b211-076685392039": {"doc_hash": "5fe3fe62cf3a4676042763c24fb21ca066fed9b64bd6430eadc974569bc501e6", "ref_doc_id": "752a5b4a-9053-459e-9303-400144ec6f56"}, "f0db9774-7231-4d5c-bb50-30f9a87024c5": {"doc_hash": "87228fdeff8da75f0f6ede67542b425ca015a094709f1718815f83cb9b25135f", "ref_doc_id": "752a5b4a-9053-459e-9303-400144ec6f56"}, "2b729654-7df3-4d7e-b24f-eada34b4b32c": {"doc_hash": "9b7da33d1adc4a8b2c6c72f1f93c51b20cf87f3fe1f85e5b4db5070255be651e", "ref_doc_id": "752a5b4a-9053-459e-9303-400144ec6f56"}, "920563dc-9066-498f-9dcc-82e44b79f387": {"doc_hash": "903daf663576ee2e41e0bc02b33b5d1e56cea0c9f0b4ad00ed2a4f557c78cfc5", "ref_doc_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb"}, "684cf36d-59a3-4fca-a204-b610ccd31a78": {"doc_hash": "ce8bde214c3aa60347b980c6faa62b14e40b9e8a970eea82238a1e5dfdaa8911", "ref_doc_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb"}, "ff330ddd-928b-4b0b-8ba5-79b8daaccf2d": {"doc_hash": "2370666b40fe0e54a9155f212c6e1b5e636ad22dd05548a50ebddae21f3e9aee", "ref_doc_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb"}, "955b35d5-9116-413e-a537-2f5c87ff7782": {"doc_hash": "ecd450a407fba25c8ea4f21348ddd6e26a48b19c25a09028cf318144c39a1728", "ref_doc_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb"}, "7e9b3f5d-4ff8-44a8-b942-743e2980d288": {"doc_hash": "df995cf83f8587b878f6d8a24fa5a0c9739a3856c6e8071fc75a648ad5e9f45b", "ref_doc_id": "82257d0b-5b2f-4bef-871e-7f50cf0e54eb"}, "5e7bdc30-0af9-45bc-a287-6056115633aa": {"doc_hash": "a4460a01dc7118fdf072bcfbbc214c234c5697da36ae1b503151c7d84cf37a3f", "ref_doc_id": "a379e407-7360-45ed-8be5-8adf76f86e24"}, "5b53eb3b-af91-4917-8ed5-878084216d35": {"doc_hash": "d5fdd631228774a9edd965030b343801de03205eb342a0a11a834d4a75e33434", "ref_doc_id": "a379e407-7360-45ed-8be5-8adf76f86e24"}, "27d2122a-59b3-49a7-8b91-82b8957b3f99": {"doc_hash": "6e6f8081e55e5f577911ee5be9f061c5421777dfb6bd9ceb3dbf1dd53d0fbb73", "ref_doc_id": "a379e407-7360-45ed-8be5-8adf76f86e24"}, "d941a78f-fd58-4d1c-8c46-f8c6e7c46142": {"doc_hash": "d9b43fe19c941b026d3855da108f97d91c7504b3d4f4125dfa706553819dce7b", "ref_doc_id": "a379e407-7360-45ed-8be5-8adf76f86e24"}, "b25611d8-5ec0-45e4-85df-181e37762f98": {"doc_hash": "10ebe8a3bc8a660434443a2a87835901671bd0ba7517920fef25a1f33f0ba858", "ref_doc_id": "a379e407-7360-45ed-8be5-8adf76f86e24"}, "d5606743-e8da-430d-87fb-31b964819a7d": {"doc_hash": "b5358b8c90a98c93b2cb5de0853d043ada2004272c506e36524fb3975d433c2a", "ref_doc_id": "b1a87c9b-b0a0-472f-8abd-fa2c84dccd25"}, "0132a31d-4acf-46ab-912a-6de3e4f91d6a": {"doc_hash": "8a6c5ca86ee7d945634f5222d30b121017dceb30edbf86183ecc9c88b3259495", "ref_doc_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3"}, "3b54452e-1c6f-438e-bcea-40908e6b6adc": {"doc_hash": "7700069e6006d736936b21cba4c46de6302b8a5fdfed009078110416e36e15c8", "ref_doc_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3"}, "0e4263d2-9b40-40b4-914a-0cd1a7aee46e": {"doc_hash": "48b35937e47c42a5ef746910d4a23a991f8b579f8e868bb355f3ce3d1a9bac1b", "ref_doc_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3"}, "865c13c6-ef89-42bb-9cae-5e423014804c": {"doc_hash": "d7d61a50e10243e9cc316b7ebcb6eb0d552f9c9171f5d1da9c5f42af15e8ad7c", "ref_doc_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3"}, "2d726394-76af-4fab-b702-48e4094b5286": {"doc_hash": "4104ac0718534ac2d90b58450d48c2ba75693b4574c1ee10d424ec771913a342", "ref_doc_id": "6e55a430-5f14-4057-a3f9-9364f895a8d3"}, "fdb54770-d247-4fb9-99f1-153b7614c735": {"doc_hash": "910f16e5fa85cc9ed3174cdff49fca505f19092c4cdb670f89fdcfb300988372", "ref_doc_id": "127e2699-ba49-4856-8a6d-7641c5a47611"}, "5feacdd8-04bc-4a05-ac72-b79269b0bd2c": {"doc_hash": "335f56892678983023e6dee63a6c4913cc8545c7dfa988b7922c903da1598155", "ref_doc_id": "127e2699-ba49-4856-8a6d-7641c5a47611"}, "f9414dbd-9a0d-47c5-bb08-43666cc4965b": {"doc_hash": "4e2a3dfef0b08e3906f925458b4fd344d2245d4ba19f76fe51bb1b4b0aedb719", "ref_doc_id": "127e2699-ba49-4856-8a6d-7641c5a47611"}, "0423aca6-0545-45bf-a490-c5747584bbfb": {"doc_hash": "11869159518893588344d585cc615af3bbe2454b903886487eed92553d88e599", "ref_doc_id": "127e2699-ba49-4856-8a6d-7641c5a47611"}, "4edec649-9468-4fd7-ad44-748ef80a8d73": {"doc_hash": "39a43b47136dc62d6aff715c2a775fec3e606bda1c0b57df0429799fbe3cf29e", "ref_doc_id": "127e2699-ba49-4856-8a6d-7641c5a47611"}, "d371cae5-3a25-49ba-b3b7-86ea8cfc1b3d": {"doc_hash": "21c5255d038661f7baa612e64c7b968d9fa6106c7c89794ea57ee40fa91aa619", "ref_doc_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd"}, "fded7855-c023-4132-8501-abd549174769": {"doc_hash": "c56a8cd4ea28128cd83e56d0106612dcfb115c2288d7c4dc83bd696637c8c32a", "ref_doc_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd"}, "3ae92522-126c-4449-91c1-f7621ce0a45e": {"doc_hash": "1482eac4b4665075fb9773a86919410408c6664f21272da04566059a734f77aa", "ref_doc_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd"}, "b04d5b46-e351-4d23-88b6-f549f9f22c17": {"doc_hash": "bf5ee90c87eeb6e243ac8162d3bb042d86346f5b44886f9716ec187278993099", "ref_doc_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd"}, "c752ef3e-6058-44aa-9a8e-289234dc1012": {"doc_hash": "ef7920af4df1617e6f6e71c0ec67af5c3a7538d843236e5ae642ed2711d366a4", "ref_doc_id": "a08be488-03bb-40ee-a8c3-0cb2ff0b3bcd"}, "718de839-c6cd-4b80-96ae-723df437c85f": {"doc_hash": "497c05cee20cedea35bb6f5217d2308a9bdbd00435af051d3dd9f9697357f45c", "ref_doc_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a"}, "348aca2f-2b7d-4075-a73c-7dd99279b3cc": {"doc_hash": "3f4f7a186c197799da5cfae21afceaff6f69b3ec6e9ae4e9e9d0564360dad4a9", "ref_doc_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a"}, "803bcf49-0b5c-49b5-8f43-fba6bc3505a6": {"doc_hash": "127e40960faf8ca55bdf3b8f50534d32ccaccb046fae800b1816bd344804ad29", "ref_doc_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a"}, "00846d48-b058-4e12-89dc-84785a74dcd5": {"doc_hash": "0524e778e4b9a1beef45e73523ec13eee67314b82613237b1c9a8342791277a8", "ref_doc_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a"}, "e83713dc-98ae-40c0-a5a3-5318450166c9": {"doc_hash": "1e901b7cbd9cd39d5ae2ab32d068d2d2f764eb5b6aabe8dda21bb62596481336", "ref_doc_id": "735bef37-1cc0-4400-886f-b6a698d8fb8a"}, "6e211404-5347-4e34-8b8a-66e60cdee37f": {"doc_hash": "29d698de6d129bbb894bc3e5f1fbf7dce853c66833906d38ce4925f979c85095", "ref_doc_id": "979d8852-deef-4e32-b16e-e3edfd902ebf"}, "67c7ce57-c84e-4347-a604-7fbd24d3d925": {"doc_hash": "a7f7f6e7e26fda0384267df0a6485651d32fbca862b0d0381a7e0d32a40e5170", "ref_doc_id": "26c87f96-fa3e-4816-b783-59e51995658c"}, "56246172-2064-47ad-8dee-5f36a84bc1b9": {"doc_hash": "5bee2dc0858a8e5ca3ff7fc61bfc19ac771a75a604bcc4468b9ae18e6f1b6993", "ref_doc_id": "26c87f96-fa3e-4816-b783-59e51995658c"}, "c54495cf-b4a9-4f03-9d64-ab60741f1433": {"doc_hash": "1594879604dcdd97d52c27a4060b4f9dd2e7c4b50a1f89af71689dac41de16ce", "ref_doc_id": "26c87f96-fa3e-4816-b783-59e51995658c"}, "e7d4af59-e7dc-4b38-adf7-71e75f3eff47": {"doc_hash": "20c690a3ba80698fab2305f3923eb358a97683951017ab69a21b37a26712041c", "ref_doc_id": "26c87f96-fa3e-4816-b783-59e51995658c"}, "c74bb39b-a299-4315-87cd-57e881216bfb": {"doc_hash": "1edfd3ace231feeffe62bf230c0032f8cd176e020cebff683eba9e6025fc078a", "ref_doc_id": "26c87f96-fa3e-4816-b783-59e51995658c"}, "0577199e-ba4f-4dd0-a938-17a606d65366": {"doc_hash": "945b746e6badfd199ec09b5e144b6acf77ceda1e6173bb741d6b73dd93ba7a51", "ref_doc_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b"}, "91f16057-f48a-4a89-9f86-ac8f7aa997f8": {"doc_hash": "8d8681bbbc032cf29f53ebd99c98bd336fd821007f421bf54e4445829b732fe7", "ref_doc_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b"}, "19d5896a-fc97-445d-8681-dfd116765743": {"doc_hash": "3f54e662a8037aeebbaa63ec7500f4fdc1f56452add11eabdab32e986481040c", "ref_doc_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b"}, "cc47862e-791b-459e-89e3-c699f515a0b7": {"doc_hash": "8624652c6eb38d042e1898049bc7892972f2369c481c924a3545a5786b68abef", "ref_doc_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b"}, "c9088077-e2a5-4e99-a4a1-1ecab2da78f1": {"doc_hash": "6b73e3c46aef6167a81b74b60c8b14fc8ee92c71241c5c70688904ea586dba10", "ref_doc_id": "6f8ef14d-15ba-4c39-919b-64cf4b06481b"}, "d11a66c1-5a5a-4436-8e2e-95255d267a2d": {"doc_hash": "568631821462678a3a888a96ad8c1a74538e8878ab24f44661481635be3c64ce", "ref_doc_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3"}, "a256d415-64c3-4020-a7ce-1ad5879da92a": {"doc_hash": "a3e2c381811fa09c87df382ab80afef2bf3a1f0fbe6acc5acd6dc33c44e74ef9", "ref_doc_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3"}, "b1cb113b-ada4-4690-9734-f748fbd1ffa5": {"doc_hash": "46b52d15463d319527704bacf4b4158acc3c3b553d67041d8db73b02f1790cf7", "ref_doc_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3"}, "60c55969-ff12-4dbf-8835-0e175450bebe": {"doc_hash": "266015b956a5c89dd114e70d0732c10e1a9b6e58d253f6754c98954bb149cca6", "ref_doc_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3"}, "0288124d-9ec7-416b-b507-0d16b949ea40": {"doc_hash": "31307b3c5d0ec971ede8013aff1e283ff776d1cc219bfe2ea721be90c23069b0", "ref_doc_id": "7c1a1255-277e-419f-bf65-25a3c3bb79d3"}, "0ad48f78-7771-4ca9-973b-329de59c5957": {"doc_hash": "ccfe71cc948dabc44040dc752d4e54abe2e9b9d0852e71d9121ba6089bc9ad15", "ref_doc_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9"}, "74c92e8d-c37d-4994-8f16-9774f830962a": {"doc_hash": "34f8f5193a26fc4a9d4de39e9ca96de22e8cd80d8e44598585ff81d4a8cb092e", "ref_doc_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9"}, "f27c9074-b3b4-494f-a038-8868d8699e7c": {"doc_hash": "3b86cf6a443ae171dafa44f3f0b95133ef9dfc4bfe5e2f2c8bdfb21bfc43ddf3", "ref_doc_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9"}, "d0d6d758-908a-46ad-9ac9-80eb23382aa3": {"doc_hash": "38485619a3e4bdce536743bf0c4a6b44a89b0df937fc758347c7ebc099f7a9fa", "ref_doc_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9"}, "a49d4f32-31fb-46ed-8a07-b93a3dc20763": {"doc_hash": "259a9bb515d47ec90484d263d330ef920c34b27a426122b520db8182b0fc18d9", "ref_doc_id": "c4c1c1a6-bd9b-4da7-91d8-0d736fee9ff9"}, "61563d53-dbfa-471f-928f-453d993edecd": {"doc_hash": "98c6bde4fd78422a0820e0168076beaa78433aaf590aaf59fea469a4f64cb7ad", "ref_doc_id": "11d2fa45-8ced-449f-9b75-4adecdccd93a"}, "6f8d0612-7b8a-495e-b432-848449530ef5": {"doc_hash": "204c9d6ecb68f3b262c5689d862b896210e33520392d98a0a1db7d3a9106bd8c", "ref_doc_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f"}, "3efac0a4-63b4-45b6-b3b7-8e7d63726cf4": {"doc_hash": "761aa3bdf92cc4a16caf898afe07d7414ba29909c0441d2087d208b5d4653e23", "ref_doc_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f"}, "ebbdf27d-9fb0-4b40-bb22-e70ee50c1266": {"doc_hash": "9d7628d7510bc7593fc0bb26baa70e9cde079dbc93a6895fcb0718eb36d449da", "ref_doc_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f"}, "c9fcd2be-9aec-4972-8fcf-7a0c3aa810e1": {"doc_hash": "0c84dc25e7ee06b94595d4e012839a5e64ce7a7e730d879effb08cce154c1e3a", "ref_doc_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f"}, "11217679-d58e-465a-8483-cb4e02b195c0": {"doc_hash": "bbc3faefbf2772b4f6c6139abf0fc4f1830c048181cbce90b120632281e8165f", "ref_doc_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f"}, "1d0ed90d-1427-47d1-9177-3950b71ff790": {"doc_hash": "060265547acb354c024ca50e5cbd836b47cd2de762319cc7c06c927d19026e5b", "ref_doc_id": "d85cc9e6-7cd9-4481-90c2-203747d5332f"}, "f07d1bdc-dcea-449e-bb8f-c05682e20beb": {"doc_hash": "ba935ef972985ab619daa95cc81bab4e766cbc3a05a9c60a2f801d56b2e6ff31", "ref_doc_id": "4cb911ed-dec2-422d-a13c-15dce190ad98"}, "ae5410e4-388d-4797-b322-5c3738c20f8b": {"doc_hash": "89990828963492ffa996c6cc67ef0fb1cbdd0431371653f96ef7c15fb95eefb8", "ref_doc_id": "4cb911ed-dec2-422d-a13c-15dce190ad98"}, "bc2b1699-3321-498a-81a6-9f48719637f5": {"doc_hash": "a97aee935ca13e4530970dbbc281d96b4bded7ba17f59901434f92f002e5a425", "ref_doc_id": "4cb911ed-dec2-422d-a13c-15dce190ad98"}, "2fadb8e5-0985-44d1-bf4c-439d02261b8a": {"doc_hash": "8638bdf7dd2c9e62821f07c085d45c0284c9fae816c45361c51bf4452a19a53f", "ref_doc_id": "4cb911ed-dec2-422d-a13c-15dce190ad98"}, "bf60b907-e849-4d2a-bed9-a51e6c7ac729": {"doc_hash": "85916773dc8d368ad522ad029d01e438e37f9a6ed9a15bc81085c1f6830c0fdf", "ref_doc_id": "4cb911ed-dec2-422d-a13c-15dce190ad98"}, "42c5463d-3edb-4487-a266-6d75f5f75a42": {"doc_hash": "f0197b6aa0f9b25f2ad3c9547c673f194d4229792871905e35174e0f4abdf56a", "ref_doc_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77"}, "03387317-48f3-479e-97e1-8bf14b82411c": {"doc_hash": "81d271fb3d23b41ebe6fa7ea22670246ddcfeb99856e904009441c04175def0b", "ref_doc_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77"}, "0f5ce71b-d34e-469a-8960-561329a4356e": {"doc_hash": "78f4343ef1004ae4280594ff0ea152dee4aedf5a0e39534f04f43c6abffdc7ca", "ref_doc_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77"}, "18c1b723-e724-4f69-b3c9-3d6f1b257dcb": {"doc_hash": "373f55e319a325a3e4c0986d6132c766f4eb32b2f37226416da0647ac3c41ddd", "ref_doc_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77"}, "7ac46e1a-7f09-4ce1-b9ef-3378ce3c5a91": {"doc_hash": "a47426569062d022f1dabb361e12856eba3e6c335764b020b3cba7fbcb326e79", "ref_doc_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77"}, "33b2ea32-a369-4ed3-ae4b-083d94792b92": {"doc_hash": "65e4349c6ca4b51b58eadea74d35454b63bd88669e66f7241af0daeaf10a72b8", "ref_doc_id": "c6e4bcc9-596e-4d62-81ff-c43577daed77"}, "2873b237-50a2-404f-a5b9-b3182ae6a93d": {"doc_hash": "2829c545a08b666fa7034eaf492222b3094956100191d7dd5c8439939bb01d9e", "ref_doc_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9"}, "9ab93845-3810-4ab7-924d-4579965c4ea7": {"doc_hash": "57618041de78412d21e7994c70cc63d7db8221f15d26d7351cd0d4e403ea3d7e", "ref_doc_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9"}, "b87ffb98-0f67-49f7-a5b7-e08642a88344": {"doc_hash": "6bc331d97ffc5cb935d1efde2a1e6324edd3dc230322db3f90097f1a7b32f5fe", "ref_doc_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9"}, "f7efc4b8-c791-4125-8962-6bd68f325ab4": {"doc_hash": "ba9ae8748633ae093de0567e32e945f14f8501d0823e93a54a7f29f06935a9a7", "ref_doc_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9"}, "dc143671-3bdb-442f-bca6-0141c49597e7": {"doc_hash": "583041c72959afd17ad6af6bb04e9c3f35a58eb372f3e48648f68839e13ec7ab", "ref_doc_id": "15a861a5-591a-42ed-85e7-dfb2baa70eb9"}, "caeaa5c9-ba58-4383-8799-217e673db756": {"doc_hash": "a6d29ed896be6450469d829ad93a87f04e0d46470ec8ca7e6904d53aff3d3a4b", "ref_doc_id": "b384836f-88bc-4aa2-8535-0aba633151b1"}, "7d8e3982-1435-4d8e-91b3-84a8d006dcd8": {"doc_hash": "5b6daa1cf1930b3ccda545904a2ad95d26fd707da952874d1894411559f98777", "ref_doc_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1"}, "ace8cbf6-ae5c-4b81-a5b8-17ca7b742faa": {"doc_hash": "9e6f8a5528d11619411448f052d81a9225f2d732fbe1258f56629ed069874eaf", "ref_doc_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1"}, "130996ca-43b7-494d-adee-fef6b4000d9c": {"doc_hash": "0615c98bfd4f24e7cfe1fe7eaecafc04e87e68cc9d302e8126d7df97b2c65ee2", "ref_doc_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1"}, "1c898484-1725-4fb0-99b2-c258e3eeb3bd": {"doc_hash": "8f091ab43e2239ec7b9e514a70d427b5b94ea0f16f06f2e6f5299725217388e6", "ref_doc_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1"}, "4e53b794-cab5-4b6e-9041-1f0c4cf2bf1d": {"doc_hash": "77f5e5190c67304a55201dc074a252973897f5f98a6fc113cafffe6fa7aaa7fd", "ref_doc_id": "8212e847-90ca-4688-b6e0-e95181ddf3a1"}, "ddf406d9-928a-425c-8325-dd91b7d366a4": {"doc_hash": "56ad4975ba8cab0521ce20d75f2057a3adcf2bb86647cca36eb6f88884701424", "ref_doc_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4"}, "bbc78b89-775e-4c28-9a14-ed9c5f1422f9": {"doc_hash": "c32e46e1cb3101c55b4ee2de2d496402ea9ca8f36b46c41ed1940b33c82b71d4", "ref_doc_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4"}, "6ff47426-6103-4403-9cb0-00307e504431": {"doc_hash": "31762703d3771224ea04474ccf5b59c5f6d955fa37fc939f5e6b4317022d1b4a", "ref_doc_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4"}, "a54cf6cc-cce6-4dfc-ab0d-c8532fb53740": {"doc_hash": "b1e044181c6e1ed4c696fd4382d6c29599eed0fa6f75337d495d40075a23eeba", "ref_doc_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4"}, "375e50bc-39d5-4b0b-b7cb-2c61ce33f547": {"doc_hash": "dfd85861f36b2621f01af59b8dbc0dd4fc44e17cc0bce2f31431699b6f8c152f", "ref_doc_id": "bcbe1df8-d675-4abe-8d15-92624af70bc4"}, "094e3db7-6011-4382-a5ae-f6def0737c12": {"doc_hash": "e748b228c2f5c6bb0a2e023b575c35884411150af4fc7c0093fb833ceb508a24", "ref_doc_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5"}, "56092edb-3c14-422d-959e-1c0e73dcf4ed": {"doc_hash": "203e5bbdfa0220fad2e096c8e599aed1c918c9cedc3420ca795887381f8e5f7e", "ref_doc_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5"}, "0ff2c95e-1eff-426d-8571-93b49341fd17": {"doc_hash": "b2bf2763f91d8fac94236c21cdecfd6671b1a05602883d615125fc43dbac2a44", "ref_doc_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5"}, "1e3216bc-6c08-4f8c-99f3-fb5ddf46744d": {"doc_hash": "75e5f207a7373cfbbf90a4f3816254b722d819934440813e05e9f673393084f5", "ref_doc_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5"}, "4f316f1f-32e1-486d-8fb9-0f9388cd42db": {"doc_hash": "be9320872547a92bd52327090099aeb1a5fb871c77e527b1c6c85b0cf4001ddd", "ref_doc_id": "8e672703-bba4-4f1e-9e3b-379fc6fe65c5"}, "4db9cb2c-14e1-4c4d-8e01-ca94bd87ce95": {"doc_hash": "8f8d4eb92726ac73cf7ce8c8bd3cf2e97c3b4372b0a6405511891e6bfa301b26", "ref_doc_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5"}, "2f564de1-1d5e-4c71-a70d-e5610bf88a51": {"doc_hash": "9d82d50c0bdd159afdbb2c9743b4f189cee424bec4ee5b6a61f14ba91e6ff5d9", "ref_doc_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5"}, "dcbdde15-623c-45d9-9beb-dde9c0ffb196": {"doc_hash": "7f8dadb31dec6bde840a8bf0e9979ada8ef6b13bfcf4f08ab12947b2d771360a", "ref_doc_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5"}, "e9512d88-2aec-436c-a314-fb932aaa84bb": {"doc_hash": "5b30a29872ded857557a048f865a765709de3f47db78d9a58cf9d97bd87c3ad6", "ref_doc_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5"}, "0ae7c6e2-8b2e-4f19-9244-371ef3906376": {"doc_hash": "c31429f733fee91af7ff3563857491cb25fc6df2bbcf21b6fd72e04df2bf0985", "ref_doc_id": "87ee291c-72d0-47ed-9d5a-9a2edcd579e5"}, "c661d886-7f8b-4f03-af5a-7fd9fee6b1fe": {"doc_hash": "a186295e6447835b32d0ec7f55692631acd3786be604f3dfa7ee7151c44d55d6", "ref_doc_id": "821dbc59-27a8-42a7-a88a-a52095ea2a16"}, "7714117d-bef8-4fe8-a3bd-0bc726f35583": {"doc_hash": "253673d2dcadb9365ad155d5377775bd7031a8432a93a15656a6ffa76cd8b31e", "ref_doc_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78"}, "d0112c5b-7c32-479a-97bd-9438fa1771d3": {"doc_hash": "7b7425daef3fe465d8f3c5a6499b5fba97da35dd586f4d38d723ae8359089afe", "ref_doc_id": "c098625d-e8a7-41a5-abae-3bba4ea9de78"}, "4bb71919-2013-4728-9dc2-57182a1771af": {"doc_hash": "868db532fe6626fc73a22677b5e473fe612a8f4ef656b375773ae86c10cc2864", "ref_doc_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4"}, "960ab783-6d27-45f7-a6be-49f2e7532c9a": {"doc_hash": "0c0932ce5678c76c3f742a86388f8fb76ac2f18ed0a40be1b74026a90c388194", "ref_doc_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4"}, "4d093e52-87c9-46b7-b75d-1ace03bf599b": {"doc_hash": "fa3d74a139ad95f17a1090172fa69dceb36bfe6985d90e06635dfc0d85e98377", "ref_doc_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4"}, "e0c03fe3-060a-4782-a41f-e4b6ffbc3251": {"doc_hash": "7722572cb670296a38ab19f11d3b3049ed39f96e3fbb3a01024f4da48f17332a", "ref_doc_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4"}, "b401a653-d593-42d5-9243-5d83093798f3": {"doc_hash": "ad046583165c91038276fcf0b9096f785d47166b2b3e407d3c9fde3391ef37cd", "ref_doc_id": "9ad01ade-c9ff-4aff-8293-e9d5283e4cd4"}, "fede8ebb-dff7-4cff-bb80-6c6c4442a37d": {"doc_hash": "bb49bd13adce5a7b3c4d16f847f5f93513b3e41c09ea79e45addf777b04df6d9", "ref_doc_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf"}, "4bfc7226-6269-4036-8253-89c19406915d": {"doc_hash": "944582356ee1c19e3828fe479e411312cec6d4d299c977c43640871b809f61b7", "ref_doc_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf"}, "72ae79f0-16f6-409f-a4b4-4dc943ca566d": {"doc_hash": "6c9b93bc689d354446f8b35362a2fc8eea16fd4573ad15ef687ac82627631ccc", "ref_doc_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf"}, "576d392c-1d49-43f9-b9c8-16ff55b735bd": {"doc_hash": "d6dcc0cf9340310799307f13b2a98a9c794a9875919b9cd634b70afe1a95c5a7", "ref_doc_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf"}, "6ffe8ea6-1378-43f1-a4d3-0d51afa4108b": {"doc_hash": "01ab2310c9dd0d0f27a9951013f0ad61b057ed3980216ceddcf738baa0ad2a9e", "ref_doc_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf"}, "6824f290-dc3b-4d35-9c22-ed22ae19fa60": {"doc_hash": "ae4fbc9bab875fe2585c10dbe47f31ca49c31524d05aa566e9471d33a7971a23", "ref_doc_id": "22d940f3-f943-4714-bc50-5bdfdbf66adf"}, "519c17ff-67c4-45e6-8c18-1de6f686499a": {"doc_hash": "d9c4a268b03c71eb6c78fec0b06c0baa3b4cae0d136000da2fe7f1ff4a1a3802", "ref_doc_id": "72551f36-ec85-45af-bae3-5423db829066"}, "787369f8-7ee4-44c6-9cb0-a49266145a71": {"doc_hash": "791a9d26e041e6ea72e5001c97613af19e49721066df212cb83fcaedafdabc8b", "ref_doc_id": "72551f36-ec85-45af-bae3-5423db829066"}, "9a45eb22-2399-44c0-acae-288d0e5c2159": {"doc_hash": "fd91b6526f68e5b35bd6b063390c2dd92e4459a98ab1a62c19ae039f500bf81f", "ref_doc_id": "72551f36-ec85-45af-bae3-5423db829066"}, "41a86f97-3f58-409b-b9c2-023d13c9351d": {"doc_hash": "5bd884b34fe96df0d4a680c69ad51b4c56a3c682715f2e36915a78b25472ecd0", "ref_doc_id": "72551f36-ec85-45af-bae3-5423db829066"}, "cfd0a9a2-4770-4314-95ec-13d2acd03e4b": {"doc_hash": "60e5a241858c95163f5cad127156697b19adf5f5061fe3339343acbfe2e63ba1", "ref_doc_id": "72551f36-ec85-45af-bae3-5423db829066"}, "3920b6b6-165d-4081-a2f3-fd4bfd11d94b": {"doc_hash": "0b218f43a674c1ec06b4e3e087af3d055e5e0f17d1976c688f2a82bf91562d13", "ref_doc_id": "3c491f0d-e54c-42ce-abca-cf987967a63d"}, "503ceb27-2176-427d-aed7-28fb8851714b": {"doc_hash": "4f929d348f5da34031cfb91abefce8fe182e14b329b64e4571fb34e5746f160a", "ref_doc_id": "3c491f0d-e54c-42ce-abca-cf987967a63d"}, "8068f1ab-4c29-44c7-ade7-6aa2eb3bc2ab": {"doc_hash": "f006ace3bc530f88f4a57a8299237d8a870e5d81e893c9f5b8c143490f913861", "ref_doc_id": "3c491f0d-e54c-42ce-abca-cf987967a63d"}, "b29e2185-6487-4a2f-a2c7-9b78c143ec49": {"doc_hash": "2073d0f0c1dadc4f5a05bde21aa1479b1bcc69b124f40081a9c6d38f267a1cc6", "ref_doc_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf"}, "d82d9a02-ea07-4b3d-80d4-46e13aed9994": {"doc_hash": "f3f8cd733457b858b79499e9ea5113a00d02884c8bb9113427d9a592f9b7ddc5", "ref_doc_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf"}, "dcf6a7ce-08b1-480e-810d-bcbe837a8b0d": {"doc_hash": "9949baab63ce92d284019f06aee7d0799ea422c5acf3a2cbda39033b91588dc8", "ref_doc_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf"}, "f9f3614a-c2df-412b-a822-4fa748fc2000": {"doc_hash": "ce5620e85421299477ee07dd2d9539fd4fbab6ee1239dc871a295d425397692a", "ref_doc_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf"}, "6eeeb8cf-4c12-4ba5-b385-b41fdcc0156e": {"doc_hash": "163eff244166f9e0ad8a154a1e465f999a9991c6d1ac2558ae2127e6b94880a6", "ref_doc_id": "b2135c83-d5c7-4455-9b06-92769a72c4bf"}, "a949e8c7-ffda-49a1-b339-a6f7d2f48ef4": {"doc_hash": "c509ee35a8632290ef3dec61fb694c69d6dad6a92913302c31608c525c6ca97a", "ref_doc_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5"}, "6e0b48a4-47d1-4675-ac47-cd8ccd583f4d": {"doc_hash": "c46129bae03efea507a475acdc47c8e60e12a0bdba1302960c93bd449233a08d", "ref_doc_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5"}, "def231b8-c1b7-4a00-b0f9-ec23066e1f7c": {"doc_hash": "188a73388654244fc641a56d04444a05c9bb1b1ff5701095d4e8db15919f586a", "ref_doc_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5"}, "40b4fd5c-9805-473e-9457-e0a1e6ed0a4a": {"doc_hash": "e4f28cd334a64ebf18e32236bac09837f4ce79dcccc3860fd50c0feddb69abe8", "ref_doc_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5"}, "f48a29ad-f064-4f99-aa42-e6481ec00bdd": {"doc_hash": "e862ec292330d40cbb1fd37e34e8095d792d455ced5a889b9ce553314b97108e", "ref_doc_id": "3c2ac410-38f3-4b43-97aa-afe1918019c5"}, "a91168b0-6ea4-472d-bc06-b081330b168f": {"doc_hash": "0d0482f4d41d9186be53911242dcd4c28764a3cbe78175ef932ea4be41aa0dd3", "ref_doc_id": "bd6b745d-e8d9-495b-b6ce-333955638033"}, "03e47879-f991-433d-97ca-d48ea0af7b90": {"doc_hash": "00223029112f45cbabe50645bd150e696c17dada9c9997b546607bbfdfca2198", "ref_doc_id": "bd6b745d-e8d9-495b-b6ce-333955638033"}, "100cdae7-28de-4cf2-94c3-38d7c46e8c91": {"doc_hash": "a8c3fe9aee3d366647c1797ec7b5ad9bbcbb63537717219f721e7ecf168ba8da", "ref_doc_id": "bd6b745d-e8d9-495b-b6ce-333955638033"}, "8be279ff-ef64-4fe2-a895-abba32d58c32": {"doc_hash": "d430428d6c8cdcef27ad554bbef479fc15329992824fd00f27441693bc94dee8", "ref_doc_id": "bd6b745d-e8d9-495b-b6ce-333955638033"}, "36792f86-4b31-44ca-8932-bff12013809e": {"doc_hash": "354d950d090f0b3432ce5b0ef84bd2e3c663d8eb38ff1a60ee55d1726ec1265a", "ref_doc_id": "bd6b745d-e8d9-495b-b6ce-333955638033"}, "bb7ca060-e17d-4903-bbaa-822ab0f66438": {"doc_hash": "3f484c8eb650f9bf40db84610b92b7cbb8ce0c34147577c8304b3e27ae6f31f5", "ref_doc_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb"}, "f90556c7-c8f4-451a-8d80-cf4ff4c8e6cb": {"doc_hash": "34020e9fb1aa9f7af919b072c1902bb9b5f50d5945ffa592e03b3a6c66765b62", "ref_doc_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb"}, "054cbdea-b57c-42f0-9d70-1b33eab3ad34": {"doc_hash": "060cb7093eaebfd9d0bc263697552ace48ae20142aa98b3758ff0c8c969944b0", "ref_doc_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb"}, "247ca1b7-b46b-47f7-8a5d-fa87c9ea9c0c": {"doc_hash": "6b8f5dc325cd7226bafd3287e7795706783213168a88f4e891728ac6beb7efdd", "ref_doc_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb"}, "24a3a044-c310-43f3-8343-b55d949c8ffc": {"doc_hash": "5c296cf0c67ec3eef49d93f20c690d07fdb3da42060435874d80e5e086448264", "ref_doc_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb"}, "91b7b727-dceb-4096-bc15-abe813e5cbbb": {"doc_hash": "f965f064560dded95d3691c7d02e51d119f22cf93266e21e6db0890ddf6c551d", "ref_doc_id": "9a9e4169-a13c-478c-942c-5617a4cbefcb"}, "1fc134b1-5260-4e17-97a9-4d799078b18e": {"doc_hash": "6390f8a7f175012f680ec5f0c825dd3b8facc65e9564db30bbdd0e1d1aa63657", "ref_doc_id": "387374e2-778f-472b-a73f-092761fffd50"}, "88561f61-11b4-4831-80e6-56ea5a7b8884": {"doc_hash": "ffee8d33b4320a7b5ce14819d386499bf1c4a863ab946117304bfe5adeb905d2", "ref_doc_id": "09e83244-0f60-4b37-9ec7-b77488731f88"}, "9a58da2c-4931-49ac-a9ad-c0851876d001": {"doc_hash": "2b433187a4d0bd126b2292eb6c8bf51b006654c93c7ab9dac5628e9e3ddefc6e", "ref_doc_id": "09e83244-0f60-4b37-9ec7-b77488731f88"}, "28907271-0aca-4c70-827c-4cfdbc72fedd": {"doc_hash": "fd2f5f49c913e25e35ed5753c846c2e490cf400ea1142efcd03f8ed6b244ced1", "ref_doc_id": "09e83244-0f60-4b37-9ec7-b77488731f88"}, "ea32f259-157b-4a72-93fe-6cc2c06718b7": {"doc_hash": "21817921f2360bb081a227a41cb8a43f01303472ca88af850a967e9244f5ef39", "ref_doc_id": "09e83244-0f60-4b37-9ec7-b77488731f88"}, "cd2c91d5-fd7a-4565-9083-819f265ba97f": {"doc_hash": "e9a102ad2daf76d77286c847ac6bd2abce5e914760f47f92bee49b55d1e94bca", "ref_doc_id": "09e83244-0f60-4b37-9ec7-b77488731f88"}, "3f48fb26-925f-417f-b515-d565b88d5f7a": {"doc_hash": "e3f3ee93e4a0ba434c4b53faf57cdd52a047dc96a7a3da3ab2b25dde16811a13", "ref_doc_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603"}, "b77c2312-64b7-4e9e-a4ed-2f0b59d9dc84": {"doc_hash": "3574d961f622ad7a6fc2b6a32429c98aca35a9e28e7ac7a666b79c1cc8578d90", "ref_doc_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603"}, "92d46532-8d6c-4397-b118-804cc96b6684": {"doc_hash": "30a8fa156d630dbb01136d925ba0dba01ae5a6cb35fc1c6a24b0a13f4a0fac96", "ref_doc_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603"}, "8583080e-e19d-4aa9-9ea0-26ed3dfe5eb5": {"doc_hash": "a7cedba77c6ae11f88a9405e482bd902bf54e359aec94d34afa8ebe0ff770d0c", "ref_doc_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603"}, "4408b453-bef7-40ec-bc82-c8ab1e20cd76": {"doc_hash": "ae69dd62ec40c29e67e03064710045b7ff27698c06aef157fab5a373e4983335", "ref_doc_id": "e5e9c2cd-2b5f-4fd6-9865-9bd318289603"}, "6e6f86e8-1fcf-4d35-9d83-b0c80d88bf0f": {"doc_hash": "8b4e69ef37ee76fccd00c4519582efa49e008ac90bb386e6748888bf9693ad62", "ref_doc_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35"}, "ae094239-1e94-41ec-b537-241ea214da20": {"doc_hash": "96ae1bec059349b4f7b72885539c3ba35ddce9bee1c299228ed47ecea9ebc3fa", "ref_doc_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35"}, "117fa4cc-c819-4872-aa98-ec9a6615e140": {"doc_hash": "a47f2c3b8f655848975feba1785ba7d2eb6e2f0781c38f8685b57c029b592010", "ref_doc_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35"}, "23fa5541-1de4-4a93-ba97-e8e14936ffbf": {"doc_hash": "96976567332b3040ad2ca7b05a6ce8fe6d05bfcb130ad9aa0121cec22ee42dda", "ref_doc_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35"}, "d7f57d8a-ab05-4629-b9ea-d85cf86ff64b": {"doc_hash": "cc3281d06c75c0ac3d9c6be1da281201309676eebe8167297c33389a08b3b964", "ref_doc_id": "33a2425b-1dc0-4c42-b651-457a7eb4ba35"}, "cd172577-bb20-4239-8779-41c2d9cc92d8": {"doc_hash": "5253627e770787b25e7074d768181dbaf4d6320fb28dea5070db4fd5bc7f36ea", "ref_doc_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8"}, "98cb9888-1f26-49b0-99d8-5b1023e3f8a8": {"doc_hash": "8fadbf275860ffca84d700592ae82730cc46570803dbaef3ac86c34bf608c12c", "ref_doc_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8"}, "5aba2019-cc1d-491d-b3dd-b7fe5aea8359": {"doc_hash": "bf1dadc88149be7b176c186576c411ede9a1bd08b11a1fa629de2ce188d8d883", "ref_doc_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8"}, "5f2c8335-5e09-437b-9254-9146dc3ce4c0": {"doc_hash": "fe5fc7f463a9ac337340f6fe53e73dd41d45347029258c0816717832485911a1", "ref_doc_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8"}, "87d46d85-62c5-4f6f-adaf-439bff2ac8b5": {"doc_hash": "215f0fb427c7ad1d8c7267e03917e7117839d48ff32ffccd0e192beb2f861414", "ref_doc_id": "a7a287e2-a5d5-405d-b204-1a9464cb02c8"}, "7215347a-bec8-4499-b84b-87e56d7798d7": {"doc_hash": "0944d9096bf294b2ff0fc9d378ad1c5f594893adacdbeff5260e66988b16bc58", "ref_doc_id": "338c170b-8eca-4a12-bf0d-5a6a78a6439c"}, "1fd2d5d1-becb-4b8c-95ae-4d22c81751ac": {"doc_hash": "f108ea2d3cb675571839119270f4a0df54cba0d006794edadc682f2d53b27c89", "ref_doc_id": "df10fc68-725d-452b-abe1-a801e77316e1"}, "466d7896-5982-4d15-8c09-ce1b2b499fcb": {"doc_hash": "3ee9282fa7e9d09c55893c3da1a750f2f03c9a1f80aa3c97d224cd31cb3772ac", "ref_doc_id": "df10fc68-725d-452b-abe1-a801e77316e1"}, "764cb45a-c263-4c13-82cf-8bcc8614f18d": {"doc_hash": "c7d6144b07e396cf6468b96a2a3d20bb35ce00e4f0b937d2cf08e837a68a26e3", "ref_doc_id": "df10fc68-725d-452b-abe1-a801e77316e1"}, "c26462c8-5ba6-409a-bdef-d32f4af76e8c": {"doc_hash": "2b89b5c3c41b67f794e317f8ce38f0c8b4c26393f3d5187c4394ad6d9fe5e611", "ref_doc_id": "df10fc68-725d-452b-abe1-a801e77316e1"}, "96935e3d-077e-4077-a34c-563046a4a9af": {"doc_hash": "6cdccf0b20298394170175ab97e8495969158eca47ed1893d47d573e1b9a818b", "ref_doc_id": "df10fc68-725d-452b-abe1-a801e77316e1"}, "4d62f771-970b-48f8-b14a-62e26bc7e93b": {"doc_hash": "3853c6b5fa643c854839155473449ea671eaa53605bf88989276e8779cfec47b", "ref_doc_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9"}, "6cad24ca-86e6-4ce9-a3f9-d4300a461240": {"doc_hash": "91ab2ef83afc257c8a4d9b1ae720a22d5107cfd9d0c475c003cf3853eb866638", "ref_doc_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9"}, "f3d6202b-fbdb-4dd7-843c-d4c69d693507": {"doc_hash": "74578d166bd0aa0696c58002fc3b9ed10ce205b17f8943148b3dbb467641d002", "ref_doc_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9"}, "9c6aa033-bc49-4f28-a70c-df8fb280f9db": {"doc_hash": "daaa329ad5e9e668780357162a95722e3ddf943b19163590045003ba4441f95a", "ref_doc_id": "64ef4e44-872f-4b0a-8ea8-d584657679e9"}, "a5b29452-7cf0-4e7c-9eef-db750abfb1f3": {"doc_hash": "c800c0cd31bbb97e31ed2a33ac0782b638020a3b041b84b13ef41bf867282047", "ref_doc_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd"}, "153ff03a-7a5d-41b1-a225-d33f096a08d6": {"doc_hash": "51d5f42a73c291906d5a22cb37c1c1e9c093162fd0eac08bdd6f9d45ca618cb2", "ref_doc_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd"}, "983f6bcd-90a3-467c-b5c7-046b750315d0": {"doc_hash": "13e0f3d12b6b2e15b637dd61f09a05e619a2083760550873bc5312624e5647ef", "ref_doc_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd"}, "8a87b86b-963b-470d-b6e6-926da66a50de": {"doc_hash": "4083217ecaa94d07113e66333ec31143953a6e09f3084715a69ee25f9790d8bd", "ref_doc_id": "4678e86b-ae71-45f6-80cc-6ff61cd2d8fd"}, "965dbdc7-9602-43b1-80bf-018976ad93c0": {"doc_hash": "f9be28b7fcf71ea4d0c152e1ec47bb0acf08f458df45b16d49e140d047abbc7c", "ref_doc_id": "963debed-7070-4f3c-96e2-5ec66d6c6847"}, "245d234e-eebb-4aa1-b998-0442e66a44a9": {"doc_hash": "5cb8f17f208dc42299e8de622e069de3a38c04b4e11075834befe437f2cacd12", "ref_doc_id": "963debed-7070-4f3c-96e2-5ec66d6c6847"}, "18f178b4-7cd9-48ff-b80c-6bb76112b9ef": {"doc_hash": "e85d8cb9516d35a6b385a7e0379b7db5abaddf03000e2f05264f0bb65cad508e", "ref_doc_id": "963debed-7070-4f3c-96e2-5ec66d6c6847"}, "d2ce0a4e-ad12-400f-ad9a-61193a02b616": {"doc_hash": "c66b65aa746b448f2015a66bd6eef2cb4b35897abdaca8ed827fdb771eca5561", "ref_doc_id": "963debed-7070-4f3c-96e2-5ec66d6c6847"}, "305cc266-361e-46b0-a7ed-0229ed2dc951": {"doc_hash": "5913fbfd7d84ed3efd24a928d1a4503424a65265a15c6b768b680f1f6614c0ae", "ref_doc_id": "f709652a-4211-4c99-bfdb-564137f3c1ff"}, "321fcb63-d95c-4677-9785-63b5f08cecf9": {"doc_hash": "0b02ab09df556b96705d580b8625f012321bddf13fa82671da88c956f999bb97", "ref_doc_id": "f709652a-4211-4c99-bfdb-564137f3c1ff"}, "1498a664-7df3-4580-80aa-da852b9765ca": {"doc_hash": "9d936f328c0ddf9a205f3c1b69727fa6798735c3735c36f2ec907a58fc360b6d", "ref_doc_id": "f709652a-4211-4c99-bfdb-564137f3c1ff"}, "6206d07c-1153-4eb0-bc74-d43fe861a882": {"doc_hash": "6a3c4ff801fb6183e9d217ca7a6cb95e01a3ee35e10dfc2844817376b935c6ea", "ref_doc_id": "71a03883-c942-459b-b797-21604e74eac8"}, "42583b1f-8492-4241-924f-c9f3b6a52fa1": {"doc_hash": "157a8e66dae5912d08a1563c3d602b1a297300e0b7e93c4aba9d45a7647ab974", "ref_doc_id": "71a03883-c942-459b-b797-21604e74eac8"}, "b890cdf5-63e3-4f21-a765-e24e1f50978b": {"doc_hash": "bc326012d182def302ba231118ef305a6e57ed8191806e952cd4b9d72d4eecc8", "ref_doc_id": "71a03883-c942-459b-b797-21604e74eac8"}, "b384dcae-5512-4c33-a499-3776bfcf85ca": {"doc_hash": "a875d07372e5772521e5d1d3ee12c7a7878b528e4672f99bf82835aa8d9d1591", "ref_doc_id": "71a03883-c942-459b-b797-21604e74eac8"}, "94bc3331-64ca-49c4-9998-97c7e964d574": {"doc_hash": "003324236cba9b537d539eca61e7fd5de4ba7e11ccf0e261a02e92cdbb406f97", "ref_doc_id": "184598be-7970-47d5-8ba1-3495d65a5982"}, "0f27daf2-26b8-489e-8cb6-47577e9d8900": {"doc_hash": "1d57b32a9c46f52e0c790230c5afd912325079ff00f3442d93af7aab56dbe908", "ref_doc_id": "184598be-7970-47d5-8ba1-3495d65a5982"}, "b33651d7-e2b9-4b0c-8002-33c07a7fe702": {"doc_hash": "39b3d3f68012bdcfce8cbd6c32ad1632099993a79b5180f79356ed4007cc9d6b", "ref_doc_id": "184598be-7970-47d5-8ba1-3495d65a5982"}, "8bae23d5-e668-426c-bbcb-018a6807a5e0": {"doc_hash": "77ba0aace675f30d38ce6c76b8ea23ccb68ef021f7fd39c939249b58363a0eda", "ref_doc_id": "184598be-7970-47d5-8ba1-3495d65a5982"}, "f43a0660-a0cb-49c1-93fc-21f7354cf830": {"doc_hash": "0d83b25e1cad8905b5549d6b0d512366cb52a5d8e5d068293583a82a03d0f9a5", "ref_doc_id": "184598be-7970-47d5-8ba1-3495d65a5982"}, "53c4be28-95c7-496d-b8a6-b771eec1ff8d": {"doc_hash": "35e5adbb7092798fc053d43db307e7f21751a9b656282f6b4a443a6c8c6f3167", "ref_doc_id": "4fcae3af-5c06-43ee-8163-850e87e5b408"}, "a27df6ef-1e79-46b1-8d46-1bd60daa381e": {"doc_hash": "a7279571d180d784a17c9f480613df27f910efd7d9093a3611d378a02a90e17f", "ref_doc_id": "4fcae3af-5c06-43ee-8163-850e87e5b408"}, "9e0e8481-7aad-43d0-a105-05a7a37ed67f": {"doc_hash": "64b0bdb321d76d9fef7dc8373ea1d17c82253184d674abd16f2a4fe19fe8bbb7", "ref_doc_id": "4fcae3af-5c06-43ee-8163-850e87e5b408"}, "5712e442-71a5-417c-ae70-c10634cbdd6f": {"doc_hash": "91226ee9c8a38811851d31a38a8f1a67a231ee2a46cb1b11750755a07d9f5d7d", "ref_doc_id": "4fcae3af-5c06-43ee-8163-850e87e5b408"}, "bed55be9-7411-435a-9b92-c6246b7a935d": {"doc_hash": "4ee47784f40d49fbc2a17bc47a2f010c97f87e901f7f60d465f0b59a5ef5c92e", "ref_doc_id": "4fcae3af-5c06-43ee-8163-850e87e5b408"}, "9803418a-96e0-4315-b2ca-cabf46837209": {"doc_hash": "181e4de98ef95bd57174f2677196636de4228b5b92d0e0878775cb116a1d8ecd", "ref_doc_id": "c1b517c9-af44-40ff-a58d-2a9900695b35"}, "d808c73f-e825-461c-95d4-b0bd0b5b074d": {"doc_hash": "22e6752d05854cd1c4ce1eefcf5c739210aa68bda7d924a24d0d10dd5c416492", "ref_doc_id": "c1b517c9-af44-40ff-a58d-2a9900695b35"}, "46339c77-c80c-433c-8ecd-43d5323a2965": {"doc_hash": "dc0d29f6d514febbf77862318df9fce0d8b886e9ce6016c5fc05149963062dc1", "ref_doc_id": "c1b517c9-af44-40ff-a58d-2a9900695b35"}, "4baa4868-a654-4e4b-93d4-1eb0d850dc63": {"doc_hash": "1dfd9fa2f118d2399e94d806cdecc2a7542cd3a53279d1a70d0c11baabc33256", "ref_doc_id": "c1b517c9-af44-40ff-a58d-2a9900695b35"}, "fa8c8e40-60c3-42d9-9104-22fcac806347": {"doc_hash": "a9049a6de392b1c661b7f5b937b7a88eb4785a30dbe7243372bfe4b817c8c956", "ref_doc_id": "c1b517c9-af44-40ff-a58d-2a9900695b35"}, "7a3cd01e-bd8c-4508-b023-1f030efb5d70": {"doc_hash": "a99c390ae7cd922a3a7bc56366e9151a64bce5f0851afceb01a02c8ed0091b23", "ref_doc_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1"}, "8b93a573-d8fe-4e04-a22e-a7dd5095aa52": {"doc_hash": "8c367424ad565a799bba13310932d924d25e710ad1a7f57fe2d8704877a37114", "ref_doc_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1"}, "82c157d6-1485-4ff4-8229-f9693af9d444": {"doc_hash": "867dc7fb244c479348676b74e12e804cc167a8030a67cc82e8b930697e15c713", "ref_doc_id": "ba92c151-064a-411f-8f21-6a0dfa57c3c1"}, "a7b511c6-158d-4432-a2ba-a964d7dc3433": {"doc_hash": "b0ba74d8410114bd08f8aa51d6f79c722a7d3704e27d4cb9976edb68ecea389a", "ref_doc_id": "e4630f66-e9d3-400a-a896-6014b851892f"}, "7c1c5a46-c21e-4dc5-9b6a-9a3a646b4e86": {"doc_hash": "f10b8e92530787354f18e751fee03652ca7cda3ac12d3be828009ce5db8c8ed1", "ref_doc_id": "e4630f66-e9d3-400a-a896-6014b851892f"}, "26cffffb-9a18-4402-803e-119aa55c4994": {"doc_hash": "80e16649037b3a05998874f2c61c14f3ccb6e455433360870ca8b8478bffdc96", "ref_doc_id": "e4630f66-e9d3-400a-a896-6014b851892f"}, "7bab914d-da19-408a-b3bf-592abf88699b": {"doc_hash": "c59194cbe63f0ad9efa87d09cf5447feecabec05887a106c3c1ca820141a2252", "ref_doc_id": "e4630f66-e9d3-400a-a896-6014b851892f"}, "2b7f456e-3a0d-441d-83f2-c29e2ff448b4": {"doc_hash": "2a6bac078f6b5499217eb74dfdcb3444a3d898da8d658bb527afc4265b9e711f", "ref_doc_id": "1368a402-6ab3-453c-a888-6ab05bf57a23"}, "79bd5447-1e29-4695-8cb8-96d6a94888f1": {"doc_hash": "4df94d52b6d58e75746a9e14c9da342115d16b93d2cab4cbae623b672f2ff2f8", "ref_doc_id": "1368a402-6ab3-453c-a888-6ab05bf57a23"}, "e4e26d94-d41a-4612-a630-935e50c8be7e": {"doc_hash": "535d14b9ac859f9754bd7db0e800ea2f2aacd5149a2db62e515db7b1982897c3", "ref_doc_id": "1368a402-6ab3-453c-a888-6ab05bf57a23"}, "09b30c55-035e-442a-a6d5-d7c0850f9669": {"doc_hash": "0cdc789b94825f8a39f822f9c3119f45458d1e62d7e4f7395fa84037a7fb1bf0", "ref_doc_id": "1368a402-6ab3-453c-a888-6ab05bf57a23"}, "e8ccf3d5-5a82-47b8-b11a-5e88799e669e": {"doc_hash": "2b5433015f450a783aad69d5f1a9ee09138d0f8c26da677de19383ad5c90fefa", "ref_doc_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef"}, "9fcdb236-aa42-4a0c-a3a7-858e913b4446": {"doc_hash": "7d90164ad435ad284c18b49ea9fec82fca5d4fd0c7abe5381fc6c09b61a98a6e", "ref_doc_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef"}, "0a36c17f-5fd7-4296-933b-c9a39f290a66": {"doc_hash": "d8c3c8721f2a95cd1547ae04351f3c45ec21b5b6ed98f46a0b8623c80982bba4", "ref_doc_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef"}, "9240184d-6865-4a68-89e9-ef3c72284881": {"doc_hash": "a7665bf4b7d6395547e6ce255a0429dc91d20c74629942e51832094e02a853a3", "ref_doc_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef"}, "432dc6bc-84d9-4165-9774-2181e5498835": {"doc_hash": "51c5a3447e2742ae26f1e47e478e1c2e60406cfb28a73f30589d6ab7d72422c1", "ref_doc_id": "4efa7cd5-9fdc-4d27-85d7-da34c73536ef"}, "db38802c-2b7d-4ed4-8da5-a489be6f4af4": {"doc_hash": "d2b6fdb7a3dbce6a6a3d2d7ccf54dfc5342119f2000979f4885b4f8db988a10a", "ref_doc_id": "d625f540-381d-499a-85ff-aa967dd9d39f"}, "ea4df9d3-e098-4ea5-bf19-ac641a1ec025": {"doc_hash": "6824e11d2d169e89563092f39812c33d446cb0df1ef7925bdf1770e56f9ff8b3", "ref_doc_id": "d625f540-381d-499a-85ff-aa967dd9d39f"}, "74dc7ca9-d179-420a-a225-0df2ef70fb95": {"doc_hash": "6333b65522d472e612b882a95a2b524f5e90cd5b4abb43a0fe5e4625dfae5e88", "ref_doc_id": "d625f540-381d-499a-85ff-aa967dd9d39f"}, "13407554-22ae-4438-a991-08c9b06c15e7": {"doc_hash": "8492df127d6fe49fe1f69c99594d56d388c781f7e84296730eb0e442f84e5f4a", "ref_doc_id": "d625f540-381d-499a-85ff-aa967dd9d39f"}, "a81b5efe-769a-4b67-8d91-eb489f5d2f1b": {"doc_hash": "2bcd2dac3e2d55bae38a5a0ffc9452f627dfd2ada0e86153d5892284870d7f93", "ref_doc_id": "d625f540-381d-499a-85ff-aa967dd9d39f"}, "4a4cea12-5d79-406d-ad3c-21d9f227f854": {"doc_hash": "c6df11ec110851486a38f91698a09f0ce15903d90be9ae0b9e21ab96134c6828", "ref_doc_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701"}, "c0b1a7d4-9a50-4cbe-bee6-6f62ff47091d": {"doc_hash": "d03882fcef4e14b7121bbe461f62bdd7057afa6bc415f23a7f07b2e01cb03932", "ref_doc_id": "c89d5173-c1a7-4bbe-8064-2fc75161e701"}, "90bd322e-2faf-4ed7-8261-65b54e740248": {"doc_hash": "93f3e8998e0cbc3a6a7f1d2131317c33c15d27e70bddbdae92bba8f2e4d78f08", "ref_doc_id": "f80aa8da-056e-480d-adcc-4ba7e1121390"}, "7dded2c5-45d0-4ff8-9d74-34616469c23c": {"doc_hash": "a3fe1a2263da2277df03dd204d2f0e0d58fe7cb65352857f568e7cf5212abe04", "ref_doc_id": "f80aa8da-056e-480d-adcc-4ba7e1121390"}, "5d467a4a-07af-4842-921c-2651fd28f6c4": {"doc_hash": "d7372b743251d29fc041217d0047d2dcc3f0832d8220d60117aee40472e37ab7", "ref_doc_id": "f80aa8da-056e-480d-adcc-4ba7e1121390"}, "5b5b9057-ea0d-4db0-aef6-e8c7f9608235": {"doc_hash": "990199baf4def5f6afcf3480a3198a23db98bfcfba9aac6c78a30ab6f2a8dde2", "ref_doc_id": "f80aa8da-056e-480d-adcc-4ba7e1121390"}, "99560ed0-b14e-43b7-8a97-ced0c5f26c4b": {"doc_hash": "a37bdd05bf21cae7f8d85dd312ffcd87d0b9b4c05402366da79fd4912f7197c0", "ref_doc_id": "f80aa8da-056e-480d-adcc-4ba7e1121390"}, "9ee7b1a2-dca2-425a-a2a4-f43643002188": {"doc_hash": "9b543fefe4ef8b65942273c9422fabc68e2fc25d2c47e40a9cfdabc577bc1383", "ref_doc_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893"}, "c5d6ad3e-9d97-467c-b9d8-84af28a314a7": {"doc_hash": "45476748d50ff1266ab441abf103e8915cb63d92215ec10ec92fb03f342b1e54", "ref_doc_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893"}, "a8304d01-ae23-470c-bf1c-7c60396dcad6": {"doc_hash": "4a73fdc8dcca78a09f5e07127bd39ac3358af378b0d53d6f83447518b2bde8ac", "ref_doc_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893"}, "6462a0de-f05d-41f3-9829-6df044c4bdb0": {"doc_hash": "9c7f44a66a2d7bfb226f649ef6a87710849a047359ee24fcff54aec83548dc2a", "ref_doc_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893"}, "1a065996-cbb8-44e6-b2a4-b9f5fe3b281f": {"doc_hash": "92b0bc7c7ca71cd44c6c233a2cbffd92c7cc2fbe50deaae7f230f5d9f84c9fef", "ref_doc_id": "2599b1a6-133c-4b7a-b5fd-aeaf32f5e893"}, "31e12560-acbf-4c47-8b2d-96ad0f84d2fb": {"doc_hash": "93dd6753e50e3105fd23cf3a676ebba8d8cee603888af531b4a725e09e91364b", "ref_doc_id": "ccce360b-35a4-41ed-807b-5331211701de"}, "9a4a0ea0-3fdb-41c7-ad4c-1039d675776a": {"doc_hash": "64075042e6e19894aa403c6a01e735d345eadd8306437a896b71b672c65a67cd", "ref_doc_id": "ccce360b-35a4-41ed-807b-5331211701de"}, "c9b28730-67fb-4a58-877d-f3d99d4fd21c": {"doc_hash": "2028f5c2477dafdf10a6ad1bea33bff7a8385acf9b534718a4b884c738d5fa50", "ref_doc_id": "ccce360b-35a4-41ed-807b-5331211701de"}, "225b5ae6-a81e-41b3-b090-84bc9dd0d278": {"doc_hash": "da61691df50dc8c88fc4db295d8d5bb5ef4fac54afbcbd7fca78c9e2d2d03d05", "ref_doc_id": "ccce360b-35a4-41ed-807b-5331211701de"}, "e6b59695-4da2-4acd-82dd-25e8d006d49b": {"doc_hash": "c745f81ed8072420715b0ceba4ed52ef9bb5b72663a5c375a38c8ea6c8d804a6", "ref_doc_id": "ccce360b-35a4-41ed-807b-5331211701de"}, "0d3b2897-8759-4e5a-b14c-e805f5e5ea97": {"doc_hash": "91973ab1f30d4721cd79d590dbbc9be6853c661dd234323a40e78de1af4c1849", "ref_doc_id": "db0aa27b-ea92-4876-8486-17599745f512"}, "1ccfc152-03d2-4f6e-af81-dff5ba9055ca": {"doc_hash": "0202e655f14f5292e8104b71516944f15c45c3543e4097b04e1ff63de08f292e", "ref_doc_id": "db0aa27b-ea92-4876-8486-17599745f512"}, "a82aa6c0-6adb-4ef3-810a-72479dd78648": {"doc_hash": "307aab1d9eb0e3846845588d574f55179ed3e27c0221db160d006b365464644a", "ref_doc_id": "db0aa27b-ea92-4876-8486-17599745f512"}, "6f492e26-fa96-4d6a-bc71-14dff335e96e": {"doc_hash": "52c13bfa521f151d89dcc2468a51e859c559d43a3676624397c1dd024ce7f88d", "ref_doc_id": "db0aa27b-ea92-4876-8486-17599745f512"}, "5a51a28c-2d72-45ad-ab74-730d1d8fc4cf": {"doc_hash": "df2281cba15db76fb853df6823db070341ccce2626bc32a73456e6ca09796193", "ref_doc_id": "db0aa27b-ea92-4876-8486-17599745f512"}, "5dcf6c8a-9ef8-40a4-becb-54fddc67d134": {"doc_hash": "f8c555f03204c21829202e234ef698ca976c7c47c84d44953cfb5fe6e98a4f11", "ref_doc_id": "5e42b7ba-699f-4007-b796-b1828f7088eb"}, "0f79fa48-9598-48f6-8911-8dc6cc59c128": {"doc_hash": "9826a34850459d835c19bf1f4d828c0f8e8ff09bad85245bc4061bf667c1fa47", "ref_doc_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066"}, "e6378a24-0227-4c82-8511-8c028cf5ef3d": {"doc_hash": "813159ee8ce76806b8507c5acac7e93a6a35647842e6642dc0f62abd64147ab8", "ref_doc_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066"}, "fb5fad50-9e27-4fb2-929e-0db25688f5af": {"doc_hash": "1252febea3fe4df9aa998db5442056e2d3eef6692f63d8f7e9c643679bae8ab9", "ref_doc_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066"}, "0e1af8fa-2b32-43cf-9927-e5001c9051df": {"doc_hash": "3d74257a14f0fe0e99e66381586c9e92053bd6f3bdc2bba2fafcb8148894996f", "ref_doc_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066"}, "4eb1dcaf-b8bd-4898-bdf2-c777104d1c5f": {"doc_hash": "63b4d530951881b3a037712f9fb8caa10ba4d6c61aa82aab9ca5e66535cffffb", "ref_doc_id": "568e0f92-74aa-4a54-a55d-b1b7a1bbb066"}, "15c961b8-fcbf-4ad8-a360-a4dc78ca4691": {"doc_hash": "680b54c30ce6d766a59faf001e8135104e9da23f3a4d1f064ad89c0458575443", "ref_doc_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556"}, "6a8d2732-afa0-4cf2-8e49-5b70a0c1a13b": {"doc_hash": "203d91d62fe8775dbac290215d92020388433e2d844cfe9f2dd97f3e65a48f5d", "ref_doc_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556"}, "5c01e908-9c6b-4c09-b732-9f9441441f6a": {"doc_hash": "a2c09b0b9bb506b64258f0e21f39d6609dd173b11cc0a16c24ea3ec532792b54", "ref_doc_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556"}, "4ddd9932-61e0-4107-8d22-e25f53b88f28": {"doc_hash": "8d2a22cdadf4fd556f121ef4d25021c72a80318bca8ab9b36219f8e3eaf85b0d", "ref_doc_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556"}, "04a87901-9db4-4399-ab2d-afe1f0dd996d": {"doc_hash": "1443853dda990fa9b490cbb0338db5fda9e6fd50510ecb56d6bddd9499e32ff8", "ref_doc_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556"}, "c978d67c-bbcc-4149-be14-2bf06746d9a8": {"doc_hash": "4801fe8361b94988bbaee84a8c6fce73dd50fe1ae9e4b5f915470adda5cf12bc", "ref_doc_id": "52cf35a2-f41d-4c76-b56d-8ac809eb1556"}, "3269e536-db30-4391-a2ba-a53cd3e3cf78": {"doc_hash": "b590d89e56b547bd1a3c4fd669860336762ff50241a39ff6d0ef94c2ff4c8c78", "ref_doc_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd"}, "6e821d96-904a-44d9-b391-308b59e81bd4": {"doc_hash": "eccf118632746ad087edfa3626f9b010186306afd421711635294d65a3091b3f", "ref_doc_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd"}, "d1ee1453-3be7-4752-8d36-d542ca0eeded": {"doc_hash": "25fbe575cb215a78c027fe3b5a2f122379e4fdb45235ad4d6bbd48c2a17199e6", "ref_doc_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd"}, "1e41f815-cb98-42c8-9107-72f71d09f1ae": {"doc_hash": "08d6ea92e5275b96484f6efcce09d4ab45efc4ce548eeeb0648ca09828382277", "ref_doc_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd"}, "0da85683-9ff5-4f0a-9eb0-1808af60e198": {"doc_hash": "2d72ef66fe1dc2ae967e9c2d07e1737f12c14e46d1ed8ff4bc8965baccdaa696", "ref_doc_id": "04a4b035-21c1-4369-9c6d-2c8256b1e9cd"}, "135d8eae-9240-423f-9b09-448286bd0ca0": {"doc_hash": "f1d912ce805d99d5a669322d0b2595dd7f4d6862b9a5f7ca5bbb0a4aeed515c8", "ref_doc_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253"}, "08851b7d-3d0b-490f-850f-eab8d0d2e0a1": {"doc_hash": "78f4bc9297ed1b288702f3a65421d7f8b094bcce6f1724ac2ac08345bf3952a4", "ref_doc_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253"}, "a2ca7a63-6dae-416a-bbcf-defc21b90eab": {"doc_hash": "daac28f6cfc4fe2aa0ac6b6f96395ee3208846828791777bd5dbd1bdcc4234cc", "ref_doc_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253"}, "e61c134b-dcda-4ab9-a832-12457053398e": {"doc_hash": "b9c79460220cc89ee1600fd44a213c1bc98e56e29659a504c0028cb726b200cb", "ref_doc_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253"}, "2f7c3a15-dd9f-4072-a660-518dad9b734f": {"doc_hash": "257262a2be887262c99b33524be18358fd60dd18f7081d83ea2800ebdeb9cf88", "ref_doc_id": "8c3144f5-b808-42a8-898e-1ba57ab8b253"}, "cc281ab0-2e4d-44b4-8c27-82ef456a8256": {"doc_hash": "bdc1819cec1b3ef9c90b0362175e6b079241c7f6d68cf616ef600099ae8d89a1", "ref_doc_id": "30da43e3-e957-4749-833b-2a3da21bfd1a"}, "a42c78e1-e356-4f59-a55d-73bf8c091375": {"doc_hash": "2be435b2f21e2f8546c57591d5ec356ceefdb27c3f7f3515640bf09d030fdefd", "ref_doc_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5"}, "ecf1b2fa-45bf-4b80-ae9e-4d2b64fdebe9": {"doc_hash": "15d0301af4bb1164d5bc5593f3f23ac257c87f34d8edd0da68142af8776e34be", "ref_doc_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5"}, "dd0ba1a0-a407-4c2b-af60-bcafff85a92d": {"doc_hash": "965ef0f180b3a79ad644f84ae669f437c368c88354ce34e5a19363ca95326e1a", "ref_doc_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5"}, "909bdfb2-03c6-469e-956c-0a85b73df27b": {"doc_hash": "976ff651139eecf88234c381599cef8453115eeec33d62ceccce60c3413d8070", "ref_doc_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5"}, "4a10f491-2852-47d6-9e10-c633b60ef81a": {"doc_hash": "4562ab613ae85545c54b11e8e40bd79819d118b716b0438539786365398b9a9e", "ref_doc_id": "c5e25e23-d9bf-4fd4-9d59-935cda61c3b5"}, "95a447d3-6ca9-400f-8337-60574b1cada5": {"doc_hash": "cb10eb88bfa18751ecbdfcb6087e92c82ab463e807c089e6338616f9b31d66c3", "ref_doc_id": "e3d9a200-8d09-4a5f-8057-525d40945061"}, "be7e36ef-fe2e-4e90-b70c-7a50ad7fc22c": {"doc_hash": "e3d7b801aac00cbe456f3e1f869a85c0093164114d06708eb8d85ce025f7c8e5", "ref_doc_id": "e3d9a200-8d09-4a5f-8057-525d40945061"}, "7f8ae9c4-22d3-4550-951f-0f0f82d23c2d": {"doc_hash": "33d339740c13fc72675aa636bdc1564ded6c50d647246ecade52d442974709ad", "ref_doc_id": "e3d9a200-8d09-4a5f-8057-525d40945061"}, "eee39ce9-1e38-412b-a0e1-6093f069dcad": {"doc_hash": "932d8f28b62fe2bd31ade6cafab3920861ab0c2284c4475a8a423e544e7f35e3", "ref_doc_id": "e3d9a200-8d09-4a5f-8057-525d40945061"}, "9eea42c9-9132-4606-b947-d1feb67f85d6": {"doc_hash": "02bf167599ff70ee7eef35157f7f796eb093a735ea2017b0d3dec73636601eac", "ref_doc_id": "e3d9a200-8d09-4a5f-8057-525d40945061"}, "0b25c7cf-6f96-448a-840d-eb23b7b27cf9": {"doc_hash": "0d6f609a3ac5caadbdfd6444d07bc1af83dd5a4c8e79c092bbe37ee7923cd253", "ref_doc_id": "2f30528b-8b87-4916-8530-b167226ec7c7"}, "9f4e5765-af3c-4cd0-bddc-330785d407f8": {"doc_hash": "537d5c6106a5149b3c513bb6963279a294da0ef75a69461f3d2a399e548c0243", "ref_doc_id": "2f30528b-8b87-4916-8530-b167226ec7c7"}, "38a42ca1-e7af-41ef-b721-a3f02034f28c": {"doc_hash": "bef0ac4ac2ffb0be3dbad0af4ea27e3385d51d64a20d9028d430f8d7fee11df8", "ref_doc_id": "2f30528b-8b87-4916-8530-b167226ec7c7"}, "b4d490c7-956f-4df8-9f26-17f447afd45c": {"doc_hash": "d7d5e9d4adb0a64a4673dc15b11f0dc734147a10985088264b0d5d0d6e004fe8", "ref_doc_id": "2f30528b-8b87-4916-8530-b167226ec7c7"}, "52384559-246d-4e74-b894-844451d98bdd": {"doc_hash": "75d9d1ad8618dce097ea2137f6824bcf4df1231de4737a680c72f7d205bc7d16", "ref_doc_id": "2f30528b-8b87-4916-8530-b167226ec7c7"}, "562b22f2-c306-4f43-a2a8-105c451f87e2": {"doc_hash": "65a52f1359e90a37b59a776d7bed40fa3715f5cc0bcd9bb732c0eb52fb9320ba", "ref_doc_id": "627089ab-2bd9-485b-a802-bfa4e68a989f"}, "698fc5ad-21b3-4381-abaf-27e51cd07f06": {"doc_hash": "93a75960bb36b7754178c05328774539e6df08bf0237d05e2410b8db7a1f94c1", "ref_doc_id": "627089ab-2bd9-485b-a802-bfa4e68a989f"}, "2e9e5cc2-9d95-4f21-8e70-3343c4119b23": {"doc_hash": "68f9a67146b9c48d9c670af551f6538f54b93267af6dca38c0371af39ac26cbb", "ref_doc_id": "627089ab-2bd9-485b-a802-bfa4e68a989f"}, "38deef60-5953-4ce6-a948-7534442a8c79": {"doc_hash": "b69fefe6348e0f18ef1b85a235b1bd13eb343ec866b6c50ee91ca6ab6202e9db", "ref_doc_id": "627089ab-2bd9-485b-a802-bfa4e68a989f"}, "1037093c-fc66-44ba-91e3-78a995e518c3": {"doc_hash": "e0518e2cc3f1cf9d5b0ccf65aaafa8860286b46b31506c36d6266178ebcd383c", "ref_doc_id": "627089ab-2bd9-485b-a802-bfa4e68a989f"}, "43a2dbee-6d01-4401-96a5-61c873838777": {"doc_hash": "d58f66633934c77c5e6e78bb98e3c4db4b39984c1939b23726a6f44650b4e65a", "ref_doc_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7"}, "1bcbffa3-1812-4ad0-be4f-c849e40c34d3": {"doc_hash": "34ba845e79dd7ec3b6dd66e532a70e082aff786108ac6b7037c62a157ff6e2a5", "ref_doc_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7"}, "c6d8cb3b-a823-417c-b781-8a6bff348530": {"doc_hash": "f4ceffc40963abd014b6546476a980e861549f8e21ada9826f1194e0dcf2e786", "ref_doc_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7"}, "3e60a303-0647-497d-9c1c-f07a7abff7e7": {"doc_hash": "b96fe28977eb06879f99fc2980231f779c49a6caa455ad8b516fcc55aca1a0d9", "ref_doc_id": "e634f7fd-ee80-4b92-bf7c-36a0460fbfd7"}, "b2cdd11d-e256-467c-a3d8-aea0cacbcc29": {"doc_hash": "cf6d1ffbae7f398d6d1621620ffbd192c8719184b88ed73ed3cdae3f4acc90a7", "ref_doc_id": "09a2726e-0481-410b-ad8a-2b781b5ace20"}, "0b373152-101b-4199-9214-e355804544d3": {"doc_hash": "53161288260a6df60398810a52679809131728c9dc7eb53f6b505d25d90a8393", "ref_doc_id": "09a2726e-0481-410b-ad8a-2b781b5ace20"}, "37e282cd-edbf-4c07-bc1a-c6019e9cbf42": {"doc_hash": "1455d2bd1b1510825d660ea6f1107d458d65d8956af0f0071a327bf54984b694", "ref_doc_id": "09a2726e-0481-410b-ad8a-2b781b5ace20"}, "e8d348cd-8002-4444-9eaa-f1345eab4532": {"doc_hash": "084cc7fa12bd9edae87a5c1819f0c0ce8e079cacb20a680a05b81194392f62d1", "ref_doc_id": "09a2726e-0481-410b-ad8a-2b781b5ace20"}, "13810b79-ed46-4c11-9300-86270dd789af": {"doc_hash": "0fd41b4afe8680c43fd3aaee26df25bbc1d58c80acd3ee486df01abad2c4f254", "ref_doc_id": "09a2726e-0481-410b-ad8a-2b781b5ace20"}, "ee3fb77f-1d14-42f3-9f2c-b843ce1b8aa0": {"doc_hash": "b03d90bd722490cf9e7b612189f37dfe92c52a0dded7726b47aa12f3d451725d", "ref_doc_id": "c16c3890-e372-4b47-a635-f842b511fff4"}, "9c2df3ac-ce65-4b47-8816-9ad2cb5c8d7e": {"doc_hash": "6ef69291895ab7c3bb2a2fde35bbcbb32ec2a5751cdf4ed9a9f85ddc90a2385a", "ref_doc_id": "c16c3890-e372-4b47-a635-f842b511fff4"}, "a078ef6b-980e-48ff-a909-46d93ae4a576": {"doc_hash": "7f96dd8db48ef1c98b05700e8df3824e35332e2346b62d3c3f99055d7f51f67a", "ref_doc_id": "c16c3890-e372-4b47-a635-f842b511fff4"}, "ee55230e-af50-484c-ac4e-33b78e3c093d": {"doc_hash": "0436e27e97c82de24d0d7dadf79b2bc65f022c8380aceab880b4aa8349d15066", "ref_doc_id": "c16c3890-e372-4b47-a635-f842b511fff4"}, "9a520d63-0b4a-480a-b1d7-906086648372": {"doc_hash": "bd1ac117d70c2e66011863307a5aac815978e8d3a7d30e651c88e198c003090d", "ref_doc_id": "c16c3890-e372-4b47-a635-f842b511fff4"}, "7f18dfb3-09c8-487a-b978-594b096af9a6": {"doc_hash": "6a409d0b658e0f3856e54be2067da2ca7190a541b1a2b31a27c534cbc159d986", "ref_doc_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000"}, "fbc49e2e-35d7-4b98-8097-548fcae36e3a": {"doc_hash": "e5cd8b62ad226effa5aa76124925d34740500579c6ee283f875e6c090fe63e3d", "ref_doc_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000"}, "cc9ea388-20a0-40cc-8744-1723d241030a": {"doc_hash": "53d07fb0e38db6ebb43c6ed0267932591e65763a1a8a8b88742fffbfae5e9081", "ref_doc_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000"}, "8a0cdde4-777c-410c-8c7b-8f6e3fe52755": {"doc_hash": "970caff3ba6092f1e7f5c3475582f6311bed060ce96ef27a7d37ba70e0f188da", "ref_doc_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000"}, "4722ed5a-e26f-4db0-a771-b57818810a64": {"doc_hash": "0d192be6d6b395c867bacf0f9ac7c0ad5ff43652429b5869e82feb6bb55ae37d", "ref_doc_id": "57c6c99b-d287-4b37-a3f9-cd0ee460b000"}, "ded51de2-58c1-4f23-997c-f2444c442fc5": {"doc_hash": "ab56f2e80b266d3fda50edc498bcb4edfb481f7f7ad22818494c8825924bfd9f", "ref_doc_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402"}, "1830f899-bf77-414d-9fc1-601092e0fccd": {"doc_hash": "8de19af12d6b204ac14cd3ba589e7c58df8d6e99e40911e113b3d4cae976548b", "ref_doc_id": "d1f6a34e-8c7f-410b-8bdd-805c045f2402"}, "2872a7fc-b7f0-43fd-9ace-fe70645eba38": {"doc_hash": "ab59aa50e3081f2163f34fa70136da93420b2bdd1991b0213515ef9fc74bff32", "ref_doc_id": "664de977-ff5e-4562-a767-60f5d1a97172"}, "6efe5fe6-5200-4bf0-bf2c-b04c22545f9f": {"doc_hash": "aaa6521df88196d46da724dce67b845cbe7596ed0432d45fd1780aaf1acb4069", "ref_doc_id": "664de977-ff5e-4562-a767-60f5d1a97172"}, "2508fa31-feed-4f9c-9e0f-89fbb8810d5d": {"doc_hash": "43b073acc9d58987bacfefbf54caba9838d5df022161453ffa65df2332a60c43", "ref_doc_id": "664de977-ff5e-4562-a767-60f5d1a97172"}, "39ab40c2-69ca-4a43-92e5-6f41d180871b": {"doc_hash": "64512f0f79932ae13001e4e494a15f93f0ede17a546f03848153e590db7b8896", "ref_doc_id": "664de977-ff5e-4562-a767-60f5d1a97172"}, "3cc1cf4f-4887-49b0-bc30-d942f3571db2": {"doc_hash": "7e0b75878049af8421abda6c2743c6491655e1c0a573a796d32ce77532e9fa3b", "ref_doc_id": "664de977-ff5e-4562-a767-60f5d1a97172"}, "89922951-0d4a-49d4-9878-8a3d41466751": {"doc_hash": "cda1c22a28967b1a5212a7c8667f0ba189b57d868769c130b844276fe500a1eb", "ref_doc_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46"}, "bd3b3825-3d0f-4bcf-893c-cfe106989f76": {"doc_hash": "249adb5f35c266972b61010657f8a647cce5e1595cc6b4f9c4973e24bb1e36d1", "ref_doc_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46"}, "e90a575a-261d-49e7-ab32-6bc4d8c8da9f": {"doc_hash": "4ea560f8b1cc1b0e1028a85db49bf6310e30c0cade1fe8f3f70e8606f6e3c1d0", "ref_doc_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46"}, "0959a0e6-e2da-4e24-be50-6be1d624a89c": {"doc_hash": "060790c596f43d3aeb5af92ddf937dfecda2513d7409610ab4cbf11161132612", "ref_doc_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46"}, "46ca73b5-0fc1-4ecd-8104-4106acfdb6ef": {"doc_hash": "64e8d8b524d2e4de69f3eba8eb019aa36bf2828379569b13fb64f44e79735d89", "ref_doc_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46"}, "d9846b04-65b3-4668-b41a-07d864932ed2": {"doc_hash": "d28958b1d9e8a63836bc072888bfc685d419e9b8e128ac0ec6b4ed0a1ab76825", "ref_doc_id": "5da86237-d9b1-4d3f-aed2-88d87c182a46"}, "d141017c-d986-45ad-9cfe-3835daeed41c": {"doc_hash": "89fa3eea6dc9c51f1694018609b83acbda6732dd643478f90509a687d5317bd4", "ref_doc_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0"}, "8620ce5a-a9fe-499f-bf4d-5a767ec296a3": {"doc_hash": "822b21cd025a648378e2a80f5333d5269146bba6a32b0c128f03a03e68f04499", "ref_doc_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0"}, "f8f8943c-d4bb-4480-9bbf-8ddd6832935c": {"doc_hash": "f82a7517124dd217d1c8d3adcb7824cf6f5b23be51d41b5d9b94491febe6e723", "ref_doc_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0"}, "8b06359d-3771-435b-a372-59189b4aba2f": {"doc_hash": "05208d8aecd255e7807239ba4ccf3868fc9c6903822cfa59732a7619f7389856", "ref_doc_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0"}, "6cdf2fb2-48c0-4e93-8e2e-20750f82d678": {"doc_hash": "103cec00b0308248e8a6a938c956122964e23c296b925572f6f90d90956211cd", "ref_doc_id": "8e88707d-a88e-455f-a7ca-5b8112f2f9f0"}, "e8006a70-a8a6-406c-bc72-fc569ef4b07e": {"doc_hash": "9b92c93d963b4f6579a0c390716c3d98bbafc20431edd09dd514d6aef863813e", "ref_doc_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2"}, "443bcf4e-cd91-42ee-9d3e-da5317cdf5c4": {"doc_hash": "15885c9a1adb1367ea7e08ba43553ad1423a4fb6d6fd8a465d397e5c7221fd47", "ref_doc_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2"}, "6f34f248-9736-45ab-aa35-8c61a58027a5": {"doc_hash": "a579e157486eeb50f11a72712b7ce9a0ac36caa7acde47830a38457454223b54", "ref_doc_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2"}, "8fd64ac2-9f95-4894-873c-946e502f7445": {"doc_hash": "5ede7d8a424bfc9cce02b4b02cabb8641dede34a3eee7a4239e9ab0cedfcdab8", "ref_doc_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2"}, "bb31d6e6-f4ed-4f46-82e3-67516f40b86c": {"doc_hash": "b976de70d01e40ad55132753619b59709679388588833112c9e382a5d970dd17", "ref_doc_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2"}, "21459c43-c8f1-49f9-ad53-a23a01658233": {"doc_hash": "155267e60949e9480125e28223e6220885a8dbc329c08a43435042b8216e39a2", "ref_doc_id": "6ed9369e-5a39-46e3-a44d-6d2203cc83d2"}, "dff98556-7886-4d53-bdcd-28c669565d6f": {"doc_hash": "7e4647f634850c894d394181a735d534992c7dd055df4db2666db1ae6ff9440a", "ref_doc_id": "6182115c-f574-4e4a-a6a3-e3380a7b3e7e"}, "54393072-7c19-4be3-9772-c8c379cdd4d4": {"doc_hash": "dbc7dc7216c2b1c64e2cd95b57d95e99e81b9352b646c17fb3258919f16a1d8c", "ref_doc_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4"}, "a716c2ee-d2d3-4cd1-994a-18b41d64d398": {"doc_hash": "66849e32e24363ee4b3f50b8b25ed7910538543fd10bdd52356c006d3eece548", "ref_doc_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4"}, "dc3ba930-c2fa-4ba1-8465-93832129cc79": {"doc_hash": "052ce35ec0cd922559de88d712e2d61b1b65e7258c8e3dcb22e874cdaa67801c", "ref_doc_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4"}, "4ab420e9-d5ef-4d97-94c0-e7356e9927d3": {"doc_hash": "4a72374f249ad85a2e0190cdb2f3a16a7b9f9eae7b263f0cd7ab1626cf9eeda1", "ref_doc_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4"}, "6056e648-c18a-4623-b3db-f5e736cf2637": {"doc_hash": "d47ff4d1773566a06efca50e18d6602a2c03b9793f864f973aace242a7824a30", "ref_doc_id": "c4a72ba1-e946-4d10-9441-7af1ecc87ee4"}, "1ac86fbe-a417-47c9-9e2e-6c14fbafbed4": {"doc_hash": "6356f0e0f065498ae44ba6da0fbd854350908698f27ccb121c3dbce30f384f83", "ref_doc_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1"}, "8427e9f8-72a5-4e2d-895d-3125dff55c68": {"doc_hash": "4cbd222b3822275ab19d5f6b0cc0bf79e948dac28bae89bc4bbf890cff52a328", "ref_doc_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1"}, "c266ed46-1c9c-4292-8658-65455e726ff5": {"doc_hash": "9f157352e5c85d5360f642e2d62f8420be3616af069cb43fb2599921bc3a98e7", "ref_doc_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1"}, "0a315078-9dca-4f36-b5a1-562e08e347a9": {"doc_hash": "ae13ba61a574ecaf2003ff72ef852ff38e5ce7b184e743d59862031d90d1a525", "ref_doc_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1"}, "b57869ce-b7c3-4a64-ab43-fb4019e9e285": {"doc_hash": "2f6c3ec66bba60d7fd07f1c2611060d5ce6b79632c13ba7e197cb676a7796986", "ref_doc_id": "6ed508c1-1e1e-4e84-b4dc-ce5992c97ae1"}, "13436a1c-f61d-40aa-a204-7dcdf965ff4e": {"doc_hash": "47a9288454fb9344caa12c09e5d31f3d72405922f6c78274a78437f95a004ce2", "ref_doc_id": "154e45bd-a51d-42d0-807d-deee29626d3b"}, "2a360f7d-df7a-499b-976b-5de55b38e5e9": {"doc_hash": "d522bde412e7b4a6eae0dade03f817b0ac8aec5ea958cb2dd778afaa1a151d97", "ref_doc_id": "154e45bd-a51d-42d0-807d-deee29626d3b"}, "640aa4f0-1e90-4d45-ac32-8ec5f52eb41d": {"doc_hash": "513190462a59ea8e169a15153746b1e70a3c525516eab64926f3fbfbe07a5a6a", "ref_doc_id": "154e45bd-a51d-42d0-807d-deee29626d3b"}, "c2a81f52-9b2d-40ad-89c4-6f0bb9277ffb": {"doc_hash": "a1c9310bec7a74c2f4c30d901266b9753ffe944ea6d85ebd4c300094c34468e8", "ref_doc_id": "154e45bd-a51d-42d0-807d-deee29626d3b"}, "40138fea-aa69-44bc-836d-a2817608f3b0": {"doc_hash": "b8957c31a9ed75105506a929cacda7fc53e2280c7e6da68ce1643359215bb5e1", "ref_doc_id": "154e45bd-a51d-42d0-807d-deee29626d3b"}, "ffde2f1a-0aa1-4224-97cc-8ffe3f990812": {"doc_hash": "731bc6f68d29c5f0a8411f76ed916a0ced84d6ad088803637d5bf94425b019ee", "ref_doc_id": "39b97a34-dc97-48a5-aaab-ae3980088068"}, "355fe1e7-f963-4b57-a43e-269d129451a9": {"doc_hash": "fef64186baff411253dbb479ec54f88af1efaa18afb83d5d6371ff2f7a87d772", "ref_doc_id": "39b97a34-dc97-48a5-aaab-ae3980088068"}, "c5c4b40b-7e7b-4706-a829-b9e30c5a6d86": {"doc_hash": "e2cffe412a6edc71169c14a85854940205a74143572ee712a9ee6ec5ace8b780", "ref_doc_id": "39b97a34-dc97-48a5-aaab-ae3980088068"}, "55b49e46-8231-488a-aceb-eb95697abe6c": {"doc_hash": "97ea0b2821bcbb004e469c2a08ab641032a8e4db2eac93a1a8db21074c07ad67", "ref_doc_id": "39b97a34-dc97-48a5-aaab-ae3980088068"}, "7bbe043f-a244-4bb6-8136-40785442a1b9": {"doc_hash": "5d9ad957596c88a78568178731ec22387b18bbebd2b8be9f7e08fb169203471e", "ref_doc_id": "39b97a34-dc97-48a5-aaab-ae3980088068"}, "4b337b71-a942-4f95-a9b0-8aec46ee3086": {"doc_hash": "3cbf4e4ea2ab2b687cec45798f542200969a5e136775e99f82e7408d234b629c", "ref_doc_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131"}, "e93c47c1-1a4d-4484-8aad-94e1c468b224": {"doc_hash": "96f4e899f69db683e61de8281936ad61fd6c15855f2e544951adf5c957593ba9", "ref_doc_id": "f9dc9003-cf40-4cb7-8940-f9a7378a3131"}, "ef006118-f471-4824-9d54-c9831da9cea0": {"doc_hash": "8ffcdb4afd31559025cc19fa14c445ace2d372337d04e5ad1f01e843f340299d", "ref_doc_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4"}, "1241dfe3-334e-445c-bb28-d4bd5859193d": {"doc_hash": "38d28eb464d5b098c96f1b176cc53ff5d390a4092b5616c9a58785f0cc29dfdf", "ref_doc_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4"}, "bf99aeaa-e2d2-4c54-aaea-3cbfc1a2af4e": {"doc_hash": "5934629e5446db9ab9db2a266398229613a2714fb5d7d92eaafde21bc63a40d6", "ref_doc_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4"}, "c3a61a5a-9a57-4b45-be5e-8189b09df34f": {"doc_hash": "7944b3caefaf88afea2e57a300597c1ba99e1fcc3860e9f4fe374ac3a34c18ac", "ref_doc_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4"}, "86f4ee88-f22b-43f3-8b26-6b9adcd62338": {"doc_hash": "8a41ba59a6b48e17ce697608183ac1653d4e318ff4ef574cf5eafce6f0745b85", "ref_doc_id": "fc1c7ce8-f10e-419b-b6eb-1a448ac2a4a4"}, "eb98d67a-da22-4edc-89a6-87b01366fbb2": {"doc_hash": "6831905fd949aad8976148e99af9472147f2205b51e548c5c44dcbabfefb02b9", "ref_doc_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b"}, "65312112-b538-45c4-a0e0-bbc7f9e2a1f7": {"doc_hash": "75ddc7cfdeca181c76775caa85dac878b038bbb761703d8abf71b9270ce53070", "ref_doc_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b"}, "65424a7f-5f0d-4be8-805b-f7fbc6415655": {"doc_hash": "6b80d7308c3b8a7bca7620f59572499bdd21b1cbb26d02612b8bef3366fb0625", "ref_doc_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b"}, "770ea4ef-7db9-4018-be0d-939c6d6d5e75": {"doc_hash": "59b391f463c2083197d112dbaf3ba19dfc0e49244afd207b76040813689b4fc7", "ref_doc_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b"}, "3945c568-a2b6-4c94-a898-ca0f073ba23f": {"doc_hash": "ebf152627efdd4c7fb4544e3a884be96b70869be8291707632c17edb0ec52ccb", "ref_doc_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b"}, "2ea3a0a4-db4a-48b2-ab4d-73e7fbdbcd1d": {"doc_hash": "ab7f7b4899570b9244f28c77639876484fd2560a9bda0388c4bdf469acbeebf9", "ref_doc_id": "e5c3ec8e-ba4a-490c-ba3c-25df2039ef3b"}, "7698b87b-8d6c-4899-aa44-22795ccb7b33": {"doc_hash": "2dee3f1955d92ec6d5a4408de300deb48034466ed6ff605f713e2bf88ceaef79", "ref_doc_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5"}, "940bb3fa-5e21-4d5c-b22c-505d38ee2ace": {"doc_hash": "2f8b2e55064538770b12907cf4fbcaa2b5d1027ad44db12b49138b9adbd8c156", "ref_doc_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5"}, "0b90ad7e-5a41-4f0e-b029-70451bcbe8fc": {"doc_hash": "0a9d73db736f35b53b7d9e456b3aae36493f17dfd9e61aa893922d4fa82b3574", "ref_doc_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5"}, "38c78570-11ab-41f9-a69e-b19a39338335": {"doc_hash": "eb57ccba75d30684a935f4d97c0c74e77a680622c60140b8280beb2c622698b3", "ref_doc_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5"}, "ef078c9c-afed-4edd-acc6-2bde4561d073": {"doc_hash": "0d65e17fc11a29e4a47d4c1f8190387570ea840987e895998ed123098d3037f8", "ref_doc_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5"}, "723caaa0-5ed9-49e4-82b7-71921282a571": {"doc_hash": "4b6e87ed7853eea8f79fe98633155b5208843c74ccc2705e1da594ccd69d4795", "ref_doc_id": "7f20524c-21f3-4cca-8645-a5e54a1fe9c5"}, "aed1f523-7c63-4220-82e1-62967df4ee0e": {"doc_hash": "2d4dba7c360038c462b62e37f060c9da0dc776cb80bd7249b2a4e7c013e5c4b4", "ref_doc_id": "a110f60a-18c0-4758-9856-6998878bc107"}, "07f7368b-2a21-49eb-8d75-34d079492665": {"doc_hash": "2bd57d63170e3c3dde7cd021f6c84713c6f0b4bf589cada20b768fe7e237bd80", "ref_doc_id": "a110f60a-18c0-4758-9856-6998878bc107"}, "50ef89ce-ee76-4f86-ba32-1e0ce0d58eaf": {"doc_hash": "06a63c2afaf4ce95833fee09f7af8ea6e7671f9919460db1c9d8ca8e30c582d7", "ref_doc_id": "a110f60a-18c0-4758-9856-6998878bc107"}, "ca092f8f-3ef8-4958-84a5-a0c8acea722b": {"doc_hash": "1ed9d64d71106e14f60c018721e965e73f1f930c2476f5b32a135e4086a62af3", "ref_doc_id": "a110f60a-18c0-4758-9856-6998878bc107"}, "2fcef97f-0f57-42c3-bb08-d3a29f982e95": {"doc_hash": "056a4eccc5ae2e6b4533f5b7be68f1e86206d00499b39680db298fea42c28157", "ref_doc_id": "a110f60a-18c0-4758-9856-6998878bc107"}, "69a1468a-bf0d-466f-a014-bb02feb1a75c": {"doc_hash": "ff45bd585244e3f3a592093395ed073c53cd2d47576b35bbcf524e8b9baa3028", "ref_doc_id": "9570f67f-24c1-4375-8cef-3d21e8424125"}, "7f01b877-d71e-444a-8c59-64630095215f": {"doc_hash": "c8090d0b1c55f1ba0d8f9d16e626428122a1c02d304c9355bbdd2fb573856a13", "ref_doc_id": "9570f67f-24c1-4375-8cef-3d21e8424125"}, "cba71f56-26a3-4e6e-9f7c-5b150e86f8e0": {"doc_hash": "5bc6a00e13b096015220532dbd3684d343b2518be102a68c293d28b4d2a4f918", "ref_doc_id": "7c232982-940f-4368-aa32-de082a86d3e3"}, "84fbb92e-5a96-4320-a956-f4ef22be3715": {"doc_hash": "30fce98d52144dfdd7e3f0d172b3e683363e68055ee4d6789f116ed858115353", "ref_doc_id": "7c232982-940f-4368-aa32-de082a86d3e3"}, "81a50b6e-0411-4e6d-8534-52a74e0a0546": {"doc_hash": "ee96e5d579bffe11cc5ac7d15310562125cff87309a51c3241effb1824dc0a56", "ref_doc_id": "7c232982-940f-4368-aa32-de082a86d3e3"}, "62389c86-bb6b-4ba5-826e-3d23fcb3d30b": {"doc_hash": "70b9c172d2d2c736c32f50bce28f9ebe5bc082b464dc2fcceca1f96dd25f34d5", "ref_doc_id": "7c232982-940f-4368-aa32-de082a86d3e3"}, "ddeb5938-2f62-4b78-9a62-e6a8319a0c88": {"doc_hash": "6defbfe5faa4b8973794f8df30d2fad5dfd3eb8a33e77556d31657f4f70567d0", "ref_doc_id": "7c232982-940f-4368-aa32-de082a86d3e3"}, "748996c0-df81-4ea4-845a-4f45ff0a5ffc": {"doc_hash": "caf3f5dd971143447f49b1d2b010d8c3b4db28af5d75fdd4ce926f62887c4233", "ref_doc_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09"}, "6e345121-7b60-487d-b52c-b1e83f90dbd2": {"doc_hash": "3d3216af2a85463ec7fece604a1ca0e48261d5d178be7e2923b8f18fa56e8aa9", "ref_doc_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09"}, "5cbeb82e-4b5c-42ee-8720-d886dce28696": {"doc_hash": "4a8a80b2e4ffe3c2466a2d51a18cbca435e05af24ff953165864c5a8e30c9433", "ref_doc_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09"}, "6a997008-01b3-4220-966d-e6162d01f4a9": {"doc_hash": "6cf677b579e33b1043329d7ca9061055e5f338c77099dc5a5526f4208ed6ae21", "ref_doc_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09"}, "311e00f4-52f9-426d-ab60-02dc6c173f4e": {"doc_hash": "bbc51b55c76d8f9812a8da460614464116cde7641508d69ce73ff0d7cc0bdcc7", "ref_doc_id": "b39b3b81-a8a9-4003-8e3b-1c5d15e3aa09"}, "78a60409-748a-4389-bb04-17d778acc523": {"doc_hash": "2b01fd536c701b8da5286bb61ca85b9b99e2f1d52b9d6c1ea724c6113d31d6ff", "ref_doc_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5"}, "0883a13e-53b7-43f4-a827-f1caa7f523c0": {"doc_hash": "30ec7584c646fd94a0c49ff893a488df437ee6278c394232c15035ab9eb63b6e", "ref_doc_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5"}, "e4d48728-9c7d-4eec-a6f7-ece4bc1f93f2": {"doc_hash": "f5757496664ced4dce95b54940b77be1dbc4d3146a250c5c19a5d425e91fe864", "ref_doc_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5"}, "c37fcfac-e84f-4814-b17e-7cb612f14b1c": {"doc_hash": "bcb3ac093add167c0157ddd9229c78b645d68541b31e831019e8df9ab465f220", "ref_doc_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5"}, "6a04c896-bba2-48c0-84f4-d6edcf349507": {"doc_hash": "2fd05176ad48ef9334402034d600a0b4eecb64038a905283cd2f230380926de1", "ref_doc_id": "054fed5b-36d2-43da-aa06-ae481e91c1d5"}, "ad6d5608-ca39-43eb-9a4e-3d009cb736bb": {"doc_hash": "8c0f56fa5543e97776ca4f0c82043cf38bead4295a84384abd7ebe37c21fc1be", "ref_doc_id": "e043331c-76f3-4333-9839-e0485251b84e"}, "88af895f-79a3-4d28-be8e-87e2ae1ee3e4": {"doc_hash": "b4dd60d598a4c38acc4c42197d92f687b8f8c1aa5a1516e1fe51b2c5e09707d1", "ref_doc_id": "e043331c-76f3-4333-9839-e0485251b84e"}, "bd464783-b7ef-45e8-a5e9-2501bd330b71": {"doc_hash": "d0ee95de7a3c006824aa82589bc1088f776e7c5986ab9c4870f572db04bd7b63", "ref_doc_id": "e043331c-76f3-4333-9839-e0485251b84e"}, "37b83dcf-29ac-42a0-a7b9-21cdb632743b": {"doc_hash": "0fc4ddadbc56ebf79ea845cb229411b46fc5c459d7d9f1eb98fc2dbe601c3d76", "ref_doc_id": "e043331c-76f3-4333-9839-e0485251b84e"}, "f1e2ae35-a5fd-4405-a687-435321d65707": {"doc_hash": "ec7381534eb2835c5f91929b83c4091a162a8c43377a275fac0eb980ce7dbd45", "ref_doc_id": "e043331c-76f3-4333-9839-e0485251b84e"}, "b6e54add-e37f-4f79-9631-c4e851276857": {"doc_hash": "8ba5304c1f5bd6364c33c689316ac28d41b578cc7376d1fa0966e4bbbd2a2ad0", "ref_doc_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06"}, "75fdbcf3-c634-4f5a-9813-742beb539cba": {"doc_hash": "57b83be8e6a6967dedeb5994b97ca1933f022a2a29ed16c05bd49ee833ac542e", "ref_doc_id": "82d4131a-dd97-4e60-9cef-a3d325b5bf06"}, "a139793c-f41e-4034-9329-ba8027448489": {"doc_hash": "21be413fac85bc2441d2950a7c5663fb1361d8a31129df4ed6258436ce7a10ca", "ref_doc_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d"}, "b84cf7ed-6563-4ef5-8f17-e46f84f1f1d4": {"doc_hash": "8ab198a08e2d220653ad0f94cc66e280111489511337ca572e81b559478fac99", "ref_doc_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d"}, "99a7d8b7-dea2-4b36-b361-22726e9d6ab3": {"doc_hash": "c546d2b97f72134ecf41430163a183fe6d9fb5ea81ca2393c89cd8de494d188c", "ref_doc_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d"}, "0a757b4f-27b4-4815-ab07-91e1f863e5ea": {"doc_hash": "b72749080e488caa60384e4bcde1048bf59f464570b61340f6446d370440af58", "ref_doc_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d"}, "f211b5b6-4e8d-4502-aa93-86ea66d74dc5": {"doc_hash": "89b2b7b1a99ee177676835f9d709bfafc4713aed9e624baf6a0f7c6b5327561c", "ref_doc_id": "82deaf68-4a9e-463f-ba6d-bbf2bf79068d"}, "1bacfb2e-54ab-4fbd-8919-073ac4fee14b": {"doc_hash": "f48c8d7a409c7f0c048f8c710b97254391c9102c875794489192fcfc1f89d7c7", "ref_doc_id": "c6691f0b-8062-4071-a412-2655ff6353c7"}, "bb513908-4dcf-4847-a40a-841cb05f958c": {"doc_hash": "58c577f64bff4beac14844f726dc7558549e555b502f80c950277d27c5af2570", "ref_doc_id": "c6691f0b-8062-4071-a412-2655ff6353c7"}, "96860bce-6b4b-4bb2-9d51-0061ac9a25fc": {"doc_hash": "4d505db25d5fa4e79e141af28af023408a62325928ddc3340eedebc4d994f6b7", "ref_doc_id": "c6691f0b-8062-4071-a412-2655ff6353c7"}, "b6e19b57-9b42-4a23-b4cd-aa4173c67352": {"doc_hash": "944f628cc9261c10fc5fee370126bd5fc95a753066a7fd8527e4959f108afd49", "ref_doc_id": "c6691f0b-8062-4071-a412-2655ff6353c7"}, "3e76224c-f86e-4e55-81b0-9d22f11fb5ee": {"doc_hash": "9521a49d25e726c71c0af03b0a038deeca3da008cdab39757e2b19ac5a7f42a5", "ref_doc_id": "c6691f0b-8062-4071-a412-2655ff6353c7"}, "84f15230-8f5d-4cd7-a73f-6f5a48e1cdb9": {"doc_hash": "89b08c5e9e17b81c3478a0854c187b1921075c755c8803516bc2696c5f8037b8", "ref_doc_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7"}, "9bcecdd7-150c-4362-9436-57a931a59efa": {"doc_hash": "a41b29041f2fcce817f6393655317d898e62d1d7dcfb86bbf3c3036a30e5e908", "ref_doc_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7"}, "524c17d3-1318-4944-9caa-e86e167f989b": {"doc_hash": "41f806d0c53c61c136d3babfde74eb5dfaa527d0a04472b06a90f67e4c1171d7", "ref_doc_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7"}, "afacf485-f5aa-4cd5-87c5-a593fb8fc08b": {"doc_hash": "2d225b9c2c9cbc1eefd60de2c06b04f62b32856cc147596a3eec74621a1df68a", "ref_doc_id": "8c19038e-ee4a-4c6a-98de-106902cc08e7"}, "2b425d7e-e5b2-43c4-91c4-e413758dfe0f": {"doc_hash": "4b8cfb583477884c6e64e4b9072ea892edcb1528a61d8a9e9176c346364358bf", "ref_doc_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62"}, "8ed72ded-7ebb-46e6-a73e-e9a943d25ff9": {"doc_hash": "b50bad1982aaf32535bc6fe452ee6776b8706291e06237830d65e7c2a32423ce", "ref_doc_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62"}, "376ef81a-65d9-46d5-9cb2-6b268a22b204": {"doc_hash": "d5739e4b206ce5f25d704f65e18ef306190e548366570ad332438c098c7aad1f", "ref_doc_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62"}, "f153a87d-c188-45a6-89ac-390f1bc4d48b": {"doc_hash": "d3ab7300e3f8ccb31f815431c70c5f5354672bda732db93f3c557aa6b43e1fd8", "ref_doc_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62"}, "5577ddcf-d70a-4b99-b7df-5d992f138553": {"doc_hash": "b9b98bd1cc57675633c47444914ad9ca93bd0e4041e5a116da04b5315469a250", "ref_doc_id": "765b53cf-7565-4d78-9d06-f5b49b92ad62"}, "009f5a73-a8af-4a0b-aa41-a1e07008165c": {"doc_hash": "8b254556f98e9d9426a2e9aa4e1bda3d3691157ab772538d5a1734dd9f053f4d", "ref_doc_id": "2b074dca-a7b5-44e5-a3df-e0f548a256ca"}, "38dad7ef-6574-49af-9aa8-6c7d173eb5ad": {"doc_hash": "7795bd802afe6f01187ccc7d39b6e70d08e4da4eea05028cdd303813f42c83a0", "ref_doc_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437"}, "f4be7bf4-d5e9-419a-bf13-308b1a4d04c5": {"doc_hash": "c8ee4503327fd1443083ef53829eb403787b6dacdbe772be23ddc26a650c1175", "ref_doc_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437"}, "cf48e7ea-2fd7-4988-b4fd-7b34e174bf8a": {"doc_hash": "2dcdd8b33e853b760491a9e6b2c0ae383a7d18281602bbb7906f581dd4e2396d", "ref_doc_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437"}, "5de52c00-221a-4a60-a3b5-3b93bbd53930": {"doc_hash": "2270247434eb1a1fb8149c0bf6bbb5e21b86e44cb929494b0c803b0a1b4b08de", "ref_doc_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437"}, "85378cce-603f-4964-b2fb-6994fc2751e0": {"doc_hash": "c5b77cbfd99951bc5316c00c2766ec9a698ed654a04ae081cf069e3fd3afc9a0", "ref_doc_id": "b8a473ca-f564-47fe-bd55-7f6f66a1c437"}, "a2ace353-6b5a-4656-bfa8-9b00d255ab81": {"doc_hash": "02eb2f073dd3d183f0f28a65c1b37420bf7aa6b0b5a8e761b2652570e5ba2cb7", "ref_doc_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b"}, "fe7fb1d1-8389-4a3c-aabd-50f7633b81bf": {"doc_hash": "d032e0a0c7e0a1ce49fca3ad051de9963cd4589b42ae59638446242591ce03b5", "ref_doc_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b"}, "292f08cf-acab-4303-ae18-212c0a7e662b": {"doc_hash": "46ea8d177c0b1a561ba33b14486103c98478d877b430133c3fe85c71d2f8e715", "ref_doc_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b"}, "dd134712-a875-427c-a4f4-40928b64e25c": {"doc_hash": "e5541ad3d2a9dd2e478fa4bbc8adf69df6bdca2889ffac20ecd954e0bcff4176", "ref_doc_id": "a78d9801-10ce-40f5-90fc-4051935c1c3b"}, "2476ded5-8c65-4c82-9cf7-4e70b129fda1": {"doc_hash": "c210cf7a18cfa53491b75beab7ac946036042eeded3b54af18c1c209d26e48f9", "ref_doc_id": "df015e01-533e-4c7f-bed8-1c62a7660f60"}, "4fa2fadb-ae8c-4610-b60f-76dc92123353": {"doc_hash": "585b02f47c5d607bc0c7d478acc0a6afd2a166093807f4e9b623e92bdb2ad78f", "ref_doc_id": "df015e01-533e-4c7f-bed8-1c62a7660f60"}, "80206edf-53fd-4a16-ac99-f51c4d6d1e7a": {"doc_hash": "626141d8da2a07f188ddc0e694f5a0106b11210202f06b23dc07b1a5626f7d42", "ref_doc_id": "df015e01-533e-4c7f-bed8-1c62a7660f60"}, "c1c1fc32-bb11-4eb8-9cdc-7548fd5e73cf": {"doc_hash": "6b857040ced43a9ed8b3ea04699606228df556299353d9ab9de8a8b0e4fc09a8", "ref_doc_id": "df015e01-533e-4c7f-bed8-1c62a7660f60"}, "b25ddbac-0143-4838-bd9e-ec5129dfb1d8": {"doc_hash": "92221ba31ed035d01e80da9f5be25adfdca1ba0ac744b0f3699344c170dce8ab", "ref_doc_id": "df015e01-533e-4c7f-bed8-1c62a7660f60"}, "7be33ac1-ed56-4410-bfd9-3036bec55876": {"doc_hash": "be017adf9648abed359c7704e291be1bae3d6619f4ccf33e5b520b4056cc0920", "ref_doc_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c"}, "4219af62-5e12-4118-8568-f68e67c1ef7d": {"doc_hash": "f79a691f8255cc1021ee57b093f28a13738b623aa177f4e90cd3ac1aa6671717", "ref_doc_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c"}, "18d2d7ec-3be2-419b-87f9-d13b161411c8": {"doc_hash": "d74f1464664f9610f56ae20cba9d438194d42e235ec91340b833b06a10ad74fd", "ref_doc_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c"}, "d4d42589-937e-43e0-b715-3f4cd06ecedd": {"doc_hash": "c79beb699a5fa784a35dc36daf9ffcf3aaae36052b2e7376c3fd87a0231d1493", "ref_doc_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c"}, "421d5d5f-ae92-4d16-a74b-04955f99b689": {"doc_hash": "136ea6753bf529719d4a0d2d6204e516d569ad640049af9c4eb0afee38994c39", "ref_doc_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c"}, "fc41a6ac-8f25-4926-a478-cca9612a8a41": {"doc_hash": "6253702052bf05c69c74e41aef78966354adc68bdb7f54fa58f61e5fb09451a8", "ref_doc_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c"}, "b247b6ca-fa94-432c-a2a9-b73a8a30c7e2": {"doc_hash": "246aafa4e5105d15a437058a00a82f897e1c890e505e23fcc8110057e53d27dc", "ref_doc_id": "20f35ed4-76d5-4170-ba0e-d1cd49ad268c"}, "9df99e41-deca-4ff6-926b-093b90ca3a86": {"doc_hash": "05d980e0771bd7e967cc248de487bc0758c97f73efbb05d03c3daea4d698a81c", "ref_doc_id": "ab1258f7-6968-4bc2-aa6f-2be71e1b0781"}, "18c81449-2c53-4343-9de3-7685e7a945a9": {"doc_hash": "5f8b33a76cc4befd48f225ff60a27d80d3098cd019cd4fda920547419c078275", "ref_doc_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6"}, "3583da8e-d7f3-4bbb-9a1d-28c342b525da": {"doc_hash": "b9227edf55acf8dc367f946ca7054ee2c7be0a0fe3f199ab0d75c91b33ecf4af", "ref_doc_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6"}, "1655881b-f265-4dc3-925b-904c584e1f82": {"doc_hash": "78a882b8569d401d0ed6c4a56994aa048b9ea6fb86d27b3118ce7633e6179c81", "ref_doc_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6"}, "7912cc16-945d-4284-9ecb-2eb6ce729e03": {"doc_hash": "9e837cb5cc5c43e7f92de0a51f9e5e7aabd2562d0c525b4f1909b46cef7ca8fa", "ref_doc_id": "ba89739c-936a-4a98-8eca-5a7a68aa46d6"}, "4611b322-6f35-421e-9a52-a313c6079dc8": {"doc_hash": "343c88ebcc90569ba7a4c81cbc9aa891a344183ac6c9d3a97498ddf74adc0872", "ref_doc_id": "038d6614-5edc-4833-a36d-2cf1d74802e9"}, "596cedd6-c530-4af3-b5db-cb6e05345f6d": {"doc_hash": "f57068b611e1bcfc3050f78ef8bded5bfe9dddf77599519aba7d58feb68ee6fe", "ref_doc_id": "038d6614-5edc-4833-a36d-2cf1d74802e9"}, "0831e5c4-84b9-4ec6-a383-0cfb49a329ff": {"doc_hash": "f37370562ba5c9c320bbdf490601245f979bea3de00381263b7a0f9a7e7e1fac", "ref_doc_id": "038d6614-5edc-4833-a36d-2cf1d74802e9"}, "7461f993-a9b2-4119-87de-15a9b58d135d": {"doc_hash": "8cc85fd9c6934845ffa04f44575fb772564678ad454545b86945d381f7fad715", "ref_doc_id": "038d6614-5edc-4833-a36d-2cf1d74802e9"}, "c68847af-dd34-4ef6-9343-8fd25b5f421d": {"doc_hash": "651325bb6e47fcd6d2be9db47bb2e02e29c1945d2aef53d24e9f5344ab3e644e", "ref_doc_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92"}, "82d6ed69-4dc2-4406-b7c3-6ceb5c7455c5": {"doc_hash": "9a9af9913c08ba924f2aeb0c981f50ade6caab087a5d07acde0dcace74dec22a", "ref_doc_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92"}, "c0bd485b-8372-4438-8b5f-6c44f424141a": {"doc_hash": "7e0c124855cca22870606cc2c7400a136e56376789367df4f52e15387ae3e1a4", "ref_doc_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92"}, "6165b090-90c4-4fb5-bd6a-d01fb82ef377": {"doc_hash": "f1fdba7d3285730e37be73544cc99b0d04083b1b1129e09ce51dc64621bbe874", "ref_doc_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92"}, "830d4ce9-cac9-423e-9548-0ff427dac856": {"doc_hash": "64b729b0fe2e9a77212e98b2c0a4e4408fd4a5b1b4a2e15cf1e4ea468ae81cd3", "ref_doc_id": "7126d10f-33d9-4f69-a95d-4663f4e18b92"}, "58376796-ba93-4601-8a86-791f0ad4b85b": {"doc_hash": "a9cc918e3e06f5af414227369d471946490183a3f2da3481f03371ee7bed155d", "ref_doc_id": "cef8d741-5446-4507-8d14-60ce39224714"}, "32f87a88-6dd9-4ff9-869a-a465bcc1610e": {"doc_hash": "f898be165084820b5068d63c0cf42d12857d656827ef32f785e0a73ec9679036", "ref_doc_id": "cef8d741-5446-4507-8d14-60ce39224714"}, "58d8aa90-c64b-4ada-8274-d89efa13986e": {"doc_hash": "83274c1add4ec46600e7d5645f5ed42880b278f0680616a724015a8f97610867", "ref_doc_id": "cef8d741-5446-4507-8d14-60ce39224714"}, "ce66c3b1-747d-440c-b127-a28657981a60": {"doc_hash": "5a5a8cbe86cfc9be53cce25ffd632490bf7abdfab40d43ff3ccdb4d590f0d264", "ref_doc_id": "cef8d741-5446-4507-8d14-60ce39224714"}, "05f7b91a-c82d-4f09-987d-1354483ab246": {"doc_hash": "68387e1bfaffec9e485c8ec666328c57fe0853689123a390a7232f9117ceffb2", "ref_doc_id": "247961f8-fee5-4ba0-9112-6fd68356d38c"}, "9d6f4d52-e242-490a-9cf5-c42b4652ca38": {"doc_hash": "8d00a5a435a6dc1835148d207b8ec3b206ed5986d5d71376d92bfbc2c693b44f", "ref_doc_id": "247961f8-fee5-4ba0-9112-6fd68356d38c"}, "99b9f47a-12dc-439e-aa80-dd27bf4271ac": {"doc_hash": "299bae0d210d27f49487d6749a111c9803afddfa84ddac8077ce173405ece2ad", "ref_doc_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9"}, "baf39b75-3a17-4802-baef-b7e1ce3b34cd": {"doc_hash": "15f7174969d35e1d296af418f7d7cb56299907dcb876b7774fc988ea09540030", "ref_doc_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9"}, "7b2900d2-e341-4ba4-8e0f-f5b37a0f0189": {"doc_hash": "a38618686e8f832734bbd79cff418b31695288a1218d95e3262fe1fc3e035634", "ref_doc_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9"}, "4fee084c-0639-46d9-8d25-69b264362404": {"doc_hash": "cdbc70bb8595b053293094462c0631ba26deccc06a37f4fb70f6df9a45787153", "ref_doc_id": "d1cd7a41-58a4-42dd-bd35-6459226f65f9"}, "6fbe5bec-3181-49fc-b8ee-0409e2fe711a": {"doc_hash": "efddc6ea25acaf7ec77c6870f76358dba47fee102be9b4eb09e09b37929062e7", "ref_doc_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7"}, "3e5e6fd3-3312-4969-8cb8-b2b72bdb2534": {"doc_hash": "6ee4d2500447b6f260d290064b9c97793d35ff662bc671cac24168adeacd1627", "ref_doc_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7"}, "2cd6dacb-6650-4cdd-8270-d44e5512be62": {"doc_hash": "4be169a7e46786c2f10c1977d40fa39754a4d426c6ef6f520be19f28b10a6c8d", "ref_doc_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7"}, "03ad6a5a-adac-4ac9-ab29-cee87b82a128": {"doc_hash": "e3fa46eee04cae91960601f46db2b03d69033d052708627a1bfbb585151f8354", "ref_doc_id": "04517d7b-53c8-4758-8a5d-a31f2fa6d1a7"}, "445abe43-0764-45c1-ac2a-0b48e1c2c6b0": {"doc_hash": "7612350369c09d099a9133a8dd513540ccf9c0b4cb7e81f2b35e97025e86de6a", "ref_doc_id": "73223af2-f20f-400d-bb4f-268ff7815ad0"}, "4907c2ac-f351-4641-a06c-11e130800742": {"doc_hash": "ed85be2ea5f02af7ca7eb831bb03fd31430e670a95edf745af5e9f62c10e0d72", "ref_doc_id": "73223af2-f20f-400d-bb4f-268ff7815ad0"}, "298354ba-52ce-4105-817f-f17c74376cca": {"doc_hash": "c9b48538610bf8c0fef0514431d19ada3abfa1643499bc950cad786edee5a86c", "ref_doc_id": "73223af2-f20f-400d-bb4f-268ff7815ad0"}, "d1a5df0d-bd6f-4aba-8423-9f43e5951535": {"doc_hash": "632f87ed174acc53bbc89fdd5ece61c21a420d1b555713edab10b303e2308bb8", "ref_doc_id": "73223af2-f20f-400d-bb4f-268ff7815ad0"}, "5ec5c673-098b-4472-9067-ff417c82a766": {"doc_hash": "4c0f561c6b1a808eda78763cdfead573b6b9491a2848e1de7566c1c3fb3d6b30", "ref_doc_id": "73223af2-f20f-400d-bb4f-268ff7815ad0"}, "62765de9-8293-4372-96bd-87dc74359ceb": {"doc_hash": "f1fd2f61be3446822ecccb9a204745084a5133fdd36f8ad7cc67ae92728b80f9", "ref_doc_id": "01daae07-70a6-43ed-8896-0418267bbd6a"}, "d07c02d2-96f1-4a98-8a25-ddd7941c1f9c": {"doc_hash": "b1ebc2e50130c73038cfd66bfb7249f7ea887b0a09815004c39b97fec61f17e2", "ref_doc_id": "01daae07-70a6-43ed-8896-0418267bbd6a"}, "74c9a4e1-2b02-4f49-9256-965662bd0939": {"doc_hash": "99833c1362d5c72a360f2033d976f9880a65bf3ff33c151dfa0014e551751830", "ref_doc_id": "01daae07-70a6-43ed-8896-0418267bbd6a"}, "cd23d1c1-8d17-4b8a-ab9d-f19be8da2a9f": {"doc_hash": "1946bc54712187baff34b5cab73d9a7f29d8616a59d4912c2c7af41b6c86c743", "ref_doc_id": "01daae07-70a6-43ed-8896-0418267bbd6a"}, "8d0744a7-668b-4b09-8336-56b024e6edd3": {"doc_hash": "da6872dc746974fb7760f6cbe20e5c898dd784c95b69417d9524df9061afae2a", "ref_doc_id": "01daae07-70a6-43ed-8896-0418267bbd6a"}, "930db822-b155-4a9a-8d53-8eab621e98b6": {"doc_hash": "b64fc8c9d9b9ecd856b0625a4910e6ef1ad2dc28c938dbc139c38e8984ba5592", "ref_doc_id": "86ef810a-d22d-4f17-befc-4f97dd8d22d2"}, "cf66fd5c-d762-4aff-8db9-e1013fa74219": {"doc_hash": "26154d9a0fbc0bdd5206352a0d0e98bb18cd50c30d7bc95091b770fd2bd6c6a4", "ref_doc_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78"}, "7019b8a6-f42f-4837-919e-32b27c76498a": {"doc_hash": "ed6bf47b7b65c96ef62f4ed8c2e43e21bc42d5a20a6ce4ca7087b4c58e308a4d", "ref_doc_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78"}, "55a511d7-d7a3-4c0d-b287-6766efcaac5f": {"doc_hash": "5f8b32d9063e270b4d4b4bcb1456a812c8cc4230adc68b6575fbb05c05875ef3", "ref_doc_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78"}, "12924ba1-b6c6-4f92-80f3-a291388fe8b0": {"doc_hash": "a60c8a1113a272e0f1b89963562a290892717dc53596062f57486b019a11f912", "ref_doc_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78"}, "e4565393-4c62-450a-af8f-b69ea991326d": {"doc_hash": "8ebd5750b4f2198e804501d1fe5a0fb26d828dfb5aa039a9dacfe8361bc61203", "ref_doc_id": "04be5b4c-ca50-4ba0-9f46-155a04b68c78"}, "e165a9d8-d1e9-4534-99da-de8081928cd8": {"doc_hash": "2f5ae090549015aa4dabc702fd49ee0893522d7b511082efea633dbb7bd61261", "ref_doc_id": "c01acb18-9f36-4e8d-b563-46169bb6724a"}, "0ea7aa75-1dd5-409b-9538-cab43ef61517": {"doc_hash": "7e313631f7eb0c2dcf1f38425815840f275d0a14084255f12afa338ecd06b4a5", "ref_doc_id": "c01acb18-9f36-4e8d-b563-46169bb6724a"}, "0281183b-80e2-4daa-8552-0d6cc5e8c484": {"doc_hash": "905009a7bdac6b1e7e2e2c6377479956edddeb1f501f0da08bfd7f047ef1b776", "ref_doc_id": "c01acb18-9f36-4e8d-b563-46169bb6724a"}, "4f32007a-9d77-4d55-a937-57acdecfbf03": {"doc_hash": "7bb29931679a7e2d0a6f43b1273fd7ef7cebe166d93a84ec3f52dd8d3e956503", "ref_doc_id": "c01acb18-9f36-4e8d-b563-46169bb6724a"}, "5ae5b141-e04a-42b6-9a34-1ed37340cd7e": {"doc_hash": "b681cfd65513331d4a87aab02fbd90cb8ece5594071192b2a54c7c6fd2327f8b", "ref_doc_id": "fe322443-9f9c-4894-9d41-59040db525c0"}, "3fb53d68-7a58-4c8a-8bf4-87e2dfe04b0a": {"doc_hash": "0dc76cffc28122f6d6b6c05bbea9d2c915b1cbc3ab62b6def0b31fb583d66060", "ref_doc_id": "fe322443-9f9c-4894-9d41-59040db525c0"}, "b8a36283-6d70-45ba-8bf3-5d325f530264": {"doc_hash": "dd274d8f62dbe055fa698d44b7c681111931cf05d1511322c692f93bcfd4bd6d", "ref_doc_id": "fe322443-9f9c-4894-9d41-59040db525c0"}, "b818744a-6f81-4afc-91d1-9fa195615bd4": {"doc_hash": "5d6636b82e342b54ee98b0b59d884770f47903d1c82c02721e635ee6c9b68545", "ref_doc_id": "fe322443-9f9c-4894-9d41-59040db525c0"}, "e9d49e08-7c21-4e9a-81c8-ac4cc2e0e4c3": {"doc_hash": "4330dcb8a215de869a539e630dada08254ff8c71fd41360c7e22ea7648ba25bc", "ref_doc_id": "fe322443-9f9c-4894-9d41-59040db525c0"}, "46c6dbc8-05f0-410c-9e0f-c2b8fbf4f6dd": {"doc_hash": "2ded58b6fdfba7af4749141eb248877b249237fa01342ec04db1e6c8aa63b238", "ref_doc_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839"}, "d84281b7-94af-4a97-a42a-c7598800476e": {"doc_hash": "608ad6f082a17f5ebf58d76db0d30c16ab85311b839060d349eebc98187e9536", "ref_doc_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839"}, "8a39292f-9ff0-4566-825a-68968d95bd8f": {"doc_hash": "b0574451bbcbb586ef0cc086667ef173f0d95ca33f828dbedc9936dc1bc51820", "ref_doc_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839"}, "09596724-639b-4b6d-b242-42c3a2cafc9b": {"doc_hash": "6d87ba164b5c54dc9a92d908d04234b5b47e64db0e6aff272fac5d762ef055c0", "ref_doc_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839"}, "03715c56-d486-42e1-84c6-ee545c04b46d": {"doc_hash": "9e72bf8d333ecb5e4558c89275e0f90ea44703af33c9ed4b54da1dddae68cd17", "ref_doc_id": "48f44036-107f-419f-bf8f-f4ccc9bf8839"}, "d83e2f28-88c6-4a87-9b48-bb0f5bc45f57": {"doc_hash": "98060e8fd096a60c6ab8a3ffbcb4229aea51b51ca83a117b2d5fa53feb0628cf", "ref_doc_id": "d0292a66-da79-4af5-aef1-d6c1049174ee"}, "949e6d23-0b8c-4597-84fa-6cadb6b1f450": {"doc_hash": "343bc47ae239ca56301a8fc41c7e8d9a599b8b41aea317f497a10d4c494bb165", "ref_doc_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6"}, "ef8c56a3-8282-44dd-9671-1d4cc3215316": {"doc_hash": "a68ad720545f634ddc914d6490ea87ca4d157440a4f7ebc0966532fd9c2c2f02", "ref_doc_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6"}, "9f49097b-ab25-4492-93ab-f0cfdcd6012b": {"doc_hash": "9138f20e4853ce839adb1c50dfa963ab2e515e679a6aa5d699b68eacdb6424d8", "ref_doc_id": "286425d5-d677-4a41-a64e-26f6ad3a0da6"}, "b15067b8-789f-449e-8f51-43b4378cf77b": {"doc_hash": "31564e2aff30afb34064b8266d3a2c1ee4666f4b8d99ca5fdbf89c9e92961740", "ref_doc_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9"}, "8d42cf75-f774-4a70-a495-fa66f170ff51": {"doc_hash": "9c50679c49f07ba963012967798c298c835f06433378436ddccafce7773d06ed", "ref_doc_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9"}, "0d2f4d0c-c688-40b4-8a95-952e2e15bfc0": {"doc_hash": "e4673feeb58b1aa5d3d0427b33e75ae10c1a335e8dbda2ded03c30413c0fa76d", "ref_doc_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9"}, "0fbc2e46-da9e-467a-aa38-cfc6de24c614": {"doc_hash": "ebdea23d5542065c9a40a60c9d82c5c0774eaf6dad8ae4d8ee9b216422b3d880", "ref_doc_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9"}, "f65629cc-8205-4271-aab4-5a4312022559": {"doc_hash": "d3780ca81f3fd1c6a91a1808bcae404fcd0601d10c141f9c408305e1f45d281e", "ref_doc_id": "9d81d190-519d-4621-ae61-0c46ca4d50a9"}, "d5eda6e2-08a9-44cf-9885-ab55bb7e9632": {"doc_hash": "8097fcd526c92389b2d3c7432dc85acbbe660cb9b0ebb54de4324b32845028f8", "ref_doc_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a"}, "11f6cf1e-4bc8-4cab-bc97-8f6e9dfc9de1": {"doc_hash": "41d23e4293dfa47cd6e584210ebd392edd91b9c6f665ae71de155d2bf5c21233", "ref_doc_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a"}, "c882face-3ddd-46d4-857e-ea76dd01afb4": {"doc_hash": "6d7fcd2fa5b488ae5cc714223a2c79d74e04c7f8f644a6f35ca033ad7456f354", "ref_doc_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a"}, "bfaf903b-a589-43f6-9961-b11ba89b8854": {"doc_hash": "3acde2ed73d925a07953dbb2cbd4a5be1770e92d896eb80a83a940cb5de410f5", "ref_doc_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a"}, "1968188e-7731-4e04-8ebf-c5c07fe83736": {"doc_hash": "3ecbc55187597677bac06a7f23fd81b4241ebc2d3f1ce12fbfe4833a09e99bda", "ref_doc_id": "0e4e24c5-2f32-40a1-94f6-95f45665d27a"}, "372f1532-8ef2-4a7b-96c2-e0da12bcb1d3": {"doc_hash": "953895b08fe740c88d49dea6ffd258a248e04cfe076ad42a8a9ecfbc51ee9807", "ref_doc_id": "8759913d-865c-4f74-9d55-3017e37d91b4"}, "39fa2e1a-4513-4125-be6d-a3fbec3c5391": {"doc_hash": "96f3c6f4c61ea61c3a180f18c8615d9e04f50ad8d82d44026c31463a536fa9d7", "ref_doc_id": "8759913d-865c-4f74-9d55-3017e37d91b4"}, "bd84b8ba-f308-4d3c-922f-a63d059a2657": {"doc_hash": "b68077e84bb9d3031cf75f4f91fd337528b4fd7a83e5d186b0d0d3069ad8fb33", "ref_doc_id": "8759913d-865c-4f74-9d55-3017e37d91b4"}, "3f1acae8-83f4-4cef-9f27-6fdeb5bee113": {"doc_hash": "a74f6edf97584292f2d3c7c83db773fda4890c0a468e960f3c87e2cc3ed041bd", "ref_doc_id": "8759913d-865c-4f74-9d55-3017e37d91b4"}, "4bc13663-1e09-4ea3-ac6e-6798c452a91b": {"doc_hash": "656f913f0cef2200ca88c7456941159a0e34ac9940339fba2936be04e1daae48", "ref_doc_id": "8759913d-865c-4f74-9d55-3017e37d91b4"}, "f9aed1e6-edab-4f5a-be13-9a85b0d806f3": {"doc_hash": "c832ed2ae0f14a1807c8062adf0d56d34a26b9fab59eb8436a255b4b2c47b1c3", "ref_doc_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24"}, "1f530631-fe7e-4ea1-8957-97936e95ff1e": {"doc_hash": "824d6dd1b51dff20d7998680a027afec90566ba0ddae927594644cb53a7c252a", "ref_doc_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24"}, "6b510875-83ce-4659-a050-bfa0ef8ef3d6": {"doc_hash": "3a0f2d876b6c5891c2073ad063d7b6130e06320655aedb94d0eb3de9b73ee291", "ref_doc_id": "c4dbb6fc-c21e-4fcc-809f-c177e7f51a24"}, "b8efd933-7dbb-4d34-ab3e-d033f9cdc242": {"doc_hash": "228d1c7ebfdcdf7b38d7e0725cc6334c194cfca04010539d6aa12ffcf4266361", "ref_doc_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959"}, "d8520a7f-84a4-4e0e-8e83-a4634470a5f8": {"doc_hash": "15d83c23f7ac09220f2064521f5d84f9bfa4d1b03f0ae918119b4b80a046d15a", "ref_doc_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959"}, "00c645fe-b22b-4a55-820b-bad248c0f88a": {"doc_hash": "6a8146886f6b5ada2a2c95a61e66fcd7a55bfd212392dc4741d3c1cc890b6d6e", "ref_doc_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959"}, "beb6abd4-79be-40f9-aa24-6e1db2c45118": {"doc_hash": "932441036570d0c0a49744595db777ddffea0b7f09ce74d95a93cffc5dde46d5", "ref_doc_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959"}, "5177bd74-e433-45c8-9640-f64fab7455aa": {"doc_hash": "0a809ea9245ff0341483d40162f3307a3cb9a21194a572af9d89f609d5cb99ff", "ref_doc_id": "40ebd08c-c34a-4c09-baa6-4fa729a72959"}, "9846b948-028e-4d12-aea1-8b41f55638d4": {"doc_hash": "11b00e1237fc4e3a5e40bac849ea2091226173e1acb865b36ca03ece5a78383e", "ref_doc_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70"}, "8d80cdbf-7524-46fb-9a3d-34c75c0bf1c5": {"doc_hash": "75de22b90e2fb51ce4c59c577748cb06d80281acc9047a6ea3b64e8e5300850f", "ref_doc_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70"}, "264fe587-7d33-448d-804e-e163e7c9de53": {"doc_hash": "1fc8c7cc8f0f103b306b2f52b9f1fb56986cb328cc867bce0019175a843505c9", "ref_doc_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70"}, "c507d608-441c-4d1a-9709-baa02505ac28": {"doc_hash": "30b67eeb43c9b48c46f7420e3e48f042c0d669ca2c511331357bafa34b9083a9", "ref_doc_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70"}, "cb30bb4d-a47a-414b-9c79-d9cad1b89dc8": {"doc_hash": "6ddbc3df3502dea8552166429eef0fd33b505ab0b2ebf07f8cc5aeb587d9de0f", "ref_doc_id": "cba9c2ca-cbfc-4c8b-920f-f3993cf94b70"}, "59c32184-e5e4-4649-ac3e-1a303bcbcd1f": {"doc_hash": "e9a926607fe6b2330d94400e79782aab4425bf325a490ea750f1b9242cf4400e", "ref_doc_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4"}, "04e05e96-e8ac-42d2-83b9-ab87641b140b": {"doc_hash": "c19bc036004060dc18b77187e7429294648285617fdafb8bd234103c9f80f6d8", "ref_doc_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4"}, "0233cb17-25cb-4233-b6d7-c129b1ad5395": {"doc_hash": "a7fef0ee01a3c081cd1d52841d5472222c60aaf210ab3d757d4cc56c2cde74ca", "ref_doc_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4"}, "b1d24b2b-7c49-4cdf-b6be-a01329053673": {"doc_hash": "5eb42b2f35fda77c7d622af0cba109069cd3b41e4850b3ebd084b066ec8e2935", "ref_doc_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4"}, "35198889-328a-4933-a4e4-47bef39cf559": {"doc_hash": "ee64ce79076c9a4f31081e51a7d531cbd8fba759e1679146a66aff3cafaea37e", "ref_doc_id": "7ee1d53d-6569-48f0-9eec-f32d9b4affe4"}, "8dccb543-77f3-46f3-a5c5-44072861b5d7": {"doc_hash": "3e2e7554c31324315e942f2098cd07af5914ab8983609c4d88854b402cd20dae", "ref_doc_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316"}, "29195ba9-e065-431a-8dd8-a8e519cad023": {"doc_hash": "99b00c7babeb942fd31a9e3b15a3673537ccaec7add4d5256c981a61c3f7415b", "ref_doc_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316"}, "a22e57da-699a-4823-94ea-c3bb70232920": {"doc_hash": "8a4e4ee19462831bbe75a09906e744a12c59350409722abcdcc211ea113d3e25", "ref_doc_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316"}, "6ac06141-9f97-4548-ad07-3650a62157bc": {"doc_hash": "33546d9722994b5010cb9f31c320b4a9053204b01ddcca6d0c9db341e70eeb6f", "ref_doc_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316"}, "a48e7990-1575-4b80-8df3-6e725e4c6f17": {"doc_hash": "c7735e28fc125bcb8c26e2946419dd872395ce9eac1917140e7c525c91e9a90b", "ref_doc_id": "f904eeb7-5f38-4ded-9b6e-82f4d2986316"}, "7fbbb742-7b71-454d-a50c-9eeb048ea353": {"doc_hash": "eb0319ab5db95a4c433cdadc10a4ab743ddcdb42894e27935d3bc151d8d230b6", "ref_doc_id": "b038c328-0caa-4be1-99bd-e9e4bceb30b5"}, "4cf9f21e-0c30-4c8f-b0bf-521eba867bba": {"doc_hash": "0d4008dc5c31837d03bed2894766d385002834f8f1664769317bf6831a9dee2d", "ref_doc_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19"}, "5af83030-6aad-4126-a9ef-b0bc77aa540f": {"doc_hash": "94b1ff59d8cfc963c120cee133510c47174cecaef49ef61d2b6801de7abab89f", "ref_doc_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19"}, "407b390a-e65c-4c34-8f94-c244910b8997": {"doc_hash": "2dca47d10b577fc5e12ce6dbc2f7d9a4ef6eec2e4eeb91dddc8102edabd79546", "ref_doc_id": "bd64b0e4-7ad0-4bbf-a2cc-b7875277ae19"}, "f55f0f60-ffb4-4a71-9221-4c60f592eb60": {"doc_hash": "b090f405157b33bd61e2b3eac786fbfdbf7c968d60f8cc3905395d471417a4c7", "ref_doc_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68"}, "bc9bc022-2a29-4cf5-9fd8-e1d050157557": {"doc_hash": "a23ae669f593dabe9afa9b61cf4ff9e5feeee7efc618bc5e359b93a16518c84a", "ref_doc_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68"}, "aa0ff2e3-a3c3-4127-b732-e218bac3e714": {"doc_hash": "2425c5f94b2f67e811b9b57409dab51b3025739a2d4db6d32fe33a5262bcf901", "ref_doc_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68"}, "ee21da57-786a-4b89-968d-023f598575c6": {"doc_hash": "75c4bd33b05babc5c7de6ccc6d3855dad726e3ecfd09b159f39b73e116bc559f", "ref_doc_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68"}, "b43f1625-a2ce-4867-a68b-f9def6e36d22": {"doc_hash": "94f10d8109e3e5d65f202b401c9f727317d54dc4640cad98b25914a391f6a801", "ref_doc_id": "2c09e34d-5c80-4675-ba51-9da9b2de6e68"}, "ba76b114-43a2-4950-919f-e3e3dbcbf86a": {"doc_hash": "4998138dc72e5f433ad539d032f527658aa2e3cc98caf6a52dc4efeccd84969c", "ref_doc_id": "e5867d46-56e8-4485-9627-2dbf45487f95"}, "87ec7b4b-2729-4e67-805c-62426258728b": {"doc_hash": "a7fde4bbaf8b08d5bf369d47cd80bfd4e7be2e7cff1cb45d6bcda57b60f7ffd9", "ref_doc_id": "e5867d46-56e8-4485-9627-2dbf45487f95"}, "edecd0b1-9066-4f98-976c-a0c894554643": {"doc_hash": "fff8ee168d4d9ebaf61acfce9b62d1cdea9c186fac5f71109ec6e8ec955e688a", "ref_doc_id": "e5867d46-56e8-4485-9627-2dbf45487f95"}, "a2094ca8-69c8-4279-a4b8-54d7016a3a67": {"doc_hash": "f6312d7979379ada688985137586fe13afb3d7abf6bdb436c669204590b634f4", "ref_doc_id": "e5867d46-56e8-4485-9627-2dbf45487f95"}, "206b0777-a998-4b40-b119-d4cbdb335f45": {"doc_hash": "6db029f78a8ead2ed988154986ebebf937d9a85c90c6e592e097e7227b5a424d", "ref_doc_id": "e5867d46-56e8-4485-9627-2dbf45487f95"}, "dc7a2dc9-58ee-478d-b945-e409383334f6": {"doc_hash": "ace761c221c96444987af040d57073d07a11178146f961624cd75d7542fd124c", "ref_doc_id": "e5867d46-56e8-4485-9627-2dbf45487f95"}, "d752f7e7-ab5f-41a9-a2a8-1f39f8338397": {"doc_hash": "5b45258da08f98f85afc640332f6074873026c1f29f9f9dec28b784ebbc980df", "ref_doc_id": "117be70c-93da-4351-b313-0892a4bff3a0"}, "2cc40d4c-d959-41be-b8a7-d569a48eccae": {"doc_hash": "20e382513e0295f363cdb640a79b7ac0a41013bdd51ecbe19e9b4e3289dc076c", "ref_doc_id": "117be70c-93da-4351-b313-0892a4bff3a0"}, "5bbe7983-9422-4e77-ace4-24d65ac0f7f3": {"doc_hash": "8eb4814f5eca3980e6d1987339f86ce8af0e1179e33fd5ae7690f0323be11de0", "ref_doc_id": "117be70c-93da-4351-b313-0892a4bff3a0"}, "425efa9e-e1c3-49e7-a1e6-4c777f2a5177": {"doc_hash": "3bcd7b3a82f5e1eb0affcd4b8a5f92f6015b57f01b458aec85c79a0e700670e6", "ref_doc_id": "117be70c-93da-4351-b313-0892a4bff3a0"}, "3f8c1072-d305-4515-bbef-30cf55df4a4b": {"doc_hash": "4b912061bb6336b81fd4231a0b6d438b7dc2cef2e54b9241fc1881dd1b507778", "ref_doc_id": "117be70c-93da-4351-b313-0892a4bff3a0"}, "247470a6-5590-464a-b095-84bc71d0fa16": {"doc_hash": "eb0c527a1f76436acb3ecbcef88d47d852f27cdce100a96b471570498a7d910e", "ref_doc_id": "2f2c2788-719b-4bf1-aed2-830e6802d26f"}, "cbc35541-45d1-4477-894b-f311df75f13f": {"doc_hash": "2e446f98b2533164c98e4991285be8c6ecc9ccc1ac335c9374e2883df4851b5a", "ref_doc_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a"}, "ffc320d3-fe79-4ea5-a290-024fac04f277": {"doc_hash": "bbaff95f32c5c95fe45557113df4adca45d80d9efc6aa16c14b8793513e2f2d3", "ref_doc_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a"}, "e835e945-3306-40be-a0ac-552f586827a2": {"doc_hash": "28b91e96138145b4998274ef27af6cdc08b2614fa587737d5413239746bacdb0", "ref_doc_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a"}, "735c94b6-9f76-4236-8a0d-eab7a60e6b80": {"doc_hash": "59d84ddb54f232aa1f6d7470b47017bfcc4dbbddc8867d6e996ef14010563274", "ref_doc_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a"}, "72d079c8-6923-40f8-9643-69172452565a": {"doc_hash": "dbaea4fd261932b72e5bb9c4b77dc20361a97374769d11c3fad8ddfe602c97ec", "ref_doc_id": "bcb4d2c6-ed5d-4162-a657-83d89cdb751a"}, "da01ed74-b897-40c6-bea0-66e9c80aea3c": {"doc_hash": "9dafc5459e9c6ec0ec6e1f416c946600415570435fb00be35cdc08c2163112e5", "ref_doc_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5"}, "6cbbc6fd-36c3-4b93-b59e-6b6f8bc3d58e": {"doc_hash": "51f49907a57fd7f07422eef37829a1ba14e7033d922f46e32a49e8dce46faa16", "ref_doc_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5"}, "25311c55-52c7-4155-9b16-de76102aaf16": {"doc_hash": "35dcd9f3a8d9f6d0c758514af87c027d31fd6825fabd045e04f299a31b13b66f", "ref_doc_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5"}, "9ab662f4-3dd7-4565-ae83-d8e6f4592435": {"doc_hash": "76a47f8d30eebff46ea7b1bd482d9a6930f6cc348cc9e50469aa926b65283d42", "ref_doc_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5"}, "d2aa3467-c436-4697-8f27-716fc2ac1fe8": {"doc_hash": "621b16a6c91e25c1b0028ef78f230836dc8ace40e4e5606deff967e47804bb97", "ref_doc_id": "92b7cae9-3fb6-43bb-af73-506d0da831d5"}, "72385497-f400-4454-998f-417428afd2e7": {"doc_hash": "3c7bd3782a49dabeca1cd22185b5b65af2fdabe9c5fd51cd31a35b479b2d932e", "ref_doc_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea"}, "e5c69e11-f394-4208-afa1-7bed909c5773": {"doc_hash": "4be3aa8c27ed7a842da335bc6b9940ce676dbafb00796d81525d590da00da956", "ref_doc_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea"}, "2365d4aa-87b8-426e-a4b3-3532842e4297": {"doc_hash": "77777757e9630437d596d7641e98221622498353cb6b3b72a91d103e2564abdb", "ref_doc_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea"}, "199ed4b9-3388-4c28-a636-27765c600418": {"doc_hash": "3fca96003faf625f1d4202ce538a3a2d2f0449bdc9d26d802cc29198e09ac35c", "ref_doc_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea"}, "7b893e1a-29ad-44b5-825a-07813c5345c8": {"doc_hash": "453140c6405aa226c2b4f5248ddd1ee72c9dffebffb4b9e2c8fa94aa44667b1f", "ref_doc_id": "b2aab929-70c5-48cf-9267-5dcc12abf5ea"}, "4858438f-5190-4c93-b4b7-21805f58f8ec": {"doc_hash": "6ef0e1c33544ea0555de4ecfd73ca0c33f239657ee28647522b562b058bf325a", "ref_doc_id": "06fa7e6d-3d91-4114-8381-86e8e6a7b958"}, "129112fb-017d-4ebb-b230-dead7e443d9b": {"doc_hash": "9aca7ce67e75022b0b8881fb6ced75340f764c6afd5324e24efb6f9ae59e7059", "ref_doc_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a"}, "44eba23e-468f-4311-a472-fbbb4d9a9c76": {"doc_hash": "251221ea580ad2069c735798431c5fb8b9d9f0b260bbbeb93f3bbec6ba1b16d4", "ref_doc_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a"}, "208af18e-bb01-480f-8d6a-129091d1904e": {"doc_hash": "0ba595825feb1605b3bff77b352c4b6d2aadb983de37bb02279da30940a0dcd5", "ref_doc_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a"}, "f11ceec4-f1c0-4ef1-9ae2-3d9419a99707": {"doc_hash": "fce514b7b491500adeea051b40623deb02ffae84aa169a8e6e8b00e6677424f5", "ref_doc_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a"}, "e27e8184-7438-424d-aa2b-ce1c97362a36": {"doc_hash": "e34d2b88f7ba24e20d98398ec255f246f7decc0961b2975d146d26afaaa2b958", "ref_doc_id": "dedf0763-dbb8-4bb1-81fc-f5b78af6a23a"}, "0b267f96-67b2-4711-84c1-8b626d9fdef7": {"doc_hash": "6da1b24b10a244926f2fd90abdbefd2489f1f12cd1bc7106679e4a330cbe9a76", "ref_doc_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b"}, "817e21c4-9867-407c-aadc-16dc3348ab47": {"doc_hash": "225dcae15445bcde92f3a3b957efbc25f143f8713fe99034c760ab0bcf60c7dc", "ref_doc_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b"}, "5640b407-5048-485d-ad5c-b32b8e6fdfdd": {"doc_hash": "1fcf7be1705ee06a00eb3d34055b3da79f219f242f35614805bc254ab595ff21", "ref_doc_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b"}, "c9fcd441-872c-4410-b07c-b90524b3a2dd": {"doc_hash": "9fcecb65a1ce76458850d861e7851f748c1402f66c83d9be957aab143dc7ff9c", "ref_doc_id": "9657ce5e-dab7-41de-9a91-d7cd3df09f6b"}, "0b3ccc8b-de50-4899-a501-f923556fec33": {"doc_hash": "e2814e45a1c227470a5acd77e181a126a59ee2fa4b068c4f171be8372ed009e6", "ref_doc_id": "758fa473-e100-43ca-8417-d815b23374f7"}, "0af3c8ad-78cb-436c-83be-970f9d5a004c": {"doc_hash": "1004769447ecc4d5282d725ffb96d7f17392964f285c9173b3ac31fe08136adf", "ref_doc_id": "758fa473-e100-43ca-8417-d815b23374f7"}, "fbf6e4c1-fa5c-4332-a47c-b01ace58645e": {"doc_hash": "b045dfcd1344f4bb05d42e0ab49c18490c7a58b51048805250f96b64e645d2d8", "ref_doc_id": "758fa473-e100-43ca-8417-d815b23374f7"}, "dc87eb70-010f-4abe-9ad3-a78fd253a970": {"doc_hash": "5e5b4f6bf7b5e46adaf48834597e3415b0efbec5da308cd58d561246a82db0ba", "ref_doc_id": "758fa473-e100-43ca-8417-d815b23374f7"}, "dd5d52a9-7eab-4e29-bcad-57c285abc859": {"doc_hash": "e62df570ecb792c6d730c196b3e3d7d60cc15eb9c1d787f4a869f17ffb6634ac", "ref_doc_id": "758fa473-e100-43ca-8417-d815b23374f7"}, "ba20e39e-9045-44b1-92a5-227727a1d13c": {"doc_hash": "ed2f03e5eb7a466394b4f0b08c50d359bc83290477c2928b0fcaef11743bc32f", "ref_doc_id": "41490dba-fd83-4981-bf70-93354e0968c8"}, "7b400ad3-2b49-4973-b694-a974560f2600": {"doc_hash": "e9ecb6e74144f88445ef518bc249eb13321d1d33c3dddf8f202fe7a01eee325e", "ref_doc_id": "41490dba-fd83-4981-bf70-93354e0968c8"}, "a9ac7ced-4418-4f35-a842-d8206fe1c6ea": {"doc_hash": "32783b887ebdd1662c650fb27ce9bc0116fc3fd6467d43502d71ce49002a6693", "ref_doc_id": "41490dba-fd83-4981-bf70-93354e0968c8"}, "a9db3c62-3c95-43de-8ab8-19810e173553": {"doc_hash": "c3a806bedfa066b007044e35797e186cfcf63ffeb1a88a135ebbd1ffb24df801", "ref_doc_id": "41490dba-fd83-4981-bf70-93354e0968c8"}, "884d37b3-abae-49d1-a9c7-b172847b38ad": {"doc_hash": "a0d6fd573f16484c8f7012a7cbda115d8881fa6d99f34ac7424b35597a3c6008", "ref_doc_id": "41490dba-fd83-4981-bf70-93354e0968c8"}, "899153c1-ceec-4038-9f80-55cfb59b264d": {"doc_hash": "85dee91fc80e4df9c71dc3c38736e6352df3c9e53ea7170ef76b1597072bb28e", "ref_doc_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d"}, "750c52dd-d02e-4e0c-9ea4-2c5f7679478c": {"doc_hash": "5f3956c962a754640fc9803410f84abffa28ff4d1f72ec9422641af53864e4e7", "ref_doc_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d"}, "05166966-4323-4b7c-8874-191148d608ee": {"doc_hash": "560dce65adf14b6c1a31c5e788e27c3731e90f484b7a878146f3defb15de7065", "ref_doc_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d"}, "b4fc80a9-d649-461c-9f9c-bb4b12463205": {"doc_hash": "f896350414e78d27d41b92457c08e7e8560670a8a9897d4887cd5e2a0412610c", "ref_doc_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d"}, "cc11d256-8d20-4c3a-9096-18abfea92a5d": {"doc_hash": "a3d0537c10bb8c3c909ef7b71843110d1682f7e7f9a9b4a1b2bcf8dd1b5a158f", "ref_doc_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d"}, "95a6c95b-283e-4458-8199-dea6eac77548": {"doc_hash": "a4fc8853bde239048db4a908ef8709cac9aea14c57147000b753b0077866068b", "ref_doc_id": "033b8ec2-c69f-4895-a660-e867b5e8e89d"}, "fc107fb0-2378-4e0a-b49e-636936208833": {"doc_hash": "a8dcae3807e434b990ce1de496f00c1ca7208caa9048315458d014a1a98d2a4b", "ref_doc_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657"}, "6030918b-685f-4118-80e3-cad90bb083c8": {"doc_hash": "3807ef97a9fdccc9e63c5c318ec78921fadab311c06e35fefa3ba22f7d59f906", "ref_doc_id": "102fb15d-28ac-47fe-ba84-f2a1fdcf1657"}, "3ce6a3a7-6b2a-47e7-8ff5-8b6b96763c03": {"doc_hash": "ee3f2bc7fd2a85d4a1a324f1a012d51ba0eeb395f598154bceeaef2592863f8e", "ref_doc_id": "71018116-7d3f-4c49-98b6-e8b322aff129"}, "df01db1e-4bf9-41ab-8d34-726c6e4dc2d2": {"doc_hash": "d5c140e5f5af70855ffbcee09eff540bca0c3823764e1fd54da2ce97e8438733", "ref_doc_id": "71018116-7d3f-4c49-98b6-e8b322aff129"}, "f1b1ada7-0833-4708-bff3-8a0f38e233bd": {"doc_hash": "0efca29a46781769def3f06e62904f096294d21ccb1a59b7d579af17688fbfe9", "ref_doc_id": "71018116-7d3f-4c49-98b6-e8b322aff129"}, "8e0c7ae6-f406-4716-9e4f-49a92443af3e": {"doc_hash": "f79dcb52adaa34fba4cbd411dc590851833d85819b335c9e1b63d4d04cabbd9b", "ref_doc_id": "71018116-7d3f-4c49-98b6-e8b322aff129"}, "bb90ec1a-01a5-43b3-a8d9-aa0a96b8b911": {"doc_hash": "62973d039ce55059dd6606544d0d32f3420200d9c7ed3dcd352429fbe60d3c8a", "ref_doc_id": "71018116-7d3f-4c49-98b6-e8b322aff129"}, "61324c0c-0e6e-43f0-aacd-04ac8c28a1c8": {"doc_hash": "ce69126a251312e57db20372aec093343dfdd1cffc4c5a5ea524dfb4218c3f9a", "ref_doc_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877"}, "1aa02aa8-f4a1-4d40-bb41-fb192347f2d4": {"doc_hash": "91539fe3448674a241fb5d7387b4282c0b04bcbd0e0cff1a8415dbcb7913a1aa", "ref_doc_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877"}, "aaa3d8b2-e7d3-44eb-b6df-60253c59d6fe": {"doc_hash": "51b3a4278a1b6ab1c80012672c2ef21bd58a29ab8dcf8256daa4dd29463d9b41", "ref_doc_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877"}, "5ae8c366-22e6-479b-bace-c2691f626c34": {"doc_hash": "1e06e88465c9228692e2f9b7d56eac1b1b480177933b380ad0af6ba386440c1c", "ref_doc_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877"}, "e32f504e-f8f4-406a-80c8-b57fce425a9e": {"doc_hash": "6715b991841ad808f0bc135f89c1b9b5e1662c31d77a78700421dd21394156d7", "ref_doc_id": "5e0dba53-a54f-4c83-9669-5f0ef70c9877"}, "f2af8361-1340-4f58-88a3-fbc8574c4573": {"doc_hash": "6e2c1ea274715942bab3d80586ea31b6fd3fda947275af6a7ac6caa1d549ce52", "ref_doc_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746"}, "88b5c8eb-19dd-4394-aec7-47845f494aff": {"doc_hash": "5a0ab0e4e9afacf9bd5f9c10f46af32c548d583b70067ea08b504ebba6f61dfa", "ref_doc_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746"}, "ecafdc72-a12e-40c9-9424-9a3a7ab764f6": {"doc_hash": "4dda3c2bd4d9e0d8891fea183cfe9fc418989f11461328c92b603c3791e7b92a", "ref_doc_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746"}, "e64a049a-bfbe-4967-996e-b3db7d363465": {"doc_hash": "7d24f4538193becf193a87bf1d33ca7e789c68df32ed88466733c506c8def182", "ref_doc_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746"}, "0da46959-7b8e-4ab4-9599-117826b1390f": {"doc_hash": "78b23feb340d8d6386e1fee1b13ef461f34c8fa6a43af4e0e024436749694280", "ref_doc_id": "4bfe4dc9-9c0d-4f8a-a016-8c245fb87746"}, "89512852-1182-4b47-bc53-3122513474f5": {"doc_hash": "0f5b08fdad11455042c91c0323e028c98f5b68e45b08dbeea758ba69076518e1", "ref_doc_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b"}, "d6850b1b-5167-44af-bcb7-198006c02e6d": {"doc_hash": "c8e71a6220631764acdf7a37134190cfe62e635f0f8d0538eae68a9a108898c6", "ref_doc_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b"}, "152fb1e3-0732-4faa-95a2-47960a2e00d2": {"doc_hash": "b90a1c0ffa16a6f115481e545746932a983534ebcdd5c819a3893d8eb8e5d854", "ref_doc_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b"}, "0bd414c6-e7bc-4793-9c72-f411cd5d8649": {"doc_hash": "20d2926e053b292ff24f86e5033712f95b2939b448c9576a6cafd25edb19f436", "ref_doc_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b"}, "bc0e4385-952f-4591-8849-e56b51033304": {"doc_hash": "09aad9e14554a581a5d768fecd48ccdb47cf19c1dd54e8c5a7a0a2a6393334f2", "ref_doc_id": "6a18a3b0-623d-4cb0-b6e1-6639a3fc8d8b"}, "4ce469bf-d6aa-49a7-a1c3-ee0d8589b35f": {"doc_hash": "505a35cdd9368afef58e44e30ed776071dbc884454d577ad300b3db99bbbe367", "ref_doc_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4"}, "bdcb4de0-34d7-409a-adad-9997fd007040": {"doc_hash": "339c39487d48e8ce6d4b5d619a976474f56f6c4f53aafe59dd0ed13ac46fc1ce", "ref_doc_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4"}, "90104d1a-d890-4c41-9600-4621fb626cc2": {"doc_hash": "bc1b9bc9f287f5c200f1e862bbcab00eec80d11c30d97e1af13fb17d651b606a", "ref_doc_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4"}, "ea8d1ba2-f3a5-4175-b7ac-4e88f26d4731": {"doc_hash": "7960167552c37dff6e1a9b045177c8ae7ea97931a1bc4f235238620b8f4e975d", "ref_doc_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4"}, "e95c7d35-f964-409e-a8f4-90dd8ce5e869": {"doc_hash": "ab677a9a8a520d2f13a4b78a4be84c3e975ad3e75b025439e019c196f1652440", "ref_doc_id": "7f4f51f1-20fa-4a33-bd94-092bc7dedce4"}, "8e43140e-f019-489e-8e9e-93446a8b9739": {"doc_hash": "8d4061bd09fb81957100322a5f8921b63237b35c68d3b0b19d15eea7395f0b49", "ref_doc_id": "4a839281-2706-409a-888e-df6840026818"}, "8aee8d52-9f0b-4c4a-bd0c-8f96848febb9": {"doc_hash": "89023de0b908cfcab08cabbcd92de52ef8bf1bd81e2867d6c3c65627dc6d1d38", "ref_doc_id": "4a839281-2706-409a-888e-df6840026818"}, "e069f4af-c478-4f39-9ec6-b643cb5c7f7e": {"doc_hash": "25bc611fc5a04ea21a556d69019050a53394242de0b870951d5b068047032aff", "ref_doc_id": "4a839281-2706-409a-888e-df6840026818"}, "96d9305d-a936-4f84-8f8e-78529b1619ce": {"doc_hash": "08b92a25862dc9bc177dc56602c2ff66ceb814239ef99a312a90f70ff30d97f5", "ref_doc_id": "4a839281-2706-409a-888e-df6840026818"}, "976557b7-0f70-4ec1-8ead-18a3346cbdc6": {"doc_hash": "1c4a4f188cc560f287abe104f670d43822262210899ef092f060b91ab7036327", "ref_doc_id": "4a839281-2706-409a-888e-df6840026818"}, "eb6b1a07-d4c8-4e59-9312-e25971548c88": {"doc_hash": "5d11ee8c645347814780f33689ac430e34eb186effe11942f44247ac974786c1", "ref_doc_id": "4a839281-2706-409a-888e-df6840026818"}, "7c5a91d7-1a95-4fbb-99fe-9fa82e352cce": {"doc_hash": "c28235ea9027a5c61e155851b2044208929aa7ba3aa7df9a52f7ae383a233597", "ref_doc_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c"}, "5bdad8b6-1144-4e70-a437-30d6df914586": {"doc_hash": "93f533181347cdc659bce397160d35011344e2733f81163783694455745a39cd", "ref_doc_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c"}, "03f75a1d-74f6-49e3-b850-666037ea6aab": {"doc_hash": "67a4113ad6fc19ad65e3285b2fb894a29a0de14214ea3d083acf6e240f81b71c", "ref_doc_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c"}, "424a2ab5-5827-4ca4-a740-bf377b35ce4a": {"doc_hash": "f651754369fbff21475b2db8f17e0231590b6e42a9b10003e613d584736327d3", "ref_doc_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c"}, "4e95a2a2-2d94-4f94-8185-9da4062c6e05": {"doc_hash": "0b65a292d06f8bed2d15a4ef9037a2ecfb9cc51ef29f74a685b8d44a19e9a920", "ref_doc_id": "592f8b4c-f9db-4e89-9887-fa499ba1c34c"}, "c86b4d12-84da-4b85-b7e0-895dcb136999": {"doc_hash": "98ce584368753a705085bc02e49f79e86c59b9fdff932b7ceadd92da7bc8783a", "ref_doc_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210"}, "69e91903-7f52-4044-b0b1-6b432028a2af": {"doc_hash": "2dd43f8412d9d532c4d4e1dbe297eb3decabd5977a261b54d063147746b5da88", "ref_doc_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210"}, "d6ca450b-3669-4b99-bf18-fed73e9af305": {"doc_hash": "a4e9b7aeca1ea4b993cfc6056c934f205494ca036364201c41021526977a940d", "ref_doc_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210"}, "f860c5a1-9b8d-4c23-a0b0-e844522a71bb": {"doc_hash": "7003c40f25eb3202db9bb2ffcad46de891f6aed386e79440e335f21a58cdedb7", "ref_doc_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210"}, "02d00b49-20ca-4877-b8f8-a07ddc45664f": {"doc_hash": "5cda34cf5a76f67cea2835e3e925d548e077e19c93b103f07ca427b60a15d5dd", "ref_doc_id": "1ad6e96c-a7b2-404a-954c-69f11cae2210"}, "4c928c2b-b1c1-40cf-88ad-d66433cc001c": {"doc_hash": "4c5d2fef0d25f649c0ab681f9202ecd8993c2c839fcd47dda34a91dbdac2c22d", "ref_doc_id": "7ff46e2e-66c3-447f-a174-7b41b24625aa"}, "93ed0e5a-31d7-4102-a580-11f1245fac0d": {"doc_hash": "3c58f92fd448808554b896fdd619911d13e6da61da1c3e364c3bbaf0eb384cdd", "ref_doc_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b"}, "ec807fbc-2203-4589-bc82-842cf1acf8f2": {"doc_hash": "393da4dd5ddeec32e0916536b7be1d5e8dbffed0de93a151682c7c73937ec77f", "ref_doc_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b"}, "9bfa1245-e0a5-42d6-b68d-fde4fc3483fd": {"doc_hash": "b5b72c856eaa9cd75c3d842a1bde2559513a7dd83978df415091f89344a52562", "ref_doc_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b"}, "8b443132-4cd6-41b6-ba25-2a0f7dd49978": {"doc_hash": "6479e19747b225b5bd2cbfd9e724db88aeee659f15059792eb6f60e59add8be3", "ref_doc_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b"}, "f0fcbe42-23c4-481c-ac6f-2c6915c9c671": {"doc_hash": "381bfb0ce49cb9e0a07099807797566d5c107c3fa5f42fdf59490fa52aa5d065", "ref_doc_id": "b1eed079-9caa-44ce-9d84-8b1a0103b79b"}, "acfd1bfc-93f7-4912-8d94-c393f029bbc3": {"doc_hash": "a6732db30935a3cd24810b44cf67325702dde5aa29870cd2c2ac35504826fcbe", "ref_doc_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2"}, "e6108209-4ec6-412f-9697-25c4aecbaf24": {"doc_hash": "e9dc7d771e977f71265c1a3b840d15ca41af2076f80c7f691f3bcfbf401b8c9a", "ref_doc_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2"}, "86576e66-548e-4fcf-80d0-8eadb593d04e": {"doc_hash": "1c265a8d0108abffb7e01b03323befbf4a6b7c674709d970f5e9bd3587a8eb09", "ref_doc_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2"}, "db619cbd-5285-45a0-9854-2030f19d26e4": {"doc_hash": "edc755b4f7adc33bf5422ab2a274135cd1b133592037fdfac36f445389a02e1e", "ref_doc_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2"}, "1444c19c-dfc3-4861-bf0b-2f37be86596b": {"doc_hash": "08c815443b496245bef33a6b4e4bd43162402864b37e7d126fc9f13a0d7eb633", "ref_doc_id": "486d82ff-8fd9-4f72-b068-68d25d163ab2"}, "d81af57c-bde2-44f2-bad9-a4ee6ab6a5e3": {"doc_hash": "a53710475024dbc8a03b84e48d8e473b8db75b643d25d6a3d2c423c7a61d4569", "ref_doc_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e"}, "8579fa3c-a903-4ee4-8cf1-697b2a19600a": {"doc_hash": "94645181f4465e9795acc02e60c33d60a25b067105c845ecc29e778b7c365f3e", "ref_doc_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e"}, "7aa1ef7e-349d-4b8f-9bc5-c9231783e76b": {"doc_hash": "66b24ffe0f7062b372922f3d4e539eb2d1b24c0be982361c4b0beaf32c1e95b0", "ref_doc_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e"}, "fe617144-b71a-41d0-8c0f-4f340a10ef3b": {"doc_hash": "1a54ffd9349cbb0f5f26eaf1e44bae2636d6dff61c0e8f9127011943aac06720", "ref_doc_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e"}, "1eed3301-c4f0-4c0e-b8b9-56cd39a3f26c": {"doc_hash": "3c48df1ab405caeb1dfbe83c612ead36c724e5a1a26f2b693cbbf2d89344d964", "ref_doc_id": "ca9b04d0-f0a6-45c3-92e5-a3bd99c6354e"}, "bd879fd3-5892-4fa0-b561-9954b2357839": {"doc_hash": "7cecdca9f6c4dc1f9ef38ab73f98a84c61a11e919e565a2f5060cfd62eb37f34", "ref_doc_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2"}, "51f100c6-bbb1-4446-893b-2ef926a5aeee": {"doc_hash": "fed44462eac519514f2e5667d0dafbf89043a7353abd85c30303b7725fd5291c", "ref_doc_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2"}, "33363cf8-3b22-4d3a-9fc4-656af0a2e069": {"doc_hash": "258b5065ced10b163f510ae9051abaef9e7aca82bc7853b3f744f9624ac60d9e", "ref_doc_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2"}, "afe8d503-ee44-427a-980b-7ebb09312817": {"doc_hash": "f831af489ce23a6dd4bebe61e6ac8aa126a5a7875d7c97ac450061f66b8c09e4", "ref_doc_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2"}, "bd75d102-fd78-4d0e-9071-100c906c8375": {"doc_hash": "c77240164c55bcc01150c14aab2698394d9dcea909556056d0c731b572daef53", "ref_doc_id": "bf902940-188d-41da-8edf-5cb7c4fe0db2"}, "0cac29b7-e2ac-422d-a79e-1a5cd820371d": {"doc_hash": "133cbb145d62a5417e4fa8f569ed86448e3fef28268da4443dbf6df45ac10bfe", "ref_doc_id": "023d29ba-27f7-4516-bd02-a7ed63efbdb0"}, "760ab3dc-bad8-4987-95b0-de4a55c06d84": {"doc_hash": "eceb3147cfcce4367efc731bcc090141ae8a084b99e34af77e97b6e25558d076", "ref_doc_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d"}, "0662f6ab-37d0-4c11-acbd-fe91bf9c0809": {"doc_hash": "5340c4fdb4687da368777c069bda003924561114d69a49b5a934fa06666572d2", "ref_doc_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d"}, "e5f646c6-b89f-499b-ad98-0cd5dddfd498": {"doc_hash": "30653398bfe3d7599522fee6fb601dcf02b7f10698d40e87b0751bbee7c0371a", "ref_doc_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d"}, "98e48856-29bc-4b1c-9908-1a66dc7cd2b6": {"doc_hash": "ed005981a46edfc38e58348748df4359090f43910ac641eb0a468afb1c552ea2", "ref_doc_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d"}, "1581c45f-1ce1-45a6-a9b4-502d887717d0": {"doc_hash": "6216ae19b5ec217d4150640c0b4140dc77520c264e1d9f231b50e64f93280bac", "ref_doc_id": "d1a85d97-1755-4790-a02b-51408d0d5e1d"}, "adf3b340-ff37-4119-8f7d-aa175d699573": {"doc_hash": "02fb9149d980aec130284480a526c247498c8c189cc3e9e5867e026af6899606", "ref_doc_id": "49a086c2-e996-4c17-b97a-f1bf32a56730"}, "a0594055-0291-4b8d-b06f-e683ebfc6eb0": {"doc_hash": "139f9a5c20a65793c4ee19de171296acf206c21535ca968ed1baca7105894efd", "ref_doc_id": "49a086c2-e996-4c17-b97a-f1bf32a56730"}, "dc5a2814-a49c-4e25-b2ce-6b120be9b004": {"doc_hash": "8bd7e09b64fa700d36bef1156c283cb5944da092b7023817439da66611524946", "ref_doc_id": "49a086c2-e996-4c17-b97a-f1bf32a56730"}, "917dc646-917d-4ef4-a872-30e4733c6eda": {"doc_hash": "52e9c04f594b2b9ab417ce6acb64c9278ecb7a159a313ca2b0f75c33dfe6835d", "ref_doc_id": "49a086c2-e996-4c17-b97a-f1bf32a56730"}, "a9c9e96b-ac8e-4792-a2a9-8fe5751d0070": {"doc_hash": "35745004525797bb262b15ff3b21d5ae543a1a6099640d46883056fda30ccba7", "ref_doc_id": "49a086c2-e996-4c17-b97a-f1bf32a56730"}, "df584730-6f71-4326-a464-f2a79d424261": {"doc_hash": "1be1b67be42eb18c470e79103b68e6a71e6184f0980f5d5c8ff7f74feefad223", "ref_doc_id": "49a086c2-e996-4c17-b97a-f1bf32a56730"}, "8c2c0f53-3fca-4464-87cd-ef3c6dd2a1cf": {"doc_hash": "10a4b23560f1a1e0eb087e78f334b39f7125d8510899db398ebd1284f48c5b79", "ref_doc_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d"}, "a46ed202-5920-4523-ac4a-044596af0b1f": {"doc_hash": "ac1d6c0cfd23d7353492ef31c39968b38da0f299c68218d2940b92a6aee4691b", "ref_doc_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d"}, "f5165dc2-c00b-4f59-905e-92e42344d9f2": {"doc_hash": "4d87855f6f9b45535c54592ad115d6b9ce49de2924d35f27b6d06d0464ebbeb8", "ref_doc_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d"}, "4095a970-83d0-4977-b672-03a5ee4bf29c": {"doc_hash": "13286103113f787f0f03b3cd7bbf8bc02a830af2325fbfa2b3261c9a58db373c", "ref_doc_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d"}, "dabf316c-bca1-4ff6-877d-33a95ebfee9c": {"doc_hash": "7c66499cccff96f0537191e9afca2ed0adb4aa33c85fb548c91d419e8848e543", "ref_doc_id": "fc1f2e92-67ca-49d2-9274-264bd6ceba8d"}, "29ce92f9-9155-4c64-99f7-8f82ed2f0c63": {"doc_hash": "20222007dbab4dbce54b9d03f5719c7757273d2b7bbe1f7758e9ad47cdb408f0", "ref_doc_id": "061cf19f-4851-4338-b880-7c346585665a"}, "53e2ecb7-130f-4d60-9175-a0ebe43e8e34": {"doc_hash": "cdbb4ee47b7da407e7a977bd8d24a9a33d0b62ffbcdffad5c882ac1e2797695d", "ref_doc_id": "061cf19f-4851-4338-b880-7c346585665a"}, "edaa2893-4940-4994-8b7e-2c597655f043": {"doc_hash": "8add82a6a83dab10cef45dd7ded70b437d2c7d4e97be55893b9753a0ac309046", "ref_doc_id": "061cf19f-4851-4338-b880-7c346585665a"}, "143182ef-ddfb-4560-a032-705e6fde4139": {"doc_hash": "b98dbbecff3b41b26fc7062aefffd8bce3d11757d37975644d0e14e8d97ea3fd", "ref_doc_id": "061cf19f-4851-4338-b880-7c346585665a"}, "7e787cfd-c004-46ba-b116-aeac1d32dd56": {"doc_hash": "bfa597ec1596742b989e5baee61f1087394883f38e68e21d4cc3df858c4ec8fd", "ref_doc_id": "061cf19f-4851-4338-b880-7c346585665a"}, "2b40c0a5-7d80-4308-8e21-dd8fecade17a": {"doc_hash": "fe7bcfea85cceac71997167417df07e9e00b74f26e52fd36be73f6c026bcc616", "ref_doc_id": "061cf19f-4851-4338-b880-7c346585665a"}, "0cdde2dc-4363-47f0-ab09-47253342e4cc": {"doc_hash": "e25388ebcfef4c379a9ddc2aafcf9030144cf35ee6f3042fbe36f4374ab6652a", "ref_doc_id": "08fe9d9f-d39b-4207-a267-e4b4c7cf93c0"}, "e67b4801-9484-4dc0-96ad-cfe1f18c8dd4": {"doc_hash": "0249d50abb9fc850abaee1a9e7348052e17bc3570b06d28995f03c7894c8215d", "ref_doc_id": "887429f5-c9a2-4122-863f-4c37531d3f24"}, "c70222fb-2a36-436f-8c3e-00d9002feab5": {"doc_hash": "4778f6465655bd91f40c23e0e746307d870530b0a3fdeb8ec5eb8e57826dfe2e", "ref_doc_id": "887429f5-c9a2-4122-863f-4c37531d3f24"}, "119219ef-12ed-4523-b337-cef03a4cf927": {"doc_hash": "ab87ba8a6c859bbf1851f786a2e767e21d1c89cef64e55b3030666fdb2971e68", "ref_doc_id": "887429f5-c9a2-4122-863f-4c37531d3f24"}, "081054ee-1681-4c38-977a-2a8419734e4e": {"doc_hash": "f748a4621d3db5b60067e6444a5129e95a5e5959ce9b1e83ff1ff5378870018e", "ref_doc_id": "887429f5-c9a2-4122-863f-4c37531d3f24"}, "dec5ccf3-dd6b-46bb-80a1-1da492d3aa0c": {"doc_hash": "f785f692cbde6d6dfdccb3fac790f8ac1e83e955e1bca5ab89014ae1d6205472", "ref_doc_id": "887429f5-c9a2-4122-863f-4c37531d3f24"}, "99aacfaf-ddc2-486b-8846-dd49c5609382": {"doc_hash": "b2b5c289fb16bf55895ab706880674733cedd40d982ae0fa83c2c00b098e7985", "ref_doc_id": "887429f5-c9a2-4122-863f-4c37531d3f24"}, "52016b04-4c70-47d4-9d2c-e7c2538f4c63": {"doc_hash": "8e26eed09201e53461e5ca168fabc14d5307574c70d22039b18a850ffdd51116", "ref_doc_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d"}, "c455c1e8-4309-4815-80d0-4ee929c020fa": {"doc_hash": "f9a035e1b59729012a615e1ca2309056f71ea548a29531ba7b1b72af090d5b6f", "ref_doc_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d"}, "b0b22db5-c229-4aac-9050-b9db66700a80": {"doc_hash": "10cb88290a4d3cceb68ecd24e61f59609f7b5467c49ef73f3d5a901e18d8cc23", "ref_doc_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d"}, "63646112-5667-45d1-aa8b-5aede7171646": {"doc_hash": "2b964bfec8409127b650e89cec2e2c1783c4a01a4f286377b623164cc7f9354d", "ref_doc_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d"}, "59092e12-9918-4a9d-8590-08b864b5bfab": {"doc_hash": "02eb94cb20e647a70b86b0b88c4f30db29292f3f43c563b1df376905308e68ba", "ref_doc_id": "b38cd3a5-fac3-448d-acd2-099d8717ec2d"}, "6d7c066a-606e-4f19-891d-1b83ce1cea6c": {"doc_hash": "e898898c65f4b913cd8f614ed5df19dc1d1f8556be1b9a54a3407b3999769457", "ref_doc_id": "1818727a-8d16-4427-b43b-67ac4c435ba3"}, "4ba1f78c-2f58-4007-8836-f6a66c3d33d1": {"doc_hash": "4b5884f36c1d684203be4edef8bae343e016682abaf488caf48149f6d0c15ea1", "ref_doc_id": "1818727a-8d16-4427-b43b-67ac4c435ba3"}, "514c6494-afdb-448d-b909-f4d7271be72a": {"doc_hash": "55b7d0bd53a56245107afde3e6722fcae3e29de04703e16285e2ee79b2da25c1", "ref_doc_id": "1818727a-8d16-4427-b43b-67ac4c435ba3"}, "85caeb35-23b1-44f2-ba5e-616266c9529f": {"doc_hash": "314eac99dd88f1f0fd63ab558452dd4afcfcd9971934d02d2d0c0b83d74d8a12", "ref_doc_id": "1818727a-8d16-4427-b43b-67ac4c435ba3"}, "47078f24-35b5-4877-a4b0-b5723e3975d2": {"doc_hash": "1effe649257b02d9187eaf1813f46df72f9b90c05c32f3a5c0bf5b1eb93ced32", "ref_doc_id": "1818727a-8d16-4427-b43b-67ac4c435ba3"}, "224ecdec-ba1c-424a-9a63-eae8150d8f57": {"doc_hash": "e148c70f2d36df24b6f8ad314ffc7666b8652c6f90b0848f2923eaf017aaeed7", "ref_doc_id": "b13fcdee-3284-4435-8c91-eeede1e1019c"}, "f7c6172c-f875-48ff-be5d-0112297dbed1": {"doc_hash": "bdedae9c9d15293e8c95a416ceca3315a095aae0ad0d9d8183c5ac1f7379a491", "ref_doc_id": "b13fcdee-3284-4435-8c91-eeede1e1019c"}, "022f46ac-061f-470f-9ce1-11830f6c4f68": {"doc_hash": "14685b78b85d4c5aa0d2d3c3ebc99dfbd239c5e56df70fb8cbb6c997e9dbf54a", "ref_doc_id": "b13fcdee-3284-4435-8c91-eeede1e1019c"}, "33caff6d-abc7-41ad-aa10-bd37b07cb419": {"doc_hash": "6a631d048df7268d002bfbb5e68a5652f8bba6d19ebd4ffac2a05b7f4fec8d5a", "ref_doc_id": "b13fcdee-3284-4435-8c91-eeede1e1019c"}, "2f521dd4-71db-4575-8028-90af88df0807": {"doc_hash": "9b848955364dc1bd38b97cabf9568715709539fbab7d469e51c6c5444b419bee", "ref_doc_id": "e5f52ff2-4895-416a-a9e7-92222aeb2d2d"}, "271a330f-407b-4c6c-91c7-d61c9ee679f9": {"doc_hash": "7ecd2d1b0184b9c5e1e069085b51c0295ae4d665622aabe685ed8406ae87b827", "ref_doc_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5"}, "565be5de-f563-4cf8-a2f9-313311c80ec9": {"doc_hash": "4e12acfae832831572b40916d9e842aabc80fef610c14ba1155de9a310060a05", "ref_doc_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5"}, "ba0d620a-34ca-41a8-b09e-5c46a94b7f39": {"doc_hash": "7de503e1b7ec91465d4b3a291991a694fc4e50ed242c7cf97cc2a592ac8a54b0", "ref_doc_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5"}, "4307899f-093f-4bf0-8bcc-510368ee82fc": {"doc_hash": "b459c99e8c2dd4d806a84cd97d3d7cbe46733afa58d7afe6c05cd8755c8346da", "ref_doc_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5"}, "8964e9cb-c2ae-443b-8e46-24e6aa6f3400": {"doc_hash": "63632f911c8705280ab5fd10ff6e575bb20af159db5fb4c7ca62ffe8b1884930", "ref_doc_id": "e0d27b83-4356-4776-98c7-64a1ea6683b5"}, "bfd9b9b8-386d-4c6b-afb0-052c9bd1e8f4": {"doc_hash": "9874214eb69c52b9eb8e811f42d96b55b13fb406643cd204b13a00098e025d3e", "ref_doc_id": "888fe210-2bea-494c-938c-697d0feee64b"}, "a05c137e-e96b-4d1c-b7ce-e0d9cd0b6999": {"doc_hash": "adade2dee394999b94741d7f7597fe6c5c1ce58485266af5b708b91391a790de", "ref_doc_id": "888fe210-2bea-494c-938c-697d0feee64b"}, "20ad5c14-7cdd-4520-b1a3-ccd98f4d5258": {"doc_hash": "8f873cd4237f4b67bec38b77829bf8cbfa5c0e262de44c9bf9c9177a66fcb48b", "ref_doc_id": "888fe210-2bea-494c-938c-697d0feee64b"}, "647ade5b-e48b-4ff5-88b5-9af529405bca": {"doc_hash": "a150741a26f96dc2e9cdd9b478a2a1882e9402fa7c940dc757787f0f9a42f5ad", "ref_doc_id": "888fe210-2bea-494c-938c-697d0feee64b"}, "aaf03444-b1ff-4534-86f7-c9ab1cdce027": {"doc_hash": "7a2f55228f902b5de2c460adf2dae8ff5d01387a99915c5ed701387d82808f91", "ref_doc_id": "888fe210-2bea-494c-938c-697d0feee64b"}, "4baac2f7-d443-4120-8ff7-236b75532fc7": {"doc_hash": "59622896ce8f03ceabfca1ca8e2735d7bb20229f06c5b02dc86dbb0af008419b", "ref_doc_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe"}, "7abe026d-0927-4b47-8840-a8199cf0198c": {"doc_hash": "13b0462bb432afe87919ccc5bcc88c9d3b67549b3d9378b278a6a7a8c462e589", "ref_doc_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe"}, "1fc86cb7-8248-4d8c-a595-bf66a81d5bb7": {"doc_hash": "db05b89af0c0c987ef2b1408ef5f48ed99f0c45846db49e1482e7e9cb75a5404", "ref_doc_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe"}, "409bb2c4-0948-4dd9-ba18-62418d783151": {"doc_hash": "4844c130bc43846fa37f81b4fd68f2b187d89aba622fb296dd2c04489de32a88", "ref_doc_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe"}, "6c2dedae-1518-4699-9ed5-cc53f7a37422": {"doc_hash": "d515a71f2e6acaa6921948b43619886045ba475be05e079103aa2732f473dd32", "ref_doc_id": "931b3ac7-e0bc-4048-bae7-99280cd861fe"}, "3a5533a9-6f4f-4618-be7e-d083062391a4": {"doc_hash": "2d08a0fc81078d9e9432479b330666ce20ccd46699e83abf9bc31cba73ff49ca", "ref_doc_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4"}, "289b6d2d-9c43-4d17-a25f-adfa083110c0": {"doc_hash": "763a78b661b417005fa25581a0c16774789e12b427dad1b5b2cde97019b325c1", "ref_doc_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4"}, "979bd3a7-fcb5-4e5d-afc0-93d50aa7baef": {"doc_hash": "1ddc3ac44bcabeafb3eaf21fb25c2c16d93dc1a87d8ab30769ccd6527c0796b5", "ref_doc_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4"}, "e7cb51e4-fedd-49ee-9563-a93742d2b22e": {"doc_hash": "080c291fd4c2365b955c6ef125a4933616c8c6b4d69b32b643c042415e7702f6", "ref_doc_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4"}, "3084b59a-95c1-420e-93ee-c6faa5b1d94f": {"doc_hash": "a79adcd077426eedb9c60fca4f5d368fdd31578df4b106d17634024b227f2b0f", "ref_doc_id": "a279c2dc-fe53-4d26-9421-4e6a42a756d4"}, "ecc1d12e-1ceb-4ab3-bd05-782a89dcbda7": {"doc_hash": "930918643a93a441a09800f8909bd393d43c2e8fde7c465774188cbb291ff877", "ref_doc_id": "292706ac-9541-457a-adf1-75cedb1e2873"}, "58637b14-f5b1-49c2-a46e-7a5882d3931b": {"doc_hash": "0d71a87bd34bef92e3b68d63cad5e34f2ce1ebd0664c462f5d61d025ed35d986", "ref_doc_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8"}, "ebe7f81a-7bd6-42ea-a662-b9a33d1800a0": {"doc_hash": "e43d3f6a7c99e3860a67e9a0c4da4161c83ee74a43c40f5e8bd5aa8330dfcd7c", "ref_doc_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8"}, "fd21d4b4-8b79-45dd-9d62-f86ccb9021df": {"doc_hash": "dfbe5f202aff013b9b73f5ef84c8793eca7457eca79774af44755ad11bf5f9c5", "ref_doc_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8"}, "704e255e-48d6-4752-ac04-e1429b525c03": {"doc_hash": "f58cc1230a5ebf02579fa951cc8de274892ff8d0514abb82dea87c0a365b65fd", "ref_doc_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8"}, "0e4e95bd-b2b1-415f-adfa-12952ba36a15": {"doc_hash": "20f43e549b6e44bc3c0258a919e06dd210adb6e5c7f050841347b4d663eef316", "ref_doc_id": "317db8cf-567f-4b3c-b8ea-8009f7fa17d8"}, "d803567b-799f-4219-8871-7af21e6f2b3c": {"doc_hash": "7b4fb3940a10692eb152239af74af2c51e727b67079e539802781ed025dea6a0", "ref_doc_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150"}, "742e7773-26df-49ac-afec-380c9fc0382d": {"doc_hash": "7c297cfab2aef14975765bbf4284e13ed0335b3023899e383b55623eaa81e873", "ref_doc_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150"}, "2513ea6c-d55a-468f-9ce8-4e96bdee5b55": {"doc_hash": "118cee2d285640edb59be4d8e129a9dbfc2dfcea67f5c5a12edc59b9f314b1dc", "ref_doc_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150"}, "102b4b64-e4b2-42ea-a347-3de4069e7ad2": {"doc_hash": "b865065351f46623eb7c8ae1588c5024bf21ebe317b523d90361fa79cccfaf30", "ref_doc_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150"}, "3f0fa849-7ebd-46a9-a76e-b0771b99b1a3": {"doc_hash": "673921a1099c001cb04daff64045f40281833e26b4bd38047b9578e122d88a1a", "ref_doc_id": "90f0b9eb-2095-4048-afc8-4e3f0ab2e150"}, "96f133f7-f4cf-4bb4-bebc-26b159f52c51": {"doc_hash": "8b35104d3b7ee1f1e04732b6a61e628347129767b674063d625d447be7e3ad20", "ref_doc_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d"}, "d5b98590-4dce-4c67-a390-18305036ff73": {"doc_hash": "91e8d6819c9017fa91c9200cada9ff94a92ecc8c08cb4644db9de682f40446ea", "ref_doc_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d"}, "b7477e7d-8975-4246-8fa1-5f9827fb179e": {"doc_hash": "37aba13362fcfd0e7736e2f9f762effa47493ed3f3e308bd55191463ac149447", "ref_doc_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d"}, "64a04ed7-d2be-4dfa-8d6a-d2a89326aa83": {"doc_hash": "f31e312509fb4ac8f5499f9e10e7e2c485acc1ce7dead6a116c19bfcbe97cfe0", "ref_doc_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d"}, "9c60dd06-ed3b-4626-a963-c78a9bcd8662": {"doc_hash": "3e612c37b5c24be695df8f1a4794273105b3de408bf3a634f41613845f31dcd4", "ref_doc_id": "0c9c60f8-0b61-49ff-81c3-6e7bf30bdf2d"}, "9977e437-399b-4ee3-b728-f778151b33e0": {"doc_hash": "a5b8d66f5d424e57bcc88bac0441bb657acb45727f6702d095282473a85db8e5", "ref_doc_id": "bebb1407-bcb2-450b-9ad4-4192b4ae0a94"}}}